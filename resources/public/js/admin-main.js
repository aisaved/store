if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

/**
 * React v0.12.2
 */
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.React=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule React
 */

"use strict";

var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
var EventPluginUtils = _dereq_("./EventPluginUtils");
var ReactChildren = _dereq_("./ReactChildren");
var ReactComponent = _dereq_("./ReactComponent");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactContext = _dereq_("./ReactContext");
var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
var ReactElement = _dereq_("./ReactElement");
var ReactElementValidator = _dereq_("./ReactElementValidator");
var ReactDOM = _dereq_("./ReactDOM");
var ReactDOMComponent = _dereq_("./ReactDOMComponent");
var ReactDefaultInjection = _dereq_("./ReactDefaultInjection");
var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
var ReactLegacyElement = _dereq_("./ReactLegacyElement");
var ReactMount = _dereq_("./ReactMount");
var ReactMultiChild = _dereq_("./ReactMultiChild");
var ReactPerf = _dereq_("./ReactPerf");
var ReactPropTypes = _dereq_("./ReactPropTypes");
var ReactServerRendering = _dereq_("./ReactServerRendering");
var ReactTextComponent = _dereq_("./ReactTextComponent");

var assign = _dereq_("./Object.assign");
var deprecated = _dereq_("./deprecated");
var onlyChild = _dereq_("./onlyChild");

ReactDefaultInjection.inject();

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;

if ("production" !== "development") {
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
}

// TODO: Drop legacy elements once classes no longer export these factories
createElement = ReactLegacyElement.wrapCreateElement(
  createElement
);
createFactory = ReactLegacyElement.wrapCreateFactory(
  createFactory
);

var render = ReactPerf.measure('React', 'render', ReactMount.render);

var React = {
  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    only: onlyChild
  },
  DOM: ReactDOM,
  PropTypes: ReactPropTypes,
  initializeTouchEvents: function(shouldUseTouch) {
    EventPluginUtils.useTouchEvents = shouldUseTouch;
  },
  createClass: ReactCompositeComponent.createClass,
  createElement: createElement,
  createFactory: createFactory,
  constructAndRenderComponent: ReactMount.constructAndRenderComponent,
  constructAndRenderComponentByID: ReactMount.constructAndRenderComponentByID,
  render: render,
  renderToString: ReactServerRendering.renderToString,
  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  isValidClass: ReactLegacyElement.isValidClass,
  isValidElement: ReactElement.isValidElement,
  withContext: ReactContext.withContext,

  // Hook for JSX spread, don't use this for anything else.
  __spread: assign,

  // Deprecations (remove for 0.13)
  renderComponent: deprecated(
    'React',
    'renderComponent',
    'render',
    this,
    render
  ),
  renderComponentToString: deprecated(
    'React',
    'renderComponentToString',
    'renderToString',
    this,
    ReactServerRendering.renderToString
  ),
  renderComponentToStaticMarkup: deprecated(
    'React',
    'renderComponentToStaticMarkup',
    'renderToStaticMarkup',
    this,
    ReactServerRendering.renderToStaticMarkup
  ),
  isValidComponent: deprecated(
    'React',
    'isValidComponent',
    'isValidElement',
    this,
    ReactElement.isValidElement
  )
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    Component: ReactComponent,
    CurrentOwner: ReactCurrentOwner,
    DOMComponent: ReactDOMComponent,
    DOMPropertyOperations: DOMPropertyOperations,
    InstanceHandles: ReactInstanceHandles,
    Mount: ReactMount,
    MultiChild: ReactMultiChild,
    TextComponent: ReactTextComponent
  });
}

if ("production" !== "development") {
  var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

    // If we're in Chrome, look for the devtools marker and provide a download
    // link if not installed.
    if (navigator.userAgent.indexOf('Chrome') > -1) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
        console.debug(
          'Download the React DevTools for a better development experience: ' +
          'http://fb.me/react-devtools'
        );
      }
    }

    var expectedFeatures = [
      // shims
      Array.isArray,
      Array.prototype.every,
      Array.prototype.forEach,
      Array.prototype.indexOf,
      Array.prototype.map,
      Date.now,
      Function.prototype.bind,
      Object.keys,
      String.prototype.split,
      String.prototype.trim,

      // shams
      Object.create,
      Object.freeze
    ];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        console.error(
          'One or more ES5 shim/shams expected by React are not available: ' +
          'http://fb.me/react-warning-polyfills'
        );
        break;
      }
    }
  }
}

// Version exists only in the open-source version of React, not in Facebook's
// internal version.
React.version = '0.12.2';

module.exports = React;

},{"./DOMPropertyOperations":12,"./EventPluginUtils":20,"./ExecutionEnvironment":22,"./Object.assign":27,"./ReactChildren":31,"./ReactComponent":32,"./ReactCompositeComponent":34,"./ReactContext":35,"./ReactCurrentOwner":36,"./ReactDOM":37,"./ReactDOMComponent":39,"./ReactDefaultInjection":49,"./ReactElement":52,"./ReactElementValidator":53,"./ReactInstanceHandles":60,"./ReactLegacyElement":61,"./ReactMount":63,"./ReactMultiChild":64,"./ReactPerf":68,"./ReactPropTypes":72,"./ReactServerRendering":76,"./ReactTextComponent":78,"./deprecated":106,"./onlyChild":137}],2:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule AutoFocusMixin
 * @typechecks static-only
 */

"use strict";

var focusNode = _dereq_("./focusNode");

var AutoFocusMixin = {
  componentDidMount: function() {
    if (this.props.autoFocus) {
      focusNode(this.getDOMNode());
    }
  }
};

module.exports = AutoFocusMixin;

},{"./focusNode":111}],3:[function(_dereq_,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule BeforeInputEventPlugin
 * @typechecks static-only
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var EventPropagators = _dereq_("./EventPropagators");
var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
var SyntheticInputEvent = _dereq_("./SyntheticInputEvent");

var keyOf = _dereq_("./keyOf");

var canUseTextInputEvent = (
  ExecutionEnvironment.canUseDOM &&
  'TextEvent' in window &&
  !('documentMode' in document || isPresto())
);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return (
    typeof opera === 'object' &&
    typeof opera.version === 'function' &&
    parseInt(opera.version(), 10) <= 12
  );
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

var topLevelTypes = EventConstants.topLevelTypes;

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: keyOf({onBeforeInput: null}),
      captured: keyOf({onBeforeInputCapture: null})
    },
    dependencies: [
      topLevelTypes.topCompositionEnd,
      topLevelTypes.topKeyPress,
      topLevelTypes.topTextInput,
      topLevelTypes.topPaste
    ]
  }
};

// Track characters inserted via keypress and composition events.
var fallbackChars = null;

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (
    (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
    // ctrlKey && altKey is equivalent to AltGr, and is not a command.
    !(nativeEvent.ctrlKey && nativeEvent.altKey)
  );
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 */
var BeforeInputEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    var chars;

    if (canUseTextInputEvent) {
      switch (topLevelType) {
        case topLevelTypes.topKeyPress:
          /**
           * If native `textInput` events are available, our goal is to make
           * use of them. However, there is a special case: the spacebar key.
           * In Webkit, preventing default on a spacebar `textInput` event
           * cancels character insertion, but it *also* causes the browser
           * to fall back to its default spacebar behavior of scrolling the
           * page.
           *
           * Tracking at:
           * https://code.google.com/p/chromium/issues/detail?id=355103
           *
           * To avoid this issue, use the keypress event as if no `textInput`
           * event is available.
           */
          var which = nativeEvent.which;
          if (which !== SPACEBAR_CODE) {
            return;
          }

          hasSpaceKeypress = true;
          chars = SPACEBAR_CHAR;
          break;

        case topLevelTypes.topTextInput:
          // Record the characters to be added to the DOM.
          chars = nativeEvent.data;

          // If it's a spacebar character, assume that we have already handled
          // it at the keypress level and bail immediately. Android Chrome
          // doesn't give us keycodes, so we need to blacklist it.
          if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
            return;
          }

          // Otherwise, carry on.
          break;

        default:
          // For other native event types, do nothing.
          return;
      }
    } else {
      switch (topLevelType) {
        case topLevelTypes.topPaste:
          // If a paste event occurs after a keypress, throw out the input
          // chars. Paste events should not lead to BeforeInput events.
          fallbackChars = null;
          break;
        case topLevelTypes.topKeyPress:
          /**
           * As of v27, Firefox may fire keypress events even when no character
           * will be inserted. A few possibilities:
           *
           * - `which` is `0`. Arrow keys, Esc key, etc.
           *
           * - `which` is the pressed key code, but no char is available.
           *   Ex: 'AltGr + d` in Polish. There is no modified character for
           *   this key combination and no character is inserted into the
           *   document, but FF fires the keypress for char code `100` anyway.
           *   No `input` event will occur.
           *
           * - `which` is the pressed key code, but a command combination is
           *   being used. Ex: `Cmd+C`. No character is inserted, and no
           *   `input` event will occur.
           */
          if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
            fallbackChars = String.fromCharCode(nativeEvent.which);
          }
          break;
        case topLevelTypes.topCompositionEnd:
          fallbackChars = nativeEvent.data;
          break;
      }

      // If no changes have occurred to the fallback string, no relevant
      // event has fired and we're done.
      if (fallbackChars === null) {
        return;
      }

      chars = fallbackChars;
    }

    // If no characters are being inserted, no BeforeInput event should
    // be fired.
    if (!chars) {
      return;
    }

    var event = SyntheticInputEvent.getPooled(
      eventTypes.beforeInput,
      topLevelTargetID,
      nativeEvent
    );

    event.data = chars;
    fallbackChars = null;
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }
};

module.exports = BeforeInputEventPlugin;

},{"./EventConstants":16,"./EventPropagators":21,"./ExecutionEnvironment":22,"./SyntheticInputEvent":89,"./keyOf":133}],4:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CSSProperty
 */

"use strict";

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexShrink: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  strokeOpacity: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function(prop) {
  prefixes.forEach(function(prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundImage: true,
    backgroundPosition: true,
    backgroundRepeat: true,
    backgroundColor: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;

},{}],5:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CSSPropertyOperations
 * @typechecks static-only
 */

"use strict";

var CSSProperty = _dereq_("./CSSProperty");
var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var camelizeStyleName = _dereq_("./camelizeStyleName");
var dangerousStyleValue = _dereq_("./dangerousStyleValue");
var hyphenateStyleName = _dereq_("./hyphenateStyleName");
var memoizeStringOnly = _dereq_("./memoizeStringOnly");
var warning = _dereq_("./warning");

var processStyleName = memoizeStringOnly(function(styleName) {
  return hyphenateStyleName(styleName);
});

var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if ("production" !== "development") {
  var warnedStyleNames = {};

  var warnHyphenatedStyleName = function(name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    ("production" !== "development" ? warning(
      false,
      'Unsupported style property ' + name + '. Did you mean ' +
      camelizeStyleName(name) + '?'
    ) : null);
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {

  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @return {?string}
   */
  createMarkupForStyles: function(styles) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      if ("production" !== "development") {
        if (styleName.indexOf('-') > -1) {
          warnHyphenatedStyleName(styleName);
        }
      }
      var styleValue = styles[styleName];
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   */
  setValueForStyles: function(node, styles) {
    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      if ("production" !== "development") {
        if (styleName.indexOf('-') > -1) {
          warnHyphenatedStyleName(styleName);
        }
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
      if (styleName === 'float') {
        styleName = styleFloatAccessor;
      }
      if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }

};

module.exports = CSSPropertyOperations;

},{"./CSSProperty":4,"./ExecutionEnvironment":22,"./camelizeStyleName":100,"./dangerousStyleValue":105,"./hyphenateStyleName":124,"./memoizeStringOnly":135,"./warning":145}],6:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CallbackQueue
 */

"use strict";

var PooledClass = _dereq_("./PooledClass");

var assign = _dereq_("./Object.assign");
var invariant = _dereq_("./invariant");

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */
function CallbackQueue() {
  this._callbacks = null;
  this._contexts = null;
}

assign(CallbackQueue.prototype, {

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */
  enqueue: function(callback, context) {
    this._callbacks = this._callbacks || [];
    this._contexts = this._contexts || [];
    this._callbacks.push(callback);
    this._contexts.push(context);
  },

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */
  notifyAll: function() {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    if (callbacks) {
      ("production" !== "development" ? invariant(
        callbacks.length === contexts.length,
        "Mismatched list of contexts in callback queue"
      ) : invariant(callbacks.length === contexts.length));
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0, l = callbacks.length; i < l; i++) {
        callbacks[i].call(contexts[i]);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  },

  /**
   * Resets the internal queue.
   *
   * @internal
   */
  reset: function() {
    this._callbacks = null;
    this._contexts = null;
  },

  /**
   * `PooledClass` looks for this.
   */
  destructor: function() {
    this.reset();
  }

});

PooledClass.addPoolingTo(CallbackQueue);

module.exports = CallbackQueue;

},{"./Object.assign":27,"./PooledClass":28,"./invariant":126}],7:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ChangeEventPlugin
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var EventPluginHub = _dereq_("./EventPluginHub");
var EventPropagators = _dereq_("./EventPropagators");
var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
var ReactUpdates = _dereq_("./ReactUpdates");
var SyntheticEvent = _dereq_("./SyntheticEvent");

var isEventSupported = _dereq_("./isEventSupported");
var isTextInputElement = _dereq_("./isTextInputElement");
var keyOf = _dereq_("./keyOf");

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: keyOf({onChange: null}),
      captured: keyOf({onChangeCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topChange,
      topLevelTypes.topClick,
      topLevelTypes.topFocus,
      topLevelTypes.topInput,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyUp,
      topLevelTypes.topSelectionChange
    ]
  }
};

/**
 * For IE shims
 */
var activeElement = null;
var activeElementID = null;
var activeElementValue = null;
var activeElementValueProp = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  return (
    elem.nodeName === 'SELECT' ||
    (elem.nodeName === 'INPUT' && elem.type === 'file')
  );
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (
    !('documentMode' in document) || document.documentMode > 8
  );
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = SyntheticEvent.getPooled(
    eventTypes.change,
    activeElementID,
    nativeEvent
  );
  EventPropagators.accumulateTwoPhaseDispatches(event);

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue();
}

function startWatchingForChangeEventIE8(target, targetID) {
  activeElement = target;
  activeElementID = targetID;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementID = null;
}

function getTargetIDForChangeEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topChange) {
    return topLevelTargetID;
  }
}
function handleEventsForChangeEventIE8(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topFocus) {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForChangeEventIE8();
  }
}


/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events
  isInputEventSupported = isEventSupported('input') && (
    !('documentMode' in document) || document.documentMode > 9
  );
}

/**
 * (For old IE.) Replacement getter/setter for the `value` property that gets
 * set on the active element.
 */
var newValueProp =  {
  get: function() {
    return activeElementValueProp.get.call(this);
  },
  set: function(val) {
    // Cast to a string so we can do equality checks.
    activeElementValue = '' + val;
    activeElementValueProp.set.call(this, val);
  }
};

/**
 * (For old IE.) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetID) {
  activeElement = target;
  activeElementID = targetID;
  activeElementValue = target.value;
  activeElementValueProp = Object.getOwnPropertyDescriptor(
    target.constructor.prototype,
    'value'
  );

  Object.defineProperty(activeElement, 'value', newValueProp);
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For old IE.) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  // delete restores the original property definition
  delete activeElement.value;
  activeElement.detachEvent('onpropertychange', handlePropertyChange);

  activeElement = null;
  activeElementID = null;
  activeElementValue = null;
  activeElementValueProp = null;
}

/**
 * (For old IE.) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  var value = nativeEvent.srcElement.value;
  if (value === activeElementValue) {
    return;
  }
  activeElementValue = value;

  manualDispatchChangeEvent(nativeEvent);
}

/**
 * If a `change` event should be fired, returns the target's ID.
 */
function getTargetIDForInputEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topInput) {
    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
    // what we want so fall through here and trigger an abstract event
    return topLevelTargetID;
  }
}

// For IE8 and IE9.
function handleEventsForInputEventIE(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topFocus) {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetIDForInputEventIE(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topSelectionChange ||
      topLevelType === topLevelTypes.topKeyUp ||
      topLevelType === topLevelTypes.topKeyDown) {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    if (activeElement && activeElement.value !== activeElementValue) {
      activeElementValue = activeElement.value;
      return activeElementID;
    }
  }
}


/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  return (
    elem.nodeName === 'INPUT' &&
    (elem.type === 'checkbox' || elem.type === 'radio')
  );
}

function getTargetIDForClickEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topClick) {
    return topLevelTargetID;
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    var getTargetIDFunc, handleEventFunc;
    if (shouldUseChangeEvent(topLevelTarget)) {
      if (doesChangeEventBubble) {
        getTargetIDFunc = getTargetIDForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(topLevelTarget)) {
      if (isInputEventSupported) {
        getTargetIDFunc = getTargetIDForInputEvent;
      } else {
        getTargetIDFunc = getTargetIDForInputEventIE;
        handleEventFunc = handleEventsForInputEventIE;
      }
    } else if (shouldUseClickEvent(topLevelTarget)) {
      getTargetIDFunc = getTargetIDForClickEvent;
    }

    if (getTargetIDFunc) {
      var targetID = getTargetIDFunc(
        topLevelType,
        topLevelTarget,
        topLevelTargetID
      );
      if (targetID) {
        var event = SyntheticEvent.getPooled(
          eventTypes.change,
          targetID,
          nativeEvent
        );
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(
        topLevelType,
        topLevelTarget,
        topLevelTargetID
      );
    }
  }

};

module.exports = ChangeEventPlugin;

},{"./EventConstants":16,"./EventPluginHub":18,"./EventPropagators":21,"./ExecutionEnvironment":22,"./ReactUpdates":79,"./SyntheticEvent":87,"./isEventSupported":127,"./isTextInputElement":129,"./keyOf":133}],8:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ClientReactRootIndex
 * @typechecks
 */

"use strict";

var nextReactRootIndex = 0;

var ClientReactRootIndex = {
  createReactRootIndex: function() {
    return nextReactRootIndex++;
  }
};

module.exports = ClientReactRootIndex;

},{}],9:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CompositionEventPlugin
 * @typechecks static-only
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var EventPropagators = _dereq_("./EventPropagators");
var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
var ReactInputSelection = _dereq_("./ReactInputSelection");
var SyntheticCompositionEvent = _dereq_("./SyntheticCompositionEvent");

var getTextContentAccessor = _dereq_("./getTextContentAccessor");
var keyOf = _dereq_("./keyOf");

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var useCompositionEvent = (
  ExecutionEnvironment.canUseDOM &&
  'CompositionEvent' in window
);

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. In Korean, for example,
// the compositionend event contains only one character regardless of
// how many characters have been composed since compositionstart.
// We therefore use the fallback data while still using the native
// events as triggers.
var useFallbackData = (
  !useCompositionEvent ||
  (
    'documentMode' in document &&
    document.documentMode > 8 &&
    document.documentMode <= 11
  )
);

var topLevelTypes = EventConstants.topLevelTypes;
var currentComposition = null;

// Events and their corresponding property names.
var eventTypes = {
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionEnd: null}),
      captured: keyOf({onCompositionEndCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topCompositionEnd,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyPress,
      topLevelTypes.topKeyUp,
      topLevelTypes.topMouseDown
    ]
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionStart: null}),
      captured: keyOf({onCompositionStartCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topCompositionStart,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyPress,
      topLevelTypes.topKeyUp,
      topLevelTypes.topMouseDown
    ]
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionUpdate: null}),
      captured: keyOf({onCompositionUpdateCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topCompositionUpdate,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyPress,
      topLevelTypes.topKeyUp,
      topLevelTypes.topMouseDown
    ]
  }
};

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case topLevelTypes.topCompositionStart:
      return eventTypes.compositionStart;
    case topLevelTypes.topCompositionEnd:
      return eventTypes.compositionEnd;
    case topLevelTypes.topCompositionUpdate:
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackStart(topLevelType, nativeEvent) {
  return (
    topLevelType === topLevelTypes.topKeyDown &&
    nativeEvent.keyCode === START_KEYCODE
  );
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case topLevelTypes.topKeyUp:
      // Command keys insert or clear IME input.
      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);
    case topLevelTypes.topKeyDown:
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return (nativeEvent.keyCode !== START_KEYCODE);
    case topLevelTypes.topKeyPress:
    case topLevelTypes.topMouseDown:
    case topLevelTypes.topBlur:
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Helper class stores information about selection and document state
 * so we can figure out what changed at a later date.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this.root = root;
  this.startSelection = ReactInputSelection.getSelection(root);
  this.startValue = this.getText();
}

/**
 * Get current text of input.
 *
 * @return {string}
 */
FallbackCompositionState.prototype.getText = function() {
  return this.root.value || this.root[getTextContentAccessor()];
};

/**
 * Text that has changed since the start of composition.
 *
 * @return {string}
 */
FallbackCompositionState.prototype.getData = function() {
  var endValue = this.getText();
  var prefixLength = this.startSelection.start;
  var suffixLength = this.startValue.length - this.startSelection.end;

  return endValue.substr(
    prefixLength,
    endValue.length - suffixLength - prefixLength
  );
};

/**
 * This plugin creates `onCompositionStart`, `onCompositionUpdate` and
 * `onCompositionEnd` events on inputs, textareas and contentEditable
 * nodes.
 */
var CompositionEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    var eventType;
    var data;

    if (useCompositionEvent) {
      eventType = getCompositionEventType(topLevelType);
    } else if (!currentComposition) {
      if (isFallbackStart(topLevelType, nativeEvent)) {
        eventType = eventTypes.compositionStart;
      }
    } else if (isFallbackEnd(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionEnd;
    }

    if (useFallbackData) {
      // The current composition is stored statically and must not be
      // overwritten while composition continues.
      if (!currentComposition && eventType === eventTypes.compositionStart) {
        currentComposition = new FallbackCompositionState(topLevelTarget);
      } else if (eventType === eventTypes.compositionEnd) {
        if (currentComposition) {
          data = currentComposition.getData();
          currentComposition = null;
        }
      }
    }

    if (eventType) {
      var event = SyntheticCompositionEvent.getPooled(
        eventType,
        topLevelTargetID,
        nativeEvent
      );
      if (data) {
        // Inject data generated from fallback path into the synthetic event.
        // This matches the property of native CompositionEventInterface.
        event.data = data;
      }
      EventPropagators.accumulateTwoPhaseDispatches(event);
      return event;
    }
  }
};

module.exports = CompositionEventPlugin;

},{"./EventConstants":16,"./EventPropagators":21,"./ExecutionEnvironment":22,"./ReactInputSelection":59,"./SyntheticCompositionEvent":85,"./getTextContentAccessor":121,"./keyOf":133}],10:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMChildrenOperations
 * @typechecks static-only
 */

"use strict";

var Danger = _dereq_("./Danger");
var ReactMultiChildUpdateTypes = _dereq_("./ReactMultiChildUpdateTypes");

var getTextContentAccessor = _dereq_("./getTextContentAccessor");
var invariant = _dereq_("./invariant");

/**
 * The DOM property to use when setting text content.
 *
 * @type {string}
 * @private
 */
var textContentAccessor = getTextContentAccessor();

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
function insertChildAt(parentNode, childNode, index) {
  // By exploiting arrays returning `undefined` for an undefined index, we can
  // rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. However, using `undefined` is not allowed by all
  // browsers so we must replace it with `null`.
  parentNode.insertBefore(
    childNode,
    parentNode.childNodes[index] || null
  );
}

var updateTextContent;
if (textContentAccessor === 'textContent') {
  /**
   * Sets the text content of `node` to `text`.
   *
   * @param {DOMElement} node Node to change
   * @param {string} text New text content
   */
  updateTextContent = function(node, text) {
    node.textContent = text;
  };
} else {
  /**
   * Sets the text content of `node` to `text`.
   *
   * @param {DOMElement} node Node to change
   * @param {string} text New text content
   */
  updateTextContent = function(node, text) {
    // In order to preserve newlines correctly, we can't use .innerText to set
    // the contents (see #1080), so we empty the element then append a text node
    while (node.firstChild) {
      node.removeChild(node.firstChild);
    }
    if (text) {
      var doc = node.ownerDocument || document;
      node.appendChild(doc.createTextNode(text));
    }
  };
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {

  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

  updateTextContent: updateTextContent,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @param {array<string>} markupList List of markup strings.
   * @internal
   */
  processUpdates: function(updates, markupList) {
    var update;
    // Mapping from parent IDs to initial child orderings.
    var initialChildren = null;
    // List of children that will be moved or removed.
    var updatedChildren = null;

    for (var i = 0; update = updates[i]; i++) {
      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING ||
          update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
        var updatedIndex = update.fromIndex;
        var updatedChild = update.parentNode.childNodes[updatedIndex];
        var parentID = update.parentID;

        ("production" !== "development" ? invariant(
          updatedChild,
          'processUpdates(): Unable to find child %s of element. This ' +
          'probably means the DOM was unexpectedly mutated (e.g., by the ' +
          'browser), usually due to forgetting a <tbody> when using tables, ' +
          'nesting tags like <form>, <p>, or <a>, or using non-SVG elements '+
          'in an <svg> parent. Try inspecting the child nodes of the element ' +
          'with React ID `%s`.',
          updatedIndex,
          parentID
        ) : invariant(updatedChild));

        initialChildren = initialChildren || {};
        initialChildren[parentID] = initialChildren[parentID] || [];
        initialChildren[parentID][updatedIndex] = updatedChild;

        updatedChildren = updatedChildren || [];
        updatedChildren.push(updatedChild);
      }
    }

    var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);

    // Remove updated children first so that `toIndex` is consistent.
    if (updatedChildren) {
      for (var j = 0; j < updatedChildren.length; j++) {
        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
      }
    }

    for (var k = 0; update = updates[k]; k++) {
      switch (update.type) {
        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
          insertChildAt(
            update.parentNode,
            renderedMarkup[update.markupIndex],
            update.toIndex
          );
          break;
        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
          insertChildAt(
            update.parentNode,
            initialChildren[update.parentID][update.fromIndex],
            update.toIndex
          );
          break;
        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
          updateTextContent(
            update.parentNode,
            update.textContent
          );
          break;
        case ReactMultiChildUpdateTypes.REMOVE_NODE:
          // Already removed by the for-loop above.
          break;
      }
    }
  }

};

module.exports = DOMChildrenOperations;

},{"./Danger":13,"./ReactMultiChildUpdateTypes":65,"./getTextContentAccessor":121,"./invariant":126}],11:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMProperty
 * @typechecks static-only
 */

/*jslint bitwise: true */

"use strict";

var invariant = _dereq_("./invariant");

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_ATTRIBUTE: 0x1,
  MUST_USE_PROPERTY: 0x2,
  HAS_SIDE_EFFECTS: 0x4,
  HAS_BOOLEAN_VALUE: 0x8,
  HAS_NUMERIC_VALUE: 0x10,
  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function(domPropertyConfig) {
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(
        domPropertyConfig.isCustomAttribute
      );
    }

    for (var propName in Properties) {
      ("production" !== "development" ? invariant(
        !DOMProperty.isStandardName.hasOwnProperty(propName),
        'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' +
        '\'%s\' which has already been injected. You may be accidentally ' +
        'injecting the same DOM property config twice, or you may be ' +
        'injecting two configs that have conflicting property names.',
        propName
      ) : invariant(!DOMProperty.isStandardName.hasOwnProperty(propName)));

      DOMProperty.isStandardName[propName] = true;

      var lowerCased = propName.toLowerCase();
      DOMProperty.getPossibleStandardName[lowerCased] = propName;

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        DOMProperty.getPossibleStandardName[attributeName] = propName;
        DOMProperty.getAttributeName[propName] = attributeName;
      } else {
        DOMProperty.getAttributeName[propName] = lowerCased;
      }

      DOMProperty.getPropertyName[propName] =
        DOMPropertyNames.hasOwnProperty(propName) ?
          DOMPropertyNames[propName] :
          propName;

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];
      } else {
        DOMProperty.getMutationMethod[propName] = null;
      }

      var propConfig = Properties[propName];
      DOMProperty.mustUseAttribute[propName] =
        checkMask(propConfig, DOMPropertyInjection.MUST_USE_ATTRIBUTE);
      DOMProperty.mustUseProperty[propName] =
        checkMask(propConfig, DOMPropertyInjection.MUST_USE_PROPERTY);
      DOMProperty.hasSideEffects[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_SIDE_EFFECTS);
      DOMProperty.hasBooleanValue[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_BOOLEAN_VALUE);
      DOMProperty.hasNumericValue[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_NUMERIC_VALUE);
      DOMProperty.hasPositiveNumericValue[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);
      DOMProperty.hasOverloadedBooleanValue[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);

      ("production" !== "development" ? invariant(
        !DOMProperty.mustUseAttribute[propName] ||
          !DOMProperty.mustUseProperty[propName],
        'DOMProperty: Cannot require using both attribute and property: %s',
        propName
      ) : invariant(!DOMProperty.mustUseAttribute[propName] ||
        !DOMProperty.mustUseProperty[propName]));
      ("production" !== "development" ? invariant(
        DOMProperty.mustUseProperty[propName] ||
          !DOMProperty.hasSideEffects[propName],
        'DOMProperty: Properties that have side effects must use property: %s',
        propName
      ) : invariant(DOMProperty.mustUseProperty[propName] ||
        !DOMProperty.hasSideEffects[propName]));
      ("production" !== "development" ? invariant(
        !!DOMProperty.hasBooleanValue[propName] +
          !!DOMProperty.hasNumericValue[propName] +
          !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1,
        'DOMProperty: Value can be one of boolean, overloaded boolean, or ' +
        'numeric value, but not a combination: %s',
        propName
      ) : invariant(!!DOMProperty.hasBooleanValue[propName] +
        !!DOMProperty.hasNumericValue[propName] +
        !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1));
    }
  }
};
var defaultValueCache = {};

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {

  ID_ATTRIBUTE_NAME: 'data-reactid',

  /**
   * Checks whether a property name is a standard property.
   * @type {Object}
   */
  isStandardName: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties.
   * @type {Object}
   */
  getPossibleStandardName: {},

  /**
   * Mapping from normalized names to attribute names that differ. Attribute
   * names are used when rendering markup or with `*Attribute()`.
   * @type {Object}
   */
  getAttributeName: {},

  /**
   * Mapping from normalized names to properties on DOM node instances.
   * (This includes properties that mutate due to external factors.)
   * @type {Object}
   */
  getPropertyName: {},

  /**
   * Mapping from normalized names to mutation methods. This will only exist if
   * mutation cannot be set simply by the property or `setAttribute()`.
   * @type {Object}
   */
  getMutationMethod: {},

  /**
   * Whether the property must be accessed and mutated as an object property.
   * @type {Object}
   */
  mustUseAttribute: {},

  /**
   * Whether the property must be accessed and mutated using `*Attribute()`.
   * (This includes anything that fails `<propName> in <element>`.)
   * @type {Object}
   */
  mustUseProperty: {},

  /**
   * Whether or not setting a value causes side effects such as triggering
   * resources to be loaded or text selection changes. We must ensure that
   * the value is only set if it has changed.
   * @type {Object}
   */
  hasSideEffects: {},

  /**
   * Whether the property should be removed when set to a falsey value.
   * @type {Object}
   */
  hasBooleanValue: {},

  /**
   * Whether the property must be numeric or parse as a
   * numeric and should be removed when set to a falsey value.
   * @type {Object}
   */
  hasNumericValue: {},

  /**
   * Whether the property must be positive numeric or parse as a positive
   * numeric and should be removed when set to a falsey value.
   * @type {Object}
   */
  hasPositiveNumericValue: {},

  /**
   * Whether the property can be used as a flag as well as with a value. Removed
   * when strictly equal to false; present without a value when strictly equal
   * to true; present with a value otherwise.
   * @type {Object}
   */
  hasOverloadedBooleanValue: {},

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function(attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  /**
   * Returns the default property value for a DOM property (i.e., not an
   * attribute). Most default values are '' or false, but not all. Worse yet,
   * some (in particular, `type`) vary depending on the type of element.
   *
   * TODO: Is it better to grab all the possible properties when creating an
   * element to avoid having to create the same element twice?
   */
  getDefaultValueForProperty: function(nodeName, prop) {
    var nodeDefaults = defaultValueCache[nodeName];
    var testElement;
    if (!nodeDefaults) {
      defaultValueCache[nodeName] = nodeDefaults = {};
    }
    if (!(prop in nodeDefaults)) {
      testElement = document.createElement(nodeName);
      nodeDefaults[prop] = testElement[prop];
    }
    return nodeDefaults[prop];
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;

},{"./invariant":126}],12:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMPropertyOperations
 * @typechecks static-only
 */

"use strict";

var DOMProperty = _dereq_("./DOMProperty");

var escapeTextForBrowser = _dereq_("./escapeTextForBrowser");
var memoizeStringOnly = _dereq_("./memoizeStringOnly");
var warning = _dereq_("./warning");

function shouldIgnoreValue(name, value) {
  return value == null ||
    (DOMProperty.hasBooleanValue[name] && !value) ||
    (DOMProperty.hasNumericValue[name] && isNaN(value)) ||
    (DOMProperty.hasPositiveNumericValue[name] && (value < 1)) ||
    (DOMProperty.hasOverloadedBooleanValue[name] && value === false);
}

var processAttributeNameAndPrefix = memoizeStringOnly(function(name) {
  return escapeTextForBrowser(name) + '="';
});

if ("production" !== "development") {
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true
  };
  var warnedProperties = {};

  var warnUnknownProperty = function(name) {
    if (reactProps.hasOwnProperty(name) && reactProps[name] ||
        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
      return;
    }

    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = (
      DOMProperty.isCustomAttribute(lowerCasedName) ?
        lowerCasedName :
      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?
        DOMProperty.getPossibleStandardName[lowerCasedName] :
        null
    );

    // For now, only warn when we have a suggested correction. This prevents
    // logging too much when using transferPropsTo.
    ("production" !== "development" ? warning(
      standardName == null,
      'Unknown DOM property ' + name + '. Did you mean ' + standardName + '?'
    ) : null);

  };
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {

  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function(id) {
    return processAttributeNameAndPrefix(DOMProperty.ID_ATTRIBUTE_NAME) +
      escapeTextForBrowser(id) + '"';
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function(name, value) {
    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
        DOMProperty.isStandardName[name]) {
      if (shouldIgnoreValue(name, value)) {
        return '';
      }
      var attributeName = DOMProperty.getAttributeName[name];
      if (DOMProperty.hasBooleanValue[name] ||
          (DOMProperty.hasOverloadedBooleanValue[name] && value === true)) {
        return escapeTextForBrowser(attributeName);
      }
      return processAttributeNameAndPrefix(attributeName) +
        escapeTextForBrowser(value) + '"';
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return processAttributeNameAndPrefix(name) +
        escapeTextForBrowser(value) + '"';
    } else if ("production" !== "development") {
      warnUnknownProperty(name);
    }
    return null;
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function(node, name, value) {
    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
        DOMProperty.isStandardName[name]) {
      var mutationMethod = DOMProperty.getMutationMethod[name];
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(name, value)) {
        this.deleteValueForProperty(node, name);
      } else if (DOMProperty.mustUseAttribute[name]) {
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);
      } else {
        var propName = DOMProperty.getPropertyName[name];
        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
        // property type before comparing; only `value` does and is string.
        if (!DOMProperty.hasSideEffects[name] ||
            ('' + node[propName]) !== ('' + value)) {
          // Contrary to `setAttribute`, object properties are properly
          // `toString`ed by IE8/9.
          node[propName] = value;
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        node.removeAttribute(name);
      } else {
        node.setAttribute(name, '' + value);
      }
    } else if ("production" !== "development") {
      warnUnknownProperty(name);
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function(node, name) {
    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
        DOMProperty.isStandardName[name]) {
      var mutationMethod = DOMProperty.getMutationMethod[name];
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (DOMProperty.mustUseAttribute[name]) {
        node.removeAttribute(DOMProperty.getAttributeName[name]);
      } else {
        var propName = DOMProperty.getPropertyName[name];
        var defaultValue = DOMProperty.getDefaultValueForProperty(
          node.nodeName,
          propName
        );
        if (!DOMProperty.hasSideEffects[name] ||
            ('' + node[propName]) !== defaultValue) {
          node[propName] = defaultValue;
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    } else if ("production" !== "development") {
      warnUnknownProperty(name);
    }
  }

};

module.exports = DOMPropertyOperations;

},{"./DOMProperty":11,"./escapeTextForBrowser":109,"./memoizeStringOnly":135,"./warning":145}],13:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Danger
 * @typechecks static-only
 */

/*jslint evil: true, sub: true */

"use strict";

var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var createNodesFromMarkup = _dereq_("./createNodesFromMarkup");
var emptyFunction = _dereq_("./emptyFunction");
var getMarkupWrap = _dereq_("./getMarkupWrap");
var invariant = _dereq_("./invariant");

var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
var RESULT_INDEX_ATTR = 'data-danger-index';

/**
 * Extracts the `nodeName` from a string of markup.
 *
 * NOTE: Extracting the `nodeName` does not require a regular expression match
 * because we make assumptions about React-generated markup (i.e. there are no
 * spaces surrounding the opening tag and there is at least one attribute).
 *
 * @param {string} markup String of markup.
 * @return {string} Node name of the supplied markup.
 * @see http://jsperf.com/extract-nodename
 */
function getNodeName(markup) {
  return markup.substring(1, markup.indexOf(' '));
}

var Danger = {

  /**
   * Renders markup into an array of nodes. The markup is expected to render
   * into a list of root nodes. Also, the length of `resultList` and
   * `markupList` should be the same.
   *
   * @param {array<string>} markupList List of markup strings to render.
   * @return {array<DOMElement>} List of rendered nodes.
   * @internal
   */
  dangerouslyRenderMarkup: function(markupList) {
    ("production" !== "development" ? invariant(
      ExecutionEnvironment.canUseDOM,
      'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' +
      'thread. Make sure `window` and `document` are available globally ' +
      'before requiring React when unit testing or use ' +
      'React.renderToString for server rendering.'
    ) : invariant(ExecutionEnvironment.canUseDOM));
    var nodeName;
    var markupByNodeName = {};
    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
    for (var i = 0; i < markupList.length; i++) {
      ("production" !== "development" ? invariant(
        markupList[i],
        'dangerouslyRenderMarkup(...): Missing markup.'
      ) : invariant(markupList[i]));
      nodeName = getNodeName(markupList[i]);
      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
      markupByNodeName[nodeName][i] = markupList[i];
    }
    var resultList = [];
    var resultListAssignmentCount = 0;
    for (nodeName in markupByNodeName) {
      if (!markupByNodeName.hasOwnProperty(nodeName)) {
        continue;
      }
      var markupListByNodeName = markupByNodeName[nodeName];

      // This for-in loop skips the holes of the sparse array. The order of
      // iteration should follow the order of assignment, which happens to match
      // numerical index order, but we don't rely on that.
      for (var resultIndex in markupListByNodeName) {
        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
          var markup = markupListByNodeName[resultIndex];

          // Push the requested markup with an additional RESULT_INDEX_ATTR
          // attribute.  If the markup does not start with a < character, it
          // will be discarded below (with an appropriate console.error).
          markupListByNodeName[resultIndex] = markup.replace(
            OPEN_TAG_NAME_EXP,
            // This index will be parsed back out below.
            '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" '
          );
        }
      }

      // Render each group of markup with similar wrapping `nodeName`.
      var renderNodes = createNodesFromMarkup(
        markupListByNodeName.join(''),
        emptyFunction // Do nothing special with <script> tags.
      );

      for (i = 0; i < renderNodes.length; ++i) {
        var renderNode = renderNodes[i];
        if (renderNode.hasAttribute &&
            renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
          renderNode.removeAttribute(RESULT_INDEX_ATTR);

          ("production" !== "development" ? invariant(
            !resultList.hasOwnProperty(resultIndex),
            'Danger: Assigning to an already-occupied result index.'
          ) : invariant(!resultList.hasOwnProperty(resultIndex)));

          resultList[resultIndex] = renderNode;

          // This should match resultList.length and markupList.length when
          // we're done.
          resultListAssignmentCount += 1;

        } else if ("production" !== "development") {
          console.error(
            "Danger: Discarding unexpected node:",
            renderNode
          );
        }
      }
    }

    // Although resultList was populated out of order, it should now be a dense
    // array.
    ("production" !== "development" ? invariant(
      resultListAssignmentCount === resultList.length,
      'Danger: Did not assign to every index of resultList.'
    ) : invariant(resultListAssignmentCount === resultList.length));

    ("production" !== "development" ? invariant(
      resultList.length === markupList.length,
      'Danger: Expected markup to render %s nodes, but rendered %s.',
      markupList.length,
      resultList.length
    ) : invariant(resultList.length === markupList.length));

    return resultList;
  },

  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {
    ("production" !== "development" ? invariant(
      ExecutionEnvironment.canUseDOM,
      'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +
      'worker thread. Make sure `window` and `document` are available ' +
      'globally before requiring React when unit testing or use ' +
      'React.renderToString for server rendering.'
    ) : invariant(ExecutionEnvironment.canUseDOM));
    ("production" !== "development" ? invariant(markup, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(markup));
    ("production" !== "development" ? invariant(
      oldChild.tagName.toLowerCase() !== 'html',
      'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' +
      '<html> node. This is because browser quirks make this unreliable ' +
      'and/or slow. If you want to render to the root you must use ' +
      'server rendering. See renderComponentToString().'
    ) : invariant(oldChild.tagName.toLowerCase() !== 'html'));

    var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
    oldChild.parentNode.replaceChild(newChild, oldChild);
  }

};

module.exports = Danger;

},{"./ExecutionEnvironment":22,"./createNodesFromMarkup":104,"./emptyFunction":107,"./getMarkupWrap":118,"./invariant":126}],14:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DefaultEventPluginOrder
 */

"use strict";

 var keyOf = _dereq_("./keyOf");

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DefaultEventPluginOrder = [
  keyOf({ResponderEventPlugin: null}),
  keyOf({SimpleEventPlugin: null}),
  keyOf({TapEventPlugin: null}),
  keyOf({EnterLeaveEventPlugin: null}),
  keyOf({ChangeEventPlugin: null}),
  keyOf({SelectEventPlugin: null}),
  keyOf({CompositionEventPlugin: null}),
  keyOf({BeforeInputEventPlugin: null}),
  keyOf({AnalyticsEventPlugin: null}),
  keyOf({MobileSafariClickEventPlugin: null})
];

module.exports = DefaultEventPluginOrder;

},{"./keyOf":133}],15:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EnterLeaveEventPlugin
 * @typechecks static-only
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var EventPropagators = _dereq_("./EventPropagators");
var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");

var ReactMount = _dereq_("./ReactMount");
var keyOf = _dereq_("./keyOf");

var topLevelTypes = EventConstants.topLevelTypes;
var getFirstReactDOM = ReactMount.getFirstReactDOM;

var eventTypes = {
  mouseEnter: {
    registrationName: keyOf({onMouseEnter: null}),
    dependencies: [
      topLevelTypes.topMouseOut,
      topLevelTypes.topMouseOver
    ]
  },
  mouseLeave: {
    registrationName: keyOf({onMouseLeave: null}),
    dependencies: [
      topLevelTypes.topMouseOut,
      topLevelTypes.topMouseOver
    ]
  }
};

var extractedEvents = [null, null];

var EnterLeaveEventPlugin = {

  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    if (topLevelType === topLevelTypes.topMouseOver &&
        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== topLevelTypes.topMouseOut &&
        topLevelType !== topLevelTypes.topMouseOver) {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (topLevelTarget.window === topLevelTarget) {
      // `topLevelTarget` is probably a window object.
      win = topLevelTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = topLevelTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from, to;
    if (topLevelType === topLevelTypes.topMouseOut) {
      from = topLevelTarget;
      to =
        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||
        win;
    } else {
      from = win;
      to = topLevelTarget;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromID = from ? ReactMount.getID(from) : '';
    var toID = to ? ReactMount.getID(to) : '';

    var leave = SyntheticMouseEvent.getPooled(
      eventTypes.mouseLeave,
      fromID,
      nativeEvent
    );
    leave.type = 'mouseleave';
    leave.target = from;
    leave.relatedTarget = to;

    var enter = SyntheticMouseEvent.getPooled(
      eventTypes.mouseEnter,
      toID,
      nativeEvent
    );
    enter.type = 'mouseenter';
    enter.target = to;
    enter.relatedTarget = from;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);

    extractedEvents[0] = leave;
    extractedEvents[1] = enter;

    return extractedEvents;
  }

};

module.exports = EnterLeaveEventPlugin;

},{"./EventConstants":16,"./EventPropagators":21,"./ReactMount":63,"./SyntheticMouseEvent":91,"./keyOf":133}],16:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventConstants
 */

"use strict";

var keyMirror = _dereq_("./keyMirror");

var PropagationPhases = keyMirror({bubbled: null, captured: null});

/**
 * Types of raw signals from the browser caught at the top level.
 */
var topLevelTypes = keyMirror({
  topBlur: null,
  topChange: null,
  topClick: null,
  topCompositionEnd: null,
  topCompositionStart: null,
  topCompositionUpdate: null,
  topContextMenu: null,
  topCopy: null,
  topCut: null,
  topDoubleClick: null,
  topDrag: null,
  topDragEnd: null,
  topDragEnter: null,
  topDragExit: null,
  topDragLeave: null,
  topDragOver: null,
  topDragStart: null,
  topDrop: null,
  topError: null,
  topFocus: null,
  topInput: null,
  topKeyDown: null,
  topKeyPress: null,
  topKeyUp: null,
  topLoad: null,
  topMouseDown: null,
  topMouseMove: null,
  topMouseOut: null,
  topMouseOver: null,
  topMouseUp: null,
  topPaste: null,
  topReset: null,
  topScroll: null,
  topSelectionChange: null,
  topSubmit: null,
  topTextInput: null,
  topTouchCancel: null,
  topTouchEnd: null,
  topTouchMove: null,
  topTouchStart: null,
  topWheel: null
});

var EventConstants = {
  topLevelTypes: topLevelTypes,
  PropagationPhases: PropagationPhases
};

module.exports = EventConstants;

},{"./keyMirror":132}],17:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule EventListener
 * @typechecks
 */

var emptyFunction = _dereq_("./emptyFunction");

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function(target, eventType, callback) {
    if (!target.addEventListener) {
      if ("production" !== "development") {
        console.error(
          'Attempted to listen to events during the capture phase on a ' +
          'browser that does not support the capture phase. Your application ' +
          'will not receive some events.'
        );
      }
      return {
        remove: emptyFunction
      };
    } else {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    }
  },

  registerDefault: function() {}
};

module.exports = EventListener;

},{"./emptyFunction":107}],18:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginHub
 */

"use strict";

var EventPluginRegistry = _dereq_("./EventPluginRegistry");
var EventPluginUtils = _dereq_("./EventPluginUtils");

var accumulateInto = _dereq_("./accumulateInto");
var forEachAccumulated = _dereq_("./forEachAccumulated");
var invariant = _dereq_("./invariant");

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @private
 */
var executeDispatchesAndRelease = function(event) {
  if (event) {
    var executeDispatch = EventPluginUtils.executeDispatch;
    // Plugins can provide custom behavior when dispatching events.
    var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);
    if (PluginModule && PluginModule.executeDispatch) {
      executeDispatch = PluginModule.executeDispatch;
    }
    EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};

/**
 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
 *   hierarchy given ids of the logical DOM elements involved.
 */
var InstanceHandle = null;

function validateInstanceHandle() {
  var invalid = !InstanceHandle||
    !InstanceHandle.traverseTwoPhase ||
    !InstanceHandle.traverseEnterLeave;
  if (invalid) {
    throw new Error('InstanceHandle not injected before use!');
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {

  /**
   * Methods for injecting dependencies.
   */
  injection: {

    /**
     * @param {object} InjectedMount
     * @public
     */
    injectMount: EventPluginUtils.injection.injectMount,

    /**
     * @param {object} InjectedInstanceHandle
     * @public
     */
    injectInstanceHandle: function(InjectedInstanceHandle) {
      InstanceHandle = InjectedInstanceHandle;
      if ("production" !== "development") {
        validateInstanceHandle();
      }
    },

    getInstanceHandle: function() {
      if ("production" !== "development") {
        validateInstanceHandle();
      }
      return InstanceHandle;
    },

    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

  },

  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,

  registrationNameModules: EventPluginRegistry.registrationNameModules,

  /**
   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
   *
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {?function} listener The callback to store.
   */
  putListener: function(id, registrationName, listener) {
    ("production" !== "development" ? invariant(
      !listener || typeof listener === 'function',
      'Expected %s listener to be a function, instead got type %s',
      registrationName, typeof listener
    ) : invariant(!listener || typeof listener === 'function'));

    var bankForRegistrationName =
      listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[id] = listener;
  },

  /**
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function(id, registrationName) {
    var bankForRegistrationName = listenerBank[registrationName];
    return bankForRegistrationName && bankForRegistrationName[id];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function(id, registrationName) {
    var bankForRegistrationName = listenerBank[registrationName];
    if (bankForRegistrationName) {
      delete bankForRegistrationName[id];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {string} id ID of the DOM element.
   */
  deleteAllListeners: function(id) {
    for (var registrationName in listenerBank) {
      delete listenerBank[registrationName][id];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0, l = plugins.length; i < l; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(
          topLevelType,
          topLevelTarget,
          topLevelTargetID,
          nativeEvent
        );
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function(events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function() {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);
    ("production" !== "development" ? invariant(
      !eventQueue,
      'processEventQueue(): Additional events were enqueued while processing ' +
      'an event queue. Support for this has not yet been implemented.'
    ) : invariant(!eventQueue));
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function() {
    listenerBank = {};
  },

  __getListenerBank: function() {
    return listenerBank;
  }

};

module.exports = EventPluginHub;

},{"./EventPluginRegistry":19,"./EventPluginUtils":20,"./accumulateInto":97,"./forEachAccumulated":112,"./invariant":126}],19:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginRegistry
 * @typechecks static-only
 */

"use strict";

var invariant = _dereq_("./invariant");

/**
 * Injectable ordering of event plugins.
 */
var EventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!EventPluginOrder) {
    // Wait until an `EventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var PluginModule = namesToPlugins[pluginName];
    var pluginIndex = EventPluginOrder.indexOf(pluginName);
    ("production" !== "development" ? invariant(
      pluginIndex > -1,
      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +
      'the plugin ordering, `%s`.',
      pluginName
    ) : invariant(pluginIndex > -1));
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    ("production" !== "development" ? invariant(
      PluginModule.extractEvents,
      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +
      'method, but `%s` does not.',
      pluginName
    ) : invariant(PluginModule.extractEvents));
    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
    var publishedEvents = PluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      ("production" !== "development" ? invariant(
        publishEventForPlugin(
          publishedEvents[eventName],
          PluginModule,
          eventName
        ),
        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
        eventName,
        pluginName
      ) : invariant(publishEventForPlugin(
        publishedEvents[eventName],
        PluginModule,
        eventName
      )));
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
  ("production" !== "development" ? invariant(
    !EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),
    'EventPluginHub: More than one plugin attempted to publish the same ' +
    'event name, `%s`.',
    eventName
  ) : invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName)));
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(
          phasedRegistrationName,
          PluginModule,
          eventName
        );
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(
      dispatchConfig.registrationName,
      PluginModule,
      eventName
    );
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, PluginModule, eventName) {
  ("production" !== "development" ? invariant(
    !EventPluginRegistry.registrationNameModules[registrationName],
    'EventPluginHub: More than one plugin attempted to publish the same ' +
    'registration name, `%s`.',
    registrationName
  ) : invariant(!EventPluginRegistry.registrationNameModules[registrationName]));
  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] =
    PluginModule.eventTypes[eventName].dependencies;
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {

  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function(InjectedEventPluginOrder) {
    ("production" !== "development" ? invariant(
      !EventPluginOrder,
      'EventPluginRegistry: Cannot inject event plugin ordering more than ' +
      'once. You are likely trying to load more than one copy of React.'
    ) : invariant(!EventPluginOrder));
    // Clone the ordering so it cannot be dynamically mutated.
    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function(injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var PluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) ||
          namesToPlugins[pluginName] !== PluginModule) {
        ("production" !== "development" ? invariant(
          !namesToPlugins[pluginName],
          'EventPluginRegistry: Cannot inject two different event plugins ' +
          'using the same name, `%s`.',
          pluginName
        ) : invariant(!namesToPlugins[pluginName]));
        namesToPlugins[pluginName] = PluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function(event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[
        dispatchConfig.registrationName
      ] || null;
    }
    for (var phase in dispatchConfig.phasedRegistrationNames) {
      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
        continue;
      }
      var PluginModule = EventPluginRegistry.registrationNameModules[
        dispatchConfig.phasedRegistrationNames[phase]
      ];
      if (PluginModule) {
        return PluginModule;
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function() {
    EventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }
  }

};

module.exports = EventPluginRegistry;

},{"./invariant":126}],20:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginUtils
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");

var invariant = _dereq_("./invariant");

/**
 * Injected dependencies:
 */

/**
 * - `Mount`: [required] Module that can convert between React dom IDs and
 *   actual node references.
 */
var injection = {
  Mount: null,
  injectMount: function(InjectedMount) {
    injection.Mount = InjectedMount;
    if ("production" !== "development") {
      ("production" !== "development" ? invariant(
        InjectedMount && InjectedMount.getNode,
        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +
        'is missing getNode.'
      ) : invariant(InjectedMount && InjectedMount.getNode));
    }
  }
};

var topLevelTypes = EventConstants.topLevelTypes;

function isEndish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseUp ||
         topLevelType === topLevelTypes.topTouchEnd ||
         topLevelType === topLevelTypes.topTouchCancel;
}

function isMoveish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseMove ||
         topLevelType === topLevelTypes.topTouchMove;
}
function isStartish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseDown ||
         topLevelType === topLevelTypes.topTouchStart;
}


var validateEventDispatches;
if ("production" !== "development") {
  validateEventDispatches = function(event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchIDs = event._dispatchIDs;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var idsIsArr = Array.isArray(dispatchIDs);
    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
    var listenersLen = listenersIsArr ?
      dispatchListeners.length :
      dispatchListeners ? 1 : 0;

    ("production" !== "development" ? invariant(
      idsIsArr === listenersIsArr && IDsLen === listenersLen,
      'EventPluginUtils: Invalid `event`.'
    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));
  };
}

/**
 * Invokes `cb(event, listener, id)`. Avoids using call if no scope is
 * provided. The `(listener,id)` pair effectively forms the "dispatch" but are
 * kept separate to conserve memory.
 */
function forEachEventDispatch(event, cb) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchIDs = event._dispatchIDs;
  if ("production" !== "development") {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and IDs are two parallel arrays that are always in sync.
      cb(event, dispatchListeners[i], dispatchIDs[i]);
    }
  } else if (dispatchListeners) {
    cb(event, dispatchListeners, dispatchIDs);
  }
}

/**
 * Default implementation of PluginModule.executeDispatch().
 * @param {SyntheticEvent} SyntheticEvent to handle
 * @param {function} Application-level callback
 * @param {string} domID DOM id to pass to the callback.
 */
function executeDispatch(event, listener, domID) {
  event.currentTarget = injection.Mount.getNode(domID);
  var returnValue = listener(event, domID);
  event.currentTarget = null;
  return returnValue;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, executeDispatch) {
  forEachEventDispatch(event, executeDispatch);
  event._dispatchListeners = null;
  event._dispatchIDs = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return id of the first dispatch execution who's listener returns true, or
 * null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchIDs = event._dispatchIDs;
  if ("production" !== "development") {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and IDs are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchIDs[i])) {
        return dispatchIDs[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchIDs)) {
      return dispatchIDs;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchIDs = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if ("production" !== "development") {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchID = event._dispatchIDs;
  ("production" !== "development" ? invariant(
    !Array.isArray(dispatchListener),
    'executeDirectDispatch(...): Invalid `event`.'
  ) : invariant(!Array.isArray(dispatchListener)));
  var res = dispatchListener ?
    dispatchListener(event, dispatchID) :
    null;
  event._dispatchListeners = null;
  event._dispatchIDs = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {bool} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatch: executeDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,
  injection: injection,
  useTouchEvents: false
};

module.exports = EventPluginUtils;

},{"./EventConstants":16,"./invariant":126}],21:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPropagators
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var EventPluginHub = _dereq_("./EventPluginHub");

var accumulateInto = _dereq_("./accumulateInto");
var forEachAccumulated = _dereq_("./forEachAccumulated");

var PropagationPhases = EventConstants.PropagationPhases;
var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(id, event, propagationPhase) {
  var registrationName =
    event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(id, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(domID, upwards, event) {
  if ("production" !== "development") {
    if (!domID) {
      throw new Error('Dispatching id must not be null');
    }
  }
  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
  var listener = listenerAtPhase(domID, event, phase);
  if (listener) {
    event._dispatchListeners =
      accumulateInto(event._dispatchListeners, listener);
    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We can not perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
      event.dispatchMarker,
      accumulateDirectionalDispatches,
      event
    );
  }
}


/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(id, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(id, registrationName);
    if (listener) {
      event._dispatchListeners =
        accumulateInto(event._dispatchListeners, listener);
      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event.dispatchMarker, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
    fromID,
    toID,
    accumulateDispatches,
    leave,
    enter
  );
}


function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}



/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;

},{"./EventConstants":16,"./EventPluginHub":18,"./accumulateInto":97,"./forEachAccumulated":112}],22:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ExecutionEnvironment
 */

/*jslint evil: true */

"use strict";

var canUseDOM = !!(
  typeof window !== 'undefined' &&
  window.document &&
  window.document.createElement
);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners:
    canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;

},{}],23:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule HTMLDOMPropertyConfig
 */

/*jslint bitwise: true*/

"use strict";

var DOMProperty = _dereq_("./DOMProperty");
var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE =
  DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE =
  DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var hasSVG;
if (ExecutionEnvironment.canUseDOM) {
  var implementation = document.implementation;
  hasSVG = (
    implementation &&
    implementation.hasFeature &&
    implementation.hasFeature(
      'http://www.w3.org/TR/SVG11/feature#BasicStructure',
      '1.1'
    )
  );
}


var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(
    /^(data|aria)-[a-z_][a-z\d_.\-]*$/
  ),
  Properties: {
    /**
     * Standard Properties
     */
    accept: null,
    acceptCharset: null,
    accessKey: null,
    action: null,
    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    allowTransparency: MUST_USE_ATTRIBUTE,
    alt: null,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: null,
    // autoFocus is polyfilled/normalized by AutoFocusMixin
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    cellPadding: null,
    cellSpacing: null,
    charSet: MUST_USE_ATTRIBUTE,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    classID: MUST_USE_ATTRIBUTE,
    // To set className on SVG elements, it's necessary to use .setAttribute;
    // this works on HTML elements too in all browsers except IE8. Conveniently,
    // IE8 doesn't support SVG and so we can simply use the attribute in
    // browsers that support SVG and the property in browsers that don't,
    // regardless of whether the element is HTML or SVG.
    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: null,
    content: null,
    contentEditable: null,
    contextMenu: MUST_USE_ATTRIBUTE,
    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    coords: null,
    crossOrigin: null,
    data: null, // For `<object />` acts as `src`.
    dateTime: MUST_USE_ATTRIBUTE,
    defer: HAS_BOOLEAN_VALUE,
    dir: null,
    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: null,
    encType: null,
    form: MUST_USE_ATTRIBUTE,
    formAction: MUST_USE_ATTRIBUTE,
    formEncType: MUST_USE_ATTRIBUTE,
    formMethod: MUST_USE_ATTRIBUTE,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: MUST_USE_ATTRIBUTE,
    frameBorder: MUST_USE_ATTRIBUTE,
    height: MUST_USE_ATTRIBUTE,
    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    href: null,
    hrefLang: null,
    htmlFor: null,
    httpEquiv: null,
    icon: null,
    id: MUST_USE_PROPERTY,
    label: null,
    lang: null,
    list: MUST_USE_ATTRIBUTE,
    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    manifest: MUST_USE_ATTRIBUTE,
    marginHeight: null,
    marginWidth: null,
    max: null,
    maxLength: MUST_USE_ATTRIBUTE,
    media: MUST_USE_ATTRIBUTE,
    mediaGroup: null,
    method: null,
    min: null,
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: null,
    noValidate: HAS_BOOLEAN_VALUE,
    open: null,
    pattern: null,
    placeholder: null,
    poster: null,
    preload: null,
    radioGroup: null,
    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    rel: null,
    required: HAS_BOOLEAN_VALUE,
    role: MUST_USE_ATTRIBUTE,
    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: null,
    sandbox: null,
    scope: null,
    scrolling: null,
    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: null,
    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    sizes: MUST_USE_ATTRIBUTE,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: null,
    src: null,
    srcDoc: MUST_USE_PROPERTY,
    srcSet: MUST_USE_ATTRIBUTE,
    start: HAS_NUMERIC_VALUE,
    step: null,
    style: null,
    tabIndex: null,
    target: null,
    title: null,
    type: null,
    useMap: null,
    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
    width: MUST_USE_ATTRIBUTE,
    wmode: MUST_USE_ATTRIBUTE,

    /**
     * Non-standard Properties
     */
    autoCapitalize: null, // Supported in Mobile Safari for keyboard hints
    autoCorrect: null, // Supported in Mobile Safari for keyboard hints
    itemProp: MUST_USE_ATTRIBUTE, // Microdata: http://schema.org/docs/gs.html
    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE, // Microdata: http://schema.org/docs/gs.html
    itemType: MUST_USE_ATTRIBUTE, // Microdata: http://schema.org/docs/gs.html
    property: null // Supports OG in meta tags
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {
    autoCapitalize: 'autocapitalize',
    autoComplete: 'autocomplete',
    autoCorrect: 'autocorrect',
    autoFocus: 'autofocus',
    autoPlay: 'autoplay',
    encType: 'enctype',
    hrefLang: 'hreflang',
    radioGroup: 'radiogroup',
    spellCheck: 'spellcheck',
    srcDoc: 'srcdoc',
    srcSet: 'srcset'
  }
};

module.exports = HTMLDOMPropertyConfig;

},{"./DOMProperty":11,"./ExecutionEnvironment":22}],24:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule LinkedValueUtils
 * @typechecks static-only
 */

"use strict";

var ReactPropTypes = _dereq_("./ReactPropTypes");

var invariant = _dereq_("./invariant");

var hasReadOnlyValue = {
  'button': true,
  'checkbox': true,
  'image': true,
  'hidden': true,
  'radio': true,
  'reset': true,
  'submit': true
};

function _assertSingleLink(input) {
  ("production" !== "development" ? invariant(
    input.props.checkedLink == null || input.props.valueLink == null,
    'Cannot provide a checkedLink and a valueLink. If you want to use ' +
    'checkedLink, you probably don\'t want to use valueLink and vice versa.'
  ) : invariant(input.props.checkedLink == null || input.props.valueLink == null));
}
function _assertValueLink(input) {
  _assertSingleLink(input);
  ("production" !== "development" ? invariant(
    input.props.value == null && input.props.onChange == null,
    'Cannot provide a valueLink and a value or onChange event. If you want ' +
    'to use value or onChange, you probably don\'t want to use valueLink.'
  ) : invariant(input.props.value == null && input.props.onChange == null));
}

function _assertCheckedLink(input) {
  _assertSingleLink(input);
  ("production" !== "development" ? invariant(
    input.props.checked == null && input.props.onChange == null,
    'Cannot provide a checkedLink and a checked property or onChange event. ' +
    'If you want to use checked or onChange, you probably don\'t want to ' +
    'use checkedLink'
  ) : invariant(input.props.checked == null && input.props.onChange == null));
}

/**
 * @param {SyntheticEvent} e change event to handle
 */
function _handleLinkedValueChange(e) {
  /*jshint validthis:true */
  this.props.valueLink.requestChange(e.target.value);
}

/**
  * @param {SyntheticEvent} e change event to handle
  */
function _handleLinkedCheckChange(e) {
  /*jshint validthis:true */
  this.props.checkedLink.requestChange(e.target.checked);
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  Mixin: {
    propTypes: {
      value: function(props, propName, componentName) {
        if (!props[propName] ||
            hasReadOnlyValue[props.type] ||
            props.onChange ||
            props.readOnly ||
            props.disabled) {
          return;
        }
        return new Error(
          'You provided a `value` prop to a form field without an ' +
          '`onChange` handler. This will render a read-only field. If ' +
          'the field should be mutable use `defaultValue`. Otherwise, ' +
          'set either `onChange` or `readOnly`.'
        );
      },
      checked: function(props, propName, componentName) {
        if (!props[propName] ||
            props.onChange ||
            props.readOnly ||
            props.disabled) {
          return;
        }
        return new Error(
          'You provided a `checked` prop to a form field without an ' +
          '`onChange` handler. This will render a read-only field. If ' +
          'the field should be mutable use `defaultChecked`. Otherwise, ' +
          'set either `onChange` or `readOnly`.'
        );
      },
      onChange: ReactPropTypes.func
    }
  },

  /**
   * @param {ReactComponent} input Form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function(input) {
    if (input.props.valueLink) {
      _assertValueLink(input);
      return input.props.valueLink.value;
    }
    return input.props.value;
  },

  /**
   * @param {ReactComponent} input Form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function(input) {
    if (input.props.checkedLink) {
      _assertCheckedLink(input);
      return input.props.checkedLink.value;
    }
    return input.props.checked;
  },

  /**
   * @param {ReactComponent} input Form component
   * @return {function} change callback either from onChange prop or link.
   */
  getOnChange: function(input) {
    if (input.props.valueLink) {
      _assertValueLink(input);
      return _handleLinkedValueChange;
    } else if (input.props.checkedLink) {
      _assertCheckedLink(input);
      return _handleLinkedCheckChange;
    }
    return input.props.onChange;
  }
};

module.exports = LinkedValueUtils;

},{"./ReactPropTypes":72,"./invariant":126}],25:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule LocalEventTrapMixin
 */

"use strict";

var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");

var accumulateInto = _dereq_("./accumulateInto");
var forEachAccumulated = _dereq_("./forEachAccumulated");
var invariant = _dereq_("./invariant");

function remove(event) {
  event.remove();
}

var LocalEventTrapMixin = {
  trapBubbledEvent:function(topLevelType, handlerBaseName) {
    ("production" !== "development" ? invariant(this.isMounted(), 'Must be mounted to trap events') : invariant(this.isMounted()));
    var listener = ReactBrowserEventEmitter.trapBubbledEvent(
      topLevelType,
      handlerBaseName,
      this.getDOMNode()
    );
    this._localEventListeners =
      accumulateInto(this._localEventListeners, listener);
  },

  // trapCapturedEvent would look nearly identical. We don't implement that
  // method because it isn't currently needed.

  componentWillUnmount:function() {
    if (this._localEventListeners) {
      forEachAccumulated(this._localEventListeners, remove);
    }
  }
};

module.exports = LocalEventTrapMixin;

},{"./ReactBrowserEventEmitter":30,"./accumulateInto":97,"./forEachAccumulated":112,"./invariant":126}],26:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule MobileSafariClickEventPlugin
 * @typechecks static-only
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");

var emptyFunction = _dereq_("./emptyFunction");

var topLevelTypes = EventConstants.topLevelTypes;

/**
 * Mobile Safari does not fire properly bubble click events on non-interactive
 * elements, which means delegated click listeners do not fire. The workaround
 * for this bug involves attaching an empty click listener on the target node.
 *
 * This particular plugin works around the bug by attaching an empty click
 * listener on `touchstart` (which does fire on every element).
 */
var MobileSafariClickEventPlugin = {

  eventTypes: null,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    if (topLevelType === topLevelTypes.topTouchStart) {
      var target = nativeEvent.target;
      if (target && !target.onclick) {
        target.onclick = emptyFunction;
      }
    }
  }

};

module.exports = MobileSafariClickEventPlugin;

},{"./EventConstants":16,"./emptyFunction":107}],27:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Object.assign
 */

// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign

function assign(target, sources) {
  if (target == null) {
    throw new TypeError('Object.assign target cannot be null or undefined');
  }

  var to = Object(target);
  var hasOwnProperty = Object.prototype.hasOwnProperty;

  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
    var nextSource = arguments[nextIndex];
    if (nextSource == null) {
      continue;
    }

    var from = Object(nextSource);

    // We don't currently support accessors nor proxies. Therefore this
    // copy cannot throw. If we ever supported this then we must handle
    // exceptions and side-effects. We don't support symbols so they won't
    // be transferred.

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }
  }

  return to;
};

module.exports = assign;

},{}],28:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule PooledClass
 */

"use strict";

var invariant = _dereq_("./invariant");

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function(copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function(a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function(a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fiveArgumentPooler = function(a1, a2, a3, a4, a5) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4, a5);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4, a5);
  }
};

var standardReleaser = function(instance) {
  var Klass = this;
  ("production" !== "development" ? invariant(
    instance instanceof Klass,
    'Trying to release an instance into a pool of a different type.'
  ) : invariant(instance instanceof Klass));
  if (instance.destructor) {
    instance.destructor();
  }
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances (optional).
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function(CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fiveArgumentPooler: fiveArgumentPooler
};

module.exports = PooledClass;

},{"./invariant":126}],29:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactBrowserComponentMixin
 */

"use strict";

var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");
var ReactMount = _dereq_("./ReactMount");

var invariant = _dereq_("./invariant");

var ReactBrowserComponentMixin = {
  /**
   * Returns the DOM node rendered by this component.
   *
   * @return {DOMElement} The root node of this component.
   * @final
   * @protected
   */
  getDOMNode: function() {
    ("production" !== "development" ? invariant(
      this.isMounted(),
      'getDOMNode(): A component must be mounted to have a DOM node.'
    ) : invariant(this.isMounted()));
    if (ReactEmptyComponent.isNullComponentID(this._rootNodeID)) {
      return null;
    }
    return ReactMount.getNode(this._rootNodeID);
  }
};

module.exports = ReactBrowserComponentMixin;

},{"./ReactEmptyComponent":54,"./ReactMount":63,"./invariant":126}],30:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactBrowserEventEmitter
 * @typechecks static-only
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var EventPluginHub = _dereq_("./EventPluginHub");
var EventPluginRegistry = _dereq_("./EventPluginRegistry");
var ReactEventEmitterMixin = _dereq_("./ReactEventEmitterMixin");
var ViewportMetrics = _dereq_("./ViewportMetrics");

var assign = _dereq_("./Object.assign");
var isEventSupported = _dereq_("./isEventSupported");

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topBlur: 'blur',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topScroll: 'scroll',
  topSelectionChange: 'selectionchange',
  topTextInput: 'textInput',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = "_reactListenersID" + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {

  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function(ReactEventListener) {
      ReactEventListener.setHandleTopLevel(
        ReactBrowserEventEmitter.handleTopLevel
      );
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function(enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function() {
    return !!(
      ReactBrowserEventEmitter.ReactEventListener &&
      ReactBrowserEventEmitter.ReactEventListener.isEnabled()
    );
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function(registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.
      registrationNameDependencies[registrationName];

    var topLevelTypes = EventConstants.topLevelTypes;
    for (var i = 0, l = dependencies.length; i < l; i++) {
      var dependency = dependencies[i];
      if (!(
            isListening.hasOwnProperty(dependency) &&
            isListening[dependency]
          )) {
        if (dependency === topLevelTypes.topWheel) {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topWheel,
              'wheel',
              mountAt
            );
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topWheel,
              'mousewheel',
              mountAt
            );
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topWheel,
              'DOMMouseScroll',
              mountAt
            );
          }
        } else if (dependency === topLevelTypes.topScroll) {

          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
              topLevelTypes.topScroll,
              'scroll',
              mountAt
            );
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topScroll,
              'scroll',
              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE
            );
          }
        } else if (dependency === topLevelTypes.topFocus ||
            dependency === topLevelTypes.topBlur) {

          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
              topLevelTypes.topFocus,
              'focus',
              mountAt
            );
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
              topLevelTypes.topBlur,
              'blur',
              mountAt
            );
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topFocus,
              'focusin',
              mountAt
            );
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topBlur,
              'focusout',
              mountAt
            );
          }

          // to make sure blur and focus event listeners are only attached once
          isListening[topLevelTypes.topBlur] = true;
          isListening[topLevelTypes.topFocus] = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
            dependency,
            topEventMapping[dependency],
            mountAt
          );
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
      topLevelType,
      handlerBaseName,
      handle
    );
  },

  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
      topLevelType,
      handlerBaseName,
      handle
    );
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function(){
    if (!isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  },

  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,

  registrationNameModules: EventPluginHub.registrationNameModules,

  putListener: EventPluginHub.putListener,

  getListener: EventPluginHub.getListener,

  deleteListener: EventPluginHub.deleteListener,

  deleteAllListeners: EventPluginHub.deleteAllListeners

});

module.exports = ReactBrowserEventEmitter;

},{"./EventConstants":16,"./EventPluginHub":18,"./EventPluginRegistry":19,"./Object.assign":27,"./ReactEventEmitterMixin":56,"./ViewportMetrics":96,"./isEventSupported":127}],31:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactChildren
 */

"use strict";

var PooledClass = _dereq_("./PooledClass");

var traverseAllChildren = _dereq_("./traverseAllChildren");
var warning = _dereq_("./warning");

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var threeArgumentPooler = PooledClass.threeArgumentPooler;

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.forEachFunction = forEachFunction;
  this.forEachContext = forEachContext;
}
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(traverseContext, child, name, i) {
  var forEachBookKeeping = traverseContext;
  forEachBookKeeping.forEachFunction.call(
    forEachBookKeeping.forEachContext, child, i);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc.
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }

  var traverseContext =
    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, mapFunction, mapContext) {
  this.mapResult = mapResult;
  this.mapFunction = mapFunction;
  this.mapContext = mapContext;
}
PooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);

function mapSingleChildIntoContext(traverseContext, child, name, i) {
  var mapBookKeeping = traverseContext;
  var mapResult = mapBookKeeping.mapResult;

  var keyUnique = !mapResult.hasOwnProperty(name);
  ("production" !== "development" ? warning(
    keyUnique,
    'ReactChildren.map(...): Encountered two children with the same key, ' +
    '`%s`. Child keys must be unique; when two children share a key, only ' +
    'the first child will be used.',
    name
  ) : null);

  if (keyUnique) {
    var mappedChild =
      mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);
    mapResult[name] = mappedChild;
  }
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * TODO: This may likely break any calls to `ReactChildren.map` that were
 * previously relying on the fact that we guarded against null children.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} mapFunction.
 * @param {*} mapContext Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }

  var mapResult = {};
  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
  return mapResult;
}

function forEachSingleChildDummy(traverseContext, child, name, i) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  count: countChildren
};

module.exports = ReactChildren;

},{"./PooledClass":28,"./traverseAllChildren":144,"./warning":145}],32:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponent
 */

"use strict";

var ReactElement = _dereq_("./ReactElement");
var ReactOwner = _dereq_("./ReactOwner");
var ReactUpdates = _dereq_("./ReactUpdates");

var assign = _dereq_("./Object.assign");
var invariant = _dereq_("./invariant");
var keyMirror = _dereq_("./keyMirror");

/**
 * Every React component is in one of these life cycles.
 */
var ComponentLifeCycle = keyMirror({
  /**
   * Mounted components have a DOM node representation and are capable of
   * receiving new props.
   */
  MOUNTED: null,
  /**
   * Unmounted components are inactive and cannot receive new props.
   */
  UNMOUNTED: null
});

var injected = false;

/**
 * Optionally injectable environment dependent cleanup hook. (server vs.
 * browser etc). Example: A browser system caches DOM nodes based on component
 * ID and must remove that cache entry when this instance is unmounted.
 *
 * @private
 */
var unmountIDFromEnvironment = null;

/**
 * The "image" of a component tree, is the platform specific (typically
 * serialized) data that represents a tree of lower level UI building blocks.
 * On the web, this "image" is HTML markup which describes a construction of
 * low level `div` and `span` nodes. Other platforms may have different
 * encoding of this "image". This must be injected.
 *
 * @private
 */
var mountImageIntoNode = null;

/**
 * Components are the basic units of composition in React.
 *
 * Every component accepts a set of keyed input parameters known as "props" that
 * are initialized by the constructor. Once a component is mounted, the props
 * can be mutated using `setProps` or `replaceProps`.
 *
 * Every component is capable of the following operations:
 *
 *   `mountComponent`
 *     Initializes the component, renders markup, and registers event listeners.
 *
 *   `receiveComponent`
 *     Updates the rendered DOM nodes to match the given component.
 *
 *   `unmountComponent`
 *     Releases any resources allocated by this component.
 *
 * Components can also be "owned" by other components. Being owned by another
 * component means being constructed by that component. This is different from
 * being the child of a component, which means having a DOM representation that
 * is a child of the DOM representation of that component.
 *
 * @class ReactComponent
 */
var ReactComponent = {

  injection: {
    injectEnvironment: function(ReactComponentEnvironment) {
      ("production" !== "development" ? invariant(
        !injected,
        'ReactComponent: injectEnvironment() can only be called once.'
      ) : invariant(!injected));
      mountImageIntoNode = ReactComponentEnvironment.mountImageIntoNode;
      unmountIDFromEnvironment =
        ReactComponentEnvironment.unmountIDFromEnvironment;
      ReactComponent.BackendIDOperations =
        ReactComponentEnvironment.BackendIDOperations;
      injected = true;
    }
  },

  /**
   * @internal
   */
  LifeCycle: ComponentLifeCycle,

  /**
   * Injected module that provides ability to mutate individual properties.
   * Injected into the base class because many different subclasses need access
   * to this.
   *
   * @internal
   */
  BackendIDOperations: null,

  /**
   * Base functionality for every ReactComponent constructor. Mixed into the
   * `ReactComponent` prototype, but exposed statically for easy access.
   *
   * @lends {ReactComponent.prototype}
   */
  Mixin: {

    /**
     * Checks whether or not this component is mounted.
     *
     * @return {boolean} True if mounted, false otherwise.
     * @final
     * @protected
     */
    isMounted: function() {
      return this._lifeCycleState === ComponentLifeCycle.MOUNTED;
    },

    /**
     * Sets a subset of the props.
     *
     * @param {object} partialProps Subset of the next props.
     * @param {?function} callback Called after props are updated.
     * @final
     * @public
     */
    setProps: function(partialProps, callback) {
      // Merge with the pending element if it exists, otherwise with existing
      // element props.
      var element = this._pendingElement || this._currentElement;
      this.replaceProps(
        assign({}, element.props, partialProps),
        callback
      );
    },

    /**
     * Replaces all of the props.
     *
     * @param {object} props New props.
     * @param {?function} callback Called after props are updated.
     * @final
     * @public
     */
    replaceProps: function(props, callback) {
      ("production" !== "development" ? invariant(
        this.isMounted(),
        'replaceProps(...): Can only update a mounted component.'
      ) : invariant(this.isMounted()));
      ("production" !== "development" ? invariant(
        this._mountDepth === 0,
        'replaceProps(...): You called `setProps` or `replaceProps` on a ' +
        'component with a parent. This is an anti-pattern since props will ' +
        'get reactively updated when rendered. Instead, change the owner\'s ' +
        '`render` method to pass the correct value as props to the component ' +
        'where it is created.'
      ) : invariant(this._mountDepth === 0));
      // This is a deoptimized path. We optimize for always having a element.
      // This creates an extra internal element.
      this._pendingElement = ReactElement.cloneAndReplaceProps(
        this._pendingElement || this._currentElement,
        props
      );
      ReactUpdates.enqueueUpdate(this, callback);
    },

    /**
     * Schedule a partial update to the props. Only used for internal testing.
     *
     * @param {object} partialProps Subset of the next props.
     * @param {?function} callback Called after props are updated.
     * @final
     * @internal
     */
    _setPropsInternal: function(partialProps, callback) {
      // This is a deoptimized path. We optimize for always having a element.
      // This creates an extra internal element.
      var element = this._pendingElement || this._currentElement;
      this._pendingElement = ReactElement.cloneAndReplaceProps(
        element,
        assign({}, element.props, partialProps)
      );
      ReactUpdates.enqueueUpdate(this, callback);
    },

    /**
     * Base constructor for all React components.
     *
     * Subclasses that override this method should make sure to invoke
     * `ReactComponent.Mixin.construct.call(this, ...)`.
     *
     * @param {ReactElement} element
     * @internal
     */
    construct: function(element) {
      // This is the public exposed props object after it has been processed
      // with default props. The element's props represents the true internal
      // state of the props.
      this.props = element.props;
      // Record the component responsible for creating this component.
      // This is accessible through the element but we maintain an extra
      // field for compatibility with devtools and as a way to make an
      // incremental update. TODO: Consider deprecating this field.
      this._owner = element._owner;

      // All components start unmounted.
      this._lifeCycleState = ComponentLifeCycle.UNMOUNTED;

      // See ReactUpdates.
      this._pendingCallbacks = null;

      // We keep the old element and a reference to the pending element
      // to track updates.
      this._currentElement = element;
      this._pendingElement = null;
    },

    /**
     * Initializes the component, renders markup, and registers event listeners.
     *
     * NOTE: This does not insert any nodes into the DOM.
     *
     * Subclasses that override this method should make sure to invoke
     * `ReactComponent.Mixin.mountComponent.call(this, ...)`.
     *
     * @param {string} rootID DOM ID of the root node.
     * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
     * @param {number} mountDepth number of components in the owner hierarchy.
     * @return {?string} Rendered markup to be inserted into the DOM.
     * @internal
     */
    mountComponent: function(rootID, transaction, mountDepth) {
      ("production" !== "development" ? invariant(
        !this.isMounted(),
        'mountComponent(%s, ...): Can only mount an unmounted component. ' +
        'Make sure to avoid storing components between renders or reusing a ' +
        'single component instance in multiple places.',
        rootID
      ) : invariant(!this.isMounted()));
      var ref = this._currentElement.ref;
      if (ref != null) {
        var owner = this._currentElement._owner;
        ReactOwner.addComponentAsRefTo(this, ref, owner);
      }
      this._rootNodeID = rootID;
      this._lifeCycleState = ComponentLifeCycle.MOUNTED;
      this._mountDepth = mountDepth;
      // Effectively: return '';
    },

    /**
     * Releases any resources allocated by `mountComponent`.
     *
     * NOTE: This does not remove any nodes from the DOM.
     *
     * Subclasses that override this method should make sure to invoke
     * `ReactComponent.Mixin.unmountComponent.call(this)`.
     *
     * @internal
     */
    unmountComponent: function() {
      ("production" !== "development" ? invariant(
        this.isMounted(),
        'unmountComponent(): Can only unmount a mounted component.'
      ) : invariant(this.isMounted()));
      var ref = this._currentElement.ref;
      if (ref != null) {
        ReactOwner.removeComponentAsRefFrom(this, ref, this._owner);
      }
      unmountIDFromEnvironment(this._rootNodeID);
      this._rootNodeID = null;
      this._lifeCycleState = ComponentLifeCycle.UNMOUNTED;
    },

    /**
     * Given a new instance of this component, updates the rendered DOM nodes
     * as if that instance was rendered instead.
     *
     * Subclasses that override this method should make sure to invoke
     * `ReactComponent.Mixin.receiveComponent.call(this, ...)`.
     *
     * @param {object} nextComponent Next set of properties.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    receiveComponent: function(nextElement, transaction) {
      ("production" !== "development" ? invariant(
        this.isMounted(),
        'receiveComponent(...): Can only update a mounted component.'
      ) : invariant(this.isMounted()));
      this._pendingElement = nextElement;
      this.performUpdateIfNecessary(transaction);
    },

    /**
     * If `_pendingElement` is set, update the component.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    performUpdateIfNecessary: function(transaction) {
      if (this._pendingElement == null) {
        return;
      }
      var prevElement = this._currentElement;
      var nextElement = this._pendingElement;
      this._currentElement = nextElement;
      this.props = nextElement.props;
      this._owner = nextElement._owner;
      this._pendingElement = null;
      this.updateComponent(transaction, prevElement);
    },

    /**
     * Updates the component's currently mounted representation.
     *
     * @param {ReactReconcileTransaction} transaction
     * @param {object} prevElement
     * @internal
     */
    updateComponent: function(transaction, prevElement) {
      var nextElement = this._currentElement;

      // If either the owner or a `ref` has changed, make sure the newest owner
      // has stored a reference to `this`, and the previous owner (if different)
      // has forgotten the reference to `this`. We use the element instead
      // of the public this.props because the post processing cannot determine
      // a ref. The ref conceptually lives on the element.

      // TODO: Should this even be possible? The owner cannot change because
      // it's forbidden by shouldUpdateReactComponent. The ref can change
      // if you swap the keys of but not the refs. Reconsider where this check
      // is made. It probably belongs where the key checking and
      // instantiateReactComponent is done.

      if (nextElement._owner !== prevElement._owner ||
          nextElement.ref !== prevElement.ref) {
        if (prevElement.ref != null) {
          ReactOwner.removeComponentAsRefFrom(
            this, prevElement.ref, prevElement._owner
          );
        }
        // Correct, even if the owner is the same, and only the ref has changed.
        if (nextElement.ref != null) {
          ReactOwner.addComponentAsRefTo(
            this,
            nextElement.ref,
            nextElement._owner
          );
        }
      }
    },

    /**
     * Mounts this component and inserts it into the DOM.
     *
     * @param {string} rootID DOM ID of the root node.
     * @param {DOMElement} container DOM element to mount into.
     * @param {boolean} shouldReuseMarkup If true, do not insert markup
     * @final
     * @internal
     * @see {ReactMount.render}
     */
    mountComponentIntoNode: function(rootID, container, shouldReuseMarkup) {
      var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
      transaction.perform(
        this._mountComponentIntoNode,
        this,
        rootID,
        container,
        transaction,
        shouldReuseMarkup
      );
      ReactUpdates.ReactReconcileTransaction.release(transaction);
    },

    /**
     * @param {string} rootID DOM ID of the root node.
     * @param {DOMElement} container DOM element to mount into.
     * @param {ReactReconcileTransaction} transaction
     * @param {boolean} shouldReuseMarkup If true, do not insert markup
     * @final
     * @private
     */
    _mountComponentIntoNode: function(
        rootID,
        container,
        transaction,
        shouldReuseMarkup) {
      var markup = this.mountComponent(rootID, transaction, 0);
      mountImageIntoNode(markup, container, shouldReuseMarkup);
    },

    /**
     * Checks if this component is owned by the supplied `owner` component.
     *
     * @param {ReactComponent} owner Component to check.
     * @return {boolean} True if `owners` owns this component.
     * @final
     * @internal
     */
    isOwnedBy: function(owner) {
      return this._owner === owner;
    },

    /**
     * Gets another component, that shares the same owner as this one, by ref.
     *
     * @param {string} ref of a sibling Component.
     * @return {?ReactComponent} the actual sibling Component.
     * @final
     * @internal
     */
    getSiblingByRef: function(ref) {
      var owner = this._owner;
      if (!owner || !owner.refs) {
        return null;
      }
      return owner.refs[ref];
    }
  }
};

module.exports = ReactComponent;

},{"./Object.assign":27,"./ReactElement":52,"./ReactOwner":67,"./ReactUpdates":79,"./invariant":126,"./keyMirror":132}],33:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponentBrowserEnvironment
 */

/*jslint evil: true */

"use strict";

var ReactDOMIDOperations = _dereq_("./ReactDOMIDOperations");
var ReactMarkupChecksum = _dereq_("./ReactMarkupChecksum");
var ReactMount = _dereq_("./ReactMount");
var ReactPerf = _dereq_("./ReactPerf");
var ReactReconcileTransaction = _dereq_("./ReactReconcileTransaction");

var getReactRootElementInContainer = _dereq_("./getReactRootElementInContainer");
var invariant = _dereq_("./invariant");
var setInnerHTML = _dereq_("./setInnerHTML");


var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;


/**
 * Abstracts away all functionality of `ReactComponent` requires knowledge of
 * the browser context.
 */
var ReactComponentBrowserEnvironment = {
  ReactReconcileTransaction: ReactReconcileTransaction,

  BackendIDOperations: ReactDOMIDOperations,

  /**
   * If a particular environment requires that some resources be cleaned up,
   * specify this in the injected Mixin. In the DOM, we would likely want to
   * purge any cached node ID lookups.
   *
   * @private
   */
  unmountIDFromEnvironment: function(rootNodeID) {
    ReactMount.purgeID(rootNodeID);
  },

  /**
   * @param {string} markup Markup string to place into the DOM Element.
   * @param {DOMElement} container DOM Element to insert markup into.
   * @param {boolean} shouldReuseMarkup Should reuse the existing markup in the
   * container if possible.
   */
  mountImageIntoNode: ReactPerf.measure(
    'ReactComponentBrowserEnvironment',
    'mountImageIntoNode',
    function(markup, container, shouldReuseMarkup) {
      ("production" !== "development" ? invariant(
        container && (
          container.nodeType === ELEMENT_NODE_TYPE ||
            container.nodeType === DOC_NODE_TYPE
        ),
        'mountComponentIntoNode(...): Target container is not valid.'
      ) : invariant(container && (
        container.nodeType === ELEMENT_NODE_TYPE ||
          container.nodeType === DOC_NODE_TYPE
      )));

      if (shouldReuseMarkup) {
        if (ReactMarkupChecksum.canReuseMarkup(
          markup,
          getReactRootElementInContainer(container))) {
          return;
        } else {
          ("production" !== "development" ? invariant(
            container.nodeType !== DOC_NODE_TYPE,
            'You\'re trying to render a component to the document using ' +
            'server rendering but the checksum was invalid. This usually ' +
            'means you rendered a different component type or props on ' +
            'the client from the one on the server, or your render() ' +
            'methods are impure. React cannot handle this case due to ' +
            'cross-browser quirks by rendering at the document root. You ' +
            'should look for environment dependent code in your components ' +
            'and ensure the props are the same client and server side.'
          ) : invariant(container.nodeType !== DOC_NODE_TYPE));

          if ("production" !== "development") {
            console.warn(
              'React attempted to use reuse markup in a container but the ' +
              'checksum was invalid. This generally means that you are ' +
              'using server rendering and the markup generated on the ' +
              'server was not what the client was expecting. React injected ' +
              'new markup to compensate which works but you have lost many ' +
              'of the benefits of server rendering. Instead, figure out ' +
              'why the markup being generated is different on the client ' +
              'or server.'
            );
          }
        }
      }

      ("production" !== "development" ? invariant(
        container.nodeType !== DOC_NODE_TYPE,
        'You\'re trying to render a component to the document but ' +
          'you didn\'t use server rendering. We can\'t do this ' +
          'without using server rendering due to cross-browser quirks. ' +
          'See renderComponentToString() for server rendering.'
      ) : invariant(container.nodeType !== DOC_NODE_TYPE));

      setInnerHTML(container, markup);
    }
  )
};

module.exports = ReactComponentBrowserEnvironment;

},{"./ReactDOMIDOperations":41,"./ReactMarkupChecksum":62,"./ReactMount":63,"./ReactPerf":68,"./ReactReconcileTransaction":74,"./getReactRootElementInContainer":120,"./invariant":126,"./setInnerHTML":140}],34:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactCompositeComponent
 */

"use strict";

var ReactComponent = _dereq_("./ReactComponent");
var ReactContext = _dereq_("./ReactContext");
var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
var ReactElement = _dereq_("./ReactElement");
var ReactElementValidator = _dereq_("./ReactElementValidator");
var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");
var ReactErrorUtils = _dereq_("./ReactErrorUtils");
var ReactLegacyElement = _dereq_("./ReactLegacyElement");
var ReactOwner = _dereq_("./ReactOwner");
var ReactPerf = _dereq_("./ReactPerf");
var ReactPropTransferer = _dereq_("./ReactPropTransferer");
var ReactPropTypeLocations = _dereq_("./ReactPropTypeLocations");
var ReactPropTypeLocationNames = _dereq_("./ReactPropTypeLocationNames");
var ReactUpdates = _dereq_("./ReactUpdates");

var assign = _dereq_("./Object.assign");
var instantiateReactComponent = _dereq_("./instantiateReactComponent");
var invariant = _dereq_("./invariant");
var keyMirror = _dereq_("./keyMirror");
var keyOf = _dereq_("./keyOf");
var monitorCodeUse = _dereq_("./monitorCodeUse");
var mapObject = _dereq_("./mapObject");
var shouldUpdateReactComponent = _dereq_("./shouldUpdateReactComponent");
var warning = _dereq_("./warning");

var MIXINS_KEY = keyOf({mixins: null});

/**
 * Policies that describe methods in `ReactCompositeComponentInterface`.
 */
var SpecPolicy = keyMirror({
  /**
   * These methods may be defined only once by the class specification or mixin.
   */
  DEFINE_ONCE: null,
  /**
   * These methods may be defined by both the class specification and mixins.
   * Subsequent definitions will be chained. These methods must return void.
   */
  DEFINE_MANY: null,
  /**
   * These methods are overriding the base ReactCompositeComponent class.
   */
  OVERRIDE_BASE: null,
  /**
   * These methods are similar to DEFINE_MANY, except we assume they return
   * objects. We try to merge the keys of the return values of all the mixed in
   * functions. If there is a key conflict we throw.
   */
  DEFINE_MANY_MERGED: null
});


var injectedMixins = [];

/**
 * Composite components are higher-level components that compose other composite
 * or native components.
 *
 * To create a new type of `ReactCompositeComponent`, pass a specification of
 * your new class to `React.createClass`. The only requirement of your class
 * specification is that you implement a `render` method.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return <div>Hello World</div>;
 *     }
 *   });
 *
 * The class specification supports a specific protocol of methods that have
 * special meaning (e.g. `render`). See `ReactCompositeComponentInterface` for
 * more the comprehensive protocol. Any other properties and methods in the
 * class specification will available on the prototype.
 *
 * @interface ReactCompositeComponentInterface
 * @internal
 */
var ReactCompositeComponentInterface = {

  /**
   * An array of Mixin objects to include when defining your component.
   *
   * @type {array}
   * @optional
   */
  mixins: SpecPolicy.DEFINE_MANY,

  /**
   * An object containing properties and methods that should be defined on
   * the component's constructor instead of its prototype (static methods).
   *
   * @type {object}
   * @optional
   */
  statics: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of prop types for this component.
   *
   * @type {object}
   * @optional
   */
  propTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types for this component.
   *
   * @type {object}
   * @optional
   */
  contextTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types this component sets for its children.
   *
   * @type {object}
   * @optional
   */
  childContextTypes: SpecPolicy.DEFINE_MANY,

  // ==== Definition methods ====

  /**
   * Invoked when the component is mounted. Values in the mapping will be set on
   * `this.props` if that prop is not specified (i.e. using an `in` check).
   *
   * This method is invoked before `getInitialState` and therefore cannot rely
   * on `this.state` or use `this.setState`.
   *
   * @return {object}
   * @optional
   */
  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Invoked once before the component is mounted. The return value will be used
   * as the initial value of `this.state`.
   *
   *   getInitialState: function() {
   *     return {
   *       isOn: false,
   *       fooBaz: new BazFoo()
   *     }
   *   }
   *
   * @return {object}
   * @optional
   */
  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * @return {object}
   * @optional
   */
  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Uses props from `this.props` and state from `this.state` to render the
   * structure of the component.
   *
   * No guarantees are made about when or how often this method is invoked, so
   * it must not have side effects.
   *
   *   render: function() {
   *     var name = this.props.name;
   *     return <div>Hello, {name}!</div>;
   *   }
   *
   * @return {ReactComponent}
   * @nosideeffects
   * @required
   */
  render: SpecPolicy.DEFINE_ONCE,



  // ==== Delegate methods ====

  /**
   * Invoked when the component is initially created and about to be mounted.
   * This may have side effects, but any external subscriptions or data created
   * by this method must be cleaned up in `componentWillUnmount`.
   *
   * @optional
   */
  componentWillMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component has been mounted and has a DOM representation.
   * However, there is no guarantee that the DOM node is in the document.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been mounted (initialized and rendered) for the first time.
   *
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked before the component receives new props.
   *
   * Use this as an opportunity to react to a prop transition by updating the
   * state using `this.setState`. Current props are accessed via `this.props`.
   *
   *   componentWillReceiveProps: function(nextProps, nextContext) {
   *     this.setState({
   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
   *     });
   *   }
   *
   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
   * transition may cause a state change, but the opposite is not true. If you
   * need it, you are probably looking for `componentWillUpdate`.
   *
   * @param {object} nextProps
   * @optional
   */
  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked while deciding if the component should be updated as a result of
   * receiving new props, state and/or context.
   *
   * Use this as an opportunity to `return false` when you're certain that the
   * transition to the new props/state/context will not require a component
   * update.
   *
   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
   *     return !equal(nextProps, this.props) ||
   *       !equal(nextState, this.state) ||
   *       !equal(nextContext, this.context);
   *   }
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @return {boolean} True if the component should update.
   * @optional
   */
  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

  /**
   * Invoked when the component is about to update due to a transition from
   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
   * and `nextContext`.
   *
   * Use this as an opportunity to perform preparation before an update occurs.
   *
   * NOTE: You **cannot** use `this.setState()` in this method.
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @param {ReactReconcileTransaction} transaction
   * @optional
   */
  componentWillUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component's DOM representation has been updated.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been updated.
   *
   * @param {object} prevProps
   * @param {?object} prevState
   * @param {?object} prevContext
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component is about to be removed from its parent and have
   * its DOM representation destroyed.
   *
   * Use this as an opportunity to deallocate any external resources.
   *
   * NOTE: There is no `componentDidUnmount` since your component will have been
   * destroyed by that point.
   *
   * @optional
   */
  componentWillUnmount: SpecPolicy.DEFINE_MANY,



  // ==== Advanced methods ====

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   * @overridable
   */
  updateComponent: SpecPolicy.OVERRIDE_BASE

};

/**
 * Mapping from class specification keys to special processing functions.
 *
 * Although these are declared like instance properties in the specification
 * when defining classes using `React.createClass`, they are actually static
 * and are accessible on the constructor instead of the prototype. Despite
 * being static, they must be defined outside of the "statics" key under
 * which all other static methods are defined.
 */
var RESERVED_SPEC_KEYS = {
  displayName: function(Constructor, displayName) {
    Constructor.displayName = displayName;
  },
  mixins: function(Constructor, mixins) {
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        mixSpecIntoComponent(Constructor, mixins[i]);
      }
    }
  },
  childContextTypes: function(Constructor, childContextTypes) {
    validateTypeDef(
      Constructor,
      childContextTypes,
      ReactPropTypeLocations.childContext
    );
    Constructor.childContextTypes = assign(
      {},
      Constructor.childContextTypes,
      childContextTypes
    );
  },
  contextTypes: function(Constructor, contextTypes) {
    validateTypeDef(
      Constructor,
      contextTypes,
      ReactPropTypeLocations.context
    );
    Constructor.contextTypes = assign(
      {},
      Constructor.contextTypes,
      contextTypes
    );
  },
  /**
   * Special case getDefaultProps which should move into statics but requires
   * automatic merging.
   */
  getDefaultProps: function(Constructor, getDefaultProps) {
    if (Constructor.getDefaultProps) {
      Constructor.getDefaultProps = createMergedResultFunction(
        Constructor.getDefaultProps,
        getDefaultProps
      );
    } else {
      Constructor.getDefaultProps = getDefaultProps;
    }
  },
  propTypes: function(Constructor, propTypes) {
    validateTypeDef(
      Constructor,
      propTypes,
      ReactPropTypeLocations.prop
    );
    Constructor.propTypes = assign(
      {},
      Constructor.propTypes,
      propTypes
    );
  },
  statics: function(Constructor, statics) {
    mixStaticSpecIntoComponent(Constructor, statics);
  }
};

function getDeclarationErrorAddendum(component) {
  var owner = component._owner || null;
  if (owner && owner.constructor && owner.constructor.displayName) {
    return ' Check the render method of `' + owner.constructor.displayName +
      '`.';
  }
  return '';
}

function validateTypeDef(Constructor, typeDef, location) {
  for (var propName in typeDef) {
    if (typeDef.hasOwnProperty(propName)) {
      ("production" !== "development" ? invariant(
        typeof typeDef[propName] == 'function',
        '%s: %s type `%s` is invalid; it must be a function, usually from ' +
        'React.PropTypes.',
        Constructor.displayName || 'ReactCompositeComponent',
        ReactPropTypeLocationNames[location],
        propName
      ) : invariant(typeof typeDef[propName] == 'function'));
    }
  }
}

function validateMethodOverride(proto, name) {
  var specPolicy = ReactCompositeComponentInterface.hasOwnProperty(name) ?
    ReactCompositeComponentInterface[name] :
    null;

  // Disallow overriding of base class methods unless explicitly allowed.
  if (ReactCompositeComponentMixin.hasOwnProperty(name)) {
    ("production" !== "development" ? invariant(
      specPolicy === SpecPolicy.OVERRIDE_BASE,
      'ReactCompositeComponentInterface: You are attempting to override ' +
      '`%s` from your class specification. Ensure that your method names ' +
      'do not overlap with React methods.',
      name
    ) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE));
  }

  // Disallow defining methods more than once unless explicitly allowed.
  if (proto.hasOwnProperty(name)) {
    ("production" !== "development" ? invariant(
      specPolicy === SpecPolicy.DEFINE_MANY ||
      specPolicy === SpecPolicy.DEFINE_MANY_MERGED,
      'ReactCompositeComponentInterface: You are attempting to define ' +
      '`%s` on your component more than once. This conflict may be due ' +
      'to a mixin.',
      name
    ) : invariant(specPolicy === SpecPolicy.DEFINE_MANY ||
    specPolicy === SpecPolicy.DEFINE_MANY_MERGED));
  }
}

function validateLifeCycleOnReplaceState(instance) {
  var compositeLifeCycleState = instance._compositeLifeCycleState;
  ("production" !== "development" ? invariant(
    instance.isMounted() ||
      compositeLifeCycleState === CompositeLifeCycle.MOUNTING,
    'replaceState(...): Can only update a mounted or mounting component.'
  ) : invariant(instance.isMounted() ||
    compositeLifeCycleState === CompositeLifeCycle.MOUNTING));
  ("production" !== "development" ? invariant(
    ReactCurrentOwner.current == null,
    'replaceState(...): Cannot update during an existing state transition ' +
    '(such as within `render`). Render methods should be a pure function ' +
    'of props and state.'
  ) : invariant(ReactCurrentOwner.current == null));
  ("production" !== "development" ? invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING,
    'replaceState(...): Cannot update while unmounting component. This ' +
    'usually means you called setState() on an unmounted component.'
  ) : invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING));
}

/**
 * Mixin helper which handles policy validation and reserved
 * specification keys when building `ReactCompositeComponent` classses.
 */
function mixSpecIntoComponent(Constructor, spec) {
  if (!spec) {
    return;
  }

  ("production" !== "development" ? invariant(
    !ReactLegacyElement.isValidFactory(spec),
    'ReactCompositeComponent: You\'re attempting to ' +
    'use a component class as a mixin. Instead, just use a regular object.'
  ) : invariant(!ReactLegacyElement.isValidFactory(spec)));
  ("production" !== "development" ? invariant(
    !ReactElement.isValidElement(spec),
    'ReactCompositeComponent: You\'re attempting to ' +
    'use a component as a mixin. Instead, just use a regular object.'
  ) : invariant(!ReactElement.isValidElement(spec)));

  var proto = Constructor.prototype;

  // By handling mixins before any other properties, we ensure the same
  // chaining order is applied to methods with DEFINE_MANY policy, whether
  // mixins are listed before or after these methods in the spec.
  if (spec.hasOwnProperty(MIXINS_KEY)) {
    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
  }

  for (var name in spec) {
    if (!spec.hasOwnProperty(name)) {
      continue;
    }

    if (name === MIXINS_KEY) {
      // We have already handled mixins in a special case above
      continue;
    }

    var property = spec[name];
    validateMethodOverride(proto, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](Constructor, property);
    } else {
      // Setup methods on prototype:
      // The following member methods should not be automatically bound:
      // 1. Expected ReactCompositeComponent methods (in the "interface").
      // 2. Overridden methods (that were mixed in).
      var isCompositeComponentMethod =
        ReactCompositeComponentInterface.hasOwnProperty(name);
      var isAlreadyDefined = proto.hasOwnProperty(name);
      var markedDontBind = property && property.__reactDontBind;
      var isFunction = typeof property === 'function';
      var shouldAutoBind =
        isFunction &&
        !isCompositeComponentMethod &&
        !isAlreadyDefined &&
        !markedDontBind;

      if (shouldAutoBind) {
        if (!proto.__reactAutoBindMap) {
          proto.__reactAutoBindMap = {};
        }
        proto.__reactAutoBindMap[name] = property;
        proto[name] = property;
      } else {
        if (isAlreadyDefined) {
          var specPolicy = ReactCompositeComponentInterface[name];

          // These cases should already be caught by validateMethodOverride
          ("production" !== "development" ? invariant(
            isCompositeComponentMethod && (
              specPolicy === SpecPolicy.DEFINE_MANY_MERGED ||
              specPolicy === SpecPolicy.DEFINE_MANY
            ),
            'ReactCompositeComponent: Unexpected spec policy %s for key %s ' +
            'when mixing in component specs.',
            specPolicy,
            name
          ) : invariant(isCompositeComponentMethod && (
            specPolicy === SpecPolicy.DEFINE_MANY_MERGED ||
            specPolicy === SpecPolicy.DEFINE_MANY
          )));

          // For methods which are defined more than once, call the existing
          // methods before calling the new property, merging if appropriate.
          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
          if ("production" !== "development") {
            // Add verbose displayName to the function, which helps when looking
            // at profiling tools.
            if (typeof property === 'function' && spec.displayName) {
              proto[name].displayName = spec.displayName + '_' + name;
            }
          }
        }
      }
    }
  }
}

function mixStaticSpecIntoComponent(Constructor, statics) {
  if (!statics) {
    return;
  }
  for (var name in statics) {
    var property = statics[name];
    if (!statics.hasOwnProperty(name)) {
      continue;
    }

    var isReserved = name in RESERVED_SPEC_KEYS;
    ("production" !== "development" ? invariant(
      !isReserved,
      'ReactCompositeComponent: You are attempting to define a reserved ' +
      'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
      'as an instance property instead; it will still be accessible on the ' +
      'constructor.',
      name
    ) : invariant(!isReserved));

    var isInherited = name in Constructor;
    ("production" !== "development" ? invariant(
      !isInherited,
      'ReactCompositeComponent: You are attempting to define ' +
      '`%s` on your component more than once. This conflict may be ' +
      'due to a mixin.',
      name
    ) : invariant(!isInherited));
    Constructor[name] = property;
  }
}

/**
 * Merge two objects, but throw if both contain the same key.
 *
 * @param {object} one The first object, which is mutated.
 * @param {object} two The second object
 * @return {object} one after it has been mutated to contain everything in two.
 */
function mergeObjectsWithNoDuplicateKeys(one, two) {
  ("production" !== "development" ? invariant(
    one && two && typeof one === 'object' && typeof two === 'object',
    'mergeObjectsWithNoDuplicateKeys(): Cannot merge non-objects'
  ) : invariant(one && two && typeof one === 'object' && typeof two === 'object'));

  mapObject(two, function(value, key) {
    ("production" !== "development" ? invariant(
      one[key] === undefined,
      'mergeObjectsWithNoDuplicateKeys(): ' +
      'Tried to merge two objects with the same key: `%s`. This conflict ' +
      'may be due to a mixin; in particular, this may be caused by two ' +
      'getInitialState() or getDefaultProps() methods returning objects ' +
      'with clashing keys.',
      key
    ) : invariant(one[key] === undefined));
    one[key] = value;
  });
  return one;
}

/**
 * Creates a function that invokes two functions and merges their return values.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createMergedResultFunction(one, two) {
  return function mergedResult() {
    var a = one.apply(this, arguments);
    var b = two.apply(this, arguments);
    if (a == null) {
      return b;
    } else if (b == null) {
      return a;
    }
    return mergeObjectsWithNoDuplicateKeys(a, b);
  };
}

/**
 * Creates a function that invokes two functions and ignores their return vales.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

/**
 * `ReactCompositeComponent` maintains an auxiliary life cycle state in
 * `this._compositeLifeCycleState` (which can be null).
 *
 * This is different from the life cycle state maintained by `ReactComponent` in
 * `this._lifeCycleState`. The following diagram shows how the states overlap in
 * time. There are times when the CompositeLifeCycle is null - at those times it
 * is only meaningful to look at ComponentLifeCycle alone.
 *
 * Top Row: ReactComponent.ComponentLifeCycle
 * Low Row: ReactComponent.CompositeLifeCycle
 *
 * +-------+---------------------------------+--------+
 * |  UN   |             MOUNTED             |   UN   |
 * |MOUNTED|                                 | MOUNTED|
 * +-------+---------------------------------+--------+
 * |       ^--------+   +-------+   +--------^        |
 * |       |        |   |       |   |        |        |
 * |    0--|MOUNTING|-0-|RECEIVE|-0-|   UN   |--->0   |
 * |       |        |   |PROPS  |   |MOUNTING|        |
 * |       |        |   |       |   |        |        |
 * |       |        |   |       |   |        |        |
 * |       +--------+   +-------+   +--------+        |
 * |       |                                 |        |
 * +-------+---------------------------------+--------+
 */
var CompositeLifeCycle = keyMirror({
  /**
   * Components in the process of being mounted respond to state changes
   * differently.
   */
  MOUNTING: null,
  /**
   * Components in the process of being unmounted are guarded against state
   * changes.
   */
  UNMOUNTING: null,
  /**
   * Components that are mounted and receiving new props respond to state
   * changes differently.
   */
  RECEIVING_PROPS: null
});

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponentMixin = {

  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function(element) {
    // Children can be either an array or more than one argument
    ReactComponent.Mixin.construct.apply(this, arguments);
    ReactOwner.Mixin.construct.apply(this, arguments);

    this.state = null;
    this._pendingState = null;

    // This is the public post-processed context. The real context and pending
    // context lives on the element.
    this.context = null;

    this._compositeLifeCycleState = null;
  },

  /**
   * Checks whether or not this composite component is mounted.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function() {
    return ReactComponent.Mixin.isMounted.call(this) &&
      this._compositeLifeCycleState !== CompositeLifeCycle.MOUNTING;
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {string} rootID DOM ID of the root node.
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {number} mountDepth number of components in the owner hierarchy
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: ReactPerf.measure(
    'ReactCompositeComponent',
    'mountComponent',
    function(rootID, transaction, mountDepth) {
      ReactComponent.Mixin.mountComponent.call(
        this,
        rootID,
        transaction,
        mountDepth
      );
      this._compositeLifeCycleState = CompositeLifeCycle.MOUNTING;

      if (this.__reactAutoBindMap) {
        this._bindAutoBindMethods();
      }

      this.context = this._processContext(this._currentElement._context);
      this.props = this._processProps(this.props);

      this.state = this.getInitialState ? this.getInitialState() : null;
      ("production" !== "development" ? invariant(
        typeof this.state === 'object' && !Array.isArray(this.state),
        '%s.getInitialState(): must return an object or null',
        this.constructor.displayName || 'ReactCompositeComponent'
      ) : invariant(typeof this.state === 'object' && !Array.isArray(this.state)));

      this._pendingState = null;
      this._pendingForceUpdate = false;

      if (this.componentWillMount) {
        this.componentWillMount();
        // When mounting, calls to `setState` by `componentWillMount` will set
        // `this._pendingState` without triggering a re-render.
        if (this._pendingState) {
          this.state = this._pendingState;
          this._pendingState = null;
        }
      }

      this._renderedComponent = instantiateReactComponent(
        this._renderValidatedComponent(),
        this._currentElement.type // The wrapping type
      );

      // Done with mounting, `setState` will now trigger UI changes.
      this._compositeLifeCycleState = null;
      var markup = this._renderedComponent.mountComponent(
        rootID,
        transaction,
        mountDepth + 1
      );
      if (this.componentDidMount) {
        transaction.getReactMountReady().enqueue(this.componentDidMount, this);
      }
      return markup;
    }
  ),

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function() {
    this._compositeLifeCycleState = CompositeLifeCycle.UNMOUNTING;
    if (this.componentWillUnmount) {
      this.componentWillUnmount();
    }
    this._compositeLifeCycleState = null;

    this._renderedComponent.unmountComponent();
    this._renderedComponent = null;

    ReactComponent.Mixin.unmountComponent.call(this);

    // Some existing components rely on this.props even after they've been
    // destroyed (in event handlers).
    // TODO: this.props = null;
    // TODO: this.state = null;
  },

  /**
   * Sets a subset of the state. Always use this or `replaceState` to mutate
   * state. You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * There is no guarantee that calls to `setState` will run synchronously,
   * as they may eventually be batched together.  You can provide an optional
   * callback that will be executed when the call to setState is actually
   * completed.
   *
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after state is updated.
   * @final
   * @protected
   */
  setState: function(partialState, callback) {
    ("production" !== "development" ? invariant(
      typeof partialState === 'object' || partialState == null,
      'setState(...): takes an object of state variables to update.'
    ) : invariant(typeof partialState === 'object' || partialState == null));
    if ("production" !== "development"){
      ("production" !== "development" ? warning(
        partialState != null,
        'setState(...): You passed an undefined or null state object; ' +
        'instead, use forceUpdate().'
      ) : null);
    }
    // Merge with `_pendingState` if it exists, otherwise with existing state.
    this.replaceState(
      assign({}, this._pendingState || this.state, partialState),
      callback
    );
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {object} completeState Next state.
   * @param {?function} callback Called after state is updated.
   * @final
   * @protected
   */
  replaceState: function(completeState, callback) {
    validateLifeCycleOnReplaceState(this);
    this._pendingState = completeState;
    if (this._compositeLifeCycleState !== CompositeLifeCycle.MOUNTING) {
      // If we're in a componentWillMount handler, don't enqueue a rerender
      // because ReactUpdates assumes we're in a browser context (which is wrong
      // for server rendering) and we're about to do a render anyway.
      // TODO: The callback here is ignored when setState is called from
      // componentWillMount. Either fix it or disallow doing so completely in
      // favor of getInitialState.
      ReactUpdates.enqueueUpdate(this, callback);
    }
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function(context) {
    var maskedContext = null;
    var contextTypes = this.constructor.contextTypes;
    if (contextTypes) {
      maskedContext = {};
      for (var contextName in contextTypes) {
        maskedContext[contextName] = context[contextName];
      }
      if ("production" !== "development") {
        this._checkPropTypes(
          contextTypes,
          maskedContext,
          ReactPropTypeLocations.context
        );
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _processChildContext: function(currentContext) {
    var childContext = this.getChildContext && this.getChildContext();
    var displayName = this.constructor.displayName || 'ReactCompositeComponent';
    if (childContext) {
      ("production" !== "development" ? invariant(
        typeof this.constructor.childContextTypes === 'object',
        '%s.getChildContext(): childContextTypes must be defined in order to ' +
        'use getChildContext().',
        displayName
      ) : invariant(typeof this.constructor.childContextTypes === 'object'));
      if ("production" !== "development") {
        this._checkPropTypes(
          this.constructor.childContextTypes,
          childContext,
          ReactPropTypeLocations.childContext
        );
      }
      for (var name in childContext) {
        ("production" !== "development" ? invariant(
          name in this.constructor.childContextTypes,
          '%s.getChildContext(): key "%s" is not defined in childContextTypes.',
          displayName,
          name
        ) : invariant(name in this.constructor.childContextTypes));
      }
      return assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Processes props by setting default values for unspecified props and
   * asserting that the props are valid. Does not mutate its argument; returns
   * a new props object with defaults merged in.
   *
   * @param {object} newProps
   * @return {object}
   * @private
   */
  _processProps: function(newProps) {
    if ("production" !== "development") {
      var propTypes = this.constructor.propTypes;
      if (propTypes) {
        this._checkPropTypes(propTypes, newProps, ReactPropTypeLocations.prop);
      }
    }
    return newProps;
  },

  /**
   * Assert that the props are valid
   *
   * @param {object} propTypes Map of prop name to a ReactPropType
   * @param {object} props
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkPropTypes: function(propTypes, props, location) {
    // TODO: Stop validating prop types here and only use the element
    // validation.
    var componentName = this.constructor.displayName;
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error =
          propTypes[propName](props, propName, componentName, location);
        if (error instanceof Error) {
          // We may want to extend this logic for similar errors in
          // renderComponent calls, so I'm abstracting it away into
          // a function to minimize refactoring in the future
          var addendum = getDeclarationErrorAddendum(this);
          ("production" !== "development" ? warning(false, error.message + addendum) : null);
        }
      }
    }
  },

  /**
   * If any of `_pendingElement`, `_pendingState`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function(transaction) {
    var compositeLifeCycleState = this._compositeLifeCycleState;
    // Do not trigger a state transition if we are in the middle of mounting or
    // receiving props because both of those will already be doing this.
    if (compositeLifeCycleState === CompositeLifeCycle.MOUNTING ||
        compositeLifeCycleState === CompositeLifeCycle.RECEIVING_PROPS) {
      return;
    }

    if (this._pendingElement == null &&
        this._pendingState == null &&
        !this._pendingForceUpdate) {
      return;
    }

    var nextContext = this.context;
    var nextProps = this.props;
    var nextElement = this._currentElement;
    if (this._pendingElement != null) {
      nextElement = this._pendingElement;
      nextContext = this._processContext(nextElement._context);
      nextProps = this._processProps(nextElement.props);
      this._pendingElement = null;

      this._compositeLifeCycleState = CompositeLifeCycle.RECEIVING_PROPS;
      if (this.componentWillReceiveProps) {
        this.componentWillReceiveProps(nextProps, nextContext);
      }
    }

    this._compositeLifeCycleState = null;

    var nextState = this._pendingState || this.state;
    this._pendingState = null;

    var shouldUpdate =
      this._pendingForceUpdate ||
      !this.shouldComponentUpdate ||
      this.shouldComponentUpdate(nextProps, nextState, nextContext);

    if ("production" !== "development") {
      if (typeof shouldUpdate === "undefined") {
        console.warn(
          (this.constructor.displayName || 'ReactCompositeComponent') +
          '.shouldComponentUpdate(): Returned undefined instead of a ' +
          'boolean value. Make sure to return true or false.'
        );
      }
    }

    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(
        nextElement,
        nextProps,
        nextState,
        nextContext,
        transaction
      );
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state.
      this._currentElement = nextElement;
      this.props = nextProps;
      this.state = nextState;
      this.context = nextContext;

      // Owner cannot change because shouldUpdateReactComponent doesn't allow
      // it. TODO: Remove this._owner completely.
      this._owner = nextElement._owner;
    }
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @private
   */
  _performComponentUpdate: function(
    nextElement,
    nextProps,
    nextState,
    nextContext,
    transaction
  ) {
    var prevElement = this._currentElement;
    var prevProps = this.props;
    var prevState = this.state;
    var prevContext = this.context;

    if (this.componentWillUpdate) {
      this.componentWillUpdate(nextProps, nextState, nextContext);
    }

    this._currentElement = nextElement;
    this.props = nextProps;
    this.state = nextState;
    this.context = nextContext;

    // Owner cannot change because shouldUpdateReactComponent doesn't allow
    // it. TODO: Remove this._owner completely.
    this._owner = nextElement._owner;

    this.updateComponent(
      transaction,
      prevElement
    );

    if (this.componentDidUpdate) {
      transaction.getReactMountReady().enqueue(
        this.componentDidUpdate.bind(this, prevProps, prevState, prevContext),
        this
      );
    }
  },

  receiveComponent: function(nextElement, transaction) {
    if (nextElement === this._currentElement &&
        nextElement._owner != null) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for a element created outside a composite to be
      // deeply mutated and reused.
      return;
    }

    ReactComponent.Mixin.receiveComponent.call(
      this,
      nextElement,
      transaction
    );
  },

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @internal
   * @overridable
   */
  updateComponent: ReactPerf.measure(
    'ReactCompositeComponent',
    'updateComponent',
    function(transaction, prevParentElement) {
      ReactComponent.Mixin.updateComponent.call(
        this,
        transaction,
        prevParentElement
      );

      var prevComponentInstance = this._renderedComponent;
      var prevElement = prevComponentInstance._currentElement;
      var nextElement = this._renderValidatedComponent();
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        prevComponentInstance.receiveComponent(nextElement, transaction);
      } else {
        // These two IDs are actually the same! But nothing should rely on that.
        var thisID = this._rootNodeID;
        var prevComponentID = prevComponentInstance._rootNodeID;
        prevComponentInstance.unmountComponent();
        this._renderedComponent = instantiateReactComponent(
          nextElement,
          this._currentElement.type
        );
        var nextMarkup = this._renderedComponent.mountComponent(
          thisID,
          transaction,
          this._mountDepth + 1
        );
        ReactComponent.BackendIDOperations.dangerouslyReplaceNodeWithMarkupByID(
          prevComponentID,
          nextMarkup
        );
      }
    }
  ),

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldUpdateComponent`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {?function} callback Called after update is complete.
   * @final
   * @protected
   */
  forceUpdate: function(callback) {
    var compositeLifeCycleState = this._compositeLifeCycleState;
    ("production" !== "development" ? invariant(
      this.isMounted() ||
        compositeLifeCycleState === CompositeLifeCycle.MOUNTING,
      'forceUpdate(...): Can only force an update on mounted or mounting ' +
        'components.'
    ) : invariant(this.isMounted() ||
      compositeLifeCycleState === CompositeLifeCycle.MOUNTING));
    ("production" !== "development" ? invariant(
      compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING &&
      ReactCurrentOwner.current == null,
      'forceUpdate(...): Cannot force an update while unmounting component ' +
      'or within a `render` function.'
    ) : invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING &&
    ReactCurrentOwner.current == null));
    this._pendingForceUpdate = true;
    ReactUpdates.enqueueUpdate(this, callback);
  },

  /**
   * @private
   */
  _renderValidatedComponent: ReactPerf.measure(
    'ReactCompositeComponent',
    '_renderValidatedComponent',
    function() {
      var renderedComponent;
      var previousContext = ReactContext.current;
      ReactContext.current = this._processChildContext(
        this._currentElement._context
      );
      ReactCurrentOwner.current = this;
      try {
        renderedComponent = this.render();
        if (renderedComponent === null || renderedComponent === false) {
          renderedComponent = ReactEmptyComponent.getEmptyComponent();
          ReactEmptyComponent.registerNullComponentID(this._rootNodeID);
        } else {
          ReactEmptyComponent.deregisterNullComponentID(this._rootNodeID);
        }
      } finally {
        ReactContext.current = previousContext;
        ReactCurrentOwner.current = null;
      }
      ("production" !== "development" ? invariant(
        ReactElement.isValidElement(renderedComponent),
        '%s.render(): A valid ReactComponent must be returned. You may have ' +
          'returned undefined, an array or some other invalid object.',
        this.constructor.displayName || 'ReactCompositeComponent'
      ) : invariant(ReactElement.isValidElement(renderedComponent)));
      return renderedComponent;
    }
  ),

  /**
   * @private
   */
  _bindAutoBindMethods: function() {
    for (var autoBindKey in this.__reactAutoBindMap) {
      if (!this.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
        continue;
      }
      var method = this.__reactAutoBindMap[autoBindKey];
      this[autoBindKey] = this._bindAutoBindMethod(ReactErrorUtils.guard(
        method,
        this.constructor.displayName + '.' + autoBindKey
      ));
    }
  },

  /**
   * Binds a method to the component.
   *
   * @param {function} method Method to be bound.
   * @private
   */
  _bindAutoBindMethod: function(method) {
    var component = this;
    var boundMethod = method.bind(component);
    if ("production" !== "development") {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function(newThis ) {for (var args=[],$__0=1,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
        // User is trying to bind() an autobound method; we effectively will
        // ignore the value of "this" that the user is trying to use, so
        // let's warn.
        if (newThis !== component && newThis !== null) {
          monitorCodeUse('react_bind_warning', { component: componentName });
          console.warn(
            'bind(): React component methods may only be bound to the ' +
            'component instance. See ' + componentName
          );
        } else if (!args.length) {
          monitorCodeUse('react_bind_warning', { component: componentName });
          console.warn(
            'bind(): You are binding a component method to the component. ' +
            'React does this for you automatically in a high-performance ' +
            'way, so you can safely remove this call. See ' + componentName
          );
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments = args;
        return reboundMethod;
      };
    }
    return boundMethod;
  }
};

var ReactCompositeComponentBase = function() {};
assign(
  ReactCompositeComponentBase.prototype,
  ReactComponent.Mixin,
  ReactOwner.Mixin,
  ReactPropTransferer.Mixin,
  ReactCompositeComponentMixin
);

/**
 * Module for creating composite components.
 *
 * @class ReactCompositeComponent
 * @extends ReactComponent
 * @extends ReactOwner
 * @extends ReactPropTransferer
 */
var ReactCompositeComponent = {

  LifeCycle: CompositeLifeCycle,

  Base: ReactCompositeComponentBase,

  /**
   * Creates a composite component class given a class specification.
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  createClass: function(spec) {
    var Constructor = function(props) {
      // This constructor is overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted. This will later be used
      // by the stand-alone class implementation.
    };
    Constructor.prototype = new ReactCompositeComponentBase();
    Constructor.prototype.constructor = Constructor;

    injectedMixins.forEach(
      mixSpecIntoComponent.bind(null, Constructor)
    );

    mixSpecIntoComponent(Constructor, spec);

    // Initialize the defaultProps property after all mixins have been merged
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    ("production" !== "development" ? invariant(
      Constructor.prototype.render,
      'createClass(...): Class specification must implement a `render` method.'
    ) : invariant(Constructor.prototype.render));

    if ("production" !== "development") {
      if (Constructor.prototype.componentShouldUpdate) {
        monitorCodeUse(
          'react_component_should_update_warning',
          { component: spec.displayName }
        );
        console.warn(
          (spec.displayName || 'A component') + ' has a method called ' +
          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
          'The name is phrased as a question because the function is ' +
          'expected to return a value.'
         );
      }
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactCompositeComponentInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    if ("production" !== "development") {
      return ReactLegacyElement.wrapFactory(
        ReactElementValidator.createFactory(Constructor)
      );
    }
    return ReactLegacyElement.wrapFactory(
      ReactElement.createFactory(Constructor)
    );
  },

  injection: {
    injectMixin: function(mixin) {
      injectedMixins.push(mixin);
    }
  }
};

module.exports = ReactCompositeComponent;

},{"./Object.assign":27,"./ReactComponent":32,"./ReactContext":35,"./ReactCurrentOwner":36,"./ReactElement":52,"./ReactElementValidator":53,"./ReactEmptyComponent":54,"./ReactErrorUtils":55,"./ReactLegacyElement":61,"./ReactOwner":67,"./ReactPerf":68,"./ReactPropTransferer":69,"./ReactPropTypeLocationNames":70,"./ReactPropTypeLocations":71,"./ReactUpdates":79,"./instantiateReactComponent":125,"./invariant":126,"./keyMirror":132,"./keyOf":133,"./mapObject":134,"./monitorCodeUse":136,"./shouldUpdateReactComponent":142,"./warning":145}],35:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactContext
 */

"use strict";

var assign = _dereq_("./Object.assign");

/**
 * Keeps track of the current context.
 *
 * The context is automatically passed down the component ownership hierarchy
 * and is accessible via `this.context` on ReactCompositeComponents.
 */
var ReactContext = {

  /**
   * @internal
   * @type {object}
   */
  current: {},

  /**
   * Temporarily extends the current context while executing scopedCallback.
   *
   * A typical use case might look like
   *
   *  render: function() {
   *    var children = ReactContext.withContext({foo: 'foo'}, () => (
   *
   *    ));
   *    return <div>{children}</div>;
   *  }
   *
   * @param {object} newContext New context to merge into the existing context
   * @param {function} scopedCallback Callback to run with the new context
   * @return {ReactComponent|array<ReactComponent>}
   */
  withContext: function(newContext, scopedCallback) {
    var result;
    var previousContext = ReactContext.current;
    ReactContext.current = assign({}, previousContext, newContext);
    try {
      result = scopedCallback();
    } finally {
      ReactContext.current = previousContext;
    }
    return result;
  }

};

module.exports = ReactContext;

},{"./Object.assign":27}],36:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactCurrentOwner
 */

"use strict";

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 *
 * The depth indicate how many composite components are above this render level.
 */
var ReactCurrentOwner = {

  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null

};

module.exports = ReactCurrentOwner;

},{}],37:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOM
 * @typechecks static-only
 */

"use strict";

var ReactElement = _dereq_("./ReactElement");
var ReactElementValidator = _dereq_("./ReactElementValidator");
var ReactLegacyElement = _dereq_("./ReactLegacyElement");

var mapObject = _dereq_("./mapObject");

/**
 * Create a factory that creates HTML tag elements.
 *
 * @param {string} tag Tag name (e.g. `div`).
 * @private
 */
function createDOMFactory(tag) {
  if ("production" !== "development") {
    return ReactLegacyElement.markNonLegacyFactory(
      ReactElementValidator.createFactory(tag)
    );
  }
  return ReactLegacyElement.markNonLegacyFactory(
    ReactElement.createFactory(tag)
  );
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 * This is also accessible via `React.DOM`.
 *
 * @public
 */
var ReactDOM = mapObject({
  a: 'a',
  abbr: 'abbr',
  address: 'address',
  area: 'area',
  article: 'article',
  aside: 'aside',
  audio: 'audio',
  b: 'b',
  base: 'base',
  bdi: 'bdi',
  bdo: 'bdo',
  big: 'big',
  blockquote: 'blockquote',
  body: 'body',
  br: 'br',
  button: 'button',
  canvas: 'canvas',
  caption: 'caption',
  cite: 'cite',
  code: 'code',
  col: 'col',
  colgroup: 'colgroup',
  data: 'data',
  datalist: 'datalist',
  dd: 'dd',
  del: 'del',
  details: 'details',
  dfn: 'dfn',
  dialog: 'dialog',
  div: 'div',
  dl: 'dl',
  dt: 'dt',
  em: 'em',
  embed: 'embed',
  fieldset: 'fieldset',
  figcaption: 'figcaption',
  figure: 'figure',
  footer: 'footer',
  form: 'form',
  h1: 'h1',
  h2: 'h2',
  h3: 'h3',
  h4: 'h4',
  h5: 'h5',
  h6: 'h6',
  head: 'head',
  header: 'header',
  hr: 'hr',
  html: 'html',
  i: 'i',
  iframe: 'iframe',
  img: 'img',
  input: 'input',
  ins: 'ins',
  kbd: 'kbd',
  keygen: 'keygen',
  label: 'label',
  legend: 'legend',
  li: 'li',
  link: 'link',
  main: 'main',
  map: 'map',
  mark: 'mark',
  menu: 'menu',
  menuitem: 'menuitem',
  meta: 'meta',
  meter: 'meter',
  nav: 'nav',
  noscript: 'noscript',
  object: 'object',
  ol: 'ol',
  optgroup: 'optgroup',
  option: 'option',
  output: 'output',
  p: 'p',
  param: 'param',
  picture: 'picture',
  pre: 'pre',
  progress: 'progress',
  q: 'q',
  rp: 'rp',
  rt: 'rt',
  ruby: 'ruby',
  s: 's',
  samp: 'samp',
  script: 'script',
  section: 'section',
  select: 'select',
  small: 'small',
  source: 'source',
  span: 'span',
  strong: 'strong',
  style: 'style',
  sub: 'sub',
  summary: 'summary',
  sup: 'sup',
  table: 'table',
  tbody: 'tbody',
  td: 'td',
  textarea: 'textarea',
  tfoot: 'tfoot',
  th: 'th',
  thead: 'thead',
  time: 'time',
  title: 'title',
  tr: 'tr',
  track: 'track',
  u: 'u',
  ul: 'ul',
  'var': 'var',
  video: 'video',
  wbr: 'wbr',

  // SVG
  circle: 'circle',
  defs: 'defs',
  ellipse: 'ellipse',
  g: 'g',
  line: 'line',
  linearGradient: 'linearGradient',
  mask: 'mask',
  path: 'path',
  pattern: 'pattern',
  polygon: 'polygon',
  polyline: 'polyline',
  radialGradient: 'radialGradient',
  rect: 'rect',
  stop: 'stop',
  svg: 'svg',
  text: 'text',
  tspan: 'tspan'

}, createDOMFactory);

module.exports = ReactDOM;

},{"./ReactElement":52,"./ReactElementValidator":53,"./ReactLegacyElement":61,"./mapObject":134}],38:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMButton
 */

"use strict";

var AutoFocusMixin = _dereq_("./AutoFocusMixin");
var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactElement = _dereq_("./ReactElement");
var ReactDOM = _dereq_("./ReactDOM");

var keyMirror = _dereq_("./keyMirror");

// Store a reference to the <button> `ReactDOMComponent`. TODO: use string
var button = ReactElement.createFactory(ReactDOM.button.type);

var mouseListenerNames = keyMirror({
  onClick: true,
  onDoubleClick: true,
  onMouseDown: true,
  onMouseMove: true,
  onMouseUp: true,
  onClickCapture: true,
  onDoubleClickCapture: true,
  onMouseDownCapture: true,
  onMouseMoveCapture: true,
  onMouseUpCapture: true
});

/**
 * Implements a <button> native component that does not receive mouse events
 * when `disabled` is set.
 */
var ReactDOMButton = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMButton',

  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],

  render: function() {
    var props = {};

    // Copy the props; except the mouse listeners if we're disabled
    for (var key in this.props) {
      if (this.props.hasOwnProperty(key) &&
          (!this.props.disabled || !mouseListenerNames[key])) {
        props[key] = this.props[key];
      }
    }

    return button(props, this.props.children);
  }

});

module.exports = ReactDOMButton;

},{"./AutoFocusMixin":2,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52,"./keyMirror":132}],39:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMComponent
 * @typechecks static-only
 */

"use strict";

var CSSPropertyOperations = _dereq_("./CSSPropertyOperations");
var DOMProperty = _dereq_("./DOMProperty");
var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactComponent = _dereq_("./ReactComponent");
var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
var ReactMount = _dereq_("./ReactMount");
var ReactMultiChild = _dereq_("./ReactMultiChild");
var ReactPerf = _dereq_("./ReactPerf");

var assign = _dereq_("./Object.assign");
var escapeTextForBrowser = _dereq_("./escapeTextForBrowser");
var invariant = _dereq_("./invariant");
var isEventSupported = _dereq_("./isEventSupported");
var keyOf = _dereq_("./keyOf");
var monitorCodeUse = _dereq_("./monitorCodeUse");

var deleteListener = ReactBrowserEventEmitter.deleteListener;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = {'string': true, 'number': true};

var STYLE = keyOf({style: null});

var ELEMENT_NODE_TYPE = 1;

/**
 * @param {?object} props
 */
function assertValidProps(props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  ("production" !== "development" ? invariant(
    props.children == null || props.dangerouslySetInnerHTML == null,
    'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
  ) : invariant(props.children == null || props.dangerouslySetInnerHTML == null));
  if ("production" !== "development") {
    if (props.contentEditable && props.children != null) {
      console.warn(
        'A component is `contentEditable` and contains `children` managed by ' +
        'React. It is now your responsibility to guarantee that none of those '+
        'nodes are unexpectedly modified or duplicated. This is probably not ' +
        'intentional.'
      );
    }
  }
  ("production" !== "development" ? invariant(
    props.style == null || typeof props.style === 'object',
    'The `style` prop expects a mapping from style properties to values, ' +
    'not a string.'
  ) : invariant(props.style == null || typeof props.style === 'object'));
}

function putListener(id, registrationName, listener, transaction) {
  if ("production" !== "development") {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    if (registrationName === 'onScroll' &&
        !isEventSupported('scroll', true)) {
      monitorCodeUse('react_no_scroll_event');
      console.warn('This browser doesn\'t support the `onScroll` event');
    }
  }
  var container = ReactMount.findReactContainerForID(id);
  if (container) {
    var doc = container.nodeType === ELEMENT_NODE_TYPE ?
      container.ownerDocument :
      container;
    listenTo(registrationName, doc);
  }
  transaction.getPutListenerQueue().enqueuePutListener(
    id,
    registrationName,
    listener
  );
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special cased tags.

var omittedCloseTags = {
  'area': true,
  'base': true,
  'br': true,
  'col': true,
  'embed': true,
  'hr': true,
  'img': true,
  'input': true,
  'keygen': true,
  'link': true,
  'meta': true,
  'param': true,
  'source': true,
  'track': true,
  'wbr': true
  // NOTE: menuitem's close tag should be omitted, but that causes problems.
};

// We accept any tag to be rendered but since this gets injected into abitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    ("production" !== "development" ? invariant(VALID_TAG_REGEX.test(tag), 'Invalid tag: %s', tag) : invariant(VALID_TAG_REGEX.test(tag)));
    validatedTagCache[tag] = true;
  }
}

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(tag) {
  validateDangerousTag(tag);
  this._tag = tag;
  this.tagName = tag.toUpperCase();
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {

  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {string} rootID The root DOM ID for this node.
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {number} mountDepth number of components in the owner hierarchy
   * @return {string} The computed markup.
   */
  mountComponent: ReactPerf.measure(
    'ReactDOMComponent',
    'mountComponent',
    function(rootID, transaction, mountDepth) {
      ReactComponent.Mixin.mountComponent.call(
        this,
        rootID,
        transaction,
        mountDepth
      );
      assertValidProps(this.props);
      var closeTag = omittedCloseTags[this._tag] ? '' : '</' + this._tag + '>';
      return (
        this._createOpenTagMarkupAndPutListeners(transaction) +
        this._createContentMarkup(transaction) +
        closeTag
      );
    }
  ),

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function(transaction) {
    var props = this.props;
    var ret = '<' + this._tag;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        putListener(this._rootNodeID, propKey, propValue, transaction);
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            propValue = props.style = assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
        }
        var markup =
          DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret + '>';
    }

    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
    return ret + ' ' + markupForID + '>';
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Content markup.
   */
  _createContentMarkup: function(transaction) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = this.props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        return innerHTML.__html;
      }
    } else {
      var contentToUse =
        CONTENT_TYPES[typeof this.props.children] ? this.props.children : null;
      var childrenToUse = contentToUse != null ? null : this.props.children;
      if (contentToUse != null) {
        return escapeTextForBrowser(contentToUse);
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(
          childrenToUse,
          transaction
        );
        return mountImages.join('');
      }
    }
    return '';
  },

  receiveComponent: function(nextElement, transaction) {
    if (nextElement === this._currentElement &&
        nextElement._owner != null) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for a element created outside a composite to be
      // deeply mutated and reused.
      return;
    }

    ReactComponent.Mixin.receiveComponent.call(
      this,
      nextElement,
      transaction
    );
  },

  /**
   * Updates a native DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @internal
   * @overridable
   */
  updateComponent: ReactPerf.measure(
    'ReactDOMComponent',
    'updateComponent',
    function(transaction, prevElement) {
      assertValidProps(this._currentElement.props);
      ReactComponent.Mixin.updateComponent.call(
        this,
        transaction,
        prevElement
      );
      this._updateDOMProperties(prevElement.props, transaction);
      this._updateDOMChildren(prevElement.props, transaction);
    }
  ),

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {ReactReconcileTransaction} transaction
   */
  _updateDOMProperties: function(lastProps, transaction) {
    var nextProps = this.props;
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) ||
         !lastProps.hasOwnProperty(propKey)) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = lastProps[propKey];
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        deleteListener(this._rootNodeID, propKey);
      } else if (
          DOMProperty.isStandardName[propKey] ||
          DOMProperty.isCustomAttribute(propKey)) {
        ReactComponent.BackendIDOperations.deletePropertyByID(
          this._rootNodeID,
          propKey
        );
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = lastProps[propKey];
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          nextProp = nextProps.style = assign({}, nextProp);
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) &&
                (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) &&
                lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        putListener(this._rootNodeID, propKey, nextProp, transaction);
      } else if (
          DOMProperty.isStandardName[propKey] ||
          DOMProperty.isCustomAttribute(propKey)) {
        ReactComponent.BackendIDOperations.updatePropertyByID(
          this._rootNodeID,
          propKey,
          nextProp
        );
      }
    }
    if (styleUpdates) {
      ReactComponent.BackendIDOperations.updateStylesByID(
        this._rootNodeID,
        styleUpdates
      );
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {ReactReconcileTransaction} transaction
   */
  _updateDOMChildren: function(lastProps, transaction) {
    var nextProps = this.props;

    var lastContent =
      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent =
      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml =
      lastProps.dangerouslySetInnerHTML &&
      lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml =
      nextProps.dangerouslySetInnerHTML &&
      nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        ReactComponent.BackendIDOperations.updateInnerHTMLByID(
          this._rootNodeID,
          nextHtml
        );
      }
    } else if (nextChildren != null) {
      this.updateChildren(nextChildren, transaction);
    }
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function() {
    this.unmountChildren();
    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
    ReactComponent.Mixin.unmountComponent.call(this);
  }

};

assign(
  ReactDOMComponent.prototype,
  ReactComponent.Mixin,
  ReactDOMComponent.Mixin,
  ReactMultiChild.Mixin,
  ReactBrowserComponentMixin
);

module.exports = ReactDOMComponent;

},{"./CSSPropertyOperations":5,"./DOMProperty":11,"./DOMPropertyOperations":12,"./Object.assign":27,"./ReactBrowserComponentMixin":29,"./ReactBrowserEventEmitter":30,"./ReactComponent":32,"./ReactMount":63,"./ReactMultiChild":64,"./ReactPerf":68,"./escapeTextForBrowser":109,"./invariant":126,"./isEventSupported":127,"./keyOf":133,"./monitorCodeUse":136}],40:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMForm
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var LocalEventTrapMixin = _dereq_("./LocalEventTrapMixin");
var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactElement = _dereq_("./ReactElement");
var ReactDOM = _dereq_("./ReactDOM");

// Store a reference to the <form> `ReactDOMComponent`. TODO: use string
var form = ReactElement.createFactory(ReactDOM.form.type);

/**
 * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need
 * to capture it on the <form> element itself. There are lots of hacks we could
 * do to accomplish this, but the most reliable is to make <form> a
 * composite component and use `componentDidMount` to attach the event handlers.
 */
var ReactDOMForm = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMForm',

  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

  render: function() {
    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,
    // `jshint` fails to parse JSX so in order for linting to work in the open
    // source repo, we need to just use `ReactDOM.form`.
    return form(this.props);
  },

  componentDidMount: function() {
    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');
    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');
  }
});

module.exports = ReactDOMForm;

},{"./EventConstants":16,"./LocalEventTrapMixin":25,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52}],41:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMIDOperations
 * @typechecks static-only
 */

/*jslint evil: true */

"use strict";

var CSSPropertyOperations = _dereq_("./CSSPropertyOperations");
var DOMChildrenOperations = _dereq_("./DOMChildrenOperations");
var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
var ReactMount = _dereq_("./ReactMount");
var ReactPerf = _dereq_("./ReactPerf");

var invariant = _dereq_("./invariant");
var setInnerHTML = _dereq_("./setInnerHTML");

/**
 * Errors for properties that should not be updated with `updatePropertyById()`.
 *
 * @type {object}
 * @private
 */
var INVALID_PROPERTY_ERRORS = {
  dangerouslySetInnerHTML:
    '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
  style: '`style` must be set using `updateStylesByID()`.'
};

/**
 * Operations used to process updates to DOM nodes. This is made injectable via
 * `ReactComponent.BackendIDOperations`.
 */
var ReactDOMIDOperations = {

  /**
   * Updates a DOM node with new property values. This should only be used to
   * update DOM properties in `DOMProperty`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} name A valid property name, see `DOMProperty`.
   * @param {*} value New value of the property.
   * @internal
   */
  updatePropertyByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'updatePropertyByID',
    function(id, name, value) {
      var node = ReactMount.getNode(id);
      ("production" !== "development" ? invariant(
        !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
        'updatePropertyByID(...): %s',
        INVALID_PROPERTY_ERRORS[name]
      ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));

      // If we're updating to null or undefined, we should remove the property
      // from the DOM node instead of inadvertantly setting to a string. This
      // brings us in line with the same behavior we have on initial render.
      if (value != null) {
        DOMPropertyOperations.setValueForProperty(node, name, value);
      } else {
        DOMPropertyOperations.deleteValueForProperty(node, name);
      }
    }
  ),

  /**
   * Updates a DOM node to remove a property. This should only be used to remove
   * DOM properties in `DOMProperty`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} name A property name to remove, see `DOMProperty`.
   * @internal
   */
  deletePropertyByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'deletePropertyByID',
    function(id, name, value) {
      var node = ReactMount.getNode(id);
      ("production" !== "development" ? invariant(
        !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
        'updatePropertyByID(...): %s',
        INVALID_PROPERTY_ERRORS[name]
      ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));
      DOMPropertyOperations.deleteValueForProperty(node, name, value);
    }
  ),

  /**
   * Updates a DOM node with new style values. If a value is specified as '',
   * the corresponding style property will be unset.
   *
   * @param {string} id ID of the node to update.
   * @param {object} styles Mapping from styles to values.
   * @internal
   */
  updateStylesByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'updateStylesByID',
    function(id, styles) {
      var node = ReactMount.getNode(id);
      CSSPropertyOperations.setValueForStyles(node, styles);
    }
  ),

  /**
   * Updates a DOM node's innerHTML.
   *
   * @param {string} id ID of the node to update.
   * @param {string} html An HTML string.
   * @internal
   */
  updateInnerHTMLByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'updateInnerHTMLByID',
    function(id, html) {
      var node = ReactMount.getNode(id);
      setInnerHTML(node, html);
    }
  ),

  /**
   * Updates a DOM node's text content set by `props.content`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} content Text content.
   * @internal
   */
  updateTextContentByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'updateTextContentByID',
    function(id, content) {
      var node = ReactMount.getNode(id);
      DOMChildrenOperations.updateTextContent(node, content);
    }
  ),

  /**
   * Replaces a DOM node that exists in the document with markup.
   *
   * @param {string} id ID of child to be replaced.
   * @param {string} markup Dangerous markup to inject in place of child.
   * @internal
   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
   */
  dangerouslyReplaceNodeWithMarkupByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'dangerouslyReplaceNodeWithMarkupByID',
    function(id, markup) {
      var node = ReactMount.getNode(id);
      DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
    }
  ),

  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @param {array<string>} markup List of markup strings.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: ReactPerf.measure(
    'ReactDOMIDOperations',
    'dangerouslyProcessChildrenUpdates',
    function(updates, markup) {
      for (var i = 0; i < updates.length; i++) {
        updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
      }
      DOMChildrenOperations.processUpdates(updates, markup);
    }
  )
};

module.exports = ReactDOMIDOperations;

},{"./CSSPropertyOperations":5,"./DOMChildrenOperations":10,"./DOMPropertyOperations":12,"./ReactMount":63,"./ReactPerf":68,"./invariant":126,"./setInnerHTML":140}],42:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMImg
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var LocalEventTrapMixin = _dereq_("./LocalEventTrapMixin");
var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactElement = _dereq_("./ReactElement");
var ReactDOM = _dereq_("./ReactDOM");

// Store a reference to the <img> `ReactDOMComponent`. TODO: use string
var img = ReactElement.createFactory(ReactDOM.img.type);

/**
 * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to
 * capture it on the <img> element itself. There are lots of hacks we could do
 * to accomplish this, but the most reliable is to make <img> a composite
 * component and use `componentDidMount` to attach the event handlers.
 */
var ReactDOMImg = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMImg',
  tagName: 'IMG',

  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

  render: function() {
    return img(this.props);
  },

  componentDidMount: function() {
    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');
    this.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error');
  }
});

module.exports = ReactDOMImg;

},{"./EventConstants":16,"./LocalEventTrapMixin":25,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52}],43:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMInput
 */

"use strict";

var AutoFocusMixin = _dereq_("./AutoFocusMixin");
var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
var LinkedValueUtils = _dereq_("./LinkedValueUtils");
var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactElement = _dereq_("./ReactElement");
var ReactDOM = _dereq_("./ReactDOM");
var ReactMount = _dereq_("./ReactMount");
var ReactUpdates = _dereq_("./ReactUpdates");

var assign = _dereq_("./Object.assign");
var invariant = _dereq_("./invariant");

// Store a reference to the <input> `ReactDOMComponent`. TODO: use string
var input = ReactElement.createFactory(ReactDOM.input.type);

var instancesByReactID = {};

function forceUpdateIfMounted() {
  /*jshint validthis:true */
  if (this.isMounted()) {
    this.forceUpdate();
  }
}

/**
 * Implements an <input> native component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMInput',

  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

  getInitialState: function() {
    var defaultValue = this.props.defaultValue;
    return {
      initialChecked: this.props.defaultChecked || false,
      initialValue: defaultValue != null ? defaultValue : null
    };
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = assign({}, this.props);

    props.defaultChecked = null;
    props.defaultValue = null;

    var value = LinkedValueUtils.getValue(this);
    props.value = value != null ? value : this.state.initialValue;

    var checked = LinkedValueUtils.getChecked(this);
    props.checked = checked != null ? checked : this.state.initialChecked;

    props.onChange = this._handleChange;

    return input(props, this.props.children);
  },

  componentDidMount: function() {
    var id = ReactMount.getID(this.getDOMNode());
    instancesByReactID[id] = this;
  },

  componentWillUnmount: function() {
    var rootNode = this.getDOMNode();
    var id = ReactMount.getID(rootNode);
    delete instancesByReactID[id];
  },

  componentDidUpdate: function(prevProps, prevState, prevContext) {
    var rootNode = this.getDOMNode();
    if (this.props.checked != null) {
      DOMPropertyOperations.setValueForProperty(
        rootNode,
        'checked',
        this.props.checked || false
      );
    }

    var value = LinkedValueUtils.getValue(this);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
    }
  },

  _handleChange: function(event) {
    var returnValue;
    var onChange = LinkedValueUtils.getOnChange(this);
    if (onChange) {
      returnValue = onChange.call(this, event);
    }
    // Here we use asap to wait until all updates have propagated, which
    // is important when using controlled components within layers:
    // https://github.com/facebook/react/issues/1698
    ReactUpdates.asap(forceUpdateIfMounted, this);

    var name = this.props.name;
    if (this.props.type === 'radio' && name != null) {
      var rootNode = this.getDOMNode();
      var queryRoot = rootNode;

      while (queryRoot.parentNode) {
        queryRoot = queryRoot.parentNode;
      }

      // If `rootNode.form` was non-null, then we could try `form.elements`,
      // but that sometimes behaves strangely in IE8. We could also try using
      // `form.getElementsByName`, but that will only return direct children
      // and won't include inputs that use the HTML5 `form=` attribute. Since
      // the input might not even be in a form, let's just use the global
      // `querySelectorAll` to ensure we don't miss anything.
      var group = queryRoot.querySelectorAll(
        'input[name=' + JSON.stringify('' + name) + '][type="radio"]');

      for (var i = 0, groupLen = group.length; i < groupLen; i++) {
        var otherNode = group[i];
        if (otherNode === rootNode ||
            otherNode.form !== rootNode.form) {
          continue;
        }
        var otherID = ReactMount.getID(otherNode);
        ("production" !== "development" ? invariant(
          otherID,
          'ReactDOMInput: Mixing React and non-React radio inputs with the ' +
          'same `name` is not supported.'
        ) : invariant(otherID));
        var otherInstance = instancesByReactID[otherID];
        ("production" !== "development" ? invariant(
          otherInstance,
          'ReactDOMInput: Unknown radio button ID %s.',
          otherID
        ) : invariant(otherInstance));
        // If this is a controlled radio button group, forcing the input that
        // was previously checked to update will cause it to be come re-checked
        // as appropriate.
        ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
      }
    }

    return returnValue;
  }

});

module.exports = ReactDOMInput;

},{"./AutoFocusMixin":2,"./DOMPropertyOperations":12,"./LinkedValueUtils":24,"./Object.assign":27,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52,"./ReactMount":63,"./ReactUpdates":79,"./invariant":126}],44:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMOption
 */

"use strict";

var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactElement = _dereq_("./ReactElement");
var ReactDOM = _dereq_("./ReactDOM");

var warning = _dereq_("./warning");

// Store a reference to the <option> `ReactDOMComponent`. TODO: use string
var option = ReactElement.createFactory(ReactDOM.option.type);

/**
 * Implements an <option> native component that warns when `selected` is set.
 */
var ReactDOMOption = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMOption',

  mixins: [ReactBrowserComponentMixin],

  componentWillMount: function() {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if ("production" !== "development") {
      ("production" !== "development" ? warning(
        this.props.selected == null,
        'Use the `defaultValue` or `value` props on <select> instead of ' +
        'setting `selected` on <option>.'
      ) : null);
    }
  },

  render: function() {
    return option(this.props, this.props.children);
  }

});

module.exports = ReactDOMOption;

},{"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52,"./warning":145}],45:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMSelect
 */

"use strict";

var AutoFocusMixin = _dereq_("./AutoFocusMixin");
var LinkedValueUtils = _dereq_("./LinkedValueUtils");
var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactElement = _dereq_("./ReactElement");
var ReactDOM = _dereq_("./ReactDOM");
var ReactUpdates = _dereq_("./ReactUpdates");

var assign = _dereq_("./Object.assign");

// Store a reference to the <select> `ReactDOMComponent`. TODO: use string
var select = ReactElement.createFactory(ReactDOM.select.type);

function updateWithPendingValueIfMounted() {
  /*jshint validthis:true */
  if (this.isMounted()) {
    this.setState({value: this._pendingValue});
    this._pendingValue = 0;
  }
}

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function selectValueType(props, propName, componentName) {
  if (props[propName] == null) {
    return;
  }
  if (props.multiple) {
    if (!Array.isArray(props[propName])) {
      return new Error(
        ("The `" + propName + "` prop supplied to <select> must be an array if ") +
        ("`multiple` is true.")
      );
    }
  } else {
    if (Array.isArray(props[propName])) {
      return new Error(
        ("The `" + propName + "` prop supplied to <select> must be a scalar ") +
        ("value if `multiple` is false.")
      );
    }
  }
}

/**
 * If `value` is supplied, updates <option> elements on mount and update.
 * @param {ReactComponent} component Instance of ReactDOMSelect
 * @param {?*} propValue For uncontrolled components, null/undefined. For
 * controlled components, a string (or with `multiple`, a list of strings).
 * @private
 */
function updateOptions(component, propValue) {
  var multiple = component.props.multiple;
  var value = propValue != null ? propValue : component.state.value;
  var options = component.getDOMNode().options;
  var selectedValue, i, l;
  if (multiple) {
    selectedValue = {};
    for (i = 0, l = value.length; i < l; ++i) {
      selectedValue['' + value[i]] = true;
    }
  } else {
    selectedValue = '' + value;
  }
  for (i = 0, l = options.length; i < l; i++) {
    var selected = multiple ?
      selectedValue.hasOwnProperty(options[i].value) :
      options[i].value === selectedValue;

    if (selected !== options[i].selected) {
      options[i].selected = selected;
    }
  }
}

/**
 * Implements a <select> native component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * string. If `multiple` is true, the prop must be an array of strings.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMSelect',

  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

  propTypes: {
    defaultValue: selectValueType,
    value: selectValueType
  },

  getInitialState: function() {
    return {value: this.props.defaultValue || (this.props.multiple ? [] : '')};
  },

  componentWillMount: function() {
    this._pendingValue = null;
  },

  componentWillReceiveProps: function(nextProps) {
    if (!this.props.multiple && nextProps.multiple) {
      this.setState({value: [this.state.value]});
    } else if (this.props.multiple && !nextProps.multiple) {
      this.setState({value: this.state.value[0]});
    }
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = assign({}, this.props);

    props.onChange = this._handleChange;
    props.value = null;

    return select(props, this.props.children);
  },

  componentDidMount: function() {
    updateOptions(this, LinkedValueUtils.getValue(this));
  },

  componentDidUpdate: function(prevProps) {
    var value = LinkedValueUtils.getValue(this);
    var prevMultiple = !!prevProps.multiple;
    var multiple = !!this.props.multiple;
    if (value != null || prevMultiple !== multiple) {
      updateOptions(this, value);
    }
  },

  _handleChange: function(event) {
    var returnValue;
    var onChange = LinkedValueUtils.getOnChange(this);
    if (onChange) {
      returnValue = onChange.call(this, event);
    }

    var selectedValue;
    if (this.props.multiple) {
      selectedValue = [];
      var options = event.target.options;
      for (var i = 0, l = options.length; i < l; i++) {
        if (options[i].selected) {
          selectedValue.push(options[i].value);
        }
      }
    } else {
      selectedValue = event.target.value;
    }

    this._pendingValue = selectedValue;
    ReactUpdates.asap(updateWithPendingValueIfMounted, this);
    return returnValue;
  }

});

module.exports = ReactDOMSelect;

},{"./AutoFocusMixin":2,"./LinkedValueUtils":24,"./Object.assign":27,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52,"./ReactUpdates":79}],46:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMSelection
 */

"use strict";

var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var getNodeForCharacterOffset = _dereq_("./getNodeForCharacterOffset");
var getTextContentAccessor = _dereq_("./getTextContentAccessor");

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(
    selection.anchorNode,
    selection.anchorOffset,
    selection.focusNode,
    selection.focusOffset
  );

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(
    tempRange.startContainer,
    tempRange.startOffset,
    tempRange.endContainer,
    tempRange.endOffset
  );

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (typeof offsets.end === 'undefined') {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = typeof offsets.end === 'undefined' ?
            start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = ExecutionEnvironment.canUseDOM && document.selection;

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;

},{"./ExecutionEnvironment":22,"./getNodeForCharacterOffset":119,"./getTextContentAccessor":121}],47:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTextarea
 */

"use strict";

var AutoFocusMixin = _dereq_("./AutoFocusMixin");
var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
var LinkedValueUtils = _dereq_("./LinkedValueUtils");
var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactElement = _dereq_("./ReactElement");
var ReactDOM = _dereq_("./ReactDOM");
var ReactUpdates = _dereq_("./ReactUpdates");

var assign = _dereq_("./Object.assign");
var invariant = _dereq_("./invariant");

var warning = _dereq_("./warning");

// Store a reference to the <textarea> `ReactDOMComponent`. TODO: use string
var textarea = ReactElement.createFactory(ReactDOM.textarea.type);

function forceUpdateIfMounted() {
  /*jshint validthis:true */
  if (this.isMounted()) {
    this.forceUpdate();
  }
}

/**
 * Implements a <textarea> native component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMTextarea',

  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

  getInitialState: function() {
    var defaultValue = this.props.defaultValue;
    // TODO (yungsters): Remove support for children content in <textarea>.
    var children = this.props.children;
    if (children != null) {
      if ("production" !== "development") {
        ("production" !== "development" ? warning(
          false,
          'Use the `defaultValue` or `value` props instead of setting ' +
          'children on <textarea>.'
        ) : null);
      }
      ("production" !== "development" ? invariant(
        defaultValue == null,
        'If you supply `defaultValue` on a <textarea>, do not pass children.'
      ) : invariant(defaultValue == null));
      if (Array.isArray(children)) {
        ("production" !== "development" ? invariant(
          children.length <= 1,
          '<textarea> can only have at most one child.'
        ) : invariant(children.length <= 1));
        children = children[0];
      }

      defaultValue = '' + children;
    }
    if (defaultValue == null) {
      defaultValue = '';
    }
    var value = LinkedValueUtils.getValue(this);
    return {
      // We save the initial value so that `ReactDOMComponent` doesn't update
      // `textContent` (unnecessary since we update value).
      // The initial value can be a boolean or object so that's why it's
      // forced to be a string.
      initialValue: '' + (value != null ? value : defaultValue)
    };
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = assign({}, this.props);

    ("production" !== "development" ? invariant(
      props.dangerouslySetInnerHTML == null,
      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
    ) : invariant(props.dangerouslySetInnerHTML == null));

    props.defaultValue = null;
    props.value = null;
    props.onChange = this._handleChange;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.
    return textarea(props, this.state.initialValue);
  },

  componentDidUpdate: function(prevProps, prevState, prevContext) {
    var value = LinkedValueUtils.getValue(this);
    if (value != null) {
      var rootNode = this.getDOMNode();
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
    }
  },

  _handleChange: function(event) {
    var returnValue;
    var onChange = LinkedValueUtils.getOnChange(this);
    if (onChange) {
      returnValue = onChange.call(this, event);
    }
    ReactUpdates.asap(forceUpdateIfMounted, this);
    return returnValue;
  }

});

module.exports = ReactDOMTextarea;

},{"./AutoFocusMixin":2,"./DOMPropertyOperations":12,"./LinkedValueUtils":24,"./Object.assign":27,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52,"./ReactUpdates":79,"./invariant":126,"./warning":145}],48:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultBatchingStrategy
 */

"use strict";

var ReactUpdates = _dereq_("./ReactUpdates");
var Transaction = _dereq_("./Transaction");

var assign = _dereq_("./Object.assign");
var emptyFunction = _dereq_("./emptyFunction");

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function() {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

assign(
  ReactDefaultBatchingStrategyTransaction.prototype,
  Transaction.Mixin,
  {
    getTransactionWrappers: function() {
      return TRANSACTION_WRAPPERS;
    }
  }
);

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function(callback, a, b) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      callback(a, b);
    } else {
      transaction.perform(callback, null, a, b);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;

},{"./Object.assign":27,"./ReactUpdates":79,"./Transaction":95,"./emptyFunction":107}],49:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultInjection
 */

"use strict";

var BeforeInputEventPlugin = _dereq_("./BeforeInputEventPlugin");
var ChangeEventPlugin = _dereq_("./ChangeEventPlugin");
var ClientReactRootIndex = _dereq_("./ClientReactRootIndex");
var CompositionEventPlugin = _dereq_("./CompositionEventPlugin");
var DefaultEventPluginOrder = _dereq_("./DefaultEventPluginOrder");
var EnterLeaveEventPlugin = _dereq_("./EnterLeaveEventPlugin");
var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
var HTMLDOMPropertyConfig = _dereq_("./HTMLDOMPropertyConfig");
var MobileSafariClickEventPlugin = _dereq_("./MobileSafariClickEventPlugin");
var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactComponentBrowserEnvironment =
  _dereq_("./ReactComponentBrowserEnvironment");
var ReactDefaultBatchingStrategy = _dereq_("./ReactDefaultBatchingStrategy");
var ReactDOMComponent = _dereq_("./ReactDOMComponent");
var ReactDOMButton = _dereq_("./ReactDOMButton");
var ReactDOMForm = _dereq_("./ReactDOMForm");
var ReactDOMImg = _dereq_("./ReactDOMImg");
var ReactDOMInput = _dereq_("./ReactDOMInput");
var ReactDOMOption = _dereq_("./ReactDOMOption");
var ReactDOMSelect = _dereq_("./ReactDOMSelect");
var ReactDOMTextarea = _dereq_("./ReactDOMTextarea");
var ReactEventListener = _dereq_("./ReactEventListener");
var ReactInjection = _dereq_("./ReactInjection");
var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
var ReactMount = _dereq_("./ReactMount");
var SelectEventPlugin = _dereq_("./SelectEventPlugin");
var ServerReactRootIndex = _dereq_("./ServerReactRootIndex");
var SimpleEventPlugin = _dereq_("./SimpleEventPlugin");
var SVGDOMPropertyConfig = _dereq_("./SVGDOMPropertyConfig");

var createFullPageComponent = _dereq_("./createFullPageComponent");

function inject() {
  ReactInjection.EventEmitter.injectReactEventListener(
    ReactEventListener
  );

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
  ReactInjection.EventPluginHub.injectMount(ReactMount);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    CompositionEventPlugin: CompositionEventPlugin,
    MobileSafariClickEventPlugin: MobileSafariClickEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.NativeComponent.injectGenericComponentClass(
    ReactDOMComponent
  );

  ReactInjection.NativeComponent.injectComponentClasses({
    'button': ReactDOMButton,
    'form': ReactDOMForm,
    'img': ReactDOMImg,
    'input': ReactDOMInput,
    'option': ReactDOMOption,
    'select': ReactDOMSelect,
    'textarea': ReactDOMTextarea,

    'html': createFullPageComponent('html'),
    'head': createFullPageComponent('head'),
    'body': createFullPageComponent('body')
  });

  // This needs to happen after createFullPageComponent() otherwise the mixin
  // gets double injected.
  ReactInjection.CompositeComponent.injectMixin(ReactBrowserComponentMixin);

  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');

  ReactInjection.Updates.injectReconcileTransaction(
    ReactComponentBrowserEnvironment.ReactReconcileTransaction
  );
  ReactInjection.Updates.injectBatchingStrategy(
    ReactDefaultBatchingStrategy
  );

  ReactInjection.RootIndex.injectCreateReactRootIndex(
    ExecutionEnvironment.canUseDOM ?
      ClientReactRootIndex.createReactRootIndex :
      ServerReactRootIndex.createReactRootIndex
  );

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);

  if ("production" !== "development") {
    var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';
    if ((/[?&]react_perf\b/).test(url)) {
      var ReactDefaultPerf = _dereq_("./ReactDefaultPerf");
      ReactDefaultPerf.start();
    }
  }
}

module.exports = {
  inject: inject
};

},{"./BeforeInputEventPlugin":3,"./ChangeEventPlugin":7,"./ClientReactRootIndex":8,"./CompositionEventPlugin":9,"./DefaultEventPluginOrder":14,"./EnterLeaveEventPlugin":15,"./ExecutionEnvironment":22,"./HTMLDOMPropertyConfig":23,"./MobileSafariClickEventPlugin":26,"./ReactBrowserComponentMixin":29,"./ReactComponentBrowserEnvironment":33,"./ReactDOMButton":38,"./ReactDOMComponent":39,"./ReactDOMForm":40,"./ReactDOMImg":42,"./ReactDOMInput":43,"./ReactDOMOption":44,"./ReactDOMSelect":45,"./ReactDOMTextarea":47,"./ReactDefaultBatchingStrategy":48,"./ReactDefaultPerf":50,"./ReactEventListener":57,"./ReactInjection":58,"./ReactInstanceHandles":60,"./ReactMount":63,"./SVGDOMPropertyConfig":80,"./SelectEventPlugin":81,"./ServerReactRootIndex":82,"./SimpleEventPlugin":83,"./createFullPageComponent":103}],50:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultPerf
 * @typechecks static-only
 */

"use strict";

var DOMProperty = _dereq_("./DOMProperty");
var ReactDefaultPerfAnalysis = _dereq_("./ReactDefaultPerfAnalysis");
var ReactMount = _dereq_("./ReactMount");
var ReactPerf = _dereq_("./ReactPerf");

var performanceNow = _dereq_("./performanceNow");

function roundFloat(val) {
  return Math.floor(val * 100) / 100;
}

function addValue(obj, key, val) {
  obj[key] = (obj[key] || 0) + val;
}

var ReactDefaultPerf = {
  _allMeasurements: [], // last item in the list is the current one
  _mountStack: [0],
  _injected: false,

  start: function() {
    if (!ReactDefaultPerf._injected) {
      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
    }

    ReactDefaultPerf._allMeasurements.length = 0;
    ReactPerf.enableMeasure = true;
  },

  stop: function() {
    ReactPerf.enableMeasure = false;
  },

  getLastMeasurements: function() {
    return ReactDefaultPerf._allMeasurements;
  },

  printExclusive: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
    console.table(summary.map(function(item) {
      return {
        'Component class name': item.componentName,
        'Total inclusive time (ms)': roundFloat(item.inclusive),
        'Exclusive mount time (ms)': roundFloat(item.exclusive),
        'Exclusive render time (ms)': roundFloat(item.render),
        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
        'Render time per instance (ms)': roundFloat(item.render / item.count),
        'Instances': item.count
      };
    }));
    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
    // number.
  },

  printInclusive: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
    console.table(summary.map(function(item) {
      return {
        'Owner > component': item.componentName,
        'Inclusive time (ms)': roundFloat(item.time),
        'Instances': item.count
      };
    }));
    console.log(
      'Total time:',
      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
    );
  },

  getMeasurementsSummaryMap: function(measurements) {
    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(
      measurements,
      true
    );
    return summary.map(function(item) {
      return {
        'Owner > component': item.componentName,
        'Wasted time (ms)': item.time,
        'Instances': item.count
      };
    });
  },

  printWasted: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
    console.log(
      'Total time:',
      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
    );
  },

  printDOM: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
    console.table(summary.map(function(item) {
      var result = {};
      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
      result['type'] = item.type;
      result['args'] = JSON.stringify(item.args);
      return result;
    }));
    console.log(
      'Total time:',
      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
    );
  },

  _recordWrite: function(id, fnName, totalTime, args) {
    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
    var writes =
      ReactDefaultPerf
        ._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1]
        .writes;
    writes[id] = writes[id] || [];
    writes[id].push({
      type: fnName,
      time: totalTime,
      args: args
    });
  },

  measure: function(moduleName, fnName, func) {
    return function() {for (var args=[],$__0=0,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
      var totalTime;
      var rv;
      var start;

      if (fnName === '_renderNewRootComponent' ||
          fnName === 'flushBatchedUpdates') {
        // A "measurement" is a set of metrics recorded for each flush. We want
        // to group the metrics for a given flush together so we can look at the
        // components that rendered and the DOM operations that actually
        // happened to determine the amount of "wasted work" performed.
        ReactDefaultPerf._allMeasurements.push({
          exclusive: {},
          inclusive: {},
          render: {},
          counts: {},
          writes: {},
          displayNames: {},
          totalTime: 0
        });
        start = performanceNow();
        rv = func.apply(this, args);
        ReactDefaultPerf._allMeasurements[
          ReactDefaultPerf._allMeasurements.length - 1
        ].totalTime = performanceNow() - start;
        return rv;
      } else if (moduleName === 'ReactDOMIDOperations' ||
        moduleName === 'ReactComponentBrowserEnvironment') {
        start = performanceNow();
        rv = func.apply(this, args);
        totalTime = performanceNow() - start;

        if (fnName === 'mountImageIntoNode') {
          var mountID = ReactMount.getID(args[1]);
          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
          // special format
          args[0].forEach(function(update) {
            var writeArgs = {};
            if (update.fromIndex !== null) {
              writeArgs.fromIndex = update.fromIndex;
            }
            if (update.toIndex !== null) {
              writeArgs.toIndex = update.toIndex;
            }
            if (update.textContent !== null) {
              writeArgs.textContent = update.textContent;
            }
            if (update.markupIndex !== null) {
              writeArgs.markup = args[1][update.markupIndex];
            }
            ReactDefaultPerf._recordWrite(
              update.parentID,
              update.type,
              totalTime,
              writeArgs
            );
          });
        } else {
          // basic format
          ReactDefaultPerf._recordWrite(
            args[0],
            fnName,
            totalTime,
            Array.prototype.slice.call(args, 1)
          );
        }
        return rv;
      } else if (moduleName === 'ReactCompositeComponent' && (
        fnName === 'mountComponent' ||
        fnName === 'updateComponent' || // TODO: receiveComponent()?
        fnName === '_renderValidatedComponent')) {

        var rootNodeID = fnName === 'mountComponent' ?
          args[0] :
          this._rootNodeID;
        var isRender = fnName === '_renderValidatedComponent';
        var isMount = fnName === 'mountComponent';

        var mountStack = ReactDefaultPerf._mountStack;
        var entry = ReactDefaultPerf._allMeasurements[
          ReactDefaultPerf._allMeasurements.length - 1
        ];

        if (isRender) {
          addValue(entry.counts, rootNodeID, 1);
        } else if (isMount) {
          mountStack.push(0);
        }

        start = performanceNow();
        rv = func.apply(this, args);
        totalTime = performanceNow() - start;

        if (isRender) {
          addValue(entry.render, rootNodeID, totalTime);
        } else if (isMount) {
          var subMountTime = mountStack.pop();
          mountStack[mountStack.length - 1] += totalTime;
          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
          addValue(entry.inclusive, rootNodeID, totalTime);
        } else {
          addValue(entry.inclusive, rootNodeID, totalTime);
        }

        entry.displayNames[rootNodeID] = {
          current: this.constructor.displayName,
          owner: this._owner ? this._owner.constructor.displayName : '<root>'
        };

        return rv;
      } else {
        return func.apply(this, args);
      }
    };
  }
};

module.exports = ReactDefaultPerf;

},{"./DOMProperty":11,"./ReactDefaultPerfAnalysis":51,"./ReactMount":63,"./ReactPerf":68,"./performanceNow":139}],51:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultPerfAnalysis
 */

var assign = _dereq_("./Object.assign");

// Don't try to save users less than 1.2ms (a number I made up)
var DONT_CARE_THRESHOLD = 1.2;
var DOM_OPERATION_TYPES = {
  'mountImageIntoNode': 'set innerHTML',
  INSERT_MARKUP: 'set innerHTML',
  MOVE_EXISTING: 'move',
  REMOVE_NODE: 'remove',
  TEXT_CONTENT: 'set textContent',
  'updatePropertyByID': 'update attribute',
  'deletePropertyByID': 'delete attribute',
  'updateStylesByID': 'update styles',
  'updateInnerHTMLByID': 'set innerHTML',
  'dangerouslyReplaceNodeWithMarkupByID': 'replace'
};

function getTotalTime(measurements) {
  // TODO: return number of DOM ops? could be misleading.
  // TODO: measure dropped frames after reconcile?
  // TODO: log total time of each reconcile and the top-level component
  // class that triggered it.
  var totalTime = 0;
  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    totalTime += measurement.totalTime;
  }
  return totalTime;
}

function getDOMSummary(measurements) {
  var items = [];
  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var id;

    for (id in measurement.writes) {
      measurement.writes[id].forEach(function(write) {
        items.push({
          id: id,
          type: DOM_OPERATION_TYPES[write.type] || write.type,
          args: write.args
        });
      });
    }
  }
  return items;
}

function getExclusiveSummary(measurements) {
  var candidates = {};
  var displayName;

  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var allIDs = assign(
      {},
      measurement.exclusive,
      measurement.inclusive
    );

    for (var id in allIDs) {
      displayName = measurement.displayNames[id].current;

      candidates[displayName] = candidates[displayName] || {
        componentName: displayName,
        inclusive: 0,
        exclusive: 0,
        render: 0,
        count: 0
      };
      if (measurement.render[id]) {
        candidates[displayName].render += measurement.render[id];
      }
      if (measurement.exclusive[id]) {
        candidates[displayName].exclusive += measurement.exclusive[id];
      }
      if (measurement.inclusive[id]) {
        candidates[displayName].inclusive += measurement.inclusive[id];
      }
      if (measurement.counts[id]) {
        candidates[displayName].count += measurement.counts[id];
      }
    }
  }

  // Now make a sorted array with the results.
  var arr = [];
  for (displayName in candidates) {
    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
      arr.push(candidates[displayName]);
    }
  }

  arr.sort(function(a, b) {
    return b.exclusive - a.exclusive;
  });

  return arr;
}

function getInclusiveSummary(measurements, onlyClean) {
  var candidates = {};
  var inclusiveKey;

  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var allIDs = assign(
      {},
      measurement.exclusive,
      measurement.inclusive
    );
    var cleanComponents;

    if (onlyClean) {
      cleanComponents = getUnchangedComponents(measurement);
    }

    for (var id in allIDs) {
      if (onlyClean && !cleanComponents[id]) {
        continue;
      }

      var displayName = measurement.displayNames[id];

      // Inclusive time is not useful for many components without knowing where
      // they are instantiated. So we aggregate inclusive time with both the
      // owner and current displayName as the key.
      inclusiveKey = displayName.owner + ' > ' + displayName.current;

      candidates[inclusiveKey] = candidates[inclusiveKey] || {
        componentName: inclusiveKey,
        time: 0,
        count: 0
      };

      if (measurement.inclusive[id]) {
        candidates[inclusiveKey].time += measurement.inclusive[id];
      }
      if (measurement.counts[id]) {
        candidates[inclusiveKey].count += measurement.counts[id];
      }
    }
  }

  // Now make a sorted array with the results.
  var arr = [];
  for (inclusiveKey in candidates) {
    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
      arr.push(candidates[inclusiveKey]);
    }
  }

  arr.sort(function(a, b) {
    return b.time - a.time;
  });

  return arr;
}

function getUnchangedComponents(measurement) {
  // For a given reconcile, look at which components did not actually
  // render anything to the DOM and return a mapping of their ID to
  // the amount of time it took to render the entire subtree.
  var cleanComponents = {};
  var dirtyLeafIDs = Object.keys(measurement.writes);
  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);

  for (var id in allIDs) {
    var isDirty = false;
    // For each component that rendered, see if a component that triggered
    // a DOM op is in its subtree.
    for (var i = 0; i < dirtyLeafIDs.length; i++) {
      if (dirtyLeafIDs[i].indexOf(id) === 0) {
        isDirty = true;
        break;
      }
    }
    if (!isDirty && measurement.counts[id] > 0) {
      cleanComponents[id] = true;
    }
  }
  return cleanComponents;
}

var ReactDefaultPerfAnalysis = {
  getExclusiveSummary: getExclusiveSummary,
  getInclusiveSummary: getInclusiveSummary,
  getDOMSummary: getDOMSummary,
  getTotalTime: getTotalTime
};

module.exports = ReactDefaultPerfAnalysis;

},{"./Object.assign":27}],52:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactElement
 */

"use strict";

var ReactContext = _dereq_("./ReactContext");
var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");

var warning = _dereq_("./warning");

var RESERVED_PROPS = {
  key: true,
  ref: true
};

/**
 * Warn for mutations.
 *
 * @internal
 * @param {object} object
 * @param {string} key
 */
function defineWarningProperty(object, key) {
  Object.defineProperty(object, key, {

    configurable: false,
    enumerable: true,

    get: function() {
      if (!this._store) {
        return null;
      }
      return this._store[key];
    },

    set: function(value) {
      ("production" !== "development" ? warning(
        false,
        'Don\'t set the ' + key + ' property of the component. ' +
        'Mutate the existing props object instead.'
      ) : null);
      this._store[key] = value;
    }

  });
}

/**
 * This is updated to true if the membrane is successfully created.
 */
var useMutationMembrane = false;

/**
 * Warn for mutations.
 *
 * @internal
 * @param {object} element
 */
function defineMutationMembrane(prototype) {
  try {
    var pseudoFrozenProperties = {
      props: true
    };
    for (var key in pseudoFrozenProperties) {
      defineWarningProperty(prototype, key);
    }
    useMutationMembrane = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

/**
 * Base constructor for all React elements. This is only used to make this
 * work with a dynamic instanceof check. Nothing should live on this prototype.
 *
 * @param {*} type
 * @param {string|object} ref
 * @param {*} key
 * @param {*} props
 * @internal
 */
var ReactElement = function(type, key, ref, owner, context, props) {
  // Built-in properties that belong on the element
  this.type = type;
  this.key = key;
  this.ref = ref;

  // Record the component responsible for creating this element.
  this._owner = owner;

  // TODO: Deprecate withContext, and then the context becomes accessible
  // through the owner.
  this._context = context;

  if ("production" !== "development") {
    // The validation flag and props are currently mutative. We put them on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    this._store = { validated: false, props: props };

    // We're not allowed to set props directly on the object so we early
    // return and rely on the prototype membrane to forward to the backing
    // store.
    if (useMutationMembrane) {
      Object.freeze(this);
      return;
    }
  }

  this.props = props;
};

// We intentionally don't expose the function on the constructor property.
// ReactElement should be indistinguishable from a plain object.
ReactElement.prototype = {
  _isReactElement: true
};

if ("production" !== "development") {
  defineMutationMembrane(ReactElement.prototype);
}

ReactElement.createElement = function(type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;

  if (config != null) {
    ref = config.ref === undefined ? null : config.ref;
    if ("production" !== "development") {
      ("production" !== "development" ? warning(
        config.key !== null,
        'createElement(...): Encountered component with a `key` of null. In ' +
        'a future version, this will be treated as equivalent to the string ' +
        '\'null\'; instead, provide an explicit key or use undefined.'
      ) : null);
    }
    // TODO: Change this back to `config.key === undefined`
    key = config.key == null ? null : '' + config.key;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (config.hasOwnProperty(propName) &&
          !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (typeof props[propName] === 'undefined') {
        props[propName] = defaultProps[propName];
      }
    }
  }

  return new ReactElement(
    type,
    key,
    ref,
    ReactCurrentOwner.current,
    ReactContext.current,
    props
  );
};

ReactElement.createFactory = function(type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. <Foo />.type === Foo.type.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceProps = function(oldElement, newProps) {
  var newElement = new ReactElement(
    oldElement.type,
    oldElement.key,
    oldElement.ref,
    oldElement._owner,
    oldElement._context,
    newProps
  );

  if ("production" !== "development") {
    // If the key on the original is valid, then the clone is valid
    newElement._store.validated = oldElement._store.validated;
  }
  return newElement;
};

/**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function(object) {
  // ReactTestUtils is often used outside of beforeEach where as React is
  // within it. This leads to two different instances of React on the same
  // page. To identify a element from a different React instance we use
  // a flag instead of an instanceof check.
  var isElement = !!(object && object._isReactElement);
  // if (isElement && !(object instanceof ReactElement)) {
  // This is an indicator that you're using multiple versions of React at the
  // same time. This will screw with ownership and stuff. Fix it, please.
  // TODO: We could possibly warn here.
  // }
  return isElement;
};

module.exports = ReactElement;

},{"./ReactContext":35,"./ReactCurrentOwner":36,"./warning":145}],53:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactElementValidator
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

"use strict";

var ReactElement = _dereq_("./ReactElement");
var ReactPropTypeLocations = _dereq_("./ReactPropTypeLocations");
var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");

var monitorCodeUse = _dereq_("./monitorCodeUse");
var warning = _dereq_("./warning");

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {
  'react_key_warning': {},
  'react_numeric_key_warning': {}
};
var ownerHasMonitoredObjectMap = {};

var loggedTypeFailures = {};

var NUMERIC_PROPERTY_REGEX = /^\d+$/;

/**
 * Gets the current owner's displayName for use in warnings.
 *
 * @internal
 * @return {?string} Display name or undefined
 */
function getCurrentOwnerDisplayName() {
  var current = ReactCurrentOwner.current;
  return current && current.constructor.displayName || undefined;
}

/**
 * Warn if the component doesn't have an explicit key assigned to it.
 * This component is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it.
 *
 * @internal
 * @param {ReactComponent} component Component that requires a key.
 * @param {*} parentType component's parent's type.
 */
function validateExplicitKey(component, parentType) {
  if (component._store.validated || component.key != null) {
    return;
  }
  component._store.validated = true;

  warnAndMonitorForKeyUse(
    'react_key_warning',
    'Each child in an array should have a unique "key" prop.',
    component,
    parentType
  );
}

/**
 * Warn if the key is being defined as an object property but has an incorrect
 * value.
 *
 * @internal
 * @param {string} name Property name of the key.
 * @param {ReactComponent} component Component that requires a key.
 * @param {*} parentType component's parent's type.
 */
function validatePropertyKey(name, component, parentType) {
  if (!NUMERIC_PROPERTY_REGEX.test(name)) {
    return;
  }
  warnAndMonitorForKeyUse(
    'react_numeric_key_warning',
    'Child objects should have non-numeric keys so ordering is preserved.',
    component,
    parentType
  );
}

/**
 * Shared warning and monitoring code for the key warnings.
 *
 * @internal
 * @param {string} warningID The id used when logging.
 * @param {string} message The base warning that gets output.
 * @param {ReactComponent} component Component that requires a key.
 * @param {*} parentType component's parent's type.
 */
function warnAndMonitorForKeyUse(warningID, message, component, parentType) {
  var ownerName = getCurrentOwnerDisplayName();
  var parentName = parentType.displayName;

  var useName = ownerName || parentName;
  var memoizer = ownerHasKeyUseWarning[warningID];
  if (memoizer.hasOwnProperty(useName)) {
    return;
  }
  memoizer[useName] = true;

  message += ownerName ?
    (" Check the render method of " + ownerName + ".") :
    (" Check the renderComponent call using <" + parentName + ">.");

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwnerName = null;
  if (component._owner && component._owner !== ReactCurrentOwner.current) {
    // Name of the component that originally created this child.
    childOwnerName = component._owner.constructor.displayName;

    message += (" It was passed a child from " + childOwnerName + ".");
  }

  message += ' See http://fb.me/react-warning-keys for more information.';
  monitorCodeUse(warningID, {
    component: useName,
    componentOwner: childOwnerName
  });
  console.warn(message);
}

/**
 * Log that we're using an object map. We're considering deprecating this
 * feature and replace it with proper Map and ImmutableMap data structures.
 *
 * @internal
 */
function monitorUseOfObjectMap() {
  var currentName = getCurrentOwnerDisplayName() || '';
  if (ownerHasMonitoredObjectMap.hasOwnProperty(currentName)) {
    return;
  }
  ownerHasMonitoredObjectMap[currentName] = true;
  monitorCodeUse('react_object_map_children');
}

/**
 * Ensure that every component either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {*} component Statically passed child of any type.
 * @param {*} parentType component's parent's type.
 * @return {boolean}
 */
function validateChildKeys(component, parentType) {
  if (Array.isArray(component)) {
    for (var i = 0; i < component.length; i++) {
      var child = component[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(component)) {
    // This component was passed in a valid location.
    component._store.validated = true;
  } else if (component && typeof component === 'object') {
    monitorUseOfObjectMap();
    for (var name in component) {
      validatePropertyKey(name, component[name], parentType);
    }
  }
}

/**
 * Assert that the props are valid
 *
 * @param {string} componentName Name of the component for error messages.
 * @param {object} propTypes Map of prop name to a ReactPropType
 * @param {object} props
 * @param {string} location e.g. "prop", "context", "child context"
 * @private
 */
function checkPropTypes(componentName, propTypes, props, location) {
  for (var propName in propTypes) {
    if (propTypes.hasOwnProperty(propName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        error = propTypes[propName](props, propName, componentName, location);
      } catch (ex) {
        error = ex;
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;
        // This will soon use the warning module
        monitorCodeUse(
          'react_failed_descriptor_type_check',
          { message: error.message }
        );
      }
    }
  }
}

var ReactElementValidator = {

  createElement: function(type, props, children) {
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    ("production" !== "development" ? warning(
      type != null,
      'React.createElement: type should not be null or undefined. It should ' +
        'be a string (for DOM elements) or a ReactClass (for composite ' +
        'components).'
    ) : null);

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }

    if (type) {
      var name = type.displayName;
      if (type.propTypes) {
        checkPropTypes(
          name,
          type.propTypes,
          element.props,
          ReactPropTypeLocations.prop
        );
      }
      if (type.contextTypes) {
        checkPropTypes(
          name,
          type.contextTypes,
          element._context,
          ReactPropTypeLocations.context
        );
      }
    }
    return element;
  },

  createFactory: function(type) {
    var validatedFactory = ReactElementValidator.createElement.bind(
      null,
      type
    );
    validatedFactory.type = type;
    return validatedFactory;
  }

};

module.exports = ReactElementValidator;

},{"./ReactCurrentOwner":36,"./ReactElement":52,"./ReactPropTypeLocations":71,"./monitorCodeUse":136,"./warning":145}],54:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEmptyComponent
 */

"use strict";

var ReactElement = _dereq_("./ReactElement");

var invariant = _dereq_("./invariant");

var component;
// This registry keeps track of the React IDs of the components that rendered to
// `null` (in reality a placeholder such as `noscript`)
var nullComponentIdsRegistry = {};

var ReactEmptyComponentInjection = {
  injectEmptyComponent: function(emptyComponent) {
    component = ReactElement.createFactory(emptyComponent);
  }
};

/**
 * @return {ReactComponent} component The injected empty component.
 */
function getEmptyComponent() {
  ("production" !== "development" ? invariant(
    component,
    'Trying to return null from a render, but no null placeholder component ' +
    'was injected.'
  ) : invariant(component));
  return component();
}

/**
 * Mark the component as having rendered to null.
 * @param {string} id Component's `_rootNodeID`.
 */
function registerNullComponentID(id) {
  nullComponentIdsRegistry[id] = true;
}

/**
 * Unmark the component as having rendered to null: it renders to something now.
 * @param {string} id Component's `_rootNodeID`.
 */
function deregisterNullComponentID(id) {
  delete nullComponentIdsRegistry[id];
}

/**
 * @param {string} id Component's `_rootNodeID`.
 * @return {boolean} True if the component is rendered to null.
 */
function isNullComponentID(id) {
  return nullComponentIdsRegistry[id];
}

var ReactEmptyComponent = {
  deregisterNullComponentID: deregisterNullComponentID,
  getEmptyComponent: getEmptyComponent,
  injection: ReactEmptyComponentInjection,
  isNullComponentID: isNullComponentID,
  registerNullComponentID: registerNullComponentID
};

module.exports = ReactEmptyComponent;

},{"./ReactElement":52,"./invariant":126}],55:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactErrorUtils
 * @typechecks
 */

"use strict";

var ReactErrorUtils = {
  /**
   * Creates a guarded version of a function. This is supposed to make debugging
   * of event handlers easier. To aid debugging with the browser's debugger,
   * this currently simply returns the original function.
   *
   * @param {function} func Function to be executed
   * @param {string} name The name of the guard
   * @return {function}
   */
  guard: function(func, name) {
    return func;
  }
};

module.exports = ReactErrorUtils;

},{}],56:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEventEmitterMixin
 */

"use strict";

var EventPluginHub = _dereq_("./EventPluginHub");

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue();
}

var ReactEventEmitterMixin = {

  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {object} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native environment event.
   */
  handleTopLevel: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var events = EventPluginHub.extractEvents(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent
    );

    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;

},{"./EventPluginHub":18}],57:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEventListener
 * @typechecks static-only
 */

"use strict";

var EventListener = _dereq_("./EventListener");
var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
var PooledClass = _dereq_("./PooledClass");
var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
var ReactMount = _dereq_("./ReactMount");
var ReactUpdates = _dereq_("./ReactUpdates");

var assign = _dereq_("./Object.assign");
var getEventTarget = _dereq_("./getEventTarget");
var getUnboundedScrollPosition = _dereq_("./getUnboundedScrollPosition");

/**
 * Finds the parent React component of `node`.
 *
 * @param {*} node
 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
 *                           is not nested.
 */
function findParent(node) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  var nodeID = ReactMount.getID(node);
  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
  var container = ReactMount.findReactContainerForID(rootID);
  var parent = ReactMount.getFirstReactDOM(container);
  return parent;
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function() {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(
  TopLevelCallbackBookKeeping,
  PooledClass.twoArgumentPooler
);

function handleTopLevelImpl(bookKeeping) {
  var topLevelTarget = ReactMount.getFirstReactDOM(
    getEventTarget(bookKeeping.nativeEvent)
  ) || window;

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = topLevelTarget;
  while (ancestor) {
    bookKeeping.ancestors.push(ancestor);
    ancestor = findParent(ancestor);
  }

  for (var i = 0, l = bookKeeping.ancestors.length; i < l; i++) {
    topLevelTarget = bookKeeping.ancestors[i];
    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
    ReactEventListener._handleTopLevel(
      bookKeeping.topLevelType,
      topLevelTarget,
      topLevelTargetID,
      bookKeeping.nativeEvent
    );
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function(handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function(enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function() {
    return ReactEventListener._enabled;
  },


  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} handle Element on which to attach listener.
   * @return {object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
    var element = handle;
    if (!element) {
      return;
    }
    return EventListener.listen(
      element,
      handlerBaseName,
      ReactEventListener.dispatchEvent.bind(null, topLevelType)
    );
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} handle Element on which to attach listener.
   * @return {object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
    var element = handle;
    if (!element) {
      return;
    }
    return EventListener.capture(
      element,
      handlerBaseName,
      ReactEventListener.dispatchEvent.bind(null, topLevelType)
    );
  },

  monitorScrollValue: function(refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
    EventListener.listen(window, 'resize', callback);
  },

  dispatchEvent: function(topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(
      topLevelType,
      nativeEvent
    );
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;

},{"./EventListener":17,"./ExecutionEnvironment":22,"./Object.assign":27,"./PooledClass":28,"./ReactInstanceHandles":60,"./ReactMount":63,"./ReactUpdates":79,"./getEventTarget":117,"./getUnboundedScrollPosition":122}],58:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInjection
 */

"use strict";

var DOMProperty = _dereq_("./DOMProperty");
var EventPluginHub = _dereq_("./EventPluginHub");
var ReactComponent = _dereq_("./ReactComponent");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");
var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
var ReactNativeComponent = _dereq_("./ReactNativeComponent");
var ReactPerf = _dereq_("./ReactPerf");
var ReactRootIndex = _dereq_("./ReactRootIndex");
var ReactUpdates = _dereq_("./ReactUpdates");

var ReactInjection = {
  Component: ReactComponent.injection,
  CompositeComponent: ReactCompositeComponent.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  NativeComponent: ReactNativeComponent.injection,
  Perf: ReactPerf.injection,
  RootIndex: ReactRootIndex.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;

},{"./DOMProperty":11,"./EventPluginHub":18,"./ReactBrowserEventEmitter":30,"./ReactComponent":32,"./ReactCompositeComponent":34,"./ReactEmptyComponent":54,"./ReactNativeComponent":66,"./ReactPerf":68,"./ReactRootIndex":75,"./ReactUpdates":79}],59:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInputSelection
 */

"use strict";

var ReactDOMSelection = _dereq_("./ReactDOMSelection");

var containsNode = _dereq_("./containsNode");
var focusNode = _dereq_("./focusNode");
var getActiveElement = _dereq_("./getActiveElement");

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {

  hasSelectionCapabilities: function(elem) {
    return elem && (
      (elem.nodeName === 'INPUT' && elem.type === 'text') ||
      elem.nodeName === 'TEXTAREA' ||
      elem.contentEditable === 'true'
    );
  },

  getSelectionInformation: function() {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange:
          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?
          ReactInputSelection.getSelection(focusedElem) :
          null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function(priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem &&
        isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(
          priorFocusedElem,
          priorSelectionRange
        );
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function(input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName === 'INPUT') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || {start: 0, end: 0};
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function(input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (typeof end === 'undefined') {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName === 'INPUT') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;

},{"./ReactDOMSelection":46,"./containsNode":101,"./focusNode":111,"./getActiveElement":113}],60:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInstanceHandles
 * @typechecks static-only
 */

"use strict";

var ReactRootIndex = _dereq_("./ReactRootIndex");

var invariant = _dereq_("./invariant");

var SEPARATOR = '.';
var SEPARATOR_LENGTH = SEPARATOR.length;

/**
 * Maximum depth of traversals before we consider the possibility of a bad ID.
 */
var MAX_TREE_DEPTH = 100;

/**
 * Creates a DOM ID prefix to use when mounting React components.
 *
 * @param {number} index A unique integer
 * @return {string} React root ID.
 * @internal
 */
function getReactRootIDString(index) {
  return SEPARATOR + index.toString(36);
}

/**
 * Checks if a character in the supplied ID is a separator or the end.
 *
 * @param {string} id A React DOM ID.
 * @param {number} index Index of the character to check.
 * @return {boolean} True if the character is a separator or end of the ID.
 * @private
 */
function isBoundary(id, index) {
  return id.charAt(index) === SEPARATOR || index === id.length;
}

/**
 * Checks if the supplied string is a valid React DOM ID.
 *
 * @param {string} id A React DOM ID, maybe.
 * @return {boolean} True if the string is a valid React DOM ID.
 * @private
 */
function isValidID(id) {
  return id === '' || (
    id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR
  );
}

/**
 * Checks if the first ID is an ancestor of or equal to the second ID.
 *
 * @param {string} ancestorID
 * @param {string} descendantID
 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
 * @internal
 */
function isAncestorIDOf(ancestorID, descendantID) {
  return (
    descendantID.indexOf(ancestorID) === 0 &&
    isBoundary(descendantID, ancestorID.length)
  );
}

/**
 * Gets the parent ID of the supplied React DOM ID, `id`.
 *
 * @param {string} id ID of a component.
 * @return {string} ID of the parent, or an empty string.
 * @private
 */
function getParentID(id) {
  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
}

/**
 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
 * supplied `destinationID`. If they are equal, the ID is returned.
 *
 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
 * @param {string} destinationID ID of the destination node.
 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
 * @private
 */
function getNextDescendantID(ancestorID, destinationID) {
  ("production" !== "development" ? invariant(
    isValidID(ancestorID) && isValidID(destinationID),
    'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
    ancestorID,
    destinationID
  ) : invariant(isValidID(ancestorID) && isValidID(destinationID)));
  ("production" !== "development" ? invariant(
    isAncestorIDOf(ancestorID, destinationID),
    'getNextDescendantID(...): React has made an invalid assumption about ' +
    'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
    ancestorID,
    destinationID
  ) : invariant(isAncestorIDOf(ancestorID, destinationID)));
  if (ancestorID === destinationID) {
    return ancestorID;
  }
  // Skip over the ancestor and the immediate separator. Traverse until we hit
  // another separator or we reach the end of `destinationID`.
  var start = ancestorID.length + SEPARATOR_LENGTH;
  for (var i = start; i < destinationID.length; i++) {
    if (isBoundary(destinationID, i)) {
      break;
    }
  }
  return destinationID.substr(0, i);
}

/**
 * Gets the nearest common ancestor ID of two IDs.
 *
 * Using this ID scheme, the nearest common ancestor ID is the longest common
 * prefix of the two IDs that immediately preceded a "marker" in both strings.
 *
 * @param {string} oneID
 * @param {string} twoID
 * @return {string} Nearest common ancestor ID, or the empty string if none.
 * @private
 */
function getFirstCommonAncestorID(oneID, twoID) {
  var minLength = Math.min(oneID.length, twoID.length);
  if (minLength === 0) {
    return '';
  }
  var lastCommonMarkerIndex = 0;
  // Use `<=` to traverse until the "EOL" of the shorter string.
  for (var i = 0; i <= minLength; i++) {
    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
      lastCommonMarkerIndex = i;
    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
      break;
    }
  }
  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
  ("production" !== "development" ? invariant(
    isValidID(longestCommonID),
    'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
    oneID,
    twoID,
    longestCommonID
  ) : invariant(isValidID(longestCommonID)));
  return longestCommonID;
}

/**
 * Traverses the parent path between two IDs (either up or down). The IDs must
 * not be the same, and there must exist a parent path between them. If the
 * callback returns `false`, traversal is stopped.
 *
 * @param {?string} start ID at which to start traversal.
 * @param {?string} stop ID at which to end traversal.
 * @param {function} cb Callback to invoke each ID with.
 * @param {?boolean} skipFirst Whether or not to skip the first node.
 * @param {?boolean} skipLast Whether or not to skip the last node.
 * @private
 */
function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
  start = start || '';
  stop = stop || '';
  ("production" !== "development" ? invariant(
    start !== stop,
    'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
    start
  ) : invariant(start !== stop));
  var traverseUp = isAncestorIDOf(stop, start);
  ("production" !== "development" ? invariant(
    traverseUp || isAncestorIDOf(start, stop),
    'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' +
    'not have a parent path.',
    start,
    stop
  ) : invariant(traverseUp || isAncestorIDOf(start, stop)));
  // Traverse from `start` to `stop` one depth at a time.
  var depth = 0;
  var traverse = traverseUp ? getParentID : getNextDescendantID;
  for (var id = start; /* until break */; id = traverse(id, stop)) {
    var ret;
    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
      ret = cb(id, traverseUp, arg);
    }
    if (ret === false || id === stop) {
      // Only break //after// visiting `stop`.
      break;
    }
    ("production" !== "development" ? invariant(
      depth++ < MAX_TREE_DEPTH,
      'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' +
      'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
      start, stop
    ) : invariant(depth++ < MAX_TREE_DEPTH));
  }
}

/**
 * Manages the IDs assigned to DOM representations of React components. This
 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
 * order to simulate events).
 *
 * @internal
 */
var ReactInstanceHandles = {

  /**
   * Constructs a React root ID
   * @return {string} A React root ID.
   */
  createReactRootID: function() {
    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
  },

  /**
   * Constructs a React ID by joining a root ID with a name.
   *
   * @param {string} rootID Root ID of a parent component.
   * @param {string} name A component's name (as flattened children).
   * @return {string} A React ID.
   * @internal
   */
  createReactID: function(rootID, name) {
    return rootID + name;
  },

  /**
   * Gets the DOM ID of the React component that is the root of the tree that
   * contains the React component with the supplied DOM ID.
   *
   * @param {string} id DOM ID of a React component.
   * @return {?string} DOM ID of the React component that is the root.
   * @internal
   */
  getReactRootIDFromNodeID: function(id) {
    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
      var index = id.indexOf(SEPARATOR, 1);
      return index > -1 ? id.substr(0, index) : id;
    }
    return null;
  },

  /**
   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
   * should would receive a `mouseEnter` or `mouseLeave` event.
   *
   * NOTE: Does not invoke the callback on the nearest common ancestor because
   * nothing "entered" or "left" that element.
   *
   * @param {string} leaveID ID being left.
   * @param {string} enterID ID being entered.
   * @param {function} cb Callback to invoke on each entered/left ID.
   * @param {*} upArg Argument to invoke the callback with on left IDs.
   * @param {*} downArg Argument to invoke the callback with on entered IDs.
   * @internal
   */
  traverseEnterLeave: function(leaveID, enterID, cb, upArg, downArg) {
    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
    if (ancestorID !== leaveID) {
      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
    }
    if (ancestorID !== enterID) {
      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
    }
  },

  /**
   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
   *
   * NOTE: This traversal happens on IDs without touching the DOM.
   *
   * @param {string} targetID ID of the target node.
   * @param {function} cb Callback to invoke.
   * @param {*} arg Argument to invoke the callback with.
   * @internal
   */
  traverseTwoPhase: function(targetID, cb, arg) {
    if (targetID) {
      traverseParentPath('', targetID, cb, arg, true, false);
      traverseParentPath(targetID, '', cb, arg, false, true);
    }
  },

  /**
   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
   * example, passing `.0.$row-0.1` would result in `cb` getting called
   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
   *
   * NOTE: This traversal happens on IDs without touching the DOM.
   *
   * @param {string} targetID ID of the target node.
   * @param {function} cb Callback to invoke.
   * @param {*} arg Argument to invoke the callback with.
   * @internal
   */
  traverseAncestors: function(targetID, cb, arg) {
    traverseParentPath('', targetID, cb, arg, true, false);
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _getFirstCommonAncestorID: getFirstCommonAncestorID,

  /**
   * Exposed for unit testing.
   * @private
   */
  _getNextDescendantID: getNextDescendantID,

  isAncestorIDOf: isAncestorIDOf,

  SEPARATOR: SEPARATOR

};

module.exports = ReactInstanceHandles;

},{"./ReactRootIndex":75,"./invariant":126}],61:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactLegacyElement
 */

"use strict";

var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");

var invariant = _dereq_("./invariant");
var monitorCodeUse = _dereq_("./monitorCodeUse");
var warning = _dereq_("./warning");

var legacyFactoryLogs = {};
function warnForLegacyFactoryCall() {
  if (!ReactLegacyElementFactory._isLegacyCallWarningEnabled) {
    return;
  }
  var owner = ReactCurrentOwner.current;
  var name = owner && owner.constructor ? owner.constructor.displayName : '';
  if (!name) {
    name = 'Something';
  }
  if (legacyFactoryLogs.hasOwnProperty(name)) {
    return;
  }
  legacyFactoryLogs[name] = true;
  ("production" !== "development" ? warning(
    false,
    name + ' is calling a React component directly. ' +
    'Use a factory or JSX instead. See: http://fb.me/react-legacyfactory'
  ) : null);
  monitorCodeUse('react_legacy_factory_call', { version: 3, name: name });
}

function warnForPlainFunctionType(type) {
  var isReactClass =
    type.prototype &&
    typeof type.prototype.mountComponent === 'function' &&
    typeof type.prototype.receiveComponent === 'function';
  if (isReactClass) {
    ("production" !== "development" ? warning(
      false,
      'Did not expect to get a React class here. Use `Component` instead ' +
      'of `Component.type` or `this.constructor`.'
    ) : null);
  } else {
    if (!type._reactWarnedForThisType) {
      try {
        type._reactWarnedForThisType = true;
      } catch (x) {
        // just incase this is a frozen object or some special object
      }
      monitorCodeUse(
        'react_non_component_in_jsx',
        { version: 3, name: type.name }
      );
    }
    ("production" !== "development" ? warning(
      false,
      'This JSX uses a plain function. Only React components are ' +
      'valid in React\'s JSX transform.'
    ) : null);
  }
}

function warnForNonLegacyFactory(type) {
  ("production" !== "development" ? warning(
    false,
    'Do not pass React.DOM.' + type.type + ' to JSX or createFactory. ' +
    'Use the string "' + type.type + '" instead.'
  ) : null);
}

/**
 * Transfer static properties from the source to the target. Functions are
 * rebound to have this reflect the original source.
 */
function proxyStaticMethods(target, source) {
  if (typeof source !== 'function') {
    return;
  }
  for (var key in source) {
    if (source.hasOwnProperty(key)) {
      var value = source[key];
      if (typeof value === 'function') {
        var bound = value.bind(source);
        // Copy any properties defined on the function, such as `isRequired` on
        // a PropTypes validator.
        for (var k in value) {
          if (value.hasOwnProperty(k)) {
            bound[k] = value[k];
          }
        }
        target[key] = bound;
      } else {
        target[key] = value;
      }
    }
  }
}

// We use an object instead of a boolean because booleans are ignored by our
// mocking libraries when these factories gets mocked.
var LEGACY_MARKER = {};
var NON_LEGACY_MARKER = {};

var ReactLegacyElementFactory = {};

ReactLegacyElementFactory.wrapCreateFactory = function(createFactory) {
  var legacyCreateFactory = function(type) {
    if (typeof type !== 'function') {
      // Non-function types cannot be legacy factories
      return createFactory(type);
    }

    if (type.isReactNonLegacyFactory) {
      // This is probably a factory created by ReactDOM we unwrap it to get to
      // the underlying string type. It shouldn't have been passed here so we
      // warn.
      if ("production" !== "development") {
        warnForNonLegacyFactory(type);
      }
      return createFactory(type.type);
    }

    if (type.isReactLegacyFactory) {
      // This is probably a legacy factory created by ReactCompositeComponent.
      // We unwrap it to get to the underlying class.
      return createFactory(type.type);
    }

    if ("production" !== "development") {
      warnForPlainFunctionType(type);
    }

    // Unless it's a legacy factory, then this is probably a plain function,
    // that is expecting to be invoked by JSX. We can just return it as is.
    return type;
  };
  return legacyCreateFactory;
};

ReactLegacyElementFactory.wrapCreateElement = function(createElement) {
  var legacyCreateElement = function(type, props, children) {
    if (typeof type !== 'function') {
      // Non-function types cannot be legacy factories
      return createElement.apply(this, arguments);
    }

    var args;

    if (type.isReactNonLegacyFactory) {
      // This is probably a factory created by ReactDOM we unwrap it to get to
      // the underlying string type. It shouldn't have been passed here so we
      // warn.
      if ("production" !== "development") {
        warnForNonLegacyFactory(type);
      }
      args = Array.prototype.slice.call(arguments, 0);
      args[0] = type.type;
      return createElement.apply(this, args);
    }

    if (type.isReactLegacyFactory) {
      // This is probably a legacy factory created by ReactCompositeComponent.
      // We unwrap it to get to the underlying class.
      if (type._isMockFunction) {
        // If this is a mock function, people will expect it to be called. We
        // will actually call the original mock factory function instead. This
        // future proofs unit testing that assume that these are classes.
        type.type._mockedReactClassConstructor = type;
      }
      args = Array.prototype.slice.call(arguments, 0);
      args[0] = type.type;
      return createElement.apply(this, args);
    }

    if ("production" !== "development") {
      warnForPlainFunctionType(type);
    }

    // This is being called with a plain function we should invoke it
    // immediately as if this was used with legacy JSX.
    return type.apply(null, Array.prototype.slice.call(arguments, 1));
  };
  return legacyCreateElement;
};

ReactLegacyElementFactory.wrapFactory = function(factory) {
  ("production" !== "development" ? invariant(
    typeof factory === 'function',
    'This is suppose to accept a element factory'
  ) : invariant(typeof factory === 'function'));
  var legacyElementFactory = function(config, children) {
    // This factory should not be called when JSX is used. Use JSX instead.
    if ("production" !== "development") {
      warnForLegacyFactoryCall();
    }
    return factory.apply(this, arguments);
  };
  proxyStaticMethods(legacyElementFactory, factory.type);
  legacyElementFactory.isReactLegacyFactory = LEGACY_MARKER;
  legacyElementFactory.type = factory.type;
  return legacyElementFactory;
};

// This is used to mark a factory that will remain. E.g. we're allowed to call
// it as a function. However, you're not suppose to pass it to createElement
// or createFactory, so it will warn you if you do.
ReactLegacyElementFactory.markNonLegacyFactory = function(factory) {
  factory.isReactNonLegacyFactory = NON_LEGACY_MARKER;
  return factory;
};

// Checks if a factory function is actually a legacy factory pretending to
// be a class.
ReactLegacyElementFactory.isValidFactory = function(factory) {
  // TODO: This will be removed and moved into a class validator or something.
  return typeof factory === 'function' &&
    factory.isReactLegacyFactory === LEGACY_MARKER;
};

ReactLegacyElementFactory.isValidClass = function(factory) {
  if ("production" !== "development") {
    ("production" !== "development" ? warning(
      false,
      'isValidClass is deprecated and will be removed in a future release. ' +
      'Use a more specific validator instead.'
    ) : null);
  }
  return ReactLegacyElementFactory.isValidFactory(factory);
};

ReactLegacyElementFactory._isLegacyCallWarningEnabled = true;

module.exports = ReactLegacyElementFactory;

},{"./ReactCurrentOwner":36,"./invariant":126,"./monitorCodeUse":136,"./warning":145}],62:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMarkupChecksum
 */

"use strict";

var adler32 = _dereq_("./adler32");

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function(markup) {
    var checksum = adler32(markup);
    return markup.replace(
      '>',
      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">'
    );
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function(markup, element) {
    var existingChecksum = element.getAttribute(
      ReactMarkupChecksum.CHECKSUM_ATTR_NAME
    );
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;

},{"./adler32":98}],63:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMount
 */

"use strict";

var DOMProperty = _dereq_("./DOMProperty");
var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
var ReactElement = _dereq_("./ReactElement");
var ReactLegacyElement = _dereq_("./ReactLegacyElement");
var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
var ReactPerf = _dereq_("./ReactPerf");

var containsNode = _dereq_("./containsNode");
var deprecated = _dereq_("./deprecated");
var getReactRootElementInContainer = _dereq_("./getReactRootElementInContainer");
var instantiateReactComponent = _dereq_("./instantiateReactComponent");
var invariant = _dereq_("./invariant");
var shouldUpdateReactComponent = _dereq_("./shouldUpdateReactComponent");
var warning = _dereq_("./warning");

var createElement = ReactLegacyElement.wrapCreateElement(
  ReactElement.createElement
);

var SEPARATOR = ReactInstanceHandles.SEPARATOR;

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var nodeCache = {};

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;

/** Mapping from reactRootID to React component instance. */
var instancesByReactRootID = {};

/** Mapping from reactRootID to `container` nodes. */
var containersByReactRootID = {};

if ("production" !== "development") {
  /** __DEV__-only mapping from reactRootID to root elements. */
  var rootElementsByReactRootID = {};
}

// Used to store breadth-first search state in findComponentRoot.
var findComponentRootReusableArray = [];

/**
 * @param {DOMElement} container DOM element that may contain a React component.
 * @return {?string} A "reactRoot" ID, if a React component is rendered.
 */
function getReactRootID(container) {
  var rootElement = getReactRootElementInContainer(container);
  return rootElement && ReactMount.getID(rootElement);
}

/**
 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
 * element can return its control whose name or ID equals ATTR_NAME. All
 * DOM nodes support `getAttributeNode` but this can also get called on
 * other objects so just return '' if we're given something other than a
 * DOM node (such as window).
 *
 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
 * @return {string} ID of the supplied `domNode`.
 */
function getID(node) {
  var id = internalGetID(node);
  if (id) {
    if (nodeCache.hasOwnProperty(id)) {
      var cached = nodeCache[id];
      if (cached !== node) {
        ("production" !== "development" ? invariant(
          !isValid(cached, id),
          'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
          ATTR_NAME, id
        ) : invariant(!isValid(cached, id)));

        nodeCache[id] = node;
      }
    } else {
      nodeCache[id] = node;
    }
  }

  return id;
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Sets the React-specific ID of the given node.
 *
 * @param {DOMElement} node The DOM node whose ID will be set.
 * @param {string} id The value of the ID attribute.
 */
function setID(node, id) {
  var oldID = internalGetID(node);
  if (oldID !== id) {
    delete nodeCache[oldID];
  }
  node.setAttribute(ATTR_NAME, id);
  nodeCache[id] = node;
}

/**
 * Finds the node with the supplied React-generated DOM ID.
 *
 * @param {string} id A React-generated DOM ID.
 * @return {DOMElement} DOM node with the suppled `id`.
 * @internal
 */
function getNode(id) {
  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
    nodeCache[id] = ReactMount.findReactNodeByID(id);
  }
  return nodeCache[id];
}

/**
 * A node is "valid" if it is contained by a currently mounted container.
 *
 * This means that the node does not have to be contained by a document in
 * order to be considered valid.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @param {string} id The expected ID of the node.
 * @return {boolean} Whether the node is contained by a mounted container.
 */
function isValid(node, id) {
  if (node) {
    ("production" !== "development" ? invariant(
      internalGetID(node) === id,
      'ReactMount: Unexpected modification of `%s`',
      ATTR_NAME
    ) : invariant(internalGetID(node) === id));

    var container = ReactMount.findReactContainerForID(id);
    if (container && containsNode(container, node)) {
      return true;
    }
  }

  return false;
}

/**
 * Causes the cache to forget about one React-specific ID.
 *
 * @param {string} id The ID to forget.
 */
function purgeID(id) {
  delete nodeCache[id];
}

var deepestNodeSoFar = null;
function findDeepestCachedAncestorImpl(ancestorID) {
  var ancestor = nodeCache[ancestorID];
  if (ancestor && isValid(ancestor, ancestorID)) {
    deepestNodeSoFar = ancestor;
  } else {
    // This node isn't populated in the cache, so presumably none of its
    // descendants are. Break out of the loop.
    return false;
  }
}

/**
 * Return the deepest cached node whose ID is a prefix of `targetID`.
 */
function findDeepestCachedAncestor(targetID) {
  deepestNodeSoFar = null;
  ReactInstanceHandles.traverseAncestors(
    targetID,
    findDeepestCachedAncestorImpl
  );

  var foundNode = deepestNodeSoFar;
  deepestNodeSoFar = null;
  return foundNode;
}

/**
 * Mounting is the process of initializing a React component by creatings its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {
  /** Exposed for debugging purposes **/
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function(container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactComponent} nextComponent component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function(
      prevComponent,
      nextComponent,
      container,
      callback) {
    var nextProps = nextComponent.props;
    ReactMount.scrollMonitor(container, function() {
      prevComponent.replaceProps(nextProps, callback);
    });

    if ("production" !== "development") {
      // Record the root element in case it later gets transplanted.
      rootElementsByReactRootID[getReactRootID(container)] =
        getReactRootElementInContainer(container);
    }

    return prevComponent;
  },

  /**
   * Register a component into the instance map and starts scroll value
   * monitoring
   * @param {ReactComponent} nextComponent component instance to render
   * @param {DOMElement} container container to render into
   * @return {string} reactRoot ID prefix
   */
  _registerComponent: function(nextComponent, container) {
    ("production" !== "development" ? invariant(
      container && (
        container.nodeType === ELEMENT_NODE_TYPE ||
        container.nodeType === DOC_NODE_TYPE
      ),
      '_registerComponent(...): Target container is not a DOM element.'
    ) : invariant(container && (
      container.nodeType === ELEMENT_NODE_TYPE ||
      container.nodeType === DOC_NODE_TYPE
    )));

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();

    var reactRootID = ReactMount.registerContainer(container);
    instancesByReactRootID[reactRootID] = nextComponent;
    return reactRootID;
  },

  /**
   * Render a new component into the DOM.
   * @param {ReactComponent} nextComponent component instance to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: ReactPerf.measure(
    'ReactMount',
    '_renderNewRootComponent',
    function(
        nextComponent,
        container,
        shouldReuseMarkup) {
      // Various parts of our code (such as ReactCompositeComponent's
      // _renderValidatedComponent) assume that calls to render aren't nested;
      // verify that that's the case.
      ("production" !== "development" ? warning(
        ReactCurrentOwner.current == null,
        '_renderNewRootComponent(): Render methods should be a pure function ' +
        'of props and state; triggering nested component updates from ' +
        'render is not allowed. If necessary, trigger nested updates in ' +
        'componentDidUpdate.'
      ) : null);

      var componentInstance = instantiateReactComponent(nextComponent, null);
      var reactRootID = ReactMount._registerComponent(
        componentInstance,
        container
      );
      componentInstance.mountComponentIntoNode(
        reactRootID,
        container,
        shouldReuseMarkup
      );

      if ("production" !== "development") {
        // Record the root element in case it later gets transplanted.
        rootElementsByReactRootID[reactRootID] =
          getReactRootElementInContainer(container);
      }

      return componentInstance;
    }
  ),

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function(nextElement, container, callback) {
    ("production" !== "development" ? invariant(
      ReactElement.isValidElement(nextElement),
      'renderComponent(): Invalid component element.%s',
      (
        typeof nextElement === 'string' ?
          ' Instead of passing an element string, make sure to instantiate ' +
          'it by passing it to React.createElement.' :
        ReactLegacyElement.isValidFactory(nextElement) ?
          ' Instead of passing a component class, make sure to instantiate ' +
          'it by passing it to React.createElement.' :
        // Check if it quacks like a element
        typeof nextElement.props !== "undefined" ?
          ' This may be caused by unintentionally loading two independent ' +
          'copies of React.' :
          ''
      )
    ) : invariant(ReactElement.isValidElement(nextElement)));

    var prevComponent = instancesByReactRootID[getReactRootID(container)];

    if (prevComponent) {
      var prevElement = prevComponent._currentElement;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        return ReactMount._updateRootComponent(
          prevComponent,
          nextElement,
          container,
          callback
        );
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup =
      reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent;

    var component = ReactMount._renderNewRootComponent(
      nextElement,
      container,
      shouldReuseMarkup
    );
    callback && callback.call(component);
    return component;
  },

  /**
   * Constructs a component instance of `constructor` with `initialProps` and
   * renders it into the supplied `container`.
   *
   * @param {function} constructor React component constructor.
   * @param {?object} props Initial props of the component instance.
   * @param {DOMElement} container DOM element to render into.
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  constructAndRenderComponent: function(constructor, props, container) {
    var element = createElement(constructor, props);
    return ReactMount.render(element, container);
  },

  /**
   * Constructs a component instance of `constructor` with `initialProps` and
   * renders it into a container node identified by supplied `id`.
   *
   * @param {function} componentConstructor React component constructor
   * @param {?object} props Initial props of the component instance.
   * @param {string} id ID of the DOM element to render into.
   * @return {ReactComponent} Component instance rendered in the container node.
   */
  constructAndRenderComponentByID: function(constructor, props, id) {
    var domNode = document.getElementById(id);
    ("production" !== "development" ? invariant(
      domNode,
      'Tried to get element with id of "%s" but it is not present on the page.',
      id
    ) : invariant(domNode));
    return ReactMount.constructAndRenderComponent(constructor, props, domNode);
  },

  /**
   * Registers a container node into which React components will be rendered.
   * This also creates the "reactRoot" ID that will be assigned to the element
   * rendered within.
   *
   * @param {DOMElement} container DOM element to register as a container.
   * @return {string} The "reactRoot" ID of elements rendered within.
   */
  registerContainer: function(container) {
    var reactRootID = getReactRootID(container);
    if (reactRootID) {
      // If one exists, make sure it is a valid "reactRoot" ID.
      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
    }
    if (!reactRootID) {
      // No valid "reactRoot" ID found, create one.
      reactRootID = ReactInstanceHandles.createReactRootID();
    }
    containersByReactRootID[reactRootID] = container;
    return reactRootID;
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function(container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
    ("production" !== "development" ? warning(
      ReactCurrentOwner.current == null,
      'unmountComponentAtNode(): Render methods should be a pure function of ' +
      'props and state; triggering nested component updates from render is ' +
      'not allowed. If necessary, trigger nested updates in ' +
      'componentDidUpdate.'
    ) : null);

    var reactRootID = getReactRootID(container);
    var component = instancesByReactRootID[reactRootID];
    if (!component) {
      return false;
    }
    ReactMount.unmountComponentFromNode(component, container);
    delete instancesByReactRootID[reactRootID];
    delete containersByReactRootID[reactRootID];
    if ("production" !== "development") {
      delete rootElementsByReactRootID[reactRootID];
    }
    return true;
  },

  /**
   * Unmounts a component and removes it from the DOM.
   *
   * @param {ReactComponent} instance React component instance.
   * @param {DOMElement} container DOM element to unmount from.
   * @final
   * @internal
   * @see {ReactMount.unmountComponentAtNode}
   */
  unmountComponentFromNode: function(instance, container) {
    instance.unmountComponent();

    if (container.nodeType === DOC_NODE_TYPE) {
      container = container.documentElement;
    }

    // http://jsperf.com/emptying-a-node
    while (container.lastChild) {
      container.removeChild(container.lastChild);
    }
  },

  /**
   * Finds the container DOM element that contains React component to which the
   * supplied DOM `id` belongs.
   *
   * @param {string} id The ID of an element rendered by a React component.
   * @return {?DOMElement} DOM element that contains the `id`.
   */
  findReactContainerForID: function(id) {
    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
    var container = containersByReactRootID[reactRootID];

    if ("production" !== "development") {
      var rootElement = rootElementsByReactRootID[reactRootID];
      if (rootElement && rootElement.parentNode !== container) {
        ("production" !== "development" ? invariant(
          // Call internalGetID here because getID calls isValid which calls
          // findReactContainerForID (this function).
          internalGetID(rootElement) === reactRootID,
          'ReactMount: Root element ID differed from reactRootID.'
        ) : invariant(// Call internalGetID here because getID calls isValid which calls
        // findReactContainerForID (this function).
        internalGetID(rootElement) === reactRootID));

        var containerChild = container.firstChild;
        if (containerChild &&
            reactRootID === internalGetID(containerChild)) {
          // If the container has a new child with the same ID as the old
          // root element, then rootElementsByReactRootID[reactRootID] is
          // just stale and needs to be updated. The case that deserves a
          // warning is when the container is empty.
          rootElementsByReactRootID[reactRootID] = containerChild;
        } else {
          console.warn(
            'ReactMount: Root element has been removed from its original ' +
            'container. New container:', rootElement.parentNode
          );
        }
      }
    }

    return container;
  },

  /**
   * Finds an element rendered by React with the supplied ID.
   *
   * @param {string} id ID of a DOM node in the React component.
   * @return {DOMElement} Root DOM node of the React component.
   */
  findReactNodeByID: function(id) {
    var reactRoot = ReactMount.findReactContainerForID(id);
    return ReactMount.findComponentRoot(reactRoot, id);
  },

  /**
   * True if the supplied `node` is rendered by React.
   *
   * @param {*} node DOM Element to check.
   * @return {boolean} True if the DOM Element appears to be rendered by React.
   * @internal
   */
  isRenderedByReact: function(node) {
    if (node.nodeType !== 1) {
      // Not a DOMElement, therefore not a React component
      return false;
    }
    var id = ReactMount.getID(node);
    return id ? id.charAt(0) === SEPARATOR : false;
  },

  /**
   * Traverses up the ancestors of the supplied node to find a node that is a
   * DOM representation of a React component.
   *
   * @param {*} node
   * @return {?DOMEventTarget}
   * @internal
   */
  getFirstReactDOM: function(node) {
    var current = node;
    while (current && current.parentNode !== current) {
      if (ReactMount.isRenderedByReact(current)) {
        return current;
      }
      current = current.parentNode;
    }
    return null;
  },

  /**
   * Finds a node with the supplied `targetID` inside of the supplied
   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
   * quickly.
   *
   * @param {DOMEventTarget} ancestorNode Search from this root.
   * @pararm {string} targetID ID of the DOM representation of the component.
   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
   * @internal
   */
  findComponentRoot: function(ancestorNode, targetID) {
    var firstChildren = findComponentRootReusableArray;
    var childIndex = 0;

    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;

    firstChildren[0] = deepestAncestor.firstChild;
    firstChildren.length = 1;

    while (childIndex < firstChildren.length) {
      var child = firstChildren[childIndex++];
      var targetChild;

      while (child) {
        var childID = ReactMount.getID(child);
        if (childID) {
          // Even if we find the node we're looking for, we finish looping
          // through its siblings to ensure they're cached so that we don't have
          // to revisit this node again. Otherwise, we make n^2 calls to getID
          // when visiting the many children of a single node in order.

          if (targetID === childID) {
            targetChild = child;
          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
            // If we find a child whose ID is an ancestor of the given ID,
            // then we can be sure that we only want to search the subtree
            // rooted at this child, so we can throw out the rest of the
            // search state.
            firstChildren.length = childIndex = 0;
            firstChildren.push(child.firstChild);
          }

        } else {
          // If this child had no ID, then there's a chance that it was
          // injected automatically by the browser, as when a `<table>`
          // element sprouts an extra `<tbody>` child as a side effect of
          // `.innerHTML` parsing. Optimistically continue down this
          // branch, but not before examining the other siblings.
          firstChildren.push(child.firstChild);
        }

        child = child.nextSibling;
      }

      if (targetChild) {
        // Emptying firstChildren/findComponentRootReusableArray is
        // not necessary for correctness, but it helps the GC reclaim
        // any nodes that were left at the end of the search.
        firstChildren.length = 0;

        return targetChild;
      }
    }

    firstChildren.length = 0;

    ("production" !== "development" ? invariant(
      false,
      'findComponentRoot(..., %s): Unable to find element. This probably ' +
      'means the DOM was unexpectedly mutated (e.g., by the browser), ' +
      'usually due to forgetting a <tbody> when using tables, nesting tags ' +
      'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' +
      'parent. ' +
      'Try inspecting the child nodes of the element with React ID `%s`.',
      targetID,
      ReactMount.getID(ancestorNode)
    ) : invariant(false));
  },


  /**
   * React ID utilities.
   */

  getReactRootID: getReactRootID,

  getID: getID,

  setID: setID,

  getNode: getNode,

  purgeID: purgeID
};

// Deprecations (remove for 0.13)
ReactMount.renderComponent = deprecated(
  'ReactMount',
  'renderComponent',
  'render',
  this,
  ReactMount.render
);

module.exports = ReactMount;

},{"./DOMProperty":11,"./ReactBrowserEventEmitter":30,"./ReactCurrentOwner":36,"./ReactElement":52,"./ReactInstanceHandles":60,"./ReactLegacyElement":61,"./ReactPerf":68,"./containsNode":101,"./deprecated":106,"./getReactRootElementInContainer":120,"./instantiateReactComponent":125,"./invariant":126,"./shouldUpdateReactComponent":142,"./warning":145}],64:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMultiChild
 * @typechecks static-only
 */

"use strict";

var ReactComponent = _dereq_("./ReactComponent");
var ReactMultiChildUpdateTypes = _dereq_("./ReactMultiChildUpdateTypes");

var flattenChildren = _dereq_("./flattenChildren");
var instantiateReactComponent = _dereq_("./instantiateReactComponent");
var shouldUpdateReactComponent = _dereq_("./shouldUpdateReactComponent");

/**
 * Updating children of a component may trigger recursive updates. The depth is
 * used to batch recursive updates to render markup more efficiently.
 *
 * @type {number}
 * @private
 */
var updateDepth = 0;

/**
 * Queue of update configuration objects.
 *
 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
 *
 * @type {array<object>}
 * @private
 */
var updateQueue = [];

/**
 * Queue of markup to be rendered.
 *
 * @type {array<string>}
 * @private
 */
var markupQueue = [];

/**
 * Enqueues markup to be rendered and inserted at a supplied index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function enqueueMarkup(parentID, markup, toIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
    markupIndex: markupQueue.push(markup) - 1,
    textContent: null,
    fromIndex: null,
    toIndex: toIndex
  });
}

/**
 * Enqueues moving an existing element to another index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function enqueueMove(parentID, fromIndex, toIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
    markupIndex: null,
    textContent: null,
    fromIndex: fromIndex,
    toIndex: toIndex
  });
}

/**
 * Enqueues removing an element at an index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function enqueueRemove(parentID, fromIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
    markupIndex: null,
    textContent: null,
    fromIndex: fromIndex,
    toIndex: null
  });
}

/**
 * Enqueues setting the text content.
 *
 * @param {string} parentID ID of the parent component.
 * @param {string} textContent Text content to set.
 * @private
 */
function enqueueTextContent(parentID, textContent) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
    markupIndex: null,
    textContent: textContent,
    fromIndex: null,
    toIndex: null
  });
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue() {
  if (updateQueue.length) {
    ReactComponent.BackendIDOperations.dangerouslyProcessChildrenUpdates(
      updateQueue,
      markupQueue
    );
    clearQueue();
  }
}

/**
 * Clears any enqueued updates.
 *
 * @private
 */
function clearQueue() {
  updateQueue.length = 0;
  markupQueue.length = 0;
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {

  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function(nestedChildren, transaction) {
      var children = flattenChildren(nestedChildren);
      var mountImages = [];
      var index = 0;
      this._renderedChildren = children;
      for (var name in children) {
        var child = children[name];
        if (children.hasOwnProperty(name)) {
          // The rendered children must be turned into instances as they're
          // mounted.
          var childInstance = instantiateReactComponent(child, null);
          children[name] = childInstance;
          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
          var rootID = this._rootNodeID + name;
          var mountImage = childInstance.mountComponent(
            rootID,
            transaction,
            this._mountDepth + 1
          );
          childInstance._mountIndex = index;
          mountImages.push(mountImage);
          index++;
        }
      }
      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function(nextContent) {
      updateDepth++;
      var errorThrown = true;
      try {
        var prevChildren = this._renderedChildren;
        // Remove any rendered children.
        for (var name in prevChildren) {
          if (prevChildren.hasOwnProperty(name)) {
            this._unmountChildByName(prevChildren[name], name);
          }
        }
        // Set new text content.
        this.setTextContent(nextContent);
        errorThrown = false;
      } finally {
        updateDepth--;
        if (!updateDepth) {
          errorThrown ? clearQueue() : processQueue();
        }
      }
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildren Nested child maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function(nextNestedChildren, transaction) {
      updateDepth++;
      var errorThrown = true;
      try {
        this._updateChildren(nextNestedChildren, transaction);
        errorThrown = false;
      } finally {
        updateDepth--;
        if (!updateDepth) {
          errorThrown ? clearQueue() : processQueue();
        }
      }
    },

    /**
     * Improve performance by isolating this hot code path from the try/catch
     * block in `updateChildren`.
     *
     * @param {?object} nextNestedChildren Nested child maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function(nextNestedChildren, transaction) {
      var nextChildren = flattenChildren(nextNestedChildren);
      var prevChildren = this._renderedChildren;
      if (!nextChildren && !prevChildren) {
        return;
      }
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var lastIndex = 0;
      var nextIndex = 0;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var prevElement = prevChild && prevChild._currentElement;
        var nextElement = nextChildren[name];
        if (shouldUpdateReactComponent(prevElement, nextElement)) {
          this.moveChild(prevChild, nextIndex, lastIndex);
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild.receiveComponent(nextElement, transaction);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            this._unmountChildByName(prevChild, name);
          }
          // The child must be instantiated before it's mounted.
          var nextChildInstance = instantiateReactComponent(
            nextElement,
            null
          );
          this._mountChildByNameAtIndex(
            nextChildInstance, name, nextIndex, transaction
          );
        }
        nextIndex++;
      }
      // Remove children that are no longer present.
      for (name in prevChildren) {
        if (prevChildren.hasOwnProperty(name) &&
            !(nextChildren && nextChildren[name])) {
          this._unmountChildByName(prevChildren[name], name);
        }
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted.
     *
     * @internal
     */
    unmountChildren: function() {
      var renderedChildren = this._renderedChildren;
      for (var name in renderedChildren) {
        var renderedChild = renderedChildren[name];
        // TODO: When is this not true?
        if (renderedChild.unmountComponent) {
          renderedChild.unmountComponent();
        }
      }
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function(child, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function(child, mountImage) {
      enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function(child) {
      enqueueRemove(this._rootNodeID, child._mountIndex);
    },

    /**
     * Sets this text content string.
     *
     * @param {string} textContent Text content to set.
     * @protected
     */
    setTextContent: function(textContent) {
      enqueueTextContent(this._rootNodeID, textContent);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildByNameAtIndex: function(child, name, index, transaction) {
      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
      var rootID = this._rootNodeID + name;
      var mountImage = child.mountComponent(
        rootID,
        transaction,
        this._mountDepth + 1
      );
      child._mountIndex = index;
      this.createChild(child, mountImage);
      this._renderedChildren = this._renderedChildren || {};
      this._renderedChildren[name] = child;
    },

    /**
     * Unmounts a rendered child by name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @param {string} name Name of the child in `this._renderedChildren`.
     * @private
     */
    _unmountChildByName: function(child, name) {
      this.removeChild(child);
      child._mountIndex = null;
      child.unmountComponent();
      delete this._renderedChildren[name];
    }

  }

};

module.exports = ReactMultiChild;

},{"./ReactComponent":32,"./ReactMultiChildUpdateTypes":65,"./flattenChildren":110,"./instantiateReactComponent":125,"./shouldUpdateReactComponent":142}],65:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMultiChildUpdateTypes
 */

"use strict";

var keyMirror = _dereq_("./keyMirror");

/**
 * When a component's children are updated, a series of update configuration
 * objects are created in order to batch and serialize the required changes.
 *
 * Enumerates all the possible types of update configurations.
 *
 * @internal
 */
var ReactMultiChildUpdateTypes = keyMirror({
  INSERT_MARKUP: null,
  MOVE_EXISTING: null,
  REMOVE_NODE: null,
  TEXT_CONTENT: null
});

module.exports = ReactMultiChildUpdateTypes;

},{"./keyMirror":132}],66:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactNativeComponent
 */

"use strict";

var assign = _dereq_("./Object.assign");
var invariant = _dereq_("./invariant");

var genericComponentClass = null;
// This registry keeps track of wrapper classes around native tags
var tagToComponentClass = {};

var ReactNativeComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function(componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a keyed object with classes as values. Each key represents a
  // tag. That particular tag will use this class instead of the generic one.
  injectComponentClasses: function(componentClasses) {
    assign(tagToComponentClass, componentClasses);
  }
};

/**
 * Create an internal class for a specific tag.
 *
 * @param {string} tag The tag for which to create an internal instance.
 * @param {any} props The props passed to the instance constructor.
 * @return {ReactComponent} component The injected empty component.
 */
function createInstanceForTag(tag, props, parentType) {
  var componentClass = tagToComponentClass[tag];
  if (componentClass == null) {
    ("production" !== "development" ? invariant(
      genericComponentClass,
      'There is no registered component for the tag %s',
      tag
    ) : invariant(genericComponentClass));
    return new genericComponentClass(tag, props);
  }
  if (parentType === tag) {
    // Avoid recursion
    ("production" !== "development" ? invariant(
      genericComponentClass,
      'There is no registered component for the tag %s',
      tag
    ) : invariant(genericComponentClass));
    return new genericComponentClass(tag, props);
  }
  // Unwrap legacy factories
  return new componentClass.type(props);
}

var ReactNativeComponent = {
  createInstanceForTag: createInstanceForTag,
  injection: ReactNativeComponentInjection
};

module.exports = ReactNativeComponent;

},{"./Object.assign":27,"./invariant":126}],67:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactOwner
 */

"use strict";

var emptyObject = _dereq_("./emptyObject");
var invariant = _dereq_("./invariant");

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {

  /**
   * @param {?object} object
   * @return {boolean} True if `object` is a valid owner.
   * @final
   */
  isValidOwner: function(object) {
    return !!(
      object &&
      typeof object.attachRef === 'function' &&
      typeof object.detachRef === 'function'
    );
  },

  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function(component, ref, owner) {
    ("production" !== "development" ? invariant(
      ReactOwner.isValidOwner(owner),
      'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' +
      'usually means that you\'re trying to add a ref to a component that ' +
      'doesn\'t have an owner (that is, was not created inside of another ' +
      'component\'s `render` method). Try rendering this component inside of ' +
      'a new top-level component which will hold the ref.'
    ) : invariant(ReactOwner.isValidOwner(owner)));
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function(component, ref, owner) {
    ("production" !== "development" ? invariant(
      ReactOwner.isValidOwner(owner),
      'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' +
      'usually means that you\'re trying to remove a ref to a component that ' +
      'doesn\'t have an owner (that is, was not created inside of another ' +
      'component\'s `render` method). Try rendering this component inside of ' +
      'a new top-level component which will hold the ref.'
    ) : invariant(ReactOwner.isValidOwner(owner)));
    // Check that `component` is still the current ref because we do not want to
    // detach the ref if another component stole it.
    if (owner.refs[ref] === component) {
      owner.detachRef(ref);
    }
  },

  /**
   * A ReactComponent must mix this in to have refs.
   *
   * @lends {ReactOwner.prototype}
   */
  Mixin: {

    construct: function() {
      this.refs = emptyObject;
    },

    /**
     * Lazily allocates the refs object and stores `component` as `ref`.
     *
     * @param {string} ref Reference name.
     * @param {component} component Component to store as `ref`.
     * @final
     * @private
     */
    attachRef: function(ref, component) {
      ("production" !== "development" ? invariant(
        component.isOwnedBy(this),
        'attachRef(%s, ...): Only a component\'s owner can store a ref to it.',
        ref
      ) : invariant(component.isOwnedBy(this)));
      var refs = this.refs === emptyObject ? (this.refs = {}) : this.refs;
      refs[ref] = component;
    },

    /**
     * Detaches a reference name.
     *
     * @param {string} ref Name to dereference.
     * @final
     * @private
     */
    detachRef: function(ref) {
      delete this.refs[ref];
    }

  }

};

module.exports = ReactOwner;

},{"./emptyObject":108,"./invariant":126}],68:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPerf
 * @typechecks static-only
 */

"use strict";

/**
 * ReactPerf is a general AOP system designed to measure performance. This
 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
 */
var ReactPerf = {
  /**
   * Boolean to enable/disable measurement. Set to false by default to prevent
   * accidental logging and perf loss.
   */
  enableMeasure: false,

  /**
   * Holds onto the measure function in use. By default, don't measure
   * anything, but we'll override this if we inject a measure function.
   */
  storedMeasure: _noMeasure,

  /**
   * Use this to wrap methods you want to measure. Zero overhead in production.
   *
   * @param {string} objName
   * @param {string} fnName
   * @param {function} func
   * @return {function}
   */
  measure: function(objName, fnName, func) {
    if ("production" !== "development") {
      var measuredFunc = null;
      var wrapper = function() {
        if (ReactPerf.enableMeasure) {
          if (!measuredFunc) {
            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
          }
          return measuredFunc.apply(this, arguments);
        }
        return func.apply(this, arguments);
      };
      wrapper.displayName = objName + '_' + fnName;
      return wrapper;
    }
    return func;
  },

  injection: {
    /**
     * @param {function} measure
     */
    injectMeasure: function(measure) {
      ReactPerf.storedMeasure = measure;
    }
  }
};

/**
 * Simply passes through the measured function, without measuring it.
 *
 * @param {string} objName
 * @param {string} fnName
 * @param {function} func
 * @return {function}
 */
function _noMeasure(objName, fnName, func) {
  return func;
}

module.exports = ReactPerf;

},{}],69:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTransferer
 */

"use strict";

var assign = _dereq_("./Object.assign");
var emptyFunction = _dereq_("./emptyFunction");
var invariant = _dereq_("./invariant");
var joinClasses = _dereq_("./joinClasses");
var warning = _dereq_("./warning");

var didWarn = false;

/**
 * Creates a transfer strategy that will merge prop values using the supplied
 * `mergeStrategy`. If a prop was previously unset, this just sets it.
 *
 * @param {function} mergeStrategy
 * @return {function}
 */
function createTransferStrategy(mergeStrategy) {
  return function(props, key, value) {
    if (!props.hasOwnProperty(key)) {
      props[key] = value;
    } else {
      props[key] = mergeStrategy(props[key], value);
    }
  };
}

var transferStrategyMerge = createTransferStrategy(function(a, b) {
  // `merge` overrides the first object's (`props[key]` above) keys using the
  // second object's (`value`) keys. An object's style's existing `propA` would
  // get overridden. Flip the order here.
  return assign({}, b, a);
});

/**
 * Transfer strategies dictate how props are transferred by `transferPropsTo`.
 * NOTE: if you add any more exceptions to this list you should be sure to
 * update `cloneWithProps()` accordingly.
 */
var TransferStrategies = {
  /**
   * Never transfer `children`.
   */
  children: emptyFunction,
  /**
   * Transfer the `className` prop by merging them.
   */
  className: createTransferStrategy(joinClasses),
  /**
   * Transfer the `style` prop (which is an object) by merging them.
   */
  style: transferStrategyMerge
};

/**
 * Mutates the first argument by transferring the properties from the second
 * argument.
 *
 * @param {object} props
 * @param {object} newProps
 * @return {object}
 */
function transferInto(props, newProps) {
  for (var thisKey in newProps) {
    if (!newProps.hasOwnProperty(thisKey)) {
      continue;
    }

    var transferStrategy = TransferStrategies[thisKey];

    if (transferStrategy && TransferStrategies.hasOwnProperty(thisKey)) {
      transferStrategy(props, thisKey, newProps[thisKey]);
    } else if (!props.hasOwnProperty(thisKey)) {
      props[thisKey] = newProps[thisKey];
    }
  }
  return props;
}

/**
 * ReactPropTransferer are capable of transferring props to another component
 * using a `transferPropsTo` method.
 *
 * @class ReactPropTransferer
 */
var ReactPropTransferer = {

  TransferStrategies: TransferStrategies,

  /**
   * Merge two props objects using TransferStrategies.
   *
   * @param {object} oldProps original props (they take precedence)
   * @param {object} newProps new props to merge in
   * @return {object} a new object containing both sets of props merged.
   */
  mergeProps: function(oldProps, newProps) {
    return transferInto(assign({}, oldProps), newProps);
  },

  /**
   * @lends {ReactPropTransferer.prototype}
   */
  Mixin: {

    /**
     * Transfer props from this component to a target component.
     *
     * Props that do not have an explicit transfer strategy will be transferred
     * only if the target component does not already have the prop set.
     *
     * This is usually used to pass down props to a returned root component.
     *
     * @param {ReactElement} element Component receiving the properties.
     * @return {ReactElement} The supplied `component`.
     * @final
     * @protected
     */
    transferPropsTo: function(element) {
      ("production" !== "development" ? invariant(
        element._owner === this,
        '%s: You can\'t call transferPropsTo() on a component that you ' +
        'don\'t own, %s. This usually means you are calling ' +
        'transferPropsTo() on a component passed in as props or children.',
        this.constructor.displayName,
        typeof element.type === 'string' ?
        element.type :
        element.type.displayName
      ) : invariant(element._owner === this));

      if ("production" !== "development") {
        if (!didWarn) {
          didWarn = true;
          ("production" !== "development" ? warning(
            false,
            'transferPropsTo is deprecated. ' +
            'See http://fb.me/react-transferpropsto for more information.'
          ) : null);
        }
      }

      // Because elements are immutable we have to merge into the existing
      // props object rather than clone it.
      transferInto(element.props, this.props);

      return element;
    }

  }
};

module.exports = ReactPropTransferer;

},{"./Object.assign":27,"./emptyFunction":107,"./invariant":126,"./joinClasses":131,"./warning":145}],70:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypeLocationNames
 */

"use strict";

var ReactPropTypeLocationNames = {};

if ("production" !== "development") {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;

},{}],71:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypeLocations
 */

"use strict";

var keyMirror = _dereq_("./keyMirror");

var ReactPropTypeLocations = keyMirror({
  prop: null,
  context: null,
  childContext: null
});

module.exports = ReactPropTypeLocations;

},{"./keyMirror":132}],72:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypes
 */

"use strict";

var ReactElement = _dereq_("./ReactElement");
var ReactPropTypeLocationNames = _dereq_("./ReactPropTypeLocationNames");

var deprecated = _dereq_("./deprecated");
var emptyFunction = _dereq_("./emptyFunction");

/**
 * Collection of methods that allow declaration and validation of props that are
 * supplied to React components. Example usage:
 *
 *   var Props = require('ReactPropTypes');
 *   var MyArticle = React.createClass({
 *     propTypes: {
 *       // An optional string prop named "description".
 *       description: Props.string,
 *
 *       // A required enum prop named "category".
 *       category: Props.oneOf(['News','Photos']).isRequired,
 *
 *       // A prop named "dialog" that requires an instance of Dialog.
 *       dialog: Props.instanceOf(Dialog).isRequired
 *     },
 *     render: function() { ... }
 *   });
 *
 * A more formal specification of how these methods are used:
 *
 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
 *   decl := ReactPropTypes.{type}(.isRequired)?
 *
 * Each and every declaration produces a function with the same signature. This
 * allows the creation of custom validation functions. For example:
 *
 *  var MyLink = React.createClass({
 *    propTypes: {
 *      // An optional string or URI prop named "href".
 *      href: function(props, propName, componentName) {
 *        var propValue = props[propName];
 *        if (propValue != null && typeof propValue !== 'string' &&
 *            !(propValue instanceof URI)) {
 *          return new Error(
 *            'Expected a string or an URI for ' + propName + ' in ' +
 *            componentName
 *          );
 *        }
 *      }
 *    },
 *    render: function() {...}
 *  });
 *
 * @internal
 */

var ANONYMOUS = '<<anonymous>>';

var elementTypeChecker = createElementTypeChecker();
var nodeTypeChecker = createNodeChecker();

var ReactPropTypes = {
  array: createPrimitiveTypeChecker('array'),
  bool: createPrimitiveTypeChecker('boolean'),
  func: createPrimitiveTypeChecker('function'),
  number: createPrimitiveTypeChecker('number'),
  object: createPrimitiveTypeChecker('object'),
  string: createPrimitiveTypeChecker('string'),

  any: createAnyTypeChecker(),
  arrayOf: createArrayOfTypeChecker,
  element: elementTypeChecker,
  instanceOf: createInstanceTypeChecker,
  node: nodeTypeChecker,
  objectOf: createObjectOfTypeChecker,
  oneOf: createEnumTypeChecker,
  oneOfType: createUnionTypeChecker,
  shape: createShapeTypeChecker,

  component: deprecated(
    'React.PropTypes',
    'component',
    'element',
    this,
    elementTypeChecker
  ),
  renderable: deprecated(
    'React.PropTypes',
    'renderable',
    'node',
    this,
    nodeTypeChecker
  )
};

function createChainableTypeChecker(validate) {
  function checkType(isRequired, props, propName, componentName, location) {
    componentName = componentName || ANONYMOUS;
    if (props[propName] == null) {
      var locationName = ReactPropTypeLocationNames[location];
      if (isRequired) {
        return new Error(
          ("Required " + locationName + " `" + propName + "` was not specified in ")+
          ("`" + componentName + "`.")
        );
      }
    } else {
      return validate(props, propName, componentName, location);
    }
  }

  var chainedCheckType = checkType.bind(null, false);
  chainedCheckType.isRequired = checkType.bind(null, true);

  return chainedCheckType;
}

function createPrimitiveTypeChecker(expectedType) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== expectedType) {
      var locationName = ReactPropTypeLocationNames[location];
      // `propValue` being instance of, say, date/regexp, pass the 'object'
      // check, but we can offer a more precise error message here rather than
      // 'of type `object`'.
      var preciseType = getPreciseType(propValue);

      return new Error(
        ("Invalid " + locationName + " `" + propName + "` of type `" + preciseType + "` ") +
        ("supplied to `" + componentName + "`, expected `" + expectedType + "`.")
      );
    }
  }
  return createChainableTypeChecker(validate);
}

function createAnyTypeChecker() {
  return createChainableTypeChecker(emptyFunction.thatReturns());
}

function createArrayOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    if (!Array.isArray(propValue)) {
      var locationName = ReactPropTypeLocationNames[location];
      var propType = getPropType(propValue);
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` of type ") +
        ("`" + propType + "` supplied to `" + componentName + "`, expected an array.")
      );
    }
    for (var i = 0; i < propValue.length; i++) {
      var error = typeChecker(propValue, i, componentName, location);
      if (error instanceof Error) {
        return error;
      }
    }
  }
  return createChainableTypeChecker(validate);
}

function createElementTypeChecker() {
  function validate(props, propName, componentName, location) {
    if (!ReactElement.isValidElement(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
        ("`" + componentName + "`, expected a ReactElement.")
      );
    }
  }
  return createChainableTypeChecker(validate);
}

function createInstanceTypeChecker(expectedClass) {
  function validate(props, propName, componentName, location) {
    if (!(props[propName] instanceof expectedClass)) {
      var locationName = ReactPropTypeLocationNames[location];
      var expectedClassName = expectedClass.name || ANONYMOUS;
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
        ("`" + componentName + "`, expected instance of `" + expectedClassName + "`.")
      );
    }
  }
  return createChainableTypeChecker(validate);
}

function createEnumTypeChecker(expectedValues) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    for (var i = 0; i < expectedValues.length; i++) {
      if (propValue === expectedValues[i]) {
        return;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    var valuesString = JSON.stringify(expectedValues);
    return new Error(
      ("Invalid " + locationName + " `" + propName + "` of value `" + propValue + "` ") +
      ("supplied to `" + componentName + "`, expected one of " + valuesString + ".")
    );
  }
  return createChainableTypeChecker(validate);
}

function createObjectOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` of type ") +
        ("`" + propType + "` supplied to `" + componentName + "`, expected an object.")
      );
    }
    for (var key in propValue) {
      if (propValue.hasOwnProperty(key)) {
        var error = typeChecker(propValue, key, componentName, location);
        if (error instanceof Error) {
          return error;
        }
      }
    }
  }
  return createChainableTypeChecker(validate);
}

function createUnionTypeChecker(arrayOfTypeCheckers) {
  function validate(props, propName, componentName, location) {
    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (checker(props, propName, componentName, location) == null) {
        return;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    return new Error(
      ("Invalid " + locationName + " `" + propName + "` supplied to ") +
      ("`" + componentName + "`.")
    );
  }
  return createChainableTypeChecker(validate);
}

function createNodeChecker() {
  function validate(props, propName, componentName, location) {
    if (!isNode(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
        ("`" + componentName + "`, expected a ReactNode.")
      );
    }
  }
  return createChainableTypeChecker(validate);
}

function createShapeTypeChecker(shapeTypes) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` of type `" + propType + "` ") +
        ("supplied to `" + componentName + "`, expected `object`.")
      );
    }
    for (var key in shapeTypes) {
      var checker = shapeTypes[key];
      if (!checker) {
        continue;
      }
      var error = checker(propValue, key, componentName, location);
      if (error) {
        return error;
      }
    }
  }
  return createChainableTypeChecker(validate, 'expected `object`');
}

function isNode(propValue) {
  switch(typeof propValue) {
    case 'number':
    case 'string':
      return true;
    case 'boolean':
      return !propValue;
    case 'object':
      if (Array.isArray(propValue)) {
        return propValue.every(isNode);
      }
      if (ReactElement.isValidElement(propValue)) {
        return true;
      }
      for (var k in propValue) {
        if (!isNode(propValue[k])) {
          return false;
        }
      }
      return true;
    default:
      return false;
  }
}

// Equivalent of `typeof` but with special handling for array and regexp.
function getPropType(propValue) {
  var propType = typeof propValue;
  if (Array.isArray(propValue)) {
    return 'array';
  }
  if (propValue instanceof RegExp) {
    // Old webkits (at least until Android 4.0) return 'function' rather than
    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
    // passes PropTypes.object.
    return 'object';
  }
  return propType;
}

// This handles more types than `getPropType`. Only used for error messages.
// See `createPrimitiveTypeChecker`.
function getPreciseType(propValue) {
  var propType = getPropType(propValue);
  if (propType === 'object') {
    if (propValue instanceof Date) {
      return 'date';
    } else if (propValue instanceof RegExp) {
      return 'regexp';
    }
  }
  return propType;
}

module.exports = ReactPropTypes;

},{"./ReactElement":52,"./ReactPropTypeLocationNames":70,"./deprecated":106,"./emptyFunction":107}],73:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPutListenerQueue
 */

"use strict";

var PooledClass = _dereq_("./PooledClass");
var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");

var assign = _dereq_("./Object.assign");

function ReactPutListenerQueue() {
  this.listenersToPut = [];
}

assign(ReactPutListenerQueue.prototype, {
  enqueuePutListener: function(rootNodeID, propKey, propValue) {
    this.listenersToPut.push({
      rootNodeID: rootNodeID,
      propKey: propKey,
      propValue: propValue
    });
  },

  putListeners: function() {
    for (var i = 0; i < this.listenersToPut.length; i++) {
      var listenerToPut = this.listenersToPut[i];
      ReactBrowserEventEmitter.putListener(
        listenerToPut.rootNodeID,
        listenerToPut.propKey,
        listenerToPut.propValue
      );
    }
  },

  reset: function() {
    this.listenersToPut.length = 0;
  },

  destructor: function() {
    this.reset();
  }
});

PooledClass.addPoolingTo(ReactPutListenerQueue);

module.exports = ReactPutListenerQueue;

},{"./Object.assign":27,"./PooledClass":28,"./ReactBrowserEventEmitter":30}],74:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactReconcileTransaction
 * @typechecks static-only
 */

"use strict";

var CallbackQueue = _dereq_("./CallbackQueue");
var PooledClass = _dereq_("./PooledClass");
var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
var ReactInputSelection = _dereq_("./ReactInputSelection");
var ReactPutListenerQueue = _dereq_("./ReactPutListenerQueue");
var Transaction = _dereq_("./Transaction");

var assign = _dereq_("./Object.assign");

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function() {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occured. `close`
   *   restores the previous value.
   */
  close: function(previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function() {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function() {
    this.reactMountReady.notifyAll();
  }
};

var PUT_LISTENER_QUEUEING = {
  initialize: function() {
    this.putListenerQueue.reset();
  },

  close: function() {
    this.putListenerQueue.putListeners();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [
  PUT_LISTENER_QUEUEING,
  SELECTION_RESTORATION,
  EVENT_SUPPRESSION,
  ON_DOM_READY_QUEUEING
];

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction() {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.putListenerQueue = ReactPutListenerQueue.getPooled();
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap proceedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function() {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function() {
    return this.reactMountReady;
  },

  getPutListenerQueue: function() {
    return this.putListenerQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be resused.
   */
  destructor: function() {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;

    ReactPutListenerQueue.release(this.putListenerQueue);
    this.putListenerQueue = null;
  }
};


assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;

},{"./CallbackQueue":6,"./Object.assign":27,"./PooledClass":28,"./ReactBrowserEventEmitter":30,"./ReactInputSelection":59,"./ReactPutListenerQueue":73,"./Transaction":95}],75:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactRootIndex
 * @typechecks
 */

"use strict";

var ReactRootIndexInjection = {
  /**
   * @param {function} _createReactRootIndex
   */
  injectCreateReactRootIndex: function(_createReactRootIndex) {
    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
  }
};

var ReactRootIndex = {
  createReactRootIndex: null,
  injection: ReactRootIndexInjection
};

module.exports = ReactRootIndex;

},{}],76:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks static-only
 * @providesModule ReactServerRendering
 */
"use strict";

var ReactElement = _dereq_("./ReactElement");
var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
var ReactMarkupChecksum = _dereq_("./ReactMarkupChecksum");
var ReactServerRenderingTransaction =
  _dereq_("./ReactServerRenderingTransaction");

var instantiateReactComponent = _dereq_("./instantiateReactComponent");
var invariant = _dereq_("./invariant");

/**
 * @param {ReactElement} element
 * @return {string} the HTML markup
 */
function renderToString(element) {
  ("production" !== "development" ? invariant(
    ReactElement.isValidElement(element),
    'renderToString(): You must pass a valid ReactElement.'
  ) : invariant(ReactElement.isValidElement(element)));

  var transaction;
  try {
    var id = ReactInstanceHandles.createReactRootID();
    transaction = ReactServerRenderingTransaction.getPooled(false);

    return transaction.perform(function() {
      var componentInstance = instantiateReactComponent(element, null);
      var markup = componentInstance.mountComponent(id, transaction, 0);
      return ReactMarkupChecksum.addChecksumToMarkup(markup);
    }, null);
  } finally {
    ReactServerRenderingTransaction.release(transaction);
  }
}

/**
 * @param {ReactElement} element
 * @return {string} the HTML markup, without the extra React ID and checksum
 * (for generating static pages)
 */
function renderToStaticMarkup(element) {
  ("production" !== "development" ? invariant(
    ReactElement.isValidElement(element),
    'renderToStaticMarkup(): You must pass a valid ReactElement.'
  ) : invariant(ReactElement.isValidElement(element)));

  var transaction;
  try {
    var id = ReactInstanceHandles.createReactRootID();
    transaction = ReactServerRenderingTransaction.getPooled(true);

    return transaction.perform(function() {
      var componentInstance = instantiateReactComponent(element, null);
      return componentInstance.mountComponent(id, transaction, 0);
    }, null);
  } finally {
    ReactServerRenderingTransaction.release(transaction);
  }
}

module.exports = {
  renderToString: renderToString,
  renderToStaticMarkup: renderToStaticMarkup
};

},{"./ReactElement":52,"./ReactInstanceHandles":60,"./ReactMarkupChecksum":62,"./ReactServerRenderingTransaction":77,"./instantiateReactComponent":125,"./invariant":126}],77:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactServerRenderingTransaction
 * @typechecks
 */

"use strict";

var PooledClass = _dereq_("./PooledClass");
var CallbackQueue = _dereq_("./CallbackQueue");
var ReactPutListenerQueue = _dereq_("./ReactPutListenerQueue");
var Transaction = _dereq_("./Transaction");

var assign = _dereq_("./Object.assign");
var emptyFunction = _dereq_("./emptyFunction");

/**
 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
 * during the performing of the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function() {
    this.reactMountReady.reset();
  },

  close: emptyFunction
};

var PUT_LISTENER_QUEUEING = {
  initialize: function() {
    this.putListenerQueue.reset();
  },

  close: emptyFunction
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [
  PUT_LISTENER_QUEUEING,
  ON_DOM_READY_QUEUEING
];

/**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
function ReactServerRenderingTransaction(renderToStaticMarkup) {
  this.reinitializeTransaction();
  this.renderToStaticMarkup = renderToStaticMarkup;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.putListenerQueue = ReactPutListenerQueue.getPooled();
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap proceedures.
   */
  getTransactionWrappers: function() {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function() {
    return this.reactMountReady;
  },

  getPutListenerQueue: function() {
    return this.putListenerQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be resused.
   */
  destructor: function() {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;

    ReactPutListenerQueue.release(this.putListenerQueue);
    this.putListenerQueue = null;
  }
};


assign(
  ReactServerRenderingTransaction.prototype,
  Transaction.Mixin,
  Mixin
);

PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;

},{"./CallbackQueue":6,"./Object.assign":27,"./PooledClass":28,"./ReactPutListenerQueue":73,"./Transaction":95,"./emptyFunction":107}],78:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactTextComponent
 * @typechecks static-only
 */

"use strict";

var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
var ReactComponent = _dereq_("./ReactComponent");
var ReactElement = _dereq_("./ReactElement");

var assign = _dereq_("./Object.assign");
var escapeTextForBrowser = _dereq_("./escapeTextForBrowser");

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings in elements so that they can undergo
 * the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactTextComponent = function(props) {
  // This constructor and it's argument is currently used by mocks.
};

assign(ReactTextComponent.prototype, ReactComponent.Mixin, {

  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {string} rootID DOM ID of the root node.
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {number} mountDepth number of components in the owner hierarchy
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function(rootID, transaction, mountDepth) {
    ReactComponent.Mixin.mountComponent.call(
      this,
      rootID,
      transaction,
      mountDepth
    );

    var escapedText = escapeTextForBrowser(this.props);

    if (transaction.renderToStaticMarkup) {
      // Normally we'd wrap this in a `span` for the reasons stated above, but
      // since this is a situation where React won't take over (static pages),
      // we can simply return the text as it is.
      return escapedText;
    }

    return (
      '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' +
        escapedText +
      '</span>'
    );
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {object} nextComponent Contains the next text content.
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function(nextComponent, transaction) {
    var nextProps = nextComponent.props;
    if (nextProps !== this.props) {
      this.props = nextProps;
      ReactComponent.BackendIDOperations.updateTextContentByID(
        this._rootNodeID,
        nextProps
      );
    }
  }

});

var ReactTextComponentFactory = function(text) {
  // Bypass validation and configuration
  return new ReactElement(ReactTextComponent, null, null, null, null, text);
};

ReactTextComponentFactory.type = ReactTextComponent;

module.exports = ReactTextComponentFactory;

},{"./DOMPropertyOperations":12,"./Object.assign":27,"./ReactComponent":32,"./ReactElement":52,"./escapeTextForBrowser":109}],79:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactUpdates
 */

"use strict";

var CallbackQueue = _dereq_("./CallbackQueue");
var PooledClass = _dereq_("./PooledClass");
var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
var ReactPerf = _dereq_("./ReactPerf");
var Transaction = _dereq_("./Transaction");

var assign = _dereq_("./Object.assign");
var invariant = _dereq_("./invariant");
var warning = _dereq_("./warning");

var dirtyComponents = [];
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  ("production" !== "development" ? invariant(
    ReactUpdates.ReactReconcileTransaction && batchingStrategy,
    'ReactUpdates: must inject a reconcile transaction class and batching ' +
    'strategy'
  ) : invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy));
}

var NESTED_UPDATES = {
  initialize: function() {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function() {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function() {
    this.callbackQueue.reset();
  },
  close: function() {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction =
    ReactUpdates.ReactReconcileTransaction.getPooled();
}

assign(
  ReactUpdatesFlushTransaction.prototype,
  Transaction.Mixin, {
  getTransactionWrappers: function() {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function() {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function(method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.Mixin.perform.call(
      this,
      this.reconcileTransaction.perform,
      this.reconcileTransaction,
      method,
      scope,
      a
    );
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b) {
  ensureInjected();
  batchingStrategy.batchedUpdates(callback, a, b);
}

/**
 * Array comparator for ReactComponents by owner depth
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountDepthComparator(c1, c2) {
  return c1._mountDepth - c2._mountDepth;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  ("production" !== "development" ? invariant(
    len === dirtyComponents.length,
    'Expected flush transaction\'s stored dirty-components length (%s) to ' +
    'match dirty-components array length (%s).',
    len,
    dirtyComponents.length
  ) : invariant(len === dirtyComponents.length));

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountDepthComparator);

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, ignore them
    // TODO: Queue unmounts in the same list to avoid this happening at all
    var component = dirtyComponents[i];
    if (component.isMounted()) {
      // If performUpdateIfNecessary happens to enqueue any new updates, we
      // shouldn't execute the callbacks until the next render happens, so
      // stash the callbacks first
      var callbacks = component._pendingCallbacks;
      component._pendingCallbacks = null;
      component.performUpdateIfNecessary(transaction.reconcileTransaction);

      if (callbacks) {
        for (var j = 0; j < callbacks.length; j++) {
          transaction.callbackQueue.enqueue(
            callbacks[j],
            component
          );
        }
      }
    }
  }
}

var flushBatchedUpdates = ReactPerf.measure(
  'ReactUpdates',
  'flushBatchedUpdates',
  function() {
    // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
    // array and perform any updates enqueued by mount-ready handlers (i.e.,
    // componentDidUpdate) but we need to check here too in order to catch
    // updates enqueued by setState callbacks and asap calls.
    while (dirtyComponents.length || asapEnqueued) {
      if (dirtyComponents.length) {
        var transaction = ReactUpdatesFlushTransaction.getPooled();
        transaction.perform(runBatchedUpdates, null, transaction);
        ReactUpdatesFlushTransaction.release(transaction);
      }

      if (asapEnqueued) {
        asapEnqueued = false;
        var queue = asapCallbackQueue;
        asapCallbackQueue = CallbackQueue.getPooled();
        queue.notifyAll();
        CallbackQueue.release(queue);
      }
    }
  }
);

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component, callback) {
  ("production" !== "development" ? invariant(
    !callback || typeof callback === "function",
    'enqueueUpdate(...): You called `setProps`, `replaceProps`, ' +
    '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +
    'isn\'t callable.'
  ) : invariant(!callback || typeof callback === "function"));
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setProps, setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)
  ("production" !== "development" ? warning(
    ReactCurrentOwner.current == null,
    'enqueueUpdate(): Render methods should be a pure function of props ' +
    'and state; triggering nested component updates from render is not ' +
    'allowed. If necessary, trigger nested updates in ' +
    'componentDidUpdate.'
  ) : null);

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component, callback);
    return;
  }

  dirtyComponents.push(component);

  if (callback) {
    if (component._pendingCallbacks) {
      component._pendingCallbacks.push(callback);
    } else {
      component._pendingCallbacks = [callback];
    }
  }
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  ("production" !== "development" ? invariant(
    batchingStrategy.isBatchingUpdates,
    'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' +
    'updates are not being batched.'
  ) : invariant(batchingStrategy.isBatchingUpdates));
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function(ReconcileTransaction) {
    ("production" !== "development" ? invariant(
      ReconcileTransaction,
      'ReactUpdates: must provide a reconcile transaction class'
    ) : invariant(ReconcileTransaction));
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function(_batchingStrategy) {
    ("production" !== "development" ? invariant(
      _batchingStrategy,
      'ReactUpdates: must provide a batching strategy'
    ) : invariant(_batchingStrategy));
    ("production" !== "development" ? invariant(
      typeof _batchingStrategy.batchedUpdates === 'function',
      'ReactUpdates: must provide a batchedUpdates() function'
    ) : invariant(typeof _batchingStrategy.batchedUpdates === 'function'));
    ("production" !== "development" ? invariant(
      typeof _batchingStrategy.isBatchingUpdates === 'boolean',
      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'
    ) : invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean'));
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;

},{"./CallbackQueue":6,"./Object.assign":27,"./PooledClass":28,"./ReactCurrentOwner":36,"./ReactPerf":68,"./Transaction":95,"./invariant":126,"./warning":145}],80:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SVGDOMPropertyConfig
 */

/*jslint bitwise: true*/

"use strict";

var DOMProperty = _dereq_("./DOMProperty");

var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;

var SVGDOMPropertyConfig = {
  Properties: {
    cx: MUST_USE_ATTRIBUTE,
    cy: MUST_USE_ATTRIBUTE,
    d: MUST_USE_ATTRIBUTE,
    dx: MUST_USE_ATTRIBUTE,
    dy: MUST_USE_ATTRIBUTE,
    fill: MUST_USE_ATTRIBUTE,
    fillOpacity: MUST_USE_ATTRIBUTE,
    fontFamily: MUST_USE_ATTRIBUTE,
    fontSize: MUST_USE_ATTRIBUTE,
    fx: MUST_USE_ATTRIBUTE,
    fy: MUST_USE_ATTRIBUTE,
    gradientTransform: MUST_USE_ATTRIBUTE,
    gradientUnits: MUST_USE_ATTRIBUTE,
    markerEnd: MUST_USE_ATTRIBUTE,
    markerMid: MUST_USE_ATTRIBUTE,
    markerStart: MUST_USE_ATTRIBUTE,
    offset: MUST_USE_ATTRIBUTE,
    opacity: MUST_USE_ATTRIBUTE,
    patternContentUnits: MUST_USE_ATTRIBUTE,
    patternUnits: MUST_USE_ATTRIBUTE,
    points: MUST_USE_ATTRIBUTE,
    preserveAspectRatio: MUST_USE_ATTRIBUTE,
    r: MUST_USE_ATTRIBUTE,
    rx: MUST_USE_ATTRIBUTE,
    ry: MUST_USE_ATTRIBUTE,
    spreadMethod: MUST_USE_ATTRIBUTE,
    stopColor: MUST_USE_ATTRIBUTE,
    stopOpacity: MUST_USE_ATTRIBUTE,
    stroke: MUST_USE_ATTRIBUTE,
    strokeDasharray: MUST_USE_ATTRIBUTE,
    strokeLinecap: MUST_USE_ATTRIBUTE,
    strokeOpacity: MUST_USE_ATTRIBUTE,
    strokeWidth: MUST_USE_ATTRIBUTE,
    textAnchor: MUST_USE_ATTRIBUTE,
    transform: MUST_USE_ATTRIBUTE,
    version: MUST_USE_ATTRIBUTE,
    viewBox: MUST_USE_ATTRIBUTE,
    x1: MUST_USE_ATTRIBUTE,
    x2: MUST_USE_ATTRIBUTE,
    x: MUST_USE_ATTRIBUTE,
    y1: MUST_USE_ATTRIBUTE,
    y2: MUST_USE_ATTRIBUTE,
    y: MUST_USE_ATTRIBUTE
  },
  DOMAttributeNames: {
    fillOpacity: 'fill-opacity',
    fontFamily: 'font-family',
    fontSize: 'font-size',
    gradientTransform: 'gradientTransform',
    gradientUnits: 'gradientUnits',
    markerEnd: 'marker-end',
    markerMid: 'marker-mid',
    markerStart: 'marker-start',
    patternContentUnits: 'patternContentUnits',
    patternUnits: 'patternUnits',
    preserveAspectRatio: 'preserveAspectRatio',
    spreadMethod: 'spreadMethod',
    stopColor: 'stop-color',
    stopOpacity: 'stop-opacity',
    strokeDasharray: 'stroke-dasharray',
    strokeLinecap: 'stroke-linecap',
    strokeOpacity: 'stroke-opacity',
    strokeWidth: 'stroke-width',
    textAnchor: 'text-anchor',
    viewBox: 'viewBox'
  }
};

module.exports = SVGDOMPropertyConfig;

},{"./DOMProperty":11}],81:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SelectEventPlugin
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var EventPropagators = _dereq_("./EventPropagators");
var ReactInputSelection = _dereq_("./ReactInputSelection");
var SyntheticEvent = _dereq_("./SyntheticEvent");

var getActiveElement = _dereq_("./getActiveElement");
var isTextInputElement = _dereq_("./isTextInputElement");
var keyOf = _dereq_("./keyOf");
var shallowEqual = _dereq_("./shallowEqual");

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: keyOf({onSelect: null}),
      captured: keyOf({onSelectCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topContextMenu,
      topLevelTypes.topFocus,
      topLevelTypes.topKeyDown,
      topLevelTypes.topMouseDown,
      topLevelTypes.topMouseUp,
      topLevelTypes.topSelectionChange
    ]
  }
};

var activeElement = null;
var activeElementID = null;
var lastSelection = null;
var mouseDown = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @param {object}
 */
function getSelection(node) {
  if ('selectionStart' in node &&
      ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown ||
      activeElement == null ||
      activeElement != getActiveElement()) {
    return;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(
      eventTypes.select,
      activeElementID,
      nativeEvent
    );

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    switch (topLevelType) {
      // Track the input node that has focus.
      case topLevelTypes.topFocus:
        if (isTextInputElement(topLevelTarget) ||
            topLevelTarget.contentEditable === 'true') {
          activeElement = topLevelTarget;
          activeElementID = topLevelTargetID;
          lastSelection = null;
        }
        break;
      case topLevelTypes.topBlur:
        activeElement = null;
        activeElementID = null;
        lastSelection = null;
        break;

      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case topLevelTypes.topMouseDown:
        mouseDown = true;
        break;
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topMouseUp:
        mouseDown = false;
        return constructSelectEvent(nativeEvent);

      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't).
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      case topLevelTypes.topSelectionChange:
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyUp:
        return constructSelectEvent(nativeEvent);
    }
  }
};

module.exports = SelectEventPlugin;

},{"./EventConstants":16,"./EventPropagators":21,"./ReactInputSelection":59,"./SyntheticEvent":87,"./getActiveElement":113,"./isTextInputElement":129,"./keyOf":133,"./shallowEqual":141}],82:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ServerReactRootIndex
 * @typechecks
 */

"use strict";

/**
 * Size of the reactRoot ID space. We generate random numbers for React root
 * IDs and if there's a collision the events and DOM update system will
 * get confused. In the future we need a way to generate GUIDs but for
 * now this will work on a smaller scale.
 */
var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);

var ServerReactRootIndex = {
  createReactRootIndex: function() {
    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
  }
};

module.exports = ServerReactRootIndex;

},{}],83:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SimpleEventPlugin
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var EventPluginUtils = _dereq_("./EventPluginUtils");
var EventPropagators = _dereq_("./EventPropagators");
var SyntheticClipboardEvent = _dereq_("./SyntheticClipboardEvent");
var SyntheticEvent = _dereq_("./SyntheticEvent");
var SyntheticFocusEvent = _dereq_("./SyntheticFocusEvent");
var SyntheticKeyboardEvent = _dereq_("./SyntheticKeyboardEvent");
var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");
var SyntheticDragEvent = _dereq_("./SyntheticDragEvent");
var SyntheticTouchEvent = _dereq_("./SyntheticTouchEvent");
var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");
var SyntheticWheelEvent = _dereq_("./SyntheticWheelEvent");

var getEventCharCode = _dereq_("./getEventCharCode");

var invariant = _dereq_("./invariant");
var keyOf = _dereq_("./keyOf");
var warning = _dereq_("./warning");

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  blur: {
    phasedRegistrationNames: {
      bubbled: keyOf({onBlur: true}),
      captured: keyOf({onBlurCapture: true})
    }
  },
  click: {
    phasedRegistrationNames: {
      bubbled: keyOf({onClick: true}),
      captured: keyOf({onClickCapture: true})
    }
  },
  contextMenu: {
    phasedRegistrationNames: {
      bubbled: keyOf({onContextMenu: true}),
      captured: keyOf({onContextMenuCapture: true})
    }
  },
  copy: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCopy: true}),
      captured: keyOf({onCopyCapture: true})
    }
  },
  cut: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCut: true}),
      captured: keyOf({onCutCapture: true})
    }
  },
  doubleClick: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDoubleClick: true}),
      captured: keyOf({onDoubleClickCapture: true})
    }
  },
  drag: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDrag: true}),
      captured: keyOf({onDragCapture: true})
    }
  },
  dragEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragEnd: true}),
      captured: keyOf({onDragEndCapture: true})
    }
  },
  dragEnter: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragEnter: true}),
      captured: keyOf({onDragEnterCapture: true})
    }
  },
  dragExit: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragExit: true}),
      captured: keyOf({onDragExitCapture: true})
    }
  },
  dragLeave: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragLeave: true}),
      captured: keyOf({onDragLeaveCapture: true})
    }
  },
  dragOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragOver: true}),
      captured: keyOf({onDragOverCapture: true})
    }
  },
  dragStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragStart: true}),
      captured: keyOf({onDragStartCapture: true})
    }
  },
  drop: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDrop: true}),
      captured: keyOf({onDropCapture: true})
    }
  },
  focus: {
    phasedRegistrationNames: {
      bubbled: keyOf({onFocus: true}),
      captured: keyOf({onFocusCapture: true})
    }
  },
  input: {
    phasedRegistrationNames: {
      bubbled: keyOf({onInput: true}),
      captured: keyOf({onInputCapture: true})
    }
  },
  keyDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyDown: true}),
      captured: keyOf({onKeyDownCapture: true})
    }
  },
  keyPress: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyPress: true}),
      captured: keyOf({onKeyPressCapture: true})
    }
  },
  keyUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyUp: true}),
      captured: keyOf({onKeyUpCapture: true})
    }
  },
  load: {
    phasedRegistrationNames: {
      bubbled: keyOf({onLoad: true}),
      captured: keyOf({onLoadCapture: true})
    }
  },
  error: {
    phasedRegistrationNames: {
      bubbled: keyOf({onError: true}),
      captured: keyOf({onErrorCapture: true})
    }
  },
  // Note: We do not allow listening to mouseOver events. Instead, use the
  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
  mouseDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseDown: true}),
      captured: keyOf({onMouseDownCapture: true})
    }
  },
  mouseMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseMove: true}),
      captured: keyOf({onMouseMoveCapture: true})
    }
  },
  mouseOut: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseOut: true}),
      captured: keyOf({onMouseOutCapture: true})
    }
  },
  mouseOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseOver: true}),
      captured: keyOf({onMouseOverCapture: true})
    }
  },
  mouseUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseUp: true}),
      captured: keyOf({onMouseUpCapture: true})
    }
  },
  paste: {
    phasedRegistrationNames: {
      bubbled: keyOf({onPaste: true}),
      captured: keyOf({onPasteCapture: true})
    }
  },
  reset: {
    phasedRegistrationNames: {
      bubbled: keyOf({onReset: true}),
      captured: keyOf({onResetCapture: true})
    }
  },
  scroll: {
    phasedRegistrationNames: {
      bubbled: keyOf({onScroll: true}),
      captured: keyOf({onScrollCapture: true})
    }
  },
  submit: {
    phasedRegistrationNames: {
      bubbled: keyOf({onSubmit: true}),
      captured: keyOf({onSubmitCapture: true})
    }
  },
  touchCancel: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchCancel: true}),
      captured: keyOf({onTouchCancelCapture: true})
    }
  },
  touchEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchEnd: true}),
      captured: keyOf({onTouchEndCapture: true})
    }
  },
  touchMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchMove: true}),
      captured: keyOf({onTouchMoveCapture: true})
    }
  },
  touchStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchStart: true}),
      captured: keyOf({onTouchStartCapture: true})
    }
  },
  wheel: {
    phasedRegistrationNames: {
      bubbled: keyOf({onWheel: true}),
      captured: keyOf({onWheelCapture: true})
    }
  }
};

var topLevelEventsToDispatchConfig = {
  topBlur:        eventTypes.blur,
  topClick:       eventTypes.click,
  topContextMenu: eventTypes.contextMenu,
  topCopy:        eventTypes.copy,
  topCut:         eventTypes.cut,
  topDoubleClick: eventTypes.doubleClick,
  topDrag:        eventTypes.drag,
  topDragEnd:     eventTypes.dragEnd,
  topDragEnter:   eventTypes.dragEnter,
  topDragExit:    eventTypes.dragExit,
  topDragLeave:   eventTypes.dragLeave,
  topDragOver:    eventTypes.dragOver,
  topDragStart:   eventTypes.dragStart,
  topDrop:        eventTypes.drop,
  topError:       eventTypes.error,
  topFocus:       eventTypes.focus,
  topInput:       eventTypes.input,
  topKeyDown:     eventTypes.keyDown,
  topKeyPress:    eventTypes.keyPress,
  topKeyUp:       eventTypes.keyUp,
  topLoad:        eventTypes.load,
  topMouseDown:   eventTypes.mouseDown,
  topMouseMove:   eventTypes.mouseMove,
  topMouseOut:    eventTypes.mouseOut,
  topMouseOver:   eventTypes.mouseOver,
  topMouseUp:     eventTypes.mouseUp,
  topPaste:       eventTypes.paste,
  topReset:       eventTypes.reset,
  topScroll:      eventTypes.scroll,
  topSubmit:      eventTypes.submit,
  topTouchCancel: eventTypes.touchCancel,
  topTouchEnd:    eventTypes.touchEnd,
  topTouchMove:   eventTypes.touchMove,
  topTouchStart:  eventTypes.touchStart,
  topWheel:       eventTypes.wheel
};

for (var topLevelType in topLevelEventsToDispatchConfig) {
  topLevelEventsToDispatchConfig[topLevelType].dependencies = [topLevelType];
}

var SimpleEventPlugin = {

  eventTypes: eventTypes,

  /**
   * Same as the default implementation, except cancels the event when return
   * value is false. This behavior will be disabled in a future release.
   *
   * @param {object} Event to be dispatched.
   * @param {function} Application-level callback.
   * @param {string} domID DOM ID to pass to the callback.
   */
  executeDispatch: function(event, listener, domID) {
    var returnValue = EventPluginUtils.executeDispatch(event, listener, domID);

    ("production" !== "development" ? warning(
      typeof returnValue !== 'boolean',
      'Returning `false` from an event handler is deprecated and will be ' +
      'ignored in a future release. Instead, manually call ' +
      'e.stopPropagation() or e.preventDefault(), as appropriate.'
    ) : null);

    if (returnValue === false) {
      event.stopPropagation();
      event.preventDefault();
    }
  },

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case topLevelTypes.topInput:
      case topLevelTypes.topLoad:
      case topLevelTypes.topError:
      case topLevelTypes.topReset:
      case topLevelTypes.topSubmit:
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case topLevelTypes.topKeyPress:
        // FireFox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
        /* falls through */
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyUp:
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case topLevelTypes.topBlur:
      case topLevelTypes.topFocus:
        EventConstructor = SyntheticFocusEvent;
        break;
      case topLevelTypes.topClick:
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
        /* falls through */
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topDoubleClick:
      case topLevelTypes.topMouseDown:
      case topLevelTypes.topMouseMove:
      case topLevelTypes.topMouseOut:
      case topLevelTypes.topMouseOver:
      case topLevelTypes.topMouseUp:
        EventConstructor = SyntheticMouseEvent;
        break;
      case topLevelTypes.topDrag:
      case topLevelTypes.topDragEnd:
      case topLevelTypes.topDragEnter:
      case topLevelTypes.topDragExit:
      case topLevelTypes.topDragLeave:
      case topLevelTypes.topDragOver:
      case topLevelTypes.topDragStart:
      case topLevelTypes.topDrop:
        EventConstructor = SyntheticDragEvent;
        break;
      case topLevelTypes.topTouchCancel:
      case topLevelTypes.topTouchEnd:
      case topLevelTypes.topTouchMove:
      case topLevelTypes.topTouchStart:
        EventConstructor = SyntheticTouchEvent;
        break;
      case topLevelTypes.topScroll:
        EventConstructor = SyntheticUIEvent;
        break;
      case topLevelTypes.topWheel:
        EventConstructor = SyntheticWheelEvent;
        break;
      case topLevelTypes.topCopy:
      case topLevelTypes.topCut:
      case topLevelTypes.topPaste:
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    ("production" !== "development" ? invariant(
      EventConstructor,
      'SimpleEventPlugin: Unhandled event type, `%s`.',
      topLevelType
    ) : invariant(EventConstructor));
    var event = EventConstructor.getPooled(
      dispatchConfig,
      topLevelTargetID,
      nativeEvent
    );
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }

};

module.exports = SimpleEventPlugin;

},{"./EventConstants":16,"./EventPluginUtils":20,"./EventPropagators":21,"./SyntheticClipboardEvent":84,"./SyntheticDragEvent":86,"./SyntheticEvent":87,"./SyntheticFocusEvent":88,"./SyntheticKeyboardEvent":90,"./SyntheticMouseEvent":91,"./SyntheticTouchEvent":92,"./SyntheticUIEvent":93,"./SyntheticWheelEvent":94,"./getEventCharCode":114,"./invariant":126,"./keyOf":133,"./warning":145}],84:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticClipboardEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticEvent = _dereq_("./SyntheticEvent");

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function(event) {
    return (
      'clipboardData' in event ?
        event.clipboardData :
        window.clipboardData
    );
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;


},{"./SyntheticEvent":87}],85:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticCompositionEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticEvent = _dereq_("./SyntheticEvent");

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(
  dispatchConfig,
  dispatchMarker,
  nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(
  SyntheticCompositionEvent,
  CompositionEventInterface
);

module.exports = SyntheticCompositionEvent;


},{"./SyntheticEvent":87}],86:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticDragEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;

},{"./SyntheticMouseEvent":91}],87:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticEvent
 * @typechecks static-only
 */

"use strict";

var PooledClass = _dereq_("./PooledClass");

var assign = _dereq_("./Object.assign");
var emptyFunction = _dereq_("./emptyFunction");
var getEventTarget = _dereq_("./getEventTarget");

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: getEventTarget,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function(event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 */
function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  this.dispatchConfig = dispatchConfig;
  this.dispatchMarker = dispatchMarker;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      this[propName] = nativeEvent[propName];
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ?
    nativeEvent.defaultPrevented :
    nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
}

assign(SyntheticEvent.prototype, {

  preventDefault: function() {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    event.preventDefault ? event.preventDefault() : event.returnValue = false;
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function() {
    var event = this.nativeEvent;
    event.stopPropagation ? event.stopPropagation() : event.cancelBubble = true;
    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function() {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function() {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      this[propName] = null;
    }
    this.dispatchConfig = null;
    this.dispatchMarker = null;
    this.nativeEvent = null;
  }

});

SyntheticEvent.Interface = EventInterface;

/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function(Class, Interface) {
  var Super = this;

  var prototype = Object.create(Super.prototype);
  assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);

module.exports = SyntheticEvent;

},{"./Object.assign":27,"./PooledClass":28,"./emptyFunction":107,"./getEventTarget":117}],88:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticFocusEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;

},{"./SyntheticUIEvent":93}],89:[function(_dereq_,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticInputEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticEvent = _dereq_("./SyntheticEvent");

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(
  dispatchConfig,
  dispatchMarker,
  nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(
  SyntheticInputEvent,
  InputEventInterface
);

module.exports = SyntheticInputEvent;


},{"./SyntheticEvent":87}],90:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticKeyboardEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");

var getEventCharCode = _dereq_("./getEventCharCode");
var getEventKey = _dereq_("./getEventKey");
var getEventModifierState = _dereq_("./getEventModifierState");

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function(event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function(event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function(event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;

},{"./SyntheticUIEvent":93,"./getEventCharCode":114,"./getEventKey":115,"./getEventModifierState":116}],91:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticMouseEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");
var ViewportMetrics = _dereq_("./ViewportMetrics");

var getEventModifierState = _dereq_("./getEventModifierState");

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function(event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function(event) {
    return event.relatedTarget || (
      event.fromElement === event.srcElement ?
        event.toElement :
        event.fromElement
    );
  },
  // "Proprietary" Interface.
  pageX: function(event) {
    return 'pageX' in event ?
      event.pageX :
      event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function(event) {
    return 'pageY' in event ?
      event.pageY :
      event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;

},{"./SyntheticUIEvent":93,"./ViewportMetrics":96,"./getEventModifierState":116}],92:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticTouchEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");

var getEventModifierState = _dereq_("./getEventModifierState");

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;

},{"./SyntheticUIEvent":93,"./getEventModifierState":116}],93:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticUIEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticEvent = _dereq_("./SyntheticEvent");

var getEventTarget = _dereq_("./getEventTarget");

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function(event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target != null && target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function(event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;

},{"./SyntheticEvent":87,"./getEventTarget":117}],94:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticWheelEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function(event) {
    return (
      'deltaX' in event ? event.deltaX :
      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
      'wheelDeltaX' in event ? -event.wheelDeltaX : 0
    );
  },
  deltaY: function(event) {
    return (
      'deltaY' in event ? event.deltaY :
      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
      'wheelDeltaY' in event ? -event.wheelDeltaY :
      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
      'wheelDelta' in event ? -event.wheelDelta : 0
    );
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;

},{"./SyntheticMouseEvent":91}],95:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Transaction
 */

"use strict";

var invariant = _dereq_("./invariant");

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM upates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var Mixin = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function() {
    this.transactionWrappers = this.getTransactionWrappers();
    if (!this.wrapperInitData) {
      this.wrapperInitData = [];
    } else {
      this.wrapperInitData.length = 0;
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function() {
    return !!this._isInTransaction;
  },

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} args... Arguments to pass to the method (optional).
   *                           Helps prevent need to bind in many cases.
   * @return Return value from `method`.
   */
  perform: function(method, scope, a, b, c, d, e, f) {
    ("production" !== "development" ? invariant(
      !this.isInTransaction(),
      'Transaction.perform(...): Cannot initialize a transaction when there ' +
      'is already an outstanding transaction.'
    ) : invariant(!this.isInTransaction()));
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {
          }
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function(startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ?
          wrapper.initialize.call(this) :
          null;
      } finally {
        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {
          }
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function(startIndex) {
    ("production" !== "development" ? invariant(
      this.isInTransaction(),
      'Transaction.closeAll(): Cannot close transaction when none are open.'
    ) : invariant(this.isInTransaction()));
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== Transaction.OBSERVED_ERROR) {
          wrapper.close && wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {
          }
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

var Transaction = {

  Mixin: Mixin,

  /**
   * Token to look for to determine if an error occured.
   */
  OBSERVED_ERROR: {}

};

module.exports = Transaction;

},{"./invariant":126}],96:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ViewportMetrics
 */

"use strict";

var getUnboundedScrollPosition = _dereq_("./getUnboundedScrollPosition");

var ViewportMetrics = {

  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function() {
    var scrollPosition = getUnboundedScrollPosition(window);
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }

};

module.exports = ViewportMetrics;

},{"./getUnboundedScrollPosition":122}],97:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule accumulateInto
 */

"use strict";

var invariant = _dereq_("./invariant");

/**
 *
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  ("production" !== "development" ? invariant(
    next != null,
    'accumulateInto(...): Accumulated items must not be null or undefined.'
  ) : invariant(next != null));
  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  var currentIsArray = Array.isArray(current);
  var nextIsArray = Array.isArray(next);

  if (currentIsArray && nextIsArray) {
    current.push.apply(current, next);
    return current;
  }

  if (currentIsArray) {
    current.push(next);
    return current;
  }

  if (nextIsArray) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;

},{"./invariant":126}],98:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule adler32
 */

/* jslint bitwise:true */

"use strict";

var MOD = 65521;

// This is a clean-room implementation of adler32 designed for detecting
// if markup is not what we expect it to be. It does not need to be
// cryptographically strong, only reasonably good at detecting if markup
// generated on the server is different than that on the client.
function adler32(data) {
  var a = 1;
  var b = 0;
  for (var i = 0; i < data.length; i++) {
    a = (a + data.charCodeAt(i)) % MOD;
    b = (b + a) % MOD;
  }
  return a | (b << 16);
}

module.exports = adler32;

},{}],99:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule camelize
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function(_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;

},{}],100:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule camelizeStyleName
 * @typechecks
 */

"use strict";

var camelize = _dereq_("./camelize");

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;

},{"./camelize":99}],101:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule containsNode
 * @typechecks
 */

var isTextNode = _dereq_("./isTextNode");

/*jslint bitwise:true */

/**
 * Checks if a given DOM node contains or is another DOM node.
 *
 * @param {?DOMNode} outerNode Outer DOM node.
 * @param {?DOMNode} innerNode Inner DOM node.
 * @return {boolean} True if `outerNode` contains or is `innerNode`.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if (outerNode.contains) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;

},{"./isTextNode":130}],102:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule createArrayFrom
 * @typechecks
 */

var toArray = _dereq_("./toArray");

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return (
    // not null/false
    !!obj &&
    // arrays are objects, NodeLists are functions in Safari
    (typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    ('length' in obj) &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    (typeof obj.nodeType != 'number') &&
    (
      // a real array
      (// HTMLCollection/NodeList
      (Array.isArray(obj) ||
      // arguments
      ('callee' in obj) || 'item' in obj))
    )
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFrom = require('createArrayFrom');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFrom(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFrom(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFrom;

},{"./toArray":143}],103:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule createFullPageComponent
 * @typechecks
 */

"use strict";

// Defeat circular references by requiring this directly.
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactElement = _dereq_("./ReactElement");

var invariant = _dereq_("./invariant");

/**
 * Create a component that will throw an exception when unmounted.
 *
 * Components like <html> <head> and <body> can't be removed or added
 * easily in a cross-browser way, however it's valuable to be able to
 * take advantage of React's reconciliation for styling and <title>
 * management. So we just document it and throw in dangerous cases.
 *
 * @param {string} tag The tag to wrap
 * @return {function} convenience constructor of new component
 */
function createFullPageComponent(tag) {
  var elementFactory = ReactElement.createFactory(tag);

  var FullPageComponent = ReactCompositeComponent.createClass({
    displayName: 'ReactFullPageComponent' + tag,

    componentWillUnmount: function() {
      ("production" !== "development" ? invariant(
        false,
        '%s tried to unmount. Because of cross-browser quirks it is ' +
        'impossible to unmount some top-level components (eg <html>, <head>, ' +
        'and <body>) reliably and efficiently. To fix this, have a single ' +
        'top-level component that never unmounts render these elements.',
        this.constructor.displayName
      ) : invariant(false));
    },

    render: function() {
      return elementFactory(this.props);
    }
  });

  return FullPageComponent;
}

module.exports = createFullPageComponent;

},{"./ReactCompositeComponent":34,"./ReactElement":52,"./invariant":126}],104:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule createNodesFromMarkup
 * @typechecks
 */

/*jslint evil: true, sub: true */

var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var createArrayFrom = _dereq_("./createArrayFrom");
var getMarkupWrap = _dereq_("./getMarkupWrap");
var invariant = _dereq_("./invariant");

/**
 * Dummy container used to render all markup.
 */
var dummyNode =
  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  ("production" !== "development" ? invariant(!!dummyNode, 'createNodesFromMarkup dummy not initialized') : invariant(!!dummyNode));
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    ("production" !== "development" ? invariant(
      handleScript,
      'createNodesFromMarkup(...): Unexpected <script> element rendered.'
    ) : invariant(handleScript));
    createArrayFrom(scripts).forEach(handleScript);
  }

  var nodes = createArrayFrom(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;

},{"./ExecutionEnvironment":22,"./createArrayFrom":102,"./getMarkupWrap":118,"./invariant":126}],105:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule dangerousStyleValue
 * @typechecks static-only
 */

"use strict";

var CSSProperty = _dereq_("./CSSProperty");

var isUnitlessNumber = CSSProperty.isUnitlessNumber;

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isNonNumeric || value === 0 ||
      isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;

},{"./CSSProperty":4}],106:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule deprecated
 */

var assign = _dereq_("./Object.assign");
var warning = _dereq_("./warning");

/**
 * This will log a single deprecation notice per function and forward the call
 * on to the new API.
 *
 * @param {string} namespace The namespace of the call, eg 'React'
 * @param {string} oldName The old function name, eg 'renderComponent'
 * @param {string} newName The new function name, eg 'render'
 * @param {*} ctx The context this forwarded call should run in
 * @param {function} fn The function to forward on to
 * @return {*} Will be the value as returned from `fn`
 */
function deprecated(namespace, oldName, newName, ctx, fn) {
  var warned = false;
  if ("production" !== "development") {
    var newFn = function() {
      ("production" !== "development" ? warning(
        warned,
        (namespace + "." + oldName + " will be deprecated in a future version. ") +
        ("Use " + namespace + "." + newName + " instead.")
      ) : null);
      warned = true;
      return fn.apply(ctx, arguments);
    };
    newFn.displayName = (namespace + "_" + oldName);
    // We need to make sure all properties of the original fn are copied over.
    // In particular, this is needed to support PropTypes
    return assign(newFn, fn);
  }

  return fn;
}

module.exports = deprecated;

},{"./Object.assign":27,"./warning":145}],107:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule emptyFunction
 */

function makeEmptyFunction(arg) {
  return function() {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
function emptyFunction() {}

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function() { return this; };
emptyFunction.thatReturnsArgument = function(arg) { return arg; };

module.exports = emptyFunction;

},{}],108:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule emptyObject
 */

"use strict";

var emptyObject = {};

if ("production" !== "development") {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;

},{}],109:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule escapeTextForBrowser
 * @typechecks static-only
 */

"use strict";

var ESCAPE_LOOKUP = {
  "&": "&amp;",
  ">": "&gt;",
  "<": "&lt;",
  "\"": "&quot;",
  "'": "&#x27;"
};

var ESCAPE_REGEX = /[&><"']/g;

function escaper(match) {
  return ESCAPE_LOOKUP[match];
}

/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextForBrowser(text) {
  return ('' + text).replace(ESCAPE_REGEX, escaper);
}

module.exports = escapeTextForBrowser;

},{}],110:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule flattenChildren
 */

"use strict";

var ReactTextComponent = _dereq_("./ReactTextComponent");

var traverseAllChildren = _dereq_("./traverseAllChildren");
var warning = _dereq_("./warning");

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 */
function flattenSingleChildIntoContext(traverseContext, child, name) {
  // We found a component instance.
  var result = traverseContext;
  var keyUnique = !result.hasOwnProperty(name);
  ("production" !== "development" ? warning(
    keyUnique,
    'flattenChildren(...): Encountered two children with the same key, ' +
    '`%s`. Child keys must be unique; when two children share a key, only ' +
    'the first child will be used.',
    name
  ) : null);
  if (keyUnique && child != null) {
    var type = typeof child;
    var normalizedValue;

    if (type === 'string') {
      normalizedValue = ReactTextComponent(child);
    } else if (type === 'number') {
      normalizedValue = ReactTextComponent('' + child);
    } else {
      normalizedValue = child;
    }

    result[name] = normalizedValue;
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children) {
  if (children == null) {
    return children;
  }
  var result = {};
  traverseAllChildren(children, flattenSingleChildIntoContext, result);
  return result;
}

module.exports = flattenChildren;

},{"./ReactTextComponent":78,"./traverseAllChildren":144,"./warning":145}],111:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule focusNode
 */

"use strict";

/**
 * @param {DOMElement} node input/textarea to focus
 */
function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch(e) {
  }
}

module.exports = focusNode;

},{}],112:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule forEachAccumulated
 */

"use strict";

/**
 * @param {array} an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */
var forEachAccumulated = function(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
};

module.exports = forEachAccumulated;

},{}],113:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getActiveElement
 * @typechecks
 */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document body is not yet defined.
 */
function getActiveElement() /*?DOMElement*/ {
  try {
    return document.activeElement || document.body;
  } catch (e) {
    return document.body;
  }
}

module.exports = getActiveElement;

},{}],114:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventCharCode
 * @typechecks static-only
 */

"use strict";

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `charCode` property.
 */
function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;

},{}],115:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventKey
 * @typechecks static-only
 */

"use strict";

var getEventCharCode = _dereq_("./getEventCharCode");

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  'Esc': 'Escape',
  'Spacebar': ' ',
  'Left': 'ArrowLeft',
  'Up': 'ArrowUp',
  'Right': 'ArrowRight',
  'Down': 'ArrowDown',
  'Del': 'Delete',
  'Win': 'OS',
  'Menu': 'ContextMenu',
  'Apps': 'ContextMenu',
  'Scroll': 'ScrollLock',
  'MozPrintableKey': 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;

},{"./getEventCharCode":114}],116:[function(_dereq_,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventModifierState
 * @typechecks static-only
 */

"use strict";

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  'Alt': 'altKey',
  'Control': 'ctrlKey',
  'Meta': 'metaKey',
  'Shift': 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  /*jshint validthis:true */
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;

},{}],117:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventTarget
 * @typechecks static-only
 */

"use strict";

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */
function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;
  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;

},{}],118:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getMarkupWrap
 */

var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var invariant = _dereq_("./invariant");

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode =
  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */
var shouldWrap = {
  // Force wrapping for SVG elements because if they get created inside a <div>,
  // they will be initialized in the wrong namespace (and will not display).
  'circle': true,
  'defs': true,
  'ellipse': true,
  'g': true,
  'line': true,
  'linearGradient': true,
  'path': true,
  'polygon': true,
  'polyline': true,
  'radialGradient': true,
  'rect': true,
  'stop': true,
  'text': true
};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg>', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap,

  'circle': svgWrap,
  'defs': svgWrap,
  'ellipse': svgWrap,
  'g': svgWrap,
  'line': svgWrap,
  'linearGradient': svgWrap,
  'path': svgWrap,
  'polygon': svgWrap,
  'polyline': svgWrap,
  'radialGradient': svgWrap,
  'rect': svgWrap,
  'stop': svgWrap,
  'text': svgWrap
};

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  ("production" !== "development" ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}


module.exports = getMarkupWrap;

},{"./ExecutionEnvironment":22,"./invariant":126}],119:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getNodeForCharacterOffset
 */

"use strict";

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */
function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType == 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;

},{}],120:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getReactRootElementInContainer
 */

"use strict";

var DOC_NODE_TYPE = 9;

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 *                                           a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

module.exports = getReactRootElementInContainer;

},{}],121:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getTextContentAccessor
 */

"use strict";

var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ?
      'textContent' :
      'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;

},{"./ExecutionEnvironment":22}],122:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getUnboundedScrollPosition
 * @typechecks
 */

"use strict";

/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */
function getUnboundedScrollPosition(scrollable) {
  if (scrollable === window) {
    return {
      x: window.pageXOffset || document.documentElement.scrollLeft,
      y: window.pageYOffset || document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;

},{}],123:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule hyphenate
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;

},{}],124:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule hyphenateStyleName
 * @typechecks
 */

"use strict";

var hyphenate = _dereq_("./hyphenate");

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;

},{"./hyphenate":123}],125:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule instantiateReactComponent
 * @typechecks static-only
 */

"use strict";

var warning = _dereq_("./warning");

var ReactElement = _dereq_("./ReactElement");
var ReactLegacyElement = _dereq_("./ReactLegacyElement");
var ReactNativeComponent = _dereq_("./ReactNativeComponent");
var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");

/**
 * Given an `element` create an instance that will actually be mounted.
 *
 * @param {object} element
 * @param {*} parentCompositeType The composite type that resolved this.
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(element, parentCompositeType) {
  var instance;

  if ("production" !== "development") {
    ("production" !== "development" ? warning(
      element && (typeof element.type === 'function' ||
                     typeof element.type === 'string'),
      'Only functions or strings can be mounted as React components.'
    ) : null);

    // Resolve mock instances
    if (element.type._mockedReactClassConstructor) {
      // If this is a mocked class, we treat the legacy factory as if it was the
      // class constructor for future proofing unit tests. Because this might
      // be mocked as a legacy factory, we ignore any warnings triggerd by
      // this temporary hack.
      ReactLegacyElement._isLegacyCallWarningEnabled = false;
      try {
        instance = new element.type._mockedReactClassConstructor(
          element.props
        );
      } finally {
        ReactLegacyElement._isLegacyCallWarningEnabled = true;
      }

      // If the mock implementation was a legacy factory, then it returns a
      // element. We need to turn this into a real component instance.
      if (ReactElement.isValidElement(instance)) {
        instance = new instance.type(instance.props);
      }

      var render = instance.render;
      if (!render) {
        // For auto-mocked factories, the prototype isn't shimmed and therefore
        // there is no render function on the instance. We replace the whole
        // component with an empty component instance instead.
        element = ReactEmptyComponent.getEmptyComponent();
      } else {
        if (render._isMockFunction && !render._getMockImplementation()) {
          // Auto-mocked components may have a prototype with a mocked render
          // function. For those, we'll need to mock the result of the render
          // since we consider undefined to be invalid results from render.
          render.mockImplementation(
            ReactEmptyComponent.getEmptyComponent
          );
        }
        instance.construct(element);
        return instance;
      }
    }
  }

  // Special case string values
  if (typeof element.type === 'string') {
    instance = ReactNativeComponent.createInstanceForTag(
      element.type,
      element.props,
      parentCompositeType
    );
  } else {
    // Normal case for non-mocks and non-strings
    instance = new element.type(element.props);
  }

  if ("production" !== "development") {
    ("production" !== "development" ? warning(
      typeof instance.construct === 'function' &&
      typeof instance.mountComponent === 'function' &&
      typeof instance.receiveComponent === 'function',
      'Only React Components can be mounted.'
    ) : null);
  }

  // This actually sets up the internal instance. This will become decoupled
  // from the public instance in a future diff.
  instance.construct(element);

  return instance;
}

module.exports = instantiateReactComponent;

},{"./ReactElement":52,"./ReactEmptyComponent":54,"./ReactLegacyElement":61,"./ReactNativeComponent":66,"./warning":145}],126:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule invariant
 */

"use strict";

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function(condition, format, a, b, c, d, e, f) {
  if ("production" !== "development") {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error(
        'Minified exception occurred; use the non-minified dev environment ' +
        'for the full error message and additional helpful warnings.'
      );
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(
        'Invariant Violation: ' +
        format.replace(/%s/g, function() { return args[argIndex++]; })
      );
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
};

module.exports = invariant;

},{}],127:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isEventSupported
 */

"use strict";

var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature =
    document.implementation &&
    document.implementation.hasFeature &&
    // always returns true in newer browsers as per the standard.
    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
    document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM ||
      capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;

},{"./ExecutionEnvironment":22}],128:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isNode
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  return !!(object && (
    typeof Node === 'function' ? object instanceof Node :
      typeof object === 'object' &&
      typeof object.nodeType === 'number' &&
      typeof object.nodeName === 'string'
  ));
}

module.exports = isNode;

},{}],129:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isTextInputElement
 */

"use strict";

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  'color': true,
  'date': true,
  'datetime': true,
  'datetime-local': true,
  'email': true,
  'month': true,
  'number': true,
  'password': true,
  'range': true,
  'search': true,
  'tel': true,
  'text': true,
  'time': true,
  'url': true,
  'week': true
};

function isTextInputElement(elem) {
  return elem && (
    (elem.nodeName === 'INPUT' && supportedInputTypes[elem.type]) ||
    elem.nodeName === 'TEXTAREA'
  );
}

module.exports = isTextInputElement;

},{}],130:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isTextNode
 * @typechecks
 */

var isNode = _dereq_("./isNode");

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;

},{"./isNode":128}],131:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule joinClasses
 * @typechecks static-only
 */

"use strict";

/**
 * Combines multiple className strings into one.
 * http://jsperf.com/joinclasses-args-vs-array
 *
 * @param {...?string} classes
 * @return {string}
 */
function joinClasses(className/*, ... */) {
  if (!className) {
    className = '';
  }
  var nextClass;
  var argLength = arguments.length;
  if (argLength > 1) {
    for (var ii = 1; ii < argLength; ii++) {
      nextClass = arguments[ii];
      if (nextClass) {
        className = (className ? className + ' ' : '') + nextClass;
      }
    }
  }
  return className;
}

module.exports = joinClasses;

},{}],132:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule keyMirror
 * @typechecks static-only
 */

"use strict";

var invariant = _dereq_("./invariant");

/**
 * Constructs an enumeration with keys equal to their value.
 *
 * For example:
 *
 *   var COLORS = keyMirror({blue: null, red: null});
 *   var myColor = COLORS.blue;
 *   var isColorValid = !!COLORS[myColor];
 *
 * The last line could not be performed if the values of the generated enum were
 * not equal to their keys.
 *
 *   Input:  {key1: val1, key2: val2}
 *   Output: {key1: key1, key2: key2}
 *
 * @param {object} obj
 * @return {object}
 */
var keyMirror = function(obj) {
  var ret = {};
  var key;
  ("production" !== "development" ? invariant(
    obj instanceof Object && !Array.isArray(obj),
    'keyMirror(...): Argument must be an object.'
  ) : invariant(obj instanceof Object && !Array.isArray(obj)));
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;

},{"./invariant":126}],133:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule keyOf
 */

/**
 * Allows extraction of a minified key. Let's the build system minify keys
 * without loosing the ability to dynamically use key strings as values
 * themselves. Pass in an object with a single key/val pair and it will return
 * you the string key of that single record. Suppose you want to grab the
 * value for a key 'className' inside of an object. Key/val minification may
 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
 * reuse those resolutions.
 */
var keyOf = function(oneKeyObj) {
  var key;
  for (key in oneKeyObj) {
    if (!oneKeyObj.hasOwnProperty(key)) {
      continue;
    }
    return key;
  }
  return null;
};


module.exports = keyOf;

},{}],134:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule mapObject
 */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * Executes the provided `callback` once for each enumerable own property in the
 * object and constructs a new object from the results. The `callback` is
 * invoked with three arguments:
 *
 *  - the property value
 *  - the property name
 *  - the object being traversed
 *
 * Properties that are added after the call to `mapObject` will not be visited
 * by `callback`. If the values of existing properties are changed, the value
 * passed to `callback` will be the value at the time `mapObject` visits them.
 * Properties that are deleted before being visited are not visited.
 *
 * @grep function objectMap()
 * @grep function objMap()
 *
 * @param {?object} object
 * @param {function} callback
 * @param {*} context
 * @return {?object}
 */
function mapObject(object, callback, context) {
  if (!object) {
    return null;
  }
  var result = {};
  for (var name in object) {
    if (hasOwnProperty.call(object, name)) {
      result[name] = callback.call(context, object[name], name, object);
    }
  }
  return result;
}

module.exports = mapObject;

},{}],135:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule memoizeStringOnly
 * @typechecks static-only
 */

"use strict";

/**
 * Memoizes the return value of a function that accepts one string argument.
 *
 * @param {function} callback
 * @return {function}
 */
function memoizeStringOnly(callback) {
  var cache = {};
  return function(string) {
    if (cache.hasOwnProperty(string)) {
      return cache[string];
    } else {
      return cache[string] = callback.call(this, string);
    }
  };
}

module.exports = memoizeStringOnly;

},{}],136:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule monitorCodeUse
 */

"use strict";

var invariant = _dereq_("./invariant");

/**
 * Provides open-source compatible instrumentation for monitoring certain API
 * uses before we're ready to issue a warning or refactor. It accepts an event
 * name which may only contain the characters [a-z0-9_] and an optional data
 * object with further information.
 */

function monitorCodeUse(eventName, data) {
  ("production" !== "development" ? invariant(
    eventName && !/[^a-z0-9_]/.test(eventName),
    'You must provide an eventName using only the characters [a-z0-9_]'
  ) : invariant(eventName && !/[^a-z0-9_]/.test(eventName)));
}

module.exports = monitorCodeUse;

},{"./invariant":126}],137:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule onlyChild
 */
"use strict";

var ReactElement = _dereq_("./ReactElement");

var invariant = _dereq_("./invariant");

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection. The current implementation of this
 * function assumes that a single child gets passed without a wrapper, but the
 * purpose of this helper function is to abstract away the particular structure
 * of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactComponent} The first and only `ReactComponent` contained in the
 * structure.
 */
function onlyChild(children) {
  ("production" !== "development" ? invariant(
    ReactElement.isValidElement(children),
    'onlyChild must be passed a children with exactly one child.'
  ) : invariant(ReactElement.isValidElement(children)));
  return children;
}

module.exports = onlyChild;

},{"./ReactElement":52,"./invariant":126}],138:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule performance
 * @typechecks
 */

"use strict";

var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance =
    window.performance ||
    window.msPerformance ||
    window.webkitPerformance;
}

module.exports = performance || {};

},{"./ExecutionEnvironment":22}],139:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule performanceNow
 * @typechecks
 */

var performance = _dereq_("./performance");

/**
 * Detect if we can use `window.performance.now()` and gracefully fallback to
 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
 * because of Facebook's testing infrastructure.
 */
if (!performance || !performance.now) {
  performance = Date;
}

var performanceNow = performance.now.bind(performance);

module.exports = performanceNow;

},{"./performance":138}],140:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule setInnerHTML
 */

"use strict";

var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = function(node, html) {
  node.innerHTML = html;
};

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function(node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) ||
          html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        node.innerHTML = '\uFEFF' + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
}

module.exports = setInnerHTML;

},{"./ExecutionEnvironment":22}],141:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule shallowEqual
 */

"use strict";

/**
 * Performs equality by iterating through keys on an object and returning
 * false when any key has values which are not strictly equal between
 * objA and objB. Returns true when the values of all keys are strictly equal.
 *
 * @return {boolean}
 */
function shallowEqual(objA, objB) {
  if (objA === objB) {
    return true;
  }
  var key;
  // Test for A's keys different from B.
  for (key in objA) {
    if (objA.hasOwnProperty(key) &&
        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {
      return false;
    }
  }
  // Test for B's keys missing from A.
  for (key in objB) {
    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {
      return false;
    }
  }
  return true;
}

module.exports = shallowEqual;

},{}],142:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule shouldUpdateReactComponent
 * @typechecks static-only
 */

"use strict";

/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */
function shouldUpdateReactComponent(prevElement, nextElement) {
  if (prevElement && nextElement &&
      prevElement.type === nextElement.type &&
      prevElement.key === nextElement.key &&
      prevElement._owner === nextElement._owner) {
    return true;
  }
  return false;
}

module.exports = shouldUpdateReactComponent;

},{}],143:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule toArray
 * @typechecks
 */

var invariant = _dereq_("./invariant");

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFrom.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
  // old versions of Safari).
  ("production" !== "development" ? invariant(
    !Array.isArray(obj) &&
    (typeof obj === 'object' || typeof obj === 'function'),
    'toArray: Array-like object expected'
  ) : invariant(!Array.isArray(obj) &&
  (typeof obj === 'object' || typeof obj === 'function')));

  ("production" !== "development" ? invariant(
    typeof length === 'number',
    'toArray: Object needs a length property'
  ) : invariant(typeof length === 'number'));

  ("production" !== "development" ? invariant(
    length === 0 ||
    (length - 1) in obj,
    'toArray: Object should have keys for indices'
  ) : invariant(length === 0 ||
  (length - 1) in obj));

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

module.exports = toArray;

},{"./invariant":126}],144:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule traverseAllChildren
 */

"use strict";

var ReactElement = _dereq_("./ReactElement");
var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");

var invariant = _dereq_("./invariant");

var SEPARATOR = ReactInstanceHandles.SEPARATOR;
var SUBSEPARATOR = ':';

/**
 * TODO: Test that:
 * 1. `mapChildren` transforms strings and numbers into `ReactTextComponent`.
 * 2. it('should fail when supplied duplicate key', function() {
 * 3. That a single child and an array with one item have the same key pattern.
 * });
 */

var userProvidedKeyEscaperLookup = {
  '=': '=0',
  '.': '=1',
  ':': '=2'
};

var userProvidedKeyEscapeRegex = /[=.:]/g;

function userProvidedKeyEscaper(match) {
  return userProvidedKeyEscaperLookup[match];
}

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  if (component && component.key != null) {
    // Explicit key
    return wrapUserProvidedKey(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * Escape a component key so that it is safe to use in a reactid.
 *
 * @param {*} key Component key to be escaped.
 * @return {string} An escaped string.
 */
function escapeUserProvidedKey(text) {
  return ('' + text).replace(
    userProvidedKeyEscapeRegex,
    userProvidedKeyEscaper
  );
}

/**
 * Wrap a `key` value explicitly provided by the user to distinguish it from
 * implicitly-generated keys generated by a component's index in its parent.
 *
 * @param {string} key Value of a user-provided `key` attribute
 * @return {string}
 */
function wrapUserProvidedKey(key) {
  return '$' + escapeUserProvidedKey(key);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!number} indexSoFar Number of children encountered until this point.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
var traverseAllChildrenImpl =
  function(children, nameSoFar, indexSoFar, callback, traverseContext) {
    var nextName, nextIndex;
    var subtreeCount = 0;  // Count of children found in the current subtree.
    if (Array.isArray(children)) {
      for (var i = 0; i < children.length; i++) {
        var child = children[i];
        nextName = (
          nameSoFar +
          (nameSoFar ? SUBSEPARATOR : SEPARATOR) +
          getComponentKey(child, i)
        );
        nextIndex = indexSoFar + subtreeCount;
        subtreeCount += traverseAllChildrenImpl(
          child,
          nextName,
          nextIndex,
          callback,
          traverseContext
        );
      }
    } else {
      var type = typeof children;
      var isOnlyChild = nameSoFar === '';
      // If it's the only child, treat the name as if it was wrapped in an array
      // so that it's consistent if the number of children grows
      var storageName =
        isOnlyChild ? SEPARATOR + getComponentKey(children, 0) : nameSoFar;
      if (children == null || type === 'boolean') {
        // All of the above are perceived as null.
        callback(traverseContext, null, storageName, indexSoFar);
        subtreeCount = 1;
      } else if (type === 'string' || type === 'number' ||
                 ReactElement.isValidElement(children)) {
        callback(traverseContext, children, storageName, indexSoFar);
        subtreeCount = 1;
      } else if (type === 'object') {
        ("production" !== "development" ? invariant(
          !children || children.nodeType !== 1,
          'traverseAllChildren(...): Encountered an invalid child; DOM ' +
          'elements are not valid children of React components.'
        ) : invariant(!children || children.nodeType !== 1));
        for (var key in children) {
          if (children.hasOwnProperty(key)) {
            nextName = (
              nameSoFar + (nameSoFar ? SUBSEPARATOR : SEPARATOR) +
              wrapUserProvidedKey(key) + SUBSEPARATOR +
              getComponentKey(children[key], 0)
            );
            nextIndex = indexSoFar + subtreeCount;
            subtreeCount += traverseAllChildrenImpl(
              children[key],
              nextName,
              nextIndex,
              callback,
              traverseContext
            );
          }
        }
      }
    }
    return subtreeCount;
  };

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', 0, callback, traverseContext);
}

module.exports = traverseAllChildren;

},{"./ReactElement":52,"./ReactInstanceHandles":60,"./invariant":126}],145:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule warning
 */

"use strict";

var emptyFunction = _dereq_("./emptyFunction");

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if ("production" !== "development") {
  warning = function(condition, format ) {for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
    if (format === undefined) {
      throw new Error(
        '`warning(condition, format, ...args)` requires a warning ' +
        'message argument'
      );
    }

    if (!condition) {
      var argIndex = 0;
      console.warn('Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];}));
    }
  };
}

module.exports = warning;

},{"./emptyFunction":107}]},{},[1])(1)
});
var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3123";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_ = "default";
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__16122__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__16121 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__16121) : cljs.core.into_array.call(null, G__16121);
      }());
    };
    var G__16122 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__16123__i = 0, G__16123__a = new Array(arguments.length - 0);
        while (G__16123__i < G__16123__a.length) {
          G__16123__a[G__16123__i] = arguments[G__16123__i + 0];
          ++G__16123__i;
        }
        args = new cljs.core.IndexedSeq(G__16123__a, 0);
      }
      return G__16122__delegate.call(this, args);
    };
    G__16122.cljs$lang$maxFixedArity = 0;
    G__16122.cljs$lang$applyTo = function(arglist__16124) {
      var args = cljs.core.seq(arglist__16124);
      return G__16122__delegate(args);
    };
    G__16122.cljs$core$IFn$_invoke$arity$variadic = G__16122__delegate;
    return G__16122;
  }();
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  var G__16126 = x;
  return goog.isString(G__16126);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__16128 = x__$1;
    return goog.typeOf(G__16128);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4097__auto__ = ty;
    if (cljs.core.truth_(and__4097__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4097__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__16130 = obj;
    return goog.typeOf(G__16130);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__16132 = Symbol;
  return goog.typeOf(G__16132);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var cljs$core$make_array = null;
  var cljs$core$make_array__1 = function(size) {
    return new Array(size);
  };
  var cljs$core$make_array__2 = function(type, size) {
    return cljs$core$make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  cljs$core$make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return cljs$core$make_array__1.call(this, type);
      case 2:
        return cljs$core$make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$make_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$make_array__1;
  cljs$core$make_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$make_array__2;
  return cljs$core$make_array;
}();
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4994__auto___16134 = len;
  var i_16135 = 0;
  while (true) {
    if (i_16135 < n__4994__auto___16134) {
      new_arr[i_16135] = arr[i_16135];
      var G__16136 = i_16135 + 1;
      i_16135 = G__16136;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__16137 = i + 1;
      i = G__16137;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var cljs$core$aget = null;
  var cljs$core$aget__2 = function(array, i) {
    return array[i];
  };
  var cljs$core$aget__3 = function() {
    var G__16146__delegate = function(array, i, idxs) {
      var G__16143 = cljs$core$aget;
      var G__16144 = cljs$core$aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__16145 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__16143, G__16144, G__16145) : cljs.core.apply.call(null, G__16143, G__16144, G__16145);
    };
    var G__16146 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__16147__i = 0, G__16147__a = new Array(arguments.length - 2);
        while (G__16147__i < G__16147__a.length) {
          G__16147__a[G__16147__i] = arguments[G__16147__i + 2];
          ++G__16147__i;
        }
        idxs = new cljs.core.IndexedSeq(G__16147__a, 0);
      }
      return G__16146__delegate.call(this, array, i, idxs);
    };
    G__16146.cljs$lang$maxFixedArity = 2;
    G__16146.cljs$lang$applyTo = function(arglist__16148) {
      var array = cljs.core.first(arglist__16148);
      arglist__16148 = cljs.core.next(arglist__16148);
      var i = cljs.core.first(arglist__16148);
      var idxs = cljs.core.rest(arglist__16148);
      return G__16146__delegate(array, i, idxs);
    };
    G__16146.cljs$core$IFn$_invoke$arity$variadic = G__16146__delegate;
    return G__16146;
  }();
  cljs$core$aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$aget__2.call(this, array, i);
      default:
        var G__16149 = null;
        if (arguments.length > 2) {
          var G__16150__i = 0, G__16150__a = new Array(arguments.length - 2);
          while (G__16150__i < G__16150__a.length) {
            G__16150__a[G__16150__i] = arguments[G__16150__i + 2];
            ++G__16150__i;
          }
          G__16149 = new cljs.core.IndexedSeq(G__16150__a, 0);
        }
        return cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__16149);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$aget.cljs$lang$maxFixedArity = 2;
  cljs$core$aget.cljs$lang$applyTo = cljs$core$aget__3.cljs$lang$applyTo;
  cljs$core$aget.cljs$core$IFn$_invoke$arity$2 = cljs$core$aget__2;
  cljs$core$aget.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$aget;
}();
cljs.core.aset = function() {
  var cljs$core$aset = null;
  var cljs$core$aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var cljs$core$aset__4 = function() {
    var G__16159__delegate = function(array, idx, idx2, idxv) {
      var G__16155 = cljs$core$aset;
      var G__16156 = array[idx];
      var G__16157 = idx2;
      var G__16158 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__16155, G__16156, G__16157, G__16158) : cljs.core.apply.call(null, G__16155, G__16156, G__16157, G__16158);
    };
    var G__16159 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__16160__i = 0, G__16160__a = new Array(arguments.length - 3);
        while (G__16160__i < G__16160__a.length) {
          G__16160__a[G__16160__i] = arguments[G__16160__i + 3];
          ++G__16160__i;
        }
        idxv = new cljs.core.IndexedSeq(G__16160__a, 0);
      }
      return G__16159__delegate.call(this, array, idx, idx2, idxv);
    };
    G__16159.cljs$lang$maxFixedArity = 3;
    G__16159.cljs$lang$applyTo = function(arglist__16161) {
      var array = cljs.core.first(arglist__16161);
      arglist__16161 = cljs.core.next(arglist__16161);
      var idx = cljs.core.first(arglist__16161);
      arglist__16161 = cljs.core.next(arglist__16161);
      var idx2 = cljs.core.first(arglist__16161);
      var idxv = cljs.core.rest(arglist__16161);
      return G__16159__delegate(array, idx, idx2, idxv);
    };
    G__16159.cljs$core$IFn$_invoke$arity$variadic = G__16159__delegate;
    return G__16159;
  }();
  cljs$core$aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return cljs$core$aset__3.call(this, array, idx, idx2);
      default:
        var G__16162 = null;
        if (arguments.length > 3) {
          var G__16163__i = 0, G__16163__a = new Array(arguments.length - 3);
          while (G__16163__i < G__16163__a.length) {
            G__16163__a[G__16163__i] = arguments[G__16163__i + 3];
            ++G__16163__i;
          }
          G__16162 = new cljs.core.IndexedSeq(G__16163__a, 0);
        }
        return cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__16162);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$aset.cljs$lang$maxFixedArity = 3;
  cljs$core$aset.cljs$lang$applyTo = cljs$core$aset__4.cljs$lang$applyTo;
  cljs$core$aset.cljs$core$IFn$_invoke$arity$3 = cljs$core$aset__3;
  cljs$core$aset.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$aset;
}();
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var cljs$core$into_array = null;
  var cljs$core$into_array__1 = function(aseq) {
    return cljs$core$into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var cljs$core$into_array__2 = function(type, aseq) {
    var G__16169 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__16170 = [];
    var G__16171 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__16169, G__16170, G__16171) : cljs.core.reduce.call(null, G__16169, G__16170, G__16171);
  };
  cljs$core$into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return cljs$core$into_array__1.call(this, type);
      case 2:
        return cljs$core$into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$into_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$into_array__1;
  cljs$core$into_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$into_array__2;
  return cljs$core$into_array;
}();
cljs.core.js_invoke = function() {
  var cljs$core$js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var cljs$core$js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__16172__i = 0, G__16172__a = new Array(arguments.length - 2);
      while (G__16172__i < G__16172__a.length) {
        G__16172__a[G__16172__i] = arguments[G__16172__i + 2];
        ++G__16172__i;
      }
      args = new cljs.core.IndexedSeq(G__16172__a, 0);
    }
    return cljs$core$js_invoke__delegate.call(this, obj, s, args);
  };
  cljs$core$js_invoke.cljs$lang$maxFixedArity = 2;
  cljs$core$js_invoke.cljs$lang$applyTo = function(arglist__16173) {
    var obj = cljs.core.first(arglist__16173);
    arglist__16173 = cljs.core.next(arglist__16173);
    var s = cljs.core.first(arglist__16173);
    var args = cljs.core.rest(arglist__16173);
    return cljs$core$js_invoke__delegate(obj, s, args);
  };
  cljs$core$js_invoke.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_invoke__delegate;
  return cljs$core$js_invoke;
}();
cljs.core.Fn = function() {
  var obj16175 = {};
  return obj16175;
}();
cljs.core.IFn = function() {
  var obj16177 = {};
  return obj16177;
}();
cljs.core._invoke = function() {
  var cljs$core$_invoke = null;
  var cljs$core$_invoke__1 = function(this$) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16223 = x__4745__auto__;
          return goog.typeOf(G__16223);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var cljs$core$_invoke__2 = function(this$, a) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16225 = x__4745__auto__;
          return goog.typeOf(G__16225);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var cljs$core$_invoke__3 = function(this$, a, b) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16227 = x__4745__auto__;
          return goog.typeOf(G__16227);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var cljs$core$_invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16229 = x__4745__auto__;
          return goog.typeOf(G__16229);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var cljs$core$_invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16231 = x__4745__auto__;
          return goog.typeOf(G__16231);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var cljs$core$_invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16233 = x__4745__auto__;
          return goog.typeOf(G__16233);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var cljs$core$_invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16235 = x__4745__auto__;
          return goog.typeOf(G__16235);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var cljs$core$_invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16237 = x__4745__auto__;
          return goog.typeOf(G__16237);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var cljs$core$_invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16239 = x__4745__auto__;
          return goog.typeOf(G__16239);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var cljs$core$_invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16241 = x__4745__auto__;
          return goog.typeOf(G__16241);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var cljs$core$_invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16243 = x__4745__auto__;
          return goog.typeOf(G__16243);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var cljs$core$_invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16245 = x__4745__auto__;
          return goog.typeOf(G__16245);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var cljs$core$_invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16247 = x__4745__auto__;
          return goog.typeOf(G__16247);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var cljs$core$_invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16249 = x__4745__auto__;
          return goog.typeOf(G__16249);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var cljs$core$_invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16251 = x__4745__auto__;
          return goog.typeOf(G__16251);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var cljs$core$_invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16253 = x__4745__auto__;
          return goog.typeOf(G__16253);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var cljs$core$_invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16255 = x__4745__auto__;
          return goog.typeOf(G__16255);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var cljs$core$_invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16257 = x__4745__auto__;
          return goog.typeOf(G__16257);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var cljs$core$_invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16259 = x__4745__auto__;
          return goog.typeOf(G__16259);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var cljs$core$_invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16261 = x__4745__auto__;
          return goog.typeOf(G__16261);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var cljs$core$_invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16263 = x__4745__auto__;
          return goog.typeOf(G__16263);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var cljs$core$_invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = cljs.core._invoke[function() {
          var G__16265 = x__4745__auto__;
          return goog.typeOf(G__16265);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._invoke["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  cljs$core$_invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return cljs$core$_invoke__1.call(this, this$);
      case 2:
        return cljs$core$_invoke__2.call(this, this$, a);
      case 3:
        return cljs$core$_invoke__3.call(this, this$, a, b);
      case 4:
        return cljs$core$_invoke__4.call(this, this$, a, b, c);
      case 5:
        return cljs$core$_invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return cljs$core$_invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return cljs$core$_invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return cljs$core$_invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return cljs$core$_invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return cljs$core$_invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return cljs$core$_invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return cljs$core$_invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return cljs$core$_invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return cljs$core$_invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return cljs$core$_invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return cljs$core$_invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return cljs$core$_invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return cljs$core$_invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return cljs$core$_invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return cljs$core$_invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return cljs$core$_invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return cljs$core$_invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$1 = cljs$core$_invoke__1;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$2 = cljs$core$_invoke__2;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$3 = cljs$core$_invoke__3;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$4 = cljs$core$_invoke__4;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$5 = cljs$core$_invoke__5;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$6 = cljs$core$_invoke__6;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$7 = cljs$core$_invoke__7;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$8 = cljs$core$_invoke__8;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$9 = cljs$core$_invoke__9;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$10 = cljs$core$_invoke__10;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$11 = cljs$core$_invoke__11;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$12 = cljs$core$_invoke__12;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$13 = cljs$core$_invoke__13;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$14 = cljs$core$_invoke__14;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$15 = cljs$core$_invoke__15;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$16 = cljs$core$_invoke__16;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$17 = cljs$core$_invoke__17;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$18 = cljs$core$_invoke__18;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$19 = cljs$core$_invoke__19;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$20 = cljs$core$_invoke__20;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$21 = cljs$core$_invoke__21;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$22 = cljs$core$_invoke__22;
  return cljs$core$_invoke;
}();
cljs.core.ICloneable = function() {
  var obj16267 = {};
  return obj16267;
}();
cljs.core._clone = function cljs$core$_clone(value) {
  if (function() {
    var and__4097__auto__ = value;
    if (and__4097__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4745__auto__ = value == null ? null : value;
    return function() {
      var or__4109__auto__ = cljs.core._clone[function() {
        var G__16271 = x__4745__auto__;
        return goog.typeOf(G__16271);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._clone["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj16273 = {};
  return obj16273;
}();
cljs.core._count = function cljs$core$_count(coll) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._count[function() {
        var G__16277 = x__4745__auto__;
        return goog.typeOf(G__16277);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._count["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj16279 = {};
  return obj16279;
}();
cljs.core._empty = function cljs$core$_empty(coll) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._empty[function() {
        var G__16283 = x__4745__auto__;
        return goog.typeOf(G__16283);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._empty["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj16285 = {};
  return obj16285;
}();
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._conj[function() {
        var G__16289 = x__4745__auto__;
        return goog.typeOf(G__16289);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._conj["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj16291 = {};
  return obj16291;
}();
cljs.core._nth = function() {
  var cljs$core$_nth = null;
  var cljs$core$_nth__2 = function(coll, n) {
    if (function() {
      var and__4097__auto__ = coll;
      if (and__4097__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4745__auto__ = coll == null ? null : coll;
      return function() {
        var or__4109__auto__ = cljs.core._nth[function() {
          var G__16297 = x__4745__auto__;
          return goog.typeOf(G__16297);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._nth["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var cljs$core$_nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__4097__auto__ = coll;
      if (and__4097__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4745__auto__ = coll == null ? null : coll;
      return function() {
        var or__4109__auto__ = cljs.core._nth[function() {
          var G__16299 = x__4745__auto__;
          return goog.typeOf(G__16299);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._nth["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  cljs$core$_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$_nth__2.call(this, coll, n);
      case 3:
        return cljs$core$_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$_nth__2;
  cljs$core$_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$_nth__3;
  return cljs$core$_nth;
}();
cljs.core.ASeq = function() {
  var obj16301 = {};
  return obj16301;
}();
cljs.core.ISeq = function() {
  var obj16303 = {};
  return obj16303;
}();
cljs.core._first = function cljs$core$_first(coll) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._first[function() {
        var G__16307 = x__4745__auto__;
        return goog.typeOf(G__16307);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._first["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._rest[function() {
        var G__16311 = x__4745__auto__;
        return goog.typeOf(G__16311);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._rest["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj16313 = {};
  return obj16313;
}();
cljs.core._next = function cljs$core$_next(coll) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._next[function() {
        var G__16317 = x__4745__auto__;
        return goog.typeOf(G__16317);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._next["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj16319 = {};
  return obj16319;
}();
cljs.core._lookup = function() {
  var cljs$core$_lookup = null;
  var cljs$core$_lookup__2 = function(o, k) {
    if (function() {
      var and__4097__auto__ = o;
      if (and__4097__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4745__auto__ = o == null ? null : o;
      return function() {
        var or__4109__auto__ = cljs.core._lookup[function() {
          var G__16325 = x__4745__auto__;
          return goog.typeOf(G__16325);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._lookup["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var cljs$core$_lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__4097__auto__ = o;
      if (and__4097__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4745__auto__ = o == null ? null : o;
      return function() {
        var or__4109__auto__ = cljs.core._lookup[function() {
          var G__16327 = x__4745__auto__;
          return goog.typeOf(G__16327);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._lookup["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  cljs$core$_lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$_lookup__2.call(this, o, k);
      case 3:
        return cljs$core$_lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_lookup.cljs$core$IFn$_invoke$arity$2 = cljs$core$_lookup__2;
  cljs$core$_lookup.cljs$core$IFn$_invoke$arity$3 = cljs$core$_lookup__3;
  return cljs$core$_lookup;
}();
cljs.core.IAssociative = function() {
  var obj16329 = {};
  return obj16329;
}();
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__16333 = x__4745__auto__;
        return goog.typeOf(G__16333);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._assoc[function() {
        var G__16337 = x__4745__auto__;
        return goog.typeOf(G__16337);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._assoc["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj16339 = {};
  return obj16339;
}();
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._dissoc[function() {
        var G__16343 = x__4745__auto__;
        return goog.typeOf(G__16343);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._dissoc["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj16345 = {};
  return obj16345;
}();
cljs.core._key = function cljs$core$_key(coll) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._key[function() {
        var G__16349 = x__4745__auto__;
        return goog.typeOf(G__16349);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._key["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._val[function() {
        var G__16353 = x__4745__auto__;
        return goog.typeOf(G__16353);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._val["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj16355 = {};
  return obj16355;
}();
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._disjoin[function() {
        var G__16359 = x__4745__auto__;
        return goog.typeOf(G__16359);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._disjoin["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj16361 = {};
  return obj16361;
}();
cljs.core._peek = function cljs$core$_peek(coll) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._peek[function() {
        var G__16365 = x__4745__auto__;
        return goog.typeOf(G__16365);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._peek["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._pop[function() {
        var G__16369 = x__4745__auto__;
        return goog.typeOf(G__16369);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._pop["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj16371 = {};
  return obj16371;
}();
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._assoc_n[function() {
        var G__16375 = x__4745__auto__;
        return goog.typeOf(G__16375);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._assoc_n["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj16377 = {};
  return obj16377;
}();
cljs.core._deref = function cljs$core$_deref(o) {
  if (function() {
    var and__4097__auto__ = o;
    if (and__4097__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4745__auto__ = o == null ? null : o;
    return function() {
      var or__4109__auto__ = cljs.core._deref[function() {
        var G__16381 = x__4745__auto__;
        return goog.typeOf(G__16381);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._deref["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj16383 = {};
  return obj16383;
}();
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__4097__auto__ = o;
    if (and__4097__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4745__auto__ = o == null ? null : o;
    return function() {
      var or__4109__auto__ = cljs.core._deref_with_timeout[function() {
        var G__16387 = x__4745__auto__;
        return goog.typeOf(G__16387);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj16389 = {};
  return obj16389;
}();
cljs.core._meta = function cljs$core$_meta(o) {
  if (function() {
    var and__4097__auto__ = o;
    if (and__4097__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4745__auto__ = o == null ? null : o;
    return function() {
      var or__4109__auto__ = cljs.core._meta[function() {
        var G__16393 = x__4745__auto__;
        return goog.typeOf(G__16393);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._meta["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj16395 = {};
  return obj16395;
}();
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (function() {
    var and__4097__auto__ = o;
    if (and__4097__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4745__auto__ = o == null ? null : o;
    return function() {
      var or__4109__auto__ = cljs.core._with_meta[function() {
        var G__16399 = x__4745__auto__;
        return goog.typeOf(G__16399);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._with_meta["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj16401 = {};
  return obj16401;
}();
cljs.core._reduce = function() {
  var cljs$core$_reduce = null;
  var cljs$core$_reduce__2 = function(coll, f) {
    if (function() {
      var and__4097__auto__ = coll;
      if (and__4097__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4745__auto__ = coll == null ? null : coll;
      return function() {
        var or__4109__auto__ = cljs.core._reduce[function() {
          var G__16407 = x__4745__auto__;
          return goog.typeOf(G__16407);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._reduce["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var cljs$core$_reduce__3 = function(coll, f, start) {
    if (function() {
      var and__4097__auto__ = coll;
      if (and__4097__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4745__auto__ = coll == null ? null : coll;
      return function() {
        var or__4109__auto__ = cljs.core._reduce[function() {
          var G__16409 = x__4745__auto__;
          return goog.typeOf(G__16409);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._reduce["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  cljs$core$_reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return cljs$core$_reduce__2.call(this, coll, f);
      case 3:
        return cljs$core$_reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$_reduce__2;
  cljs$core$_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$_reduce__3;
  return cljs$core$_reduce;
}();
cljs.core.IKVReduce = function() {
  var obj16411 = {};
  return obj16411;
}();
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._kv_reduce[function() {
        var G__16415 = x__4745__auto__;
        return goog.typeOf(G__16415);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj16417 = {};
  return obj16417;
}();
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (function() {
    var and__4097__auto__ = o;
    if (and__4097__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4745__auto__ = o == null ? null : o;
    return function() {
      var or__4109__auto__ = cljs.core._equiv[function() {
        var G__16421 = x__4745__auto__;
        return goog.typeOf(G__16421);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._equiv["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj16423 = {};
  return obj16423;
}();
cljs.core._hash = function cljs$core$_hash(o) {
  if (function() {
    var and__4097__auto__ = o;
    if (and__4097__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4745__auto__ = o == null ? null : o;
    return function() {
      var or__4109__auto__ = cljs.core._hash[function() {
        var G__16427 = x__4745__auto__;
        return goog.typeOf(G__16427);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._hash["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj16429 = {};
  return obj16429;
}();
cljs.core._seq = function cljs$core$_seq(o) {
  if (function() {
    var and__4097__auto__ = o;
    if (and__4097__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4745__auto__ = o == null ? null : o;
    return function() {
      var or__4109__auto__ = cljs.core._seq[function() {
        var G__16433 = x__4745__auto__;
        return goog.typeOf(G__16433);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._seq["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj16435 = {};
  return obj16435;
}();
cljs.core.IList = function() {
  var obj16437 = {};
  return obj16437;
}();
cljs.core.IRecord = function() {
  var obj16439 = {};
  return obj16439;
}();
cljs.core.IReversible = function() {
  var obj16441 = {};
  return obj16441;
}();
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._rseq[function() {
        var G__16445 = x__4745__auto__;
        return goog.typeOf(G__16445);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._rseq["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj16447 = {};
  return obj16447;
}();
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._sorted_seq[function() {
        var G__16451 = x__4745__auto__;
        return goog.typeOf(G__16451);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._sorted_seq_from[function() {
        var G__16455 = x__4745__auto__;
        return goog.typeOf(G__16455);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._entry_key[function() {
        var G__16459 = x__4745__auto__;
        return goog.typeOf(G__16459);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._entry_key["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._comparator[function() {
        var G__16463 = x__4745__auto__;
        return goog.typeOf(G__16463);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._comparator["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj16465 = {};
  return obj16465;
}();
cljs.core._write = function cljs$core$_write(writer, s) {
  if (function() {
    var and__4097__auto__ = writer;
    if (and__4097__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4745__auto__ = writer == null ? null : writer;
    return function() {
      var or__4109__auto__ = cljs.core._write[function() {
        var G__16469 = x__4745__auto__;
        return goog.typeOf(G__16469);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._write["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (function() {
    var and__4097__auto__ = writer;
    if (and__4097__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4745__auto__ = writer == null ? null : writer;
    return function() {
      var or__4109__auto__ = cljs.core._flush[function() {
        var G__16473 = x__4745__auto__;
        return goog.typeOf(G__16473);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._flush["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj16475 = {};
  return obj16475;
}();
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (function() {
    var and__4097__auto__ = o;
    if (and__4097__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4745__auto__ = o == null ? null : o;
    return function() {
      var or__4109__auto__ = cljs.core._pr_writer[function() {
        var G__16479 = x__4745__auto__;
        return goog.typeOf(G__16479);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._pr_writer["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj16481 = {};
  return obj16481;
}();
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (function() {
    var and__4097__auto__ = d;
    if (and__4097__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4745__auto__ = d == null ? null : d;
    return function() {
      var or__4109__auto__ = cljs.core._realized_QMARK_[function() {
        var G__16485 = x__4745__auto__;
        return goog.typeOf(G__16485);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj16487 = {};
  return obj16487;
}();
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (function() {
    var and__4097__auto__ = this$;
    if (and__4097__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4745__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4109__auto__ = cljs.core._notify_watches[function() {
        var G__16491 = x__4745__auto__;
        return goog.typeOf(G__16491);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._notify_watches["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (function() {
    var and__4097__auto__ = this$;
    if (and__4097__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4745__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4109__auto__ = cljs.core._add_watch[function() {
        var G__16495 = x__4745__auto__;
        return goog.typeOf(G__16495);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._add_watch["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (function() {
    var and__4097__auto__ = this$;
    if (and__4097__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4745__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4109__auto__ = cljs.core._remove_watch[function() {
        var G__16499 = x__4745__auto__;
        return goog.typeOf(G__16499);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._remove_watch["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj16501 = {};
  return obj16501;
}();
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._as_transient[function() {
        var G__16505 = x__4745__auto__;
        return goog.typeOf(G__16505);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._as_transient["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj16507 = {};
  return obj16507;
}();
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (function() {
    var and__4097__auto__ = tcoll;
    if (and__4097__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4745__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4109__auto__ = cljs.core._conj_BANG_[function() {
        var G__16511 = x__4745__auto__;
        return goog.typeOf(G__16511);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (function() {
    var and__4097__auto__ = tcoll;
    if (and__4097__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4745__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4109__auto__ = cljs.core._persistent_BANG_[function() {
        var G__16515 = x__4745__auto__;
        return goog.typeOf(G__16515);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj16517 = {};
  return obj16517;
}();
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__4097__auto__ = tcoll;
    if (and__4097__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4745__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4109__auto__ = cljs.core._assoc_BANG_[function() {
        var G__16521 = x__4745__auto__;
        return goog.typeOf(G__16521);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj16523 = {};
  return obj16523;
}();
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__4097__auto__ = tcoll;
    if (and__4097__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4745__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4109__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__16527 = x__4745__auto__;
        return goog.typeOf(G__16527);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj16529 = {};
  return obj16529;
}();
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__4097__auto__ = tcoll;
    if (and__4097__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4745__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4109__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__16533 = x__4745__auto__;
        return goog.typeOf(G__16533);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (function() {
    var and__4097__auto__ = tcoll;
    if (and__4097__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4745__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4109__auto__ = cljs.core._pop_BANG_[function() {
        var G__16537 = x__4745__auto__;
        return goog.typeOf(G__16537);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj16539 = {};
  return obj16539;
}();
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__4097__auto__ = tcoll;
    if (and__4097__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4745__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4109__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__16543 = x__4745__auto__;
        return goog.typeOf(G__16543);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj16545 = {};
  return obj16545;
}();
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (function() {
    var and__4097__auto__ = x;
    if (and__4097__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4745__auto__ = x == null ? null : x;
    return function() {
      var or__4109__auto__ = cljs.core._compare[function() {
        var G__16549 = x__4745__auto__;
        return goog.typeOf(G__16549);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._compare["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj16551 = {};
  return obj16551;
}();
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._drop_first[function() {
        var G__16555 = x__4745__auto__;
        return goog.typeOf(G__16555);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._drop_first["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj16557 = {};
  return obj16557;
}();
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._chunked_first[function() {
        var G__16561 = x__4745__auto__;
        return goog.typeOf(G__16561);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._chunked_first["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._chunked_rest[function() {
        var G__16565 = x__4745__auto__;
        return goog.typeOf(G__16565);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj16567 = {};
  return obj16567;
}();
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._chunked_next[function() {
        var G__16571 = x__4745__auto__;
        return goog.typeOf(G__16571);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._chunked_next["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj16573 = {};
  return obj16573;
}();
cljs.core._name = function cljs$core$_name(x) {
  if (function() {
    var and__4097__auto__ = x;
    if (and__4097__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4745__auto__ = x == null ? null : x;
    return function() {
      var or__4109__auto__ = cljs.core._name[function() {
        var G__16577 = x__4745__auto__;
        return goog.typeOf(G__16577);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._name["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (function() {
    var and__4097__auto__ = x;
    if (and__4097__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4745__auto__ = x == null ? null : x;
    return function() {
      var or__4109__auto__ = cljs.core._namespace[function() {
        var G__16581 = x__4745__auto__;
        return goog.typeOf(G__16581);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._namespace["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj16583 = {};
  return obj16583;
}();
cljs.core.IReset = function() {
  var obj16585 = {};
  return obj16585;
}();
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (function() {
    var and__4097__auto__ = o;
    if (and__4097__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4745__auto__ = o == null ? null : o;
    return function() {
      var or__4109__auto__ = cljs.core._reset_BANG_[function() {
        var G__16589 = x__4745__auto__;
        return goog.typeOf(G__16589);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj16591 = {};
  return obj16591;
}();
cljs.core._swap_BANG_ = function() {
  var cljs$core$_swap_BANG_ = null;
  var cljs$core$_swap_BANG___2 = function(o, f) {
    if (function() {
      var and__4097__auto__ = o;
      if (and__4097__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4745__auto__ = o == null ? null : o;
      return function() {
        var or__4109__auto__ = cljs.core._swap_BANG_[function() {
          var G__16601 = x__4745__auto__;
          return goog.typeOf(G__16601);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var cljs$core$_swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__4097__auto__ = o;
      if (and__4097__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4745__auto__ = o == null ? null : o;
      return function() {
        var or__4109__auto__ = cljs.core._swap_BANG_[function() {
          var G__16603 = x__4745__auto__;
          return goog.typeOf(G__16603);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var cljs$core$_swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__4097__auto__ = o;
      if (and__4097__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4745__auto__ = o == null ? null : o;
      return function() {
        var or__4109__auto__ = cljs.core._swap_BANG_[function() {
          var G__16605 = x__4745__auto__;
          return goog.typeOf(G__16605);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var cljs$core$_swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__4097__auto__ = o;
      if (and__4097__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4745__auto__ = o == null ? null : o;
      return function() {
        var or__4109__auto__ = cljs.core._swap_BANG_[function() {
          var G__16607 = x__4745__auto__;
          return goog.typeOf(G__16607);
        }()];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  cljs$core$_swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return cljs$core$_swap_BANG___2.call(this, o, f);
      case 3:
        return cljs$core$_swap_BANG___3.call(this, o, f, a);
      case 4:
        return cljs$core$_swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return cljs$core$_swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_swap_BANG___2;
  cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$_swap_BANG___3;
  cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$_swap_BANG___4;
  cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = cljs$core$_swap_BANG___5;
  return cljs$core$_swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj16609 = {};
  return obj16609;
}();
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (function() {
    var and__4097__auto__ = o;
    if (and__4097__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4745__auto__ = o == null ? null : o;
    return function() {
      var or__4109__auto__ = cljs.core._vreset_BANG_[function() {
        var G__16613 = x__4745__auto__;
        return goog.typeOf(G__16613);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj16615 = {};
  return obj16615;
}();
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (function() {
    var and__4097__auto__ = coll;
    if (and__4097__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4745__auto__ = coll == null ? null : coll;
    return function() {
      var or__4109__auto__ = cljs.core._iterator[function() {
        var G__16619 = x__4745__auto__;
        return goog.typeOf(G__16619);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._iterator["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__16622 = 4294967295;
  var G__16623 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__16622, G__16623) : Math.imul.call(null, G__16622, G__16623);
}() === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var G__16626 = a;
    var G__16627 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__16626, G__16627) : Math.imul.call(null, G__16626, G__16627);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__16628 = i + 2;
        var G__16629 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__16628;
        h1 = G__16629;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj16631 = {};
  return obj16631;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__16632 = i + 1;
          var G__16633 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__16632;
          hash = G__16633;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj16637 = {};
      return obj16637;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (function() {
    var G__16640 = o;
    if (G__16640) {
      var bit__4776__auto__ = G__16640.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4776__auto__ || G__16640.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__16641 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__16641) : Math.floor.call(null, G__16641);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4097__auto__ = cljs.core.not(a.ns);
      if (and__4097__auto__) {
        return b.ns;
      } else {
        return and__4097__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__16648 = a.ns;
            var G__16649 = b.ns;
            return goog.array.defaultCompare(G__16648, G__16649);
          }();
          if (0 === nsc) {
            var G__16650 = a.name;
            var G__16651 = b.name;
            return goog.array.defaultCompare(G__16650, G__16651);
          } else {
            return nsc;
          }
        }
      } else {
        var G__16652 = a.name;
        var G__16653 = b.name;
        return goog.array.defaultCompare(G__16652, G__16653);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4525__auto__ = self__._hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__16655 = null;
  var G__16655__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__16655__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__16655 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16655__2.call(this, self__, coll);
      case 3:
        return G__16655__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16655.cljs$core$IFn$_invoke$arity$2 = G__16655__2;
  G__16655.cljs$core$IFn$_invoke$arity$3 = G__16655__3;
  return G__16655;
}();
cljs.core.Symbol.prototype.apply = function(self__, args16654) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16654)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var cljs$core$symbol = null;
  var cljs$core$symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return cljs$core$symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var cljs$core$symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  cljs$core$symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return cljs$core$symbol__1.call(this, ns);
      case 2:
        return cljs$core$symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$symbol.cljs$core$IFn$_invoke$arity$1 = cljs$core$symbol__1;
  cljs$core$symbol.cljs$core$IFn$_invoke$arity$2 = cljs$core$symbol__2;
  return cljs$core$symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__16703 = null;
  var G__16703__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__16703__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__16703__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__16703__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__16703__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__16703__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__16703__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__16703__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__16703__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__16703__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__16703__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__16703__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__16703__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__16703__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__16703__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__16703__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__16703__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__16703__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__16703__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__16703__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__16703__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__16703__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16659 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__16660 = a;
    var G__16661 = b;
    var G__16662 = c;
    var G__16663 = d;
    var G__16664 = e;
    var G__16665 = f;
    var G__16666 = g;
    var G__16667 = h;
    var G__16668 = i;
    var G__16669 = j;
    var G__16670 = k;
    var G__16671 = l;
    var G__16672 = m;
    var G__16673 = n;
    var G__16674 = o;
    var G__16675 = p;
    var G__16676 = q;
    var G__16677 = r;
    var G__16678 = s;
    var G__16679 = t;
    var G__16680 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__16659, G__16660, G__16661, G__16662, G__16663, G__16664, G__16665, G__16666, G__16667, G__16668, G__16669, G__16670, G__16671, G__16672, G__16673, G__16674, G__16675, G__16676, G__16677, G__16678, G__16679, G__16680) : cljs.core.apply.call(null, G__16659, G__16660, G__16661, G__16662, G__16663, G__16664, G__16665, G__16666, G__16667, G__16668, G__16669, G__16670, G__16671, G__16672, G__16673, 
    G__16674, G__16675, G__16676, G__16677, G__16678, G__16679, G__16680);
  };
  G__16703 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__16703__1.call(this, self__);
      case 2:
        return G__16703__2.call(this, self__, a);
      case 3:
        return G__16703__3.call(this, self__, a, b);
      case 4:
        return G__16703__4.call(this, self__, a, b, c);
      case 5:
        return G__16703__5.call(this, self__, a, b, c, d);
      case 6:
        return G__16703__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__16703__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__16703__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__16703__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__16703__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__16703__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__16703__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__16703__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__16703__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__16703__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__16703__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__16703__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__16703__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__16703__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__16703__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__16703__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__16703__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16703.cljs$core$IFn$_invoke$arity$1 = G__16703__1;
  G__16703.cljs$core$IFn$_invoke$arity$2 = G__16703__2;
  G__16703.cljs$core$IFn$_invoke$arity$3 = G__16703__3;
  G__16703.cljs$core$IFn$_invoke$arity$4 = G__16703__4;
  G__16703.cljs$core$IFn$_invoke$arity$5 = G__16703__5;
  G__16703.cljs$core$IFn$_invoke$arity$6 = G__16703__6;
  G__16703.cljs$core$IFn$_invoke$arity$7 = G__16703__7;
  G__16703.cljs$core$IFn$_invoke$arity$8 = G__16703__8;
  G__16703.cljs$core$IFn$_invoke$arity$9 = G__16703__9;
  G__16703.cljs$core$IFn$_invoke$arity$10 = G__16703__10;
  G__16703.cljs$core$IFn$_invoke$arity$11 = G__16703__11;
  G__16703.cljs$core$IFn$_invoke$arity$12 = G__16703__12;
  G__16703.cljs$core$IFn$_invoke$arity$13 = G__16703__13;
  G__16703.cljs$core$IFn$_invoke$arity$14 = G__16703__14;
  G__16703.cljs$core$IFn$_invoke$arity$15 = G__16703__15;
  G__16703.cljs$core$IFn$_invoke$arity$16 = G__16703__16;
  G__16703.cljs$core$IFn$_invoke$arity$17 = G__16703__17;
  G__16703.cljs$core$IFn$_invoke$arity$18 = G__16703__18;
  G__16703.cljs$core$IFn$_invoke$arity$19 = G__16703__19;
  G__16703.cljs$core$IFn$_invoke$arity$20 = G__16703__20;
  G__16703.cljs$core$IFn$_invoke$arity$21 = G__16703__21;
  G__16703.cljs$core$IFn$_invoke$arity$22 = G__16703__22;
  return G__16703;
}();
cljs.core.Var.prototype.apply = function(self__, args16658) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16658)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__16681 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__16682 = a;
  var G__16683 = b;
  var G__16684 = c;
  var G__16685 = d;
  var G__16686 = e;
  var G__16687 = f;
  var G__16688 = g;
  var G__16689 = h;
  var G__16690 = i;
  var G__16691 = j;
  var G__16692 = k;
  var G__16693 = l;
  var G__16694 = m;
  var G__16695 = n;
  var G__16696 = o;
  var G__16697 = p;
  var G__16698 = q;
  var G__16699 = r;
  var G__16700 = s;
  var G__16701 = t;
  var G__16702 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__16681, G__16682, G__16683, G__16684, G__16685, G__16686, G__16687, G__16688, G__16689, G__16690, G__16691, G__16692, G__16693, G__16694, G__16695, G__16696, G__16697, G__16698, G__16699, G__16700, G__16701, G__16702) : cljs.core.apply.call(null, G__16681, G__16682, G__16683, G__16684, G__16685, G__16686, G__16687, G__16688, G__16689, G__16690, G__16691, G__16692, G__16693, G__16694, G__16695, 
  G__16696, G__16697, G__16698, G__16699, G__16700, G__16701, G__16702);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  var G__16705 = x;
  if (G__16705) {
    var bit__4783__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__4109__auto__ = bit__4783__auto__;
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return G__16705.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__16705.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__16705);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__16705);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  var G__16707 = value;
  if (G__16707) {
    var bit__4783__auto__ = G__16707.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4783__auto__ || G__16707.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__16707.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__16707);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__16707);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__16709 = coll;
      if (G__16709) {
        var bit__4776__auto__ = G__16709.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4776__auto__ || G__16709.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__16711 = coll;
      if (G__16711) {
        var bit__4776__auto__ = G__16711.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4776__auto__ || G__16711.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__16713 = coll;
      if (G__16713) {
        var bit__4776__auto__ = G__16713.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4776__auto__ || G__16713.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__16715 = coll;
      if (G__16715) {
        var bit__4776__auto__ = G__16715.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4776__auto__ || G__16715.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var cljs$core$_EQ_ = null;
  var cljs$core$_EQ___1 = function(x) {
    return true;
  };
  var cljs$core$_EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var cljs$core$_EQ___3 = function() {
    var G__16720__delegate = function(x, y, more) {
      while (true) {
        if (cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__16721 = y;
            var G__16722 = cljs.core.first(more);
            var G__16723 = cljs.core.next(more);
            x = G__16721;
            y = G__16722;
            more = G__16723;
            continue;
          } else {
            return cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__16720 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__16724__i = 0, G__16724__a = new Array(arguments.length - 2);
        while (G__16724__i < G__16724__a.length) {
          G__16724__a[G__16724__i] = arguments[G__16724__i + 2];
          ++G__16724__i;
        }
        more = new cljs.core.IndexedSeq(G__16724__a, 0);
      }
      return G__16720__delegate.call(this, x, y, more);
    };
    G__16720.cljs$lang$maxFixedArity = 2;
    G__16720.cljs$lang$applyTo = function(arglist__16725) {
      var x = cljs.core.first(arglist__16725);
      arglist__16725 = cljs.core.next(arglist__16725);
      var y = cljs.core.first(arglist__16725);
      var more = cljs.core.rest(arglist__16725);
      return G__16720__delegate(x, y, more);
    };
    G__16720.cljs$core$IFn$_invoke$arity$variadic = G__16720__delegate;
    return G__16720;
  }();
  cljs$core$_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_EQ___1.call(this, x);
      case 2:
        return cljs$core$_EQ___2.call(this, x, y);
      default:
        var G__16726 = null;
        if (arguments.length > 2) {
          var G__16727__i = 0, G__16727__a = new Array(arguments.length - 2);
          while (G__16727__i < G__16727__a.length) {
            G__16727__a[G__16727__i] = arguments[G__16727__i + 2];
            ++G__16727__i;
          }
          G__16726 = new cljs.core.IndexedSeq(G__16727__a, 0);
        }
        return cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__16726);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_EQ_.cljs$lang$maxFixedArity = 2;
  cljs$core$_EQ_.cljs$lang$applyTo = cljs$core$_EQ___3.cljs$lang$applyTo;
  cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ___1;
  cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ___2;
  cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__16728 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__16728) : cljs.core.es6_iterator_seq.call(null, G__16728);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__16729 = n + 1;
      var G__16730 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__16731 = cljs.core.next(coll__$1);
      n = G__16729;
      hash_code = G__16730;
      coll__$1 = G__16731;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__16732 = n + 1;
      var G__16733 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__16734 = cljs.core.next(coll__$1);
      n = G__16732;
      hash_code = G__16733;
      coll__$1 = G__16734;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  var G__16735 = this$__$1.valueOf();
  var G__16736 = other.valueOf();
  return goog.array.defaultCompare(G__16735, G__16736);
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__16737 = o;
  return goog.getUid(G__16737);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__16739 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16739) : cljs.core.deref.call(null, G__16739);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var cljs$core$ci_reduce = null;
  var cljs$core$ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__16746 = val;
            var G__16747 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16746, G__16747) : f.call(null, G__16746, G__16747);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__16752 = nval;
            var G__16753 = n + 1;
            val = G__16752;
            n = G__16753;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var cljs$core$ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__16748 = val__$1;
          var G__16749 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16748, G__16749) : f.call(null, G__16748, G__16749);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__16754 = nval;
          var G__16755 = n + 1;
          val__$1 = G__16754;
          n = G__16755;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var cljs$core$ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__16750 = val__$1;
          var G__16751 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16750, G__16751) : f.call(null, G__16750, G__16751);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__16756 = nval;
          var G__16757 = n + 1;
          val__$1 = G__16756;
          n = G__16757;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  cljs$core$ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return cljs$core$ci_reduce__2.call(this, cicoll, f);
      case 3:
        return cljs$core$ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return cljs$core$ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$ci_reduce__2;
  cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$ci_reduce__3;
  cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$ci_reduce__4;
  return cljs$core$ci_reduce;
}();
cljs.core.array_reduce = function() {
  var cljs$core$array_reduce = null;
  var cljs$core$array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__16764 = val;
            var G__16765 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16764, G__16765) : f.call(null, G__16764, G__16765);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__16770 = nval;
            var G__16771 = n + 1;
            val = G__16770;
            n = G__16771;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var cljs$core$array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__16766 = val__$1;
          var G__16767 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16766, G__16767) : f.call(null, G__16766, G__16767);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__16772 = nval;
          var G__16773 = n + 1;
          val__$1 = G__16772;
          n = G__16773;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var cljs$core$array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__16768 = val__$1;
          var G__16769 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16768, G__16769) : f.call(null, G__16768, G__16769);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__16774 = nval;
          var G__16775 = n + 1;
          val__$1 = G__16774;
          n = G__16775;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  cljs$core$array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return cljs$core$array_reduce__2.call(this, arr, f);
      case 3:
        return cljs$core$array_reduce__3.call(this, arr, f, val);
      case 4:
        return cljs$core$array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_reduce__2;
  cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_reduce__3;
  cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$array_reduce__4;
  return cljs$core$array_reduce;
}();
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  var G__16777 = x;
  if (G__16777) {
    var bit__4783__auto__ = G__16777.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4783__auto__ || G__16777.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__16777.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__16777);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__16777);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  var G__16779 = x;
  if (G__16779) {
    var bit__4783__auto__ = G__16779.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4783__auto__ || G__16779.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__16779.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__16779);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__16779);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__16780 = coll__$1;
  var G__16781 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__16780, G__16781) : cljs.core.equiv_sequential.call(null, G__16780, G__16781);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__16782 = o;
  var G__16783 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__16782, G__16783) : cljs.core.cons.call(null, G__16782, G__16783);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.prim_seq = function() {
  var cljs$core$prim_seq = null;
  var cljs$core$prim_seq__1 = function(prim) {
    return cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var cljs$core$prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  cljs$core$prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return cljs$core$prim_seq__1.call(this, prim);
      case 2:
        return cljs$core$prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$prim_seq__1;
  cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$prim_seq__2;
  return cljs$core$prim_seq;
}();
cljs.core.array_seq = function() {
  var cljs$core$array_seq = null;
  var cljs$core$array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var cljs$core$array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  cljs$core$array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return cljs$core$array_seq__1.call(this, array);
      case 2:
        return cljs$core$array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$array_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_seq__1;
  cljs$core$array_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_seq__2;
  return cljs$core$array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__16786 = coll__$1;
  var G__16787 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__16786, G__16787) : cljs.core.equiv_sequential.call(null, G__16786, G__16787);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__16788 = cljs.core.List.EMPTY;
  var G__16789 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__16788, G__16789) : cljs.core.with_meta.call(null, G__16788, G__16789);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__16790 = f;
  var G__16791 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__16790, G__16791) : cljs.core.seq_reduce.call(null, G__16790, G__16791);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__16792 = f;
  var G__16793 = start;
  var G__16794 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__16792, G__16793, G__16794) : cljs.core.seq_reduce.call(null, G__16792, G__16793, G__16794);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__16795 = o;
  var G__16796 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__16795, G__16796) : cljs.core.cons.call(null, G__16795, G__16796);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__16797 = sn;
      s = G__16797;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var cljs$core$conj = null;
  var cljs$core$conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var cljs$core$conj__1 = function(coll) {
    return coll;
  };
  var cljs$core$conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var cljs$core$conj__3 = function() {
    var G__16802__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__16803 = cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__16804 = cljs.core.first(xs);
          var G__16805 = cljs.core.next(xs);
          coll = G__16803;
          x = G__16804;
          xs = G__16805;
          continue;
        } else {
          return cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__16802 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__16806__i = 0, G__16806__a = new Array(arguments.length - 2);
        while (G__16806__i < G__16806__a.length) {
          G__16806__a[G__16806__i] = arguments[G__16806__i + 2];
          ++G__16806__i;
        }
        xs = new cljs.core.IndexedSeq(G__16806__a, 0);
      }
      return G__16802__delegate.call(this, coll, x, xs);
    };
    G__16802.cljs$lang$maxFixedArity = 2;
    G__16802.cljs$lang$applyTo = function(arglist__16807) {
      var coll = cljs.core.first(arglist__16807);
      arglist__16807 = cljs.core.next(arglist__16807);
      var x = cljs.core.first(arglist__16807);
      var xs = cljs.core.rest(arglist__16807);
      return G__16802__delegate(coll, x, xs);
    };
    G__16802.cljs$core$IFn$_invoke$arity$variadic = G__16802__delegate;
    return G__16802;
  }();
  cljs$core$conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$conj__0.call(this);
      case 1:
        return cljs$core$conj__1.call(this, coll);
      case 2:
        return cljs$core$conj__2.call(this, coll, x);
      default:
        var G__16808 = null;
        if (arguments.length > 2) {
          var G__16809__i = 0, G__16809__a = new Array(arguments.length - 2);
          while (G__16809__i < G__16809__a.length) {
            G__16809__a[G__16809__i] = arguments[G__16809__i + 2];
            ++G__16809__i;
          }
          G__16808 = new cljs.core.IndexedSeq(G__16809__a, 0);
        }
        return cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__16808);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$conj.cljs$lang$maxFixedArity = 2;
  cljs$core$conj.cljs$lang$applyTo = cljs$core$conj__3.cljs$lang$applyTo;
  cljs$core$conj.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj__0;
  cljs$core$conj.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj__1;
  cljs$core$conj.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj__2;
  cljs$core$conj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$conj;
}();
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__16810 = cljs.core.next(s);
      var G__16811 = acc + 1;
      s = G__16810;
      acc = G__16811;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__16813 = coll;
      if (G__16813) {
        var bit__4776__auto__ = G__16813.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4776__auto__ || G__16813.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var cljs$core$linear_traversal_nth = null;
  var cljs$core$linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__16814 = cljs.core.next(coll);
              var G__16815 = n - 1;
              coll = G__16814;
              n = G__16815;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var cljs$core$linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__16816 = cljs.core.next(coll);
              var G__16817 = n - 1;
              var G__16818 = not_found;
              coll = G__16816;
              n = G__16817;
              not_found = G__16818;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  cljs$core$linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return cljs$core$linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$linear_traversal_nth__2;
  cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$linear_traversal_nth__3;
  return cljs$core$linear_traversal_nth;
}();
cljs.core.nth = function() {
  var cljs$core$nth = null;
  var cljs$core$nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__16823 = coll;
          if (G__16823) {
            var bit__4776__auto__ = G__16823.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4776__auto__ || G__16823.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (cljs.core.array_QMARK_(coll)) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__16824 = coll;
                  if (G__16824) {
                    var bit__4783__auto__ = G__16824.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4783__auto__ || G__16824.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__16824.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__16824);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__16824);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var cljs$core$nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__16825 = coll;
          if (G__16825) {
            var bit__4776__auto__ = G__16825.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4776__auto__ || G__16825.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (cljs.core.array_QMARK_(coll)) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__16826 = coll;
                  if (G__16826) {
                    var bit__4783__auto__ = G__16826.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4783__auto__ || G__16826.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__16826.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__16826);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__16826);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  cljs$core$nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$nth__2.call(this, coll, n);
      case 3:
        return cljs$core$nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$nth__2;
  cljs$core$nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$nth__3;
  return cljs$core$nth;
}();
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__16827 = n__$1 - 1;
      var G__16828 = cljs.core.rest(xs);
      n__$1 = G__16827;
      xs = G__16828;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var cljs$core$get = null;
  var cljs$core$get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__16831 = o;
        if (G__16831) {
          var bit__4776__auto__ = G__16831.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4776__auto__ || G__16831.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (cljs.core.array_QMARK_(o)) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var cljs$core$get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__16832 = o;
        if (G__16832) {
          var bit__4776__auto__ = G__16832.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4776__auto__ || G__16832.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (cljs.core.array_QMARK_(o)) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  cljs$core$get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$get__2.call(this, o, k);
      case 3:
        return cljs$core$get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$get.cljs$core$IFn$_invoke$arity$2 = cljs$core$get__2;
  cljs$core$get.cljs$core$IFn$_invoke$arity$3 = cljs$core$get__3;
  return cljs$core$get;
}();
cljs.core.assoc = function() {
  var cljs$core$assoc = null;
  var cljs$core$assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var cljs$core$assoc__4 = function() {
    var G__16836__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = cljs$core$assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__16837 = ret;
          var G__16838 = cljs.core.first(kvs);
          var G__16839 = cljs.core.second(kvs);
          var G__16840 = cljs.core.nnext(kvs);
          coll = G__16837;
          k = G__16838;
          v = G__16839;
          kvs = G__16840;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__16836 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__16841__i = 0, G__16841__a = new Array(arguments.length - 3);
        while (G__16841__i < G__16841__a.length) {
          G__16841__a[G__16841__i] = arguments[G__16841__i + 3];
          ++G__16841__i;
        }
        kvs = new cljs.core.IndexedSeq(G__16841__a, 0);
      }
      return G__16836__delegate.call(this, coll, k, v, kvs);
    };
    G__16836.cljs$lang$maxFixedArity = 3;
    G__16836.cljs$lang$applyTo = function(arglist__16842) {
      var coll = cljs.core.first(arglist__16842);
      arglist__16842 = cljs.core.next(arglist__16842);
      var k = cljs.core.first(arglist__16842);
      arglist__16842 = cljs.core.next(arglist__16842);
      var v = cljs.core.first(arglist__16842);
      var kvs = cljs.core.rest(arglist__16842);
      return G__16836__delegate(coll, k, v, kvs);
    };
    G__16836.cljs$core$IFn$_invoke$arity$variadic = G__16836__delegate;
    return G__16836;
  }();
  cljs$core$assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return cljs$core$assoc__3.call(this, coll, k, v);
      default:
        var G__16843 = null;
        if (arguments.length > 3) {
          var G__16844__i = 0, G__16844__a = new Array(arguments.length - 3);
          while (G__16844__i < G__16844__a.length) {
            G__16844__a[G__16844__i] = arguments[G__16844__i + 3];
            ++G__16844__i;
          }
          G__16843 = new cljs.core.IndexedSeq(G__16844__a, 0);
        }
        return cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__16843);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$assoc.cljs$lang$maxFixedArity = 3;
  cljs$core$assoc.cljs$lang$applyTo = cljs$core$assoc__4.cljs$lang$applyTo;
  cljs$core$assoc.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc__3;
  cljs$core$assoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$assoc;
}();
cljs.core.dissoc = function() {
  var cljs$core$dissoc = null;
  var cljs$core$dissoc__1 = function(coll) {
    return coll;
  };
  var cljs$core$dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var cljs$core$dissoc__3 = function() {
    var G__16847__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__16848 = ret;
            var G__16849 = cljs.core.first(ks);
            var G__16850 = cljs.core.next(ks);
            coll = G__16848;
            k = G__16849;
            ks = G__16850;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__16847 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__16851__i = 0, G__16851__a = new Array(arguments.length - 2);
        while (G__16851__i < G__16851__a.length) {
          G__16851__a[G__16851__i] = arguments[G__16851__i + 2];
          ++G__16851__i;
        }
        ks = new cljs.core.IndexedSeq(G__16851__a, 0);
      }
      return G__16847__delegate.call(this, coll, k, ks);
    };
    G__16847.cljs$lang$maxFixedArity = 2;
    G__16847.cljs$lang$applyTo = function(arglist__16852) {
      var coll = cljs.core.first(arglist__16852);
      arglist__16852 = cljs.core.next(arglist__16852);
      var k = cljs.core.first(arglist__16852);
      var ks = cljs.core.rest(arglist__16852);
      return G__16847__delegate(coll, k, ks);
    };
    G__16847.cljs$core$IFn$_invoke$arity$variadic = G__16847__delegate;
    return G__16847;
  }();
  cljs$core$dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$dissoc__1.call(this, coll);
      case 2:
        return cljs$core$dissoc__2.call(this, coll, k);
      default:
        var G__16853 = null;
        if (arguments.length > 2) {
          var G__16854__i = 0, G__16854__a = new Array(arguments.length - 2);
          while (G__16854__i < G__16854__a.length) {
            G__16854__a[G__16854__i] = arguments[G__16854__i + 2];
            ++G__16854__i;
          }
          G__16853 = new cljs.core.IndexedSeq(G__16854__a, 0);
        }
        return cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__16853);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$dissoc.cljs$lang$maxFixedArity = 2;
  cljs$core$dissoc.cljs$lang$applyTo = cljs$core$dissoc__3.cljs$lang$applyTo;
  cljs$core$dissoc.cljs$core$IFn$_invoke$arity$1 = cljs$core$dissoc__1;
  cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc__2;
  cljs$core$dissoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$dissoc;
}();
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4109__auto__ = function() {
    var G__16859 = f;
    return goog.isFunction(G__16859);
  }();
  if (cljs.core.truth_(or__4109__auto__)) {
    return or__4109__auto__;
  } else {
    var G__16860 = f;
    if (G__16860) {
      var bit__4783__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4109__auto____$1 = bit__4783__auto__;
        if (cljs.core.truth_(or__4109__auto____$1)) {
          return or__4109__auto____$1;
        } else {
          return G__16860.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__16860.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__16860);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__16860);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__17326 = null;
  var G__17326__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__17326__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16862 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__16862) : self__.afn.call(null, G__16862);
  };
  var G__17326__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16863 = a;
    var G__16864 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__16863, G__16864) : self__.afn.call(null, G__16863, G__16864);
  };
  var G__17326__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16865 = a;
    var G__16866 = b;
    var G__16867 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__16865, G__16866, G__16867) : self__.afn.call(null, G__16865, G__16866, G__16867);
  };
  var G__17326__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16868 = a;
    var G__16869 = b;
    var G__16870 = c;
    var G__16871 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__16868, G__16869, G__16870, G__16871) : self__.afn.call(null, G__16868, G__16869, G__16870, G__16871);
  };
  var G__17326__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16872 = a;
    var G__16873 = b;
    var G__16874 = c;
    var G__16875 = d;
    var G__16876 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__16872, G__16873, G__16874, G__16875, G__16876) : self__.afn.call(null, G__16872, G__16873, G__16874, G__16875, G__16876);
  };
  var G__17326__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16877 = a;
    var G__16878 = b;
    var G__16879 = c;
    var G__16880 = d;
    var G__16881 = e;
    var G__16882 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__16877, G__16878, G__16879, G__16880, G__16881, G__16882) : self__.afn.call(null, G__16877, G__16878, G__16879, G__16880, G__16881, G__16882);
  };
  var G__17326__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16883 = a;
    var G__16884 = b;
    var G__16885 = c;
    var G__16886 = d;
    var G__16887 = e;
    var G__16888 = f;
    var G__16889 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__16883, G__16884, G__16885, G__16886, G__16887, G__16888, G__16889) : self__.afn.call(null, G__16883, G__16884, G__16885, G__16886, G__16887, G__16888, G__16889);
  };
  var G__17326__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16890 = a;
    var G__16891 = b;
    var G__16892 = c;
    var G__16893 = d;
    var G__16894 = e;
    var G__16895 = f;
    var G__16896 = g;
    var G__16897 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__16890, G__16891, G__16892, G__16893, G__16894, G__16895, G__16896, G__16897) : self__.afn.call(null, G__16890, G__16891, G__16892, G__16893, G__16894, G__16895, G__16896, G__16897);
  };
  var G__17326__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16898 = a;
    var G__16899 = b;
    var G__16900 = c;
    var G__16901 = d;
    var G__16902 = e;
    var G__16903 = f;
    var G__16904 = g;
    var G__16905 = h;
    var G__16906 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__16898, G__16899, G__16900, G__16901, G__16902, G__16903, G__16904, G__16905, G__16906) : self__.afn.call(null, G__16898, G__16899, G__16900, G__16901, G__16902, G__16903, G__16904, G__16905, G__16906);
  };
  var G__17326__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16907 = a;
    var G__16908 = b;
    var G__16909 = c;
    var G__16910 = d;
    var G__16911 = e;
    var G__16912 = f;
    var G__16913 = g;
    var G__16914 = h;
    var G__16915 = i;
    var G__16916 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__16907, G__16908, G__16909, G__16910, G__16911, G__16912, G__16913, G__16914, G__16915, G__16916) : self__.afn.call(null, G__16907, G__16908, G__16909, G__16910, G__16911, G__16912, G__16913, G__16914, G__16915, G__16916);
  };
  var G__17326__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16917 = a;
    var G__16918 = b;
    var G__16919 = c;
    var G__16920 = d;
    var G__16921 = e;
    var G__16922 = f;
    var G__16923 = g;
    var G__16924 = h;
    var G__16925 = i;
    var G__16926 = j;
    var G__16927 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__16917, G__16918, G__16919, G__16920, G__16921, G__16922, G__16923, G__16924, G__16925, G__16926, G__16927) : self__.afn.call(null, G__16917, G__16918, G__16919, G__16920, G__16921, G__16922, G__16923, G__16924, G__16925, G__16926, G__16927);
  };
  var G__17326__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16928 = a;
    var G__16929 = b;
    var G__16930 = c;
    var G__16931 = d;
    var G__16932 = e;
    var G__16933 = f;
    var G__16934 = g;
    var G__16935 = h;
    var G__16936 = i;
    var G__16937 = j;
    var G__16938 = k;
    var G__16939 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__16928, G__16929, G__16930, G__16931, G__16932, G__16933, G__16934, G__16935, G__16936, G__16937, G__16938, G__16939) : self__.afn.call(null, G__16928, G__16929, G__16930, G__16931, G__16932, G__16933, G__16934, G__16935, G__16936, G__16937, G__16938, G__16939);
  };
  var G__17326__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16940 = a;
    var G__16941 = b;
    var G__16942 = c;
    var G__16943 = d;
    var G__16944 = e;
    var G__16945 = f;
    var G__16946 = g;
    var G__16947 = h;
    var G__16948 = i;
    var G__16949 = j;
    var G__16950 = k;
    var G__16951 = l;
    var G__16952 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__16940, G__16941, G__16942, G__16943, G__16944, G__16945, G__16946, G__16947, G__16948, G__16949, G__16950, G__16951, G__16952) : self__.afn.call(null, G__16940, G__16941, G__16942, G__16943, G__16944, G__16945, G__16946, G__16947, G__16948, G__16949, G__16950, G__16951, G__16952);
  };
  var G__17326__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16953 = a;
    var G__16954 = b;
    var G__16955 = c;
    var G__16956 = d;
    var G__16957 = e;
    var G__16958 = f;
    var G__16959 = g;
    var G__16960 = h;
    var G__16961 = i;
    var G__16962 = j;
    var G__16963 = k;
    var G__16964 = l;
    var G__16965 = m;
    var G__16966 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__16953, G__16954, G__16955, G__16956, G__16957, G__16958, G__16959, G__16960, G__16961, G__16962, G__16963, G__16964, G__16965, G__16966) : self__.afn.call(null, G__16953, G__16954, G__16955, G__16956, G__16957, G__16958, G__16959, G__16960, G__16961, G__16962, G__16963, G__16964, G__16965, G__16966);
  };
  var G__17326__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16967 = a;
    var G__16968 = b;
    var G__16969 = c;
    var G__16970 = d;
    var G__16971 = e;
    var G__16972 = f;
    var G__16973 = g;
    var G__16974 = h;
    var G__16975 = i;
    var G__16976 = j;
    var G__16977 = k;
    var G__16978 = l;
    var G__16979 = m;
    var G__16980 = n;
    var G__16981 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__16967, G__16968, G__16969, G__16970, G__16971, G__16972, G__16973, G__16974, G__16975, G__16976, G__16977, G__16978, G__16979, G__16980, G__16981) : self__.afn.call(null, G__16967, G__16968, G__16969, G__16970, G__16971, G__16972, G__16973, G__16974, G__16975, G__16976, G__16977, G__16978, G__16979, G__16980, G__16981);
  };
  var G__17326__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16982 = a;
    var G__16983 = b;
    var G__16984 = c;
    var G__16985 = d;
    var G__16986 = e;
    var G__16987 = f;
    var G__16988 = g;
    var G__16989 = h;
    var G__16990 = i;
    var G__16991 = j;
    var G__16992 = k;
    var G__16993 = l;
    var G__16994 = m;
    var G__16995 = n;
    var G__16996 = o;
    var G__16997 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__16982, G__16983, G__16984, G__16985, G__16986, G__16987, G__16988, G__16989, G__16990, G__16991, G__16992, G__16993, G__16994, G__16995, G__16996, G__16997) : self__.afn.call(null, G__16982, G__16983, G__16984, G__16985, G__16986, G__16987, G__16988, G__16989, G__16990, G__16991, G__16992, G__16993, G__16994, G__16995, G__16996, G__16997);
  };
  var G__17326__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16998 = a;
    var G__16999 = b;
    var G__17000 = c;
    var G__17001 = d;
    var G__17002 = e;
    var G__17003 = f;
    var G__17004 = g;
    var G__17005 = h;
    var G__17006 = i;
    var G__17007 = j;
    var G__17008 = k;
    var G__17009 = l;
    var G__17010 = m;
    var G__17011 = n;
    var G__17012 = o;
    var G__17013 = p;
    var G__17014 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__16998, G__16999, G__17000, G__17001, G__17002, G__17003, G__17004, G__17005, G__17006, G__17007, G__17008, G__17009, G__17010, G__17011, G__17012, G__17013, G__17014) : self__.afn.call(null, G__16998, G__16999, G__17000, G__17001, G__17002, G__17003, G__17004, G__17005, G__17006, G__17007, G__17008, G__17009, G__17010, G__17011, G__17012, G__17013, G__17014);
  };
  var G__17326__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17015 = a;
    var G__17016 = b;
    var G__17017 = c;
    var G__17018 = d;
    var G__17019 = e;
    var G__17020 = f;
    var G__17021 = g;
    var G__17022 = h;
    var G__17023 = i;
    var G__17024 = j;
    var G__17025 = k;
    var G__17026 = l;
    var G__17027 = m;
    var G__17028 = n;
    var G__17029 = o;
    var G__17030 = p;
    var G__17031 = q;
    var G__17032 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__17015, G__17016, G__17017, G__17018, G__17019, G__17020, G__17021, G__17022, G__17023, G__17024, G__17025, G__17026, G__17027, G__17028, G__17029, G__17030, G__17031, G__17032) : self__.afn.call(null, G__17015, G__17016, G__17017, G__17018, G__17019, G__17020, G__17021, G__17022, G__17023, G__17024, G__17025, G__17026, G__17027, G__17028, G__17029, G__17030, G__17031, G__17032);
  };
  var G__17326__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17033 = a;
    var G__17034 = b;
    var G__17035 = c;
    var G__17036 = d;
    var G__17037 = e;
    var G__17038 = f;
    var G__17039 = g;
    var G__17040 = h;
    var G__17041 = i;
    var G__17042 = j;
    var G__17043 = k;
    var G__17044 = l;
    var G__17045 = m;
    var G__17046 = n;
    var G__17047 = o;
    var G__17048 = p;
    var G__17049 = q;
    var G__17050 = r;
    var G__17051 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__17033, G__17034, G__17035, G__17036, G__17037, G__17038, G__17039, G__17040, G__17041, G__17042, G__17043, G__17044, G__17045, G__17046, G__17047, G__17048, G__17049, G__17050, G__17051) : self__.afn.call(null, G__17033, G__17034, G__17035, G__17036, G__17037, G__17038, G__17039, G__17040, G__17041, G__17042, G__17043, G__17044, G__17045, G__17046, G__17047, G__17048, G__17049, G__17050, G__17051);
  };
  var G__17326__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17052 = a;
    var G__17053 = b;
    var G__17054 = c;
    var G__17055 = d;
    var G__17056 = e;
    var G__17057 = f;
    var G__17058 = g;
    var G__17059 = h;
    var G__17060 = i;
    var G__17061 = j;
    var G__17062 = k;
    var G__17063 = l;
    var G__17064 = m;
    var G__17065 = n;
    var G__17066 = o;
    var G__17067 = p;
    var G__17068 = q;
    var G__17069 = r;
    var G__17070 = s;
    var G__17071 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__17052, G__17053, G__17054, G__17055, G__17056, G__17057, G__17058, G__17059, G__17060, G__17061, G__17062, G__17063, G__17064, G__17065, G__17066, G__17067, G__17068, G__17069, G__17070, G__17071) : self__.afn.call(null, G__17052, G__17053, G__17054, G__17055, G__17056, G__17057, G__17058, G__17059, G__17060, G__17061, G__17062, G__17063, G__17064, G__17065, G__17066, G__17067, G__17068, G__17069, 
    G__17070, G__17071);
  };
  var G__17326__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__17072 = self__.afn;
    var G__17073 = a;
    var G__17074 = b;
    var G__17075 = c;
    var G__17076 = d;
    var G__17077 = e;
    var G__17078 = f;
    var G__17079 = g;
    var G__17080 = h;
    var G__17081 = i;
    var G__17082 = j;
    var G__17083 = k;
    var G__17084 = l;
    var G__17085 = m;
    var G__17086 = n;
    var G__17087 = o;
    var G__17088 = p;
    var G__17089 = q;
    var G__17090 = r;
    var G__17091 = s;
    var G__17092 = t;
    var G__17093 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__17072, G__17073, G__17074, G__17075, G__17076, G__17077, G__17078, G__17079, G__17080, G__17081, G__17082, G__17083, G__17084, G__17085, G__17086, G__17087, G__17088, G__17089, G__17090, G__17091, G__17092, G__17093) : cljs.core.apply.call(null, G__17072, G__17073, G__17074, G__17075, G__17076, G__17077, G__17078, G__17079, G__17080, G__17081, G__17082, G__17083, G__17084, G__17085, G__17086, 
    G__17087, G__17088, G__17089, G__17090, G__17091, G__17092, G__17093);
  };
  G__17326 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__17326__1.call(this, self__);
      case 2:
        return G__17326__2.call(this, self__, a);
      case 3:
        return G__17326__3.call(this, self__, a, b);
      case 4:
        return G__17326__4.call(this, self__, a, b, c);
      case 5:
        return G__17326__5.call(this, self__, a, b, c, d);
      case 6:
        return G__17326__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__17326__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__17326__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__17326__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__17326__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__17326__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__17326__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__17326__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__17326__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__17326__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__17326__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__17326__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__17326__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__17326__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__17326__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__17326__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__17326__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17326.cljs$core$IFn$_invoke$arity$1 = G__17326__1;
  G__17326.cljs$core$IFn$_invoke$arity$2 = G__17326__2;
  G__17326.cljs$core$IFn$_invoke$arity$3 = G__17326__3;
  G__17326.cljs$core$IFn$_invoke$arity$4 = G__17326__4;
  G__17326.cljs$core$IFn$_invoke$arity$5 = G__17326__5;
  G__17326.cljs$core$IFn$_invoke$arity$6 = G__17326__6;
  G__17326.cljs$core$IFn$_invoke$arity$7 = G__17326__7;
  G__17326.cljs$core$IFn$_invoke$arity$8 = G__17326__8;
  G__17326.cljs$core$IFn$_invoke$arity$9 = G__17326__9;
  G__17326.cljs$core$IFn$_invoke$arity$10 = G__17326__10;
  G__17326.cljs$core$IFn$_invoke$arity$11 = G__17326__11;
  G__17326.cljs$core$IFn$_invoke$arity$12 = G__17326__12;
  G__17326.cljs$core$IFn$_invoke$arity$13 = G__17326__13;
  G__17326.cljs$core$IFn$_invoke$arity$14 = G__17326__14;
  G__17326.cljs$core$IFn$_invoke$arity$15 = G__17326__15;
  G__17326.cljs$core$IFn$_invoke$arity$16 = G__17326__16;
  G__17326.cljs$core$IFn$_invoke$arity$17 = G__17326__17;
  G__17326.cljs$core$IFn$_invoke$arity$18 = G__17326__18;
  G__17326.cljs$core$IFn$_invoke$arity$19 = G__17326__19;
  G__17326.cljs$core$IFn$_invoke$arity$20 = G__17326__20;
  G__17326.cljs$core$IFn$_invoke$arity$21 = G__17326__21;
  G__17326.cljs$core$IFn$_invoke$arity$22 = G__17326__22;
  return G__17326;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args16861) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16861)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__17094 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__17094) : self__.afn.call(null, G__17094);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__17095 = a;
  var G__17096 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__17095, G__17096) : self__.afn.call(null, G__17095, G__17096);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__17097 = a;
  var G__17098 = b;
  var G__17099 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__17097, G__17098, G__17099) : self__.afn.call(null, G__17097, G__17098, G__17099);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__17100 = a;
  var G__17101 = b;
  var G__17102 = c;
  var G__17103 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__17100, G__17101, G__17102, G__17103) : self__.afn.call(null, G__17100, G__17101, G__17102, G__17103);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__17104 = a;
  var G__17105 = b;
  var G__17106 = c;
  var G__17107 = d;
  var G__17108 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__17104, G__17105, G__17106, G__17107, G__17108) : self__.afn.call(null, G__17104, G__17105, G__17106, G__17107, G__17108);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__17109 = a;
  var G__17110 = b;
  var G__17111 = c;
  var G__17112 = d;
  var G__17113 = e;
  var G__17114 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__17109, G__17110, G__17111, G__17112, G__17113, G__17114) : self__.afn.call(null, G__17109, G__17110, G__17111, G__17112, G__17113, G__17114);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__17115 = a;
  var G__17116 = b;
  var G__17117 = c;
  var G__17118 = d;
  var G__17119 = e;
  var G__17120 = f;
  var G__17121 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__17115, G__17116, G__17117, G__17118, G__17119, G__17120, G__17121) : self__.afn.call(null, G__17115, G__17116, G__17117, G__17118, G__17119, G__17120, G__17121);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__17122 = a;
  var G__17123 = b;
  var G__17124 = c;
  var G__17125 = d;
  var G__17126 = e;
  var G__17127 = f;
  var G__17128 = g;
  var G__17129 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__17122, G__17123, G__17124, G__17125, G__17126, G__17127, G__17128, G__17129) : self__.afn.call(null, G__17122, G__17123, G__17124, G__17125, G__17126, G__17127, G__17128, G__17129);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__17130 = a;
  var G__17131 = b;
  var G__17132 = c;
  var G__17133 = d;
  var G__17134 = e;
  var G__17135 = f;
  var G__17136 = g;
  var G__17137 = h;
  var G__17138 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__17130, G__17131, G__17132, G__17133, G__17134, G__17135, G__17136, G__17137, G__17138) : self__.afn.call(null, G__17130, G__17131, G__17132, G__17133, G__17134, G__17135, G__17136, G__17137, G__17138);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__17139 = a;
  var G__17140 = b;
  var G__17141 = c;
  var G__17142 = d;
  var G__17143 = e;
  var G__17144 = f;
  var G__17145 = g;
  var G__17146 = h;
  var G__17147 = i;
  var G__17148 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__17139, G__17140, G__17141, G__17142, G__17143, G__17144, G__17145, G__17146, G__17147, G__17148) : self__.afn.call(null, G__17139, G__17140, G__17141, G__17142, G__17143, G__17144, G__17145, G__17146, G__17147, G__17148);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__17149 = a;
  var G__17150 = b;
  var G__17151 = c;
  var G__17152 = d;
  var G__17153 = e;
  var G__17154 = f;
  var G__17155 = g;
  var G__17156 = h;
  var G__17157 = i;
  var G__17158 = j;
  var G__17159 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__17149, G__17150, G__17151, G__17152, G__17153, G__17154, G__17155, G__17156, G__17157, G__17158, G__17159) : self__.afn.call(null, G__17149, G__17150, G__17151, G__17152, G__17153, G__17154, G__17155, G__17156, G__17157, G__17158, G__17159);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__17160 = a;
  var G__17161 = b;
  var G__17162 = c;
  var G__17163 = d;
  var G__17164 = e;
  var G__17165 = f;
  var G__17166 = g;
  var G__17167 = h;
  var G__17168 = i;
  var G__17169 = j;
  var G__17170 = k;
  var G__17171 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__17160, G__17161, G__17162, G__17163, G__17164, G__17165, G__17166, G__17167, G__17168, G__17169, G__17170, G__17171) : self__.afn.call(null, G__17160, G__17161, G__17162, G__17163, G__17164, G__17165, G__17166, G__17167, G__17168, G__17169, G__17170, G__17171);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__17172 = a;
  var G__17173 = b;
  var G__17174 = c;
  var G__17175 = d;
  var G__17176 = e;
  var G__17177 = f;
  var G__17178 = g;
  var G__17179 = h;
  var G__17180 = i;
  var G__17181 = j;
  var G__17182 = k;
  var G__17183 = l;
  var G__17184 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__17172, G__17173, G__17174, G__17175, G__17176, G__17177, G__17178, G__17179, G__17180, G__17181, G__17182, G__17183, G__17184) : self__.afn.call(null, G__17172, G__17173, G__17174, G__17175, G__17176, G__17177, G__17178, G__17179, G__17180, G__17181, G__17182, G__17183, G__17184);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__17185 = a;
  var G__17186 = b;
  var G__17187 = c;
  var G__17188 = d;
  var G__17189 = e;
  var G__17190 = f;
  var G__17191 = g;
  var G__17192 = h;
  var G__17193 = i;
  var G__17194 = j;
  var G__17195 = k;
  var G__17196 = l;
  var G__17197 = m;
  var G__17198 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__17185, G__17186, G__17187, G__17188, G__17189, G__17190, G__17191, G__17192, G__17193, G__17194, G__17195, G__17196, G__17197, G__17198) : self__.afn.call(null, G__17185, G__17186, G__17187, G__17188, G__17189, G__17190, G__17191, G__17192, G__17193, G__17194, G__17195, G__17196, G__17197, G__17198);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__17199 = a;
  var G__17200 = b;
  var G__17201 = c;
  var G__17202 = d;
  var G__17203 = e;
  var G__17204 = f;
  var G__17205 = g;
  var G__17206 = h;
  var G__17207 = i;
  var G__17208 = j;
  var G__17209 = k;
  var G__17210 = l;
  var G__17211 = m;
  var G__17212 = n;
  var G__17213 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__17199, G__17200, G__17201, G__17202, G__17203, G__17204, G__17205, G__17206, G__17207, G__17208, G__17209, G__17210, G__17211, G__17212, G__17213) : self__.afn.call(null, G__17199, G__17200, G__17201, G__17202, G__17203, G__17204, G__17205, G__17206, G__17207, G__17208, G__17209, G__17210, G__17211, G__17212, G__17213);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__17214 = a;
  var G__17215 = b;
  var G__17216 = c;
  var G__17217 = d;
  var G__17218 = e;
  var G__17219 = f;
  var G__17220 = g;
  var G__17221 = h;
  var G__17222 = i;
  var G__17223 = j;
  var G__17224 = k;
  var G__17225 = l;
  var G__17226 = m;
  var G__17227 = n;
  var G__17228 = o;
  var G__17229 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__17214, G__17215, G__17216, G__17217, G__17218, G__17219, G__17220, G__17221, G__17222, G__17223, G__17224, G__17225, G__17226, G__17227, G__17228, G__17229) : self__.afn.call(null, G__17214, G__17215, G__17216, G__17217, G__17218, G__17219, G__17220, G__17221, G__17222, G__17223, G__17224, G__17225, G__17226, G__17227, G__17228, G__17229);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__17230 = a;
  var G__17231 = b;
  var G__17232 = c;
  var G__17233 = d;
  var G__17234 = e;
  var G__17235 = f;
  var G__17236 = g;
  var G__17237 = h;
  var G__17238 = i;
  var G__17239 = j;
  var G__17240 = k;
  var G__17241 = l;
  var G__17242 = m;
  var G__17243 = n;
  var G__17244 = o;
  var G__17245 = p;
  var G__17246 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__17230, G__17231, G__17232, G__17233, G__17234, G__17235, G__17236, G__17237, G__17238, G__17239, G__17240, G__17241, G__17242, G__17243, G__17244, G__17245, G__17246) : self__.afn.call(null, G__17230, G__17231, G__17232, G__17233, G__17234, G__17235, G__17236, G__17237, G__17238, G__17239, G__17240, G__17241, G__17242, G__17243, G__17244, G__17245, G__17246);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__17247 = a;
  var G__17248 = b;
  var G__17249 = c;
  var G__17250 = d;
  var G__17251 = e;
  var G__17252 = f;
  var G__17253 = g;
  var G__17254 = h;
  var G__17255 = i;
  var G__17256 = j;
  var G__17257 = k;
  var G__17258 = l;
  var G__17259 = m;
  var G__17260 = n;
  var G__17261 = o;
  var G__17262 = p;
  var G__17263 = q;
  var G__17264 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__17247, G__17248, G__17249, G__17250, G__17251, G__17252, G__17253, G__17254, G__17255, G__17256, G__17257, G__17258, G__17259, G__17260, G__17261, G__17262, G__17263, G__17264) : self__.afn.call(null, G__17247, G__17248, G__17249, G__17250, G__17251, G__17252, G__17253, G__17254, G__17255, G__17256, G__17257, G__17258, G__17259, G__17260, G__17261, G__17262, G__17263, G__17264);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__17265 = a;
  var G__17266 = b;
  var G__17267 = c;
  var G__17268 = d;
  var G__17269 = e;
  var G__17270 = f;
  var G__17271 = g;
  var G__17272 = h;
  var G__17273 = i;
  var G__17274 = j;
  var G__17275 = k;
  var G__17276 = l;
  var G__17277 = m;
  var G__17278 = n;
  var G__17279 = o;
  var G__17280 = p;
  var G__17281 = q;
  var G__17282 = r;
  var G__17283 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__17265, G__17266, G__17267, G__17268, G__17269, G__17270, G__17271, G__17272, G__17273, G__17274, G__17275, G__17276, G__17277, G__17278, G__17279, G__17280, G__17281, G__17282, G__17283) : self__.afn.call(null, G__17265, G__17266, G__17267, G__17268, G__17269, G__17270, G__17271, G__17272, G__17273, G__17274, G__17275, G__17276, G__17277, G__17278, G__17279, G__17280, G__17281, G__17282, G__17283);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__17284 = a;
  var G__17285 = b;
  var G__17286 = c;
  var G__17287 = d;
  var G__17288 = e;
  var G__17289 = f;
  var G__17290 = g;
  var G__17291 = h;
  var G__17292 = i;
  var G__17293 = j;
  var G__17294 = k;
  var G__17295 = l;
  var G__17296 = m;
  var G__17297 = n;
  var G__17298 = o;
  var G__17299 = p;
  var G__17300 = q;
  var G__17301 = r;
  var G__17302 = s;
  var G__17303 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__17284, G__17285, G__17286, G__17287, G__17288, G__17289, G__17290, G__17291, G__17292, G__17293, G__17294, G__17295, G__17296, G__17297, G__17298, G__17299, G__17300, G__17301, G__17302, G__17303) : self__.afn.call(null, G__17284, G__17285, G__17286, G__17287, G__17288, G__17289, G__17290, G__17291, G__17292, G__17293, G__17294, G__17295, G__17296, G__17297, G__17298, G__17299, G__17300, G__17301, G__17302, 
  G__17303);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__17304 = self__.afn;
  var G__17305 = a;
  var G__17306 = b;
  var G__17307 = c;
  var G__17308 = d;
  var G__17309 = e;
  var G__17310 = f;
  var G__17311 = g;
  var G__17312 = h;
  var G__17313 = i;
  var G__17314 = j;
  var G__17315 = k;
  var G__17316 = l;
  var G__17317 = m;
  var G__17318 = n;
  var G__17319 = o;
  var G__17320 = p;
  var G__17321 = q;
  var G__17322 = r;
  var G__17323 = s;
  var G__17324 = t;
  var G__17325 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__17304, G__17305, G__17306, G__17307, G__17308, G__17309, G__17310, G__17311, G__17312, G__17313, G__17314, G__17315, G__17316, G__17317, G__17318, G__17319, G__17320, G__17321, G__17322, G__17323, G__17324, G__17325) : cljs.core.apply.call(null, G__17304, G__17305, G__17306, G__17307, G__17308, G__17309, G__17310, G__17311, G__17312, G__17313, G__17314, G__17315, G__17316, G__17317, G__17318, 
  G__17319, G__17320, G__17321, G__17322, G__17323, G__17324, G__17325);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__17330 = o;
    if (G__17330) {
      var bit__4783__auto__ = G__17330.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4783__auto__ || G__17330.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__17330.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__17330);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__17330);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4097__auto__ = !(o == null);
    if (and__4097__auto__) {
      var G__17334 = o;
      if (G__17334) {
        var bit__4783__auto__ = G__17334.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4783__auto__ || G__17334.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__17334.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__17334);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__17334);
      }
    } else {
      return and__4097__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var cljs$core$disj = null;
  var cljs$core$disj__1 = function(coll) {
    return coll;
  };
  var cljs$core$disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var cljs$core$disj__3 = function() {
    var G__17337__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = cljs$core$disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__17338 = ret;
            var G__17339 = cljs.core.first(ks);
            var G__17340 = cljs.core.next(ks);
            coll = G__17338;
            k = G__17339;
            ks = G__17340;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__17337 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__17341__i = 0, G__17341__a = new Array(arguments.length - 2);
        while (G__17341__i < G__17341__a.length) {
          G__17341__a[G__17341__i] = arguments[G__17341__i + 2];
          ++G__17341__i;
        }
        ks = new cljs.core.IndexedSeq(G__17341__a, 0);
      }
      return G__17337__delegate.call(this, coll, k, ks);
    };
    G__17337.cljs$lang$maxFixedArity = 2;
    G__17337.cljs$lang$applyTo = function(arglist__17342) {
      var coll = cljs.core.first(arglist__17342);
      arglist__17342 = cljs.core.next(arglist__17342);
      var k = cljs.core.first(arglist__17342);
      var ks = cljs.core.rest(arglist__17342);
      return G__17337__delegate(coll, k, ks);
    };
    G__17337.cljs$core$IFn$_invoke$arity$variadic = G__17337__delegate;
    return G__17337;
  }();
  cljs$core$disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$disj__1.call(this, coll);
      case 2:
        return cljs$core$disj__2.call(this, coll, k);
      default:
        var G__17343 = null;
        if (arguments.length > 2) {
          var G__17344__i = 0, G__17344__a = new Array(arguments.length - 2);
          while (G__17344__i < G__17344__a.length) {
            G__17344__a[G__17344__i] = arguments[G__17344__i + 2];
            ++G__17344__i;
          }
          G__17343 = new cljs.core.IndexedSeq(G__17344__a, 0);
        }
        return cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__17343);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$disj.cljs$lang$maxFixedArity = 2;
  cljs$core$disj.cljs$lang$applyTo = cljs$core$disj__3.cljs$lang$applyTo;
  cljs$core$disj.cljs$core$IFn$_invoke$arity$1 = cljs$core$disj__1;
  cljs$core$disj.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj__2;
  cljs$core$disj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$disj;
}();
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__17346 = x;
    if (G__17346) {
      var bit__4783__auto__ = G__17346.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4783__auto__ || G__17346.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__17346.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__17346);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__17346);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__17348 = x;
    if (G__17348) {
      var bit__4783__auto__ = G__17348.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4783__auto__ || G__17348.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__17348.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__17348);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__17348);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  var G__17350 = x;
  if (G__17350) {
    var bit__4783__auto__ = G__17350.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4783__auto__ || G__17350.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__17350.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__17350);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__17350);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  var G__17352 = x;
  if (G__17352) {
    var bit__4783__auto__ = G__17352.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4783__auto__ || G__17352.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__17352.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__17352);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__17352);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  var G__17354 = x;
  if (G__17354) {
    var bit__4783__auto__ = G__17354.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4783__auto__ || G__17354.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__17354.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__17354);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__17354);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  var G__17356 = x;
  if (G__17356) {
    var bit__4783__auto__ = G__17356.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4783__auto__ || G__17356.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__17356.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__17356);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__17356);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__17358 = x;
    if (G__17358) {
      var bit__4783__auto__ = G__17358.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4783__auto__ || G__17358.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__17358.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__17358);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__17358);
    }
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  var G__17360 = x;
  if (G__17360) {
    var bit__4783__auto__ = G__17360.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4783__auto__ || G__17360.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__17360.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__17360);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__17360);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  var G__17362 = x;
  if (G__17362) {
    var bit__4776__auto__ = G__17362.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4776__auto__ || G__17362.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var cljs$core$js_obj = null;
  var cljs$core$js_obj__0 = function() {
    var obj17368 = {};
    return obj17368;
  };
  var cljs$core$js_obj__1 = function() {
    var G__17371__delegate = function(keyvals) {
      var G__17369 = goog.object.create;
      var G__17370 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__17369, G__17370) : cljs.core.apply.call(null, G__17369, G__17370);
    };
    var G__17371 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__17372__i = 0, G__17372__a = new Array(arguments.length - 0);
        while (G__17372__i < G__17372__a.length) {
          G__17372__a[G__17372__i] = arguments[G__17372__i + 0];
          ++G__17372__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__17372__a, 0);
      }
      return G__17371__delegate.call(this, keyvals);
    };
    G__17371.cljs$lang$maxFixedArity = 0;
    G__17371.cljs$lang$applyTo = function(arglist__17373) {
      var keyvals = cljs.core.seq(arglist__17373);
      return G__17371__delegate(keyvals);
    };
    G__17371.cljs$core$IFn$_invoke$arity$variadic = G__17371__delegate;
    return G__17371;
  }();
  cljs$core$js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$js_obj__0.call(this);
      default:
        var G__17374 = null;
        if (arguments.length > 0) {
          var G__17375__i = 0, G__17375__a = new Array(arguments.length - 0);
          while (G__17375__i < G__17375__a.length) {
            G__17375__a[G__17375__i] = arguments[G__17375__i + 0];
            ++G__17375__i;
          }
          G__17374 = new cljs.core.IndexedSeq(G__17375__a, 0);
        }
        return cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__17374);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$js_obj.cljs$lang$maxFixedArity = 0;
  cljs$core$js_obj.cljs$lang$applyTo = cljs$core$js_obj__1.cljs$lang$applyTo;
  cljs$core$js_obj.cljs$core$IFn$_invoke$arity$0 = cljs$core$js_obj__0;
  cljs$core$js_obj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$js_obj;
}();
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__17378_17380 = obj;
  var G__17379_17381 = function(G__17378_17380, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__17378_17380, keys);
  goog.object.forEach(G__17378_17380, G__17379_17381);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__17382 = i__$1 + 1;
      var G__17383 = j__$1 + 1;
      var G__17384 = len__$1 - 1;
      i__$1 = G__17382;
      j__$1 = G__17383;
      len__$1 = G__17384;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__17385 = i__$1 - 1;
      var G__17386 = j__$1 - 1;
      var G__17387 = len__$1 - 1;
      i__$1 = G__17385;
      j__$1 = G__17386;
      len__$1 = G__17387;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj17389 = {};
  return obj17389;
}();
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__17391 = s;
    if (G__17391) {
      var bit__4783__auto__ = G__17391.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4783__auto__ || G__17391.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__17391.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__17391);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__17391);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var G__17393 = s;
  if (G__17393) {
    var bit__4783__auto__ = G__17393.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4783__auto__ || G__17393.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__17393.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__17393);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__17393);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4109__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4109__auto__) {
    return or__4109__auto__;
  } else {
    var G__17397 = f;
    if (G__17397) {
      var bit__4783__auto__ = G__17397.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4783__auto__ || G__17397.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__17397.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__17397);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__17397);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__17410 = n;
    return isNaN(G__17410);
  }()) && !(n === Infinity) && function() {
    var G__17411 = n;
    return parseFloat(G__17411);
  }() === function() {
    var G__17412 = n;
    var G__17413 = 10;
    return parseInt(G__17412, G__17413);
  }();
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var cljs$core$distinct_QMARK_ = null;
  var cljs$core$distinct_QMARK___1 = function(x) {
    return true;
  };
  var cljs$core$distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var cljs$core$distinct_QMARK___3 = function() {
    var G__17414__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__17415 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__17416 = etc;
              s = G__17415;
              xs = G__17416;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__17414 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17417__i = 0, G__17417__a = new Array(arguments.length - 2);
        while (G__17417__i < G__17417__a.length) {
          G__17417__a[G__17417__i] = arguments[G__17417__i + 2];
          ++G__17417__i;
        }
        more = new cljs.core.IndexedSeq(G__17417__a, 0);
      }
      return G__17414__delegate.call(this, x, y, more);
    };
    G__17414.cljs$lang$maxFixedArity = 2;
    G__17414.cljs$lang$applyTo = function(arglist__17418) {
      var x = cljs.core.first(arglist__17418);
      arglist__17418 = cljs.core.next(arglist__17418);
      var y = cljs.core.first(arglist__17418);
      var more = cljs.core.rest(arglist__17418);
      return G__17414__delegate(x, y, more);
    };
    G__17414.cljs$core$IFn$_invoke$arity$variadic = G__17414__delegate;
    return G__17414;
  }();
  cljs$core$distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$distinct_QMARK___1.call(this, x);
      case 2:
        return cljs$core$distinct_QMARK___2.call(this, x, y);
      default:
        var G__17419 = null;
        if (arguments.length > 2) {
          var G__17420__i = 0, G__17420__a = new Array(arguments.length - 2);
          while (G__17420__i < G__17420__a.length) {
            G__17420__a[G__17420__i] = arguments[G__17420__i + 2];
            ++G__17420__i;
          }
          G__17419 = new cljs.core.IndexedSeq(G__17420__a, 0);
        }
        return cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17419);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  cljs$core$distinct_QMARK_.cljs$lang$applyTo = cljs$core$distinct_QMARK___3.cljs$lang$applyTo;
  cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct_QMARK___1;
  cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$distinct_QMARK___2;
  cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$distinct_QMARK_;
}();
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__17424 = x;
            if (G__17424) {
              var bit__4776__auto__ = G__17424.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4776__auto__ || G__17424.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__17425 = x;
            var G__17426 = y;
            return goog.array.defaultCompare(G__17425, G__17426);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var cljs$core$compare_indexed = null;
  var cljs$core$compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var cljs$core$compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__17431 = xs;
        var G__17432 = ys;
        var G__17433 = len;
        var G__17434 = n + 1;
        xs = G__17431;
        ys = G__17432;
        len = G__17433;
        n = G__17434;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  cljs$core$compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return cljs$core$compare_indexed__2.call(this, xs, ys);
      case 4:
        return cljs$core$compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$compare_indexed__2;
  cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4 = cljs$core$compare_indexed__4;
  return cljs$core$compare_indexed;
}();
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__17439 = x;
        var G__17440 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17439, G__17440) : f.call(null, G__17439, G__17440);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__17441 = y;
            var G__17442 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17441, G__17442) : f.call(null, G__17441, G__17442);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var cljs$core$sort = null;
  var cljs$core$sort__1 = function(coll) {
    return cljs$core$sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var cljs$core$sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__17448 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__17448) : cljs.core.to_array.call(null, G__17448);
      }();
      var G__17449_17451 = a;
      var G__17450_17452 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__17449_17451, G__17450_17452);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  cljs$core$sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$sort__1.call(this, comp);
      case 2:
        return cljs$core$sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$sort.cljs$core$IFn$_invoke$arity$1 = cljs$core$sort__1;
  cljs$core$sort.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort__2;
  return cljs$core$sort;
}();
cljs.core.sort_by = function() {
  var cljs$core$sort_by = null;
  var cljs$core$sort_by__2 = function(keyfn, coll) {
    return cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var cljs$core$sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__17458 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17458) : keyfn.call(null, G__17458);
      }(), function() {
        var G__17459 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17459) : keyfn.call(null, G__17459);
      }());
    }, coll);
  };
  cljs$core$sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return cljs$core$sort_by__2.call(this, keyfn, comp);
      case 3:
        return cljs$core$sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$sort_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort_by__2;
  cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3 = cljs$core$sort_by__3;
  return cljs$core$sort_by;
}();
cljs.core.seq_reduce = function() {
  var cljs$core$seq_reduce = null;
  var cljs$core$seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__17465 = f;
      var G__17466 = cljs.core.first(s);
      var G__17467 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__17465, G__17466, G__17467) : cljs.core.reduce.call(null, G__17465, G__17466, G__17467);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var cljs$core$seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__17468 = val__$1;
          var G__17469 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17468, G__17469) : f.call(null, G__17468, G__17469);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__17470 = nval;
          var G__17471 = cljs.core.next(coll__$1);
          val__$1 = G__17470;
          coll__$1 = G__17471;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  cljs$core$seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return cljs$core$seq_reduce__2.call(this, f, val);
      case 3:
        return cljs$core$seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$seq_reduce__2;
  cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$seq_reduce__3;
  return cljs$core$seq_reduce;
}();
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = function() {
    var G__17475 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__17475) : cljs.core.to_array.call(null, G__17475);
  }();
  var G__17476_17478 = a;
  goog.array.shuffle(G__17476_17478);
  var G__17477 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__17477) : cljs.core.vec.call(null, G__17477);
};
cljs.core.reduce = function() {
  var cljs$core$reduce = null;
  var cljs$core$reduce__2 = function(f, coll) {
    if (function() {
      var G__17481 = coll;
      if (G__17481) {
        var bit__4776__auto__ = G__17481.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4776__auto__ || G__17481.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var cljs$core$reduce__3 = function(f, val, coll) {
    if (function() {
      var G__17482 = coll;
      if (G__17482) {
        var bit__4776__auto__ = G__17482.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4776__auto__ || G__17482.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  cljs$core$reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return cljs$core$reduce__2.call(this, f, val);
      case 3:
        return cljs$core$reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$reduce__2;
  cljs$core$reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$reduce__3;
  return cljs$core$reduce;
}();
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function() {
  var cljs$core$completing = null;
  var cljs$core$completing__1 = function(f) {
    return cljs$core$completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var cljs$core$completing__2 = function(f, cf) {
    return function() {
      var G__17491 = null;
      var G__17491__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__17491__1 = function(x) {
        var G__17488 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__17488) : cf.call(null, G__17488);
      };
      var G__17491__2 = function(x, y) {
        var G__17489 = x;
        var G__17490 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17489, G__17490) : f.call(null, G__17489, G__17490);
      };
      G__17491 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__17491__0.call(this);
          case 1:
            return G__17491__1.call(this, x);
          case 2:
            return G__17491__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__17491.cljs$core$IFn$_invoke$arity$0 = G__17491__0;
      G__17491.cljs$core$IFn$_invoke$arity$1 = G__17491__1;
      G__17491.cljs$core$IFn$_invoke$arity$2 = G__17491__2;
      return G__17491;
    }();
  };
  cljs$core$completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return cljs$core$completing__1.call(this, f);
      case 2:
        return cljs$core$completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$completing.cljs$core$IFn$_invoke$arity$1 = cljs$core$completing__1;
  cljs$core$completing.cljs$core$IFn$_invoke$arity$2 = cljs$core$completing__2;
  return cljs$core$completing;
}();
cljs.core.transduce = function() {
  var cljs$core$transduce = null;
  var cljs$core$transduce__3 = function(xform, f, coll) {
    return cljs$core$transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var cljs$core$transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__17498 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__17498) : xform.call(null, G__17498);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__17499 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__17499) : f__$1.call(null, G__17499);
  };
  cljs$core$transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return cljs$core$transduce__3.call(this, xform, f, init);
      case 4:
        return cljs$core$transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$transduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$transduce__3;
  cljs$core$transduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$transduce__4;
  return cljs$core$transduce;
}();
cljs.core._PLUS_ = function() {
  var cljs$core$_PLUS_ = null;
  var cljs$core$_PLUS___0 = function() {
    return 0;
  };
  var cljs$core$_PLUS___1 = function(x) {
    return x;
  };
  var cljs$core$_PLUS___2 = function(x, y) {
    return x + y;
  };
  var cljs$core$_PLUS___3 = function() {
    var G__17500__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_PLUS_, x + y, more);
    };
    var G__17500 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17501__i = 0, G__17501__a = new Array(arguments.length - 2);
        while (G__17501__i < G__17501__a.length) {
          G__17501__a[G__17501__i] = arguments[G__17501__i + 2];
          ++G__17501__i;
        }
        more = new cljs.core.IndexedSeq(G__17501__a, 0);
      }
      return G__17500__delegate.call(this, x, y, more);
    };
    G__17500.cljs$lang$maxFixedArity = 2;
    G__17500.cljs$lang$applyTo = function(arglist__17502) {
      var x = cljs.core.first(arglist__17502);
      arglist__17502 = cljs.core.next(arglist__17502);
      var y = cljs.core.first(arglist__17502);
      var more = cljs.core.rest(arglist__17502);
      return G__17500__delegate(x, y, more);
    };
    G__17500.cljs$core$IFn$_invoke$arity$variadic = G__17500__delegate;
    return G__17500;
  }();
  cljs$core$_PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$_PLUS___0.call(this);
      case 1:
        return cljs$core$_PLUS___1.call(this, x);
      case 2:
        return cljs$core$_PLUS___2.call(this, x, y);
      default:
        var G__17503 = null;
        if (arguments.length > 2) {
          var G__17504__i = 0, G__17504__a = new Array(arguments.length - 2);
          while (G__17504__i < G__17504__a.length) {
            G__17504__a[G__17504__i] = arguments[G__17504__i + 2];
            ++G__17504__i;
          }
          G__17503 = new cljs.core.IndexedSeq(G__17504__a, 0);
        }
        return cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17503);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_PLUS_.cljs$lang$maxFixedArity = 2;
  cljs$core$_PLUS_.cljs$lang$applyTo = cljs$core$_PLUS___3.cljs$lang$applyTo;
  cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_PLUS___0;
  cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_PLUS___1;
  cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_PLUS___2;
  cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_PLUS_;
}();
cljs.core._ = function() {
  var cljs$core$_ = null;
  var cljs$core$___1 = function(x) {
    return-x;
  };
  var cljs$core$___2 = function(x, y) {
    return x - y;
  };
  var cljs$core$___3 = function() {
    var G__17505__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_, x - y, more);
    };
    var G__17505 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17506__i = 0, G__17506__a = new Array(arguments.length - 2);
        while (G__17506__i < G__17506__a.length) {
          G__17506__a[G__17506__i] = arguments[G__17506__i + 2];
          ++G__17506__i;
        }
        more = new cljs.core.IndexedSeq(G__17506__a, 0);
      }
      return G__17505__delegate.call(this, x, y, more);
    };
    G__17505.cljs$lang$maxFixedArity = 2;
    G__17505.cljs$lang$applyTo = function(arglist__17507) {
      var x = cljs.core.first(arglist__17507);
      arglist__17507 = cljs.core.next(arglist__17507);
      var y = cljs.core.first(arglist__17507);
      var more = cljs.core.rest(arglist__17507);
      return G__17505__delegate(x, y, more);
    };
    G__17505.cljs$core$IFn$_invoke$arity$variadic = G__17505__delegate;
    return G__17505;
  }();
  cljs$core$_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$___1.call(this, x);
      case 2:
        return cljs$core$___2.call(this, x, y);
      default:
        var G__17508 = null;
        if (arguments.length > 2) {
          var G__17509__i = 0, G__17509__a = new Array(arguments.length - 2);
          while (G__17509__i < G__17509__a.length) {
            G__17509__a[G__17509__i] = arguments[G__17509__i + 2];
            ++G__17509__i;
          }
          G__17508 = new cljs.core.IndexedSeq(G__17509__a, 0);
        }
        return cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17508);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_.cljs$lang$maxFixedArity = 2;
  cljs$core$_.cljs$lang$applyTo = cljs$core$___3.cljs$lang$applyTo;
  cljs$core$_.cljs$core$IFn$_invoke$arity$1 = cljs$core$___1;
  cljs$core$_.cljs$core$IFn$_invoke$arity$2 = cljs$core$___2;
  cljs$core$_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_;
}();
cljs.core._STAR_ = function() {
  var cljs$core$_STAR_ = null;
  var cljs$core$_STAR___0 = function() {
    return 1;
  };
  var cljs$core$_STAR___1 = function(x) {
    return x;
  };
  var cljs$core$_STAR___2 = function(x, y) {
    return x * y;
  };
  var cljs$core$_STAR___3 = function() {
    var G__17510__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_STAR_, x * y, more);
    };
    var G__17510 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17511__i = 0, G__17511__a = new Array(arguments.length - 2);
        while (G__17511__i < G__17511__a.length) {
          G__17511__a[G__17511__i] = arguments[G__17511__i + 2];
          ++G__17511__i;
        }
        more = new cljs.core.IndexedSeq(G__17511__a, 0);
      }
      return G__17510__delegate.call(this, x, y, more);
    };
    G__17510.cljs$lang$maxFixedArity = 2;
    G__17510.cljs$lang$applyTo = function(arglist__17512) {
      var x = cljs.core.first(arglist__17512);
      arglist__17512 = cljs.core.next(arglist__17512);
      var y = cljs.core.first(arglist__17512);
      var more = cljs.core.rest(arglist__17512);
      return G__17510__delegate(x, y, more);
    };
    G__17510.cljs$core$IFn$_invoke$arity$variadic = G__17510__delegate;
    return G__17510;
  }();
  cljs$core$_STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$_STAR___0.call(this);
      case 1:
        return cljs$core$_STAR___1.call(this, x);
      case 2:
        return cljs$core$_STAR___2.call(this, x, y);
      default:
        var G__17513 = null;
        if (arguments.length > 2) {
          var G__17514__i = 0, G__17514__a = new Array(arguments.length - 2);
          while (G__17514__i < G__17514__a.length) {
            G__17514__a[G__17514__i] = arguments[G__17514__i + 2];
            ++G__17514__i;
          }
          G__17513 = new cljs.core.IndexedSeq(G__17514__a, 0);
        }
        return cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17513);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_STAR_.cljs$lang$maxFixedArity = 2;
  cljs$core$_STAR_.cljs$lang$applyTo = cljs$core$_STAR___3.cljs$lang$applyTo;
  cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_STAR___0;
  cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_STAR___1;
  cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_STAR___2;
  cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_STAR_;
}();
cljs.core._SLASH_ = function() {
  var cljs$core$_SLASH_ = null;
  var cljs$core$_SLASH___1 = function(x) {
    return cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var cljs$core$_SLASH___2 = function(x, y) {
    return x / y;
  };
  var cljs$core$_SLASH___3 = function() {
    var G__17519__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_SLASH_, cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__17519 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17520__i = 0, G__17520__a = new Array(arguments.length - 2);
        while (G__17520__i < G__17520__a.length) {
          G__17520__a[G__17520__i] = arguments[G__17520__i + 2];
          ++G__17520__i;
        }
        more = new cljs.core.IndexedSeq(G__17520__a, 0);
      }
      return G__17519__delegate.call(this, x, y, more);
    };
    G__17519.cljs$lang$maxFixedArity = 2;
    G__17519.cljs$lang$applyTo = function(arglist__17521) {
      var x = cljs.core.first(arglist__17521);
      arglist__17521 = cljs.core.next(arglist__17521);
      var y = cljs.core.first(arglist__17521);
      var more = cljs.core.rest(arglist__17521);
      return G__17519__delegate(x, y, more);
    };
    G__17519.cljs$core$IFn$_invoke$arity$variadic = G__17519__delegate;
    return G__17519;
  }();
  cljs$core$_SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_SLASH___1.call(this, x);
      case 2:
        return cljs$core$_SLASH___2.call(this, x, y);
      default:
        var G__17522 = null;
        if (arguments.length > 2) {
          var G__17523__i = 0, G__17523__a = new Array(arguments.length - 2);
          while (G__17523__i < G__17523__a.length) {
            G__17523__a[G__17523__i] = arguments[G__17523__i + 2];
            ++G__17523__i;
          }
          G__17522 = new cljs.core.IndexedSeq(G__17523__a, 0);
        }
        return cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17522);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_SLASH_.cljs$lang$maxFixedArity = 2;
  cljs$core$_SLASH_.cljs$lang$applyTo = cljs$core$_SLASH___3.cljs$lang$applyTo;
  cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_SLASH___1;
  cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_SLASH___2;
  cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_SLASH_;
}();
cljs.core._LT_ = function() {
  var cljs$core$_LT_ = null;
  var cljs$core$_LT___1 = function(x) {
    return true;
  };
  var cljs$core$_LT___2 = function(x, y) {
    return x < y;
  };
  var cljs$core$_LT___3 = function() {
    var G__17524__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__17525 = y;
            var G__17526 = cljs.core.first(more);
            var G__17527 = cljs.core.next(more);
            x = G__17525;
            y = G__17526;
            more = G__17527;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17524 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17528__i = 0, G__17528__a = new Array(arguments.length - 2);
        while (G__17528__i < G__17528__a.length) {
          G__17528__a[G__17528__i] = arguments[G__17528__i + 2];
          ++G__17528__i;
        }
        more = new cljs.core.IndexedSeq(G__17528__a, 0);
      }
      return G__17524__delegate.call(this, x, y, more);
    };
    G__17524.cljs$lang$maxFixedArity = 2;
    G__17524.cljs$lang$applyTo = function(arglist__17529) {
      var x = cljs.core.first(arglist__17529);
      arglist__17529 = cljs.core.next(arglist__17529);
      var y = cljs.core.first(arglist__17529);
      var more = cljs.core.rest(arglist__17529);
      return G__17524__delegate(x, y, more);
    };
    G__17524.cljs$core$IFn$_invoke$arity$variadic = G__17524__delegate;
    return G__17524;
  }();
  cljs$core$_LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_LT___1.call(this, x);
      case 2:
        return cljs$core$_LT___2.call(this, x, y);
      default:
        var G__17530 = null;
        if (arguments.length > 2) {
          var G__17531__i = 0, G__17531__a = new Array(arguments.length - 2);
          while (G__17531__i < G__17531__a.length) {
            G__17531__a[G__17531__i] = arguments[G__17531__i + 2];
            ++G__17531__i;
          }
          G__17530 = new cljs.core.IndexedSeq(G__17531__a, 0);
        }
        return cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17530);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_LT_.cljs$lang$maxFixedArity = 2;
  cljs$core$_LT_.cljs$lang$applyTo = cljs$core$_LT___3.cljs$lang$applyTo;
  cljs$core$_LT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT___1;
  cljs$core$_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT___2;
  cljs$core$_LT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_LT_;
}();
cljs.core._LT__EQ_ = function() {
  var cljs$core$_LT__EQ_ = null;
  var cljs$core$_LT__EQ___1 = function(x) {
    return true;
  };
  var cljs$core$_LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var cljs$core$_LT__EQ___3 = function() {
    var G__17532__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__17533 = y;
            var G__17534 = cljs.core.first(more);
            var G__17535 = cljs.core.next(more);
            x = G__17533;
            y = G__17534;
            more = G__17535;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17532 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17536__i = 0, G__17536__a = new Array(arguments.length - 2);
        while (G__17536__i < G__17536__a.length) {
          G__17536__a[G__17536__i] = arguments[G__17536__i + 2];
          ++G__17536__i;
        }
        more = new cljs.core.IndexedSeq(G__17536__a, 0);
      }
      return G__17532__delegate.call(this, x, y, more);
    };
    G__17532.cljs$lang$maxFixedArity = 2;
    G__17532.cljs$lang$applyTo = function(arglist__17537) {
      var x = cljs.core.first(arglist__17537);
      arglist__17537 = cljs.core.next(arglist__17537);
      var y = cljs.core.first(arglist__17537);
      var more = cljs.core.rest(arglist__17537);
      return G__17532__delegate(x, y, more);
    };
    G__17532.cljs$core$IFn$_invoke$arity$variadic = G__17532__delegate;
    return G__17532;
  }();
  cljs$core$_LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_LT__EQ___1.call(this, x);
      case 2:
        return cljs$core$_LT__EQ___2.call(this, x, y);
      default:
        var G__17538 = null;
        if (arguments.length > 2) {
          var G__17539__i = 0, G__17539__a = new Array(arguments.length - 2);
          while (G__17539__i < G__17539__a.length) {
            G__17539__a[G__17539__i] = arguments[G__17539__i + 2];
            ++G__17539__i;
          }
          G__17538 = new cljs.core.IndexedSeq(G__17539__a, 0);
        }
        return cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17538);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_LT__EQ_.cljs$lang$maxFixedArity = 2;
  cljs$core$_LT__EQ_.cljs$lang$applyTo = cljs$core$_LT__EQ___3.cljs$lang$applyTo;
  cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT__EQ___1;
  cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT__EQ___2;
  cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_LT__EQ_;
}();
cljs.core._GT_ = function() {
  var cljs$core$_GT_ = null;
  var cljs$core$_GT___1 = function(x) {
    return true;
  };
  var cljs$core$_GT___2 = function(x, y) {
    return x > y;
  };
  var cljs$core$_GT___3 = function() {
    var G__17540__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__17541 = y;
            var G__17542 = cljs.core.first(more);
            var G__17543 = cljs.core.next(more);
            x = G__17541;
            y = G__17542;
            more = G__17543;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17540 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17544__i = 0, G__17544__a = new Array(arguments.length - 2);
        while (G__17544__i < G__17544__a.length) {
          G__17544__a[G__17544__i] = arguments[G__17544__i + 2];
          ++G__17544__i;
        }
        more = new cljs.core.IndexedSeq(G__17544__a, 0);
      }
      return G__17540__delegate.call(this, x, y, more);
    };
    G__17540.cljs$lang$maxFixedArity = 2;
    G__17540.cljs$lang$applyTo = function(arglist__17545) {
      var x = cljs.core.first(arglist__17545);
      arglist__17545 = cljs.core.next(arglist__17545);
      var y = cljs.core.first(arglist__17545);
      var more = cljs.core.rest(arglist__17545);
      return G__17540__delegate(x, y, more);
    };
    G__17540.cljs$core$IFn$_invoke$arity$variadic = G__17540__delegate;
    return G__17540;
  }();
  cljs$core$_GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_GT___1.call(this, x);
      case 2:
        return cljs$core$_GT___2.call(this, x, y);
      default:
        var G__17546 = null;
        if (arguments.length > 2) {
          var G__17547__i = 0, G__17547__a = new Array(arguments.length - 2);
          while (G__17547__i < G__17547__a.length) {
            G__17547__a[G__17547__i] = arguments[G__17547__i + 2];
            ++G__17547__i;
          }
          G__17546 = new cljs.core.IndexedSeq(G__17547__a, 0);
        }
        return cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17546);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_GT_.cljs$lang$maxFixedArity = 2;
  cljs$core$_GT_.cljs$lang$applyTo = cljs$core$_GT___3.cljs$lang$applyTo;
  cljs$core$_GT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT___1;
  cljs$core$_GT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT___2;
  cljs$core$_GT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_GT_;
}();
cljs.core._GT__EQ_ = function() {
  var cljs$core$_GT__EQ_ = null;
  var cljs$core$_GT__EQ___1 = function(x) {
    return true;
  };
  var cljs$core$_GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var cljs$core$_GT__EQ___3 = function() {
    var G__17548__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__17549 = y;
            var G__17550 = cljs.core.first(more);
            var G__17551 = cljs.core.next(more);
            x = G__17549;
            y = G__17550;
            more = G__17551;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17548 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17552__i = 0, G__17552__a = new Array(arguments.length - 2);
        while (G__17552__i < G__17552__a.length) {
          G__17552__a[G__17552__i] = arguments[G__17552__i + 2];
          ++G__17552__i;
        }
        more = new cljs.core.IndexedSeq(G__17552__a, 0);
      }
      return G__17548__delegate.call(this, x, y, more);
    };
    G__17548.cljs$lang$maxFixedArity = 2;
    G__17548.cljs$lang$applyTo = function(arglist__17553) {
      var x = cljs.core.first(arglist__17553);
      arglist__17553 = cljs.core.next(arglist__17553);
      var y = cljs.core.first(arglist__17553);
      var more = cljs.core.rest(arglist__17553);
      return G__17548__delegate(x, y, more);
    };
    G__17548.cljs$core$IFn$_invoke$arity$variadic = G__17548__delegate;
    return G__17548;
  }();
  cljs$core$_GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_GT__EQ___1.call(this, x);
      case 2:
        return cljs$core$_GT__EQ___2.call(this, x, y);
      default:
        var G__17554 = null;
        if (arguments.length > 2) {
          var G__17555__i = 0, G__17555__a = new Array(arguments.length - 2);
          while (G__17555__i < G__17555__a.length) {
            G__17555__a[G__17555__i] = arguments[G__17555__i + 2];
            ++G__17555__i;
          }
          G__17554 = new cljs.core.IndexedSeq(G__17555__a, 0);
        }
        return cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17554);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_GT__EQ_.cljs$lang$maxFixedArity = 2;
  cljs$core$_GT__EQ_.cljs$lang$applyTo = cljs$core$_GT__EQ___3.cljs$lang$applyTo;
  cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT__EQ___1;
  cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT__EQ___2;
  cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_GT__EQ_;
}();
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var cljs$core$max = null;
  var cljs$core$max__1 = function(x) {
    return x;
  };
  var cljs$core$max__2 = function(x, y) {
    var x__4421__auto__ = x;
    var y__4422__auto__ = y;
    return x__4421__auto__ > y__4422__auto__ ? x__4421__auto__ : y__4422__auto__;
  };
  var cljs$core$max__3 = function() {
    var G__17556__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$max, function() {
        var x__4421__auto__ = x;
        var y__4422__auto__ = y;
        return x__4421__auto__ > y__4422__auto__ ? x__4421__auto__ : y__4422__auto__;
      }(), more);
    };
    var G__17556 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17557__i = 0, G__17557__a = new Array(arguments.length - 2);
        while (G__17557__i < G__17557__a.length) {
          G__17557__a[G__17557__i] = arguments[G__17557__i + 2];
          ++G__17557__i;
        }
        more = new cljs.core.IndexedSeq(G__17557__a, 0);
      }
      return G__17556__delegate.call(this, x, y, more);
    };
    G__17556.cljs$lang$maxFixedArity = 2;
    G__17556.cljs$lang$applyTo = function(arglist__17558) {
      var x = cljs.core.first(arglist__17558);
      arglist__17558 = cljs.core.next(arglist__17558);
      var y = cljs.core.first(arglist__17558);
      var more = cljs.core.rest(arglist__17558);
      return G__17556__delegate(x, y, more);
    };
    G__17556.cljs$core$IFn$_invoke$arity$variadic = G__17556__delegate;
    return G__17556;
  }();
  cljs$core$max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$max__1.call(this, x);
      case 2:
        return cljs$core$max__2.call(this, x, y);
      default:
        var G__17559 = null;
        if (arguments.length > 2) {
          var G__17560__i = 0, G__17560__a = new Array(arguments.length - 2);
          while (G__17560__i < G__17560__a.length) {
            G__17560__a[G__17560__i] = arguments[G__17560__i + 2];
            ++G__17560__i;
          }
          G__17559 = new cljs.core.IndexedSeq(G__17560__a, 0);
        }
        return cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17559);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$max.cljs$lang$maxFixedArity = 2;
  cljs$core$max.cljs$lang$applyTo = cljs$core$max__3.cljs$lang$applyTo;
  cljs$core$max.cljs$core$IFn$_invoke$arity$1 = cljs$core$max__1;
  cljs$core$max.cljs$core$IFn$_invoke$arity$2 = cljs$core$max__2;
  cljs$core$max.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$max;
}();
cljs.core.min = function() {
  var cljs$core$min = null;
  var cljs$core$min__1 = function(x) {
    return x;
  };
  var cljs$core$min__2 = function(x, y) {
    var x__4428__auto__ = x;
    var y__4429__auto__ = y;
    return x__4428__auto__ < y__4429__auto__ ? x__4428__auto__ : y__4429__auto__;
  };
  var cljs$core$min__3 = function() {
    var G__17561__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$min, function() {
        var x__4428__auto__ = x;
        var y__4429__auto__ = y;
        return x__4428__auto__ < y__4429__auto__ ? x__4428__auto__ : y__4429__auto__;
      }(), more);
    };
    var G__17561 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17562__i = 0, G__17562__a = new Array(arguments.length - 2);
        while (G__17562__i < G__17562__a.length) {
          G__17562__a[G__17562__i] = arguments[G__17562__i + 2];
          ++G__17562__i;
        }
        more = new cljs.core.IndexedSeq(G__17562__a, 0);
      }
      return G__17561__delegate.call(this, x, y, more);
    };
    G__17561.cljs$lang$maxFixedArity = 2;
    G__17561.cljs$lang$applyTo = function(arglist__17563) {
      var x = cljs.core.first(arglist__17563);
      arglist__17563 = cljs.core.next(arglist__17563);
      var y = cljs.core.first(arglist__17563);
      var more = cljs.core.rest(arglist__17563);
      return G__17561__delegate(x, y, more);
    };
    G__17561.cljs$core$IFn$_invoke$arity$variadic = G__17561__delegate;
    return G__17561;
  }();
  cljs$core$min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$min__1.call(this, x);
      case 2:
        return cljs$core$min__2.call(this, x, y);
      default:
        var G__17564 = null;
        if (arguments.length > 2) {
          var G__17565__i = 0, G__17565__a = new Array(arguments.length - 2);
          while (G__17565__i < G__17565__a.length) {
            G__17565__a[G__17565__i] = arguments[G__17565__i + 2];
            ++G__17565__i;
          }
          G__17564 = new cljs.core.IndexedSeq(G__17565__a, 0);
        }
        return cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17564);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$min.cljs$lang$maxFixedArity = 2;
  cljs$core$min.cljs$lang$applyTo = cljs$core$min__3.cljs$lang$applyTo;
  cljs$core$min.cljs$core$IFn$_invoke$arity$1 = cljs$core$min__1;
  cljs$core$min.cljs$core$IFn$_invoke$arity$2 = cljs$core$min__2;
  cljs$core$min.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$min;
}();
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var cljs$core$unchecked_add = null;
  var cljs$core$unchecked_add__0 = function() {
    return 0;
  };
  var cljs$core$unchecked_add__1 = function(x) {
    return x;
  };
  var cljs$core$unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var cljs$core$unchecked_add__3 = function() {
    var G__17566__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add, x + y, more);
    };
    var G__17566 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17567__i = 0, G__17567__a = new Array(arguments.length - 2);
        while (G__17567__i < G__17567__a.length) {
          G__17567__a[G__17567__i] = arguments[G__17567__i + 2];
          ++G__17567__i;
        }
        more = new cljs.core.IndexedSeq(G__17567__a, 0);
      }
      return G__17566__delegate.call(this, x, y, more);
    };
    G__17566.cljs$lang$maxFixedArity = 2;
    G__17566.cljs$lang$applyTo = function(arglist__17568) {
      var x = cljs.core.first(arglist__17568);
      arglist__17568 = cljs.core.next(arglist__17568);
      var y = cljs.core.first(arglist__17568);
      var more = cljs.core.rest(arglist__17568);
      return G__17566__delegate(x, y, more);
    };
    G__17566.cljs$core$IFn$_invoke$arity$variadic = G__17566__delegate;
    return G__17566;
  }();
  cljs$core$unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$unchecked_add__0.call(this);
      case 1:
        return cljs$core$unchecked_add__1.call(this, x);
      case 2:
        return cljs$core$unchecked_add__2.call(this, x, y);
      default:
        var G__17569 = null;
        if (arguments.length > 2) {
          var G__17570__i = 0, G__17570__a = new Array(arguments.length - 2);
          while (G__17570__i < G__17570__a.length) {
            G__17570__a[G__17570__i] = arguments[G__17570__i + 2];
            ++G__17570__i;
          }
          G__17569 = new cljs.core.IndexedSeq(G__17570__a, 0);
        }
        return cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17569);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_add.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_add.cljs$lang$applyTo = cljs$core$unchecked_add__3.cljs$lang$applyTo;
  cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add__0;
  cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add__1;
  cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add__2;
  cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var cljs$core$unchecked_add_int = null;
  var cljs$core$unchecked_add_int__0 = function() {
    return 0;
  };
  var cljs$core$unchecked_add_int__1 = function(x) {
    return x;
  };
  var cljs$core$unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var cljs$core$unchecked_add_int__3 = function() {
    var G__17571__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add_int, x + y, more);
    };
    var G__17571 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17572__i = 0, G__17572__a = new Array(arguments.length - 2);
        while (G__17572__i < G__17572__a.length) {
          G__17572__a[G__17572__i] = arguments[G__17572__i + 2];
          ++G__17572__i;
        }
        more = new cljs.core.IndexedSeq(G__17572__a, 0);
      }
      return G__17571__delegate.call(this, x, y, more);
    };
    G__17571.cljs$lang$maxFixedArity = 2;
    G__17571.cljs$lang$applyTo = function(arglist__17573) {
      var x = cljs.core.first(arglist__17573);
      arglist__17573 = cljs.core.next(arglist__17573);
      var y = cljs.core.first(arglist__17573);
      var more = cljs.core.rest(arglist__17573);
      return G__17571__delegate(x, y, more);
    };
    G__17571.cljs$core$IFn$_invoke$arity$variadic = G__17571__delegate;
    return G__17571;
  }();
  cljs$core$unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$unchecked_add_int__0.call(this);
      case 1:
        return cljs$core$unchecked_add_int__1.call(this, x);
      case 2:
        return cljs$core$unchecked_add_int__2.call(this, x, y);
      default:
        var G__17574 = null;
        if (arguments.length > 2) {
          var G__17575__i = 0, G__17575__a = new Array(arguments.length - 2);
          while (G__17575__i < G__17575__a.length) {
            G__17575__a[G__17575__i] = arguments[G__17575__i + 2];
            ++G__17575__i;
          }
          G__17574 = new cljs.core.IndexedSeq(G__17575__a, 0);
        }
        return cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17574);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_add_int.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_add_int.cljs$lang$applyTo = cljs$core$unchecked_add_int__3.cljs$lang$applyTo;
  cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add_int__0;
  cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add_int__1;
  cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add_int__2;
  cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_add_int;
}();
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var cljs$core$unchecked_divide_int = null;
  var cljs$core$unchecked_divide_int__1 = function(x) {
    return cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var cljs$core$unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var cljs$core$unchecked_divide_int__3 = function() {
    var G__17580__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_divide_int, cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__17580 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17581__i = 0, G__17581__a = new Array(arguments.length - 2);
        while (G__17581__i < G__17581__a.length) {
          G__17581__a[G__17581__i] = arguments[G__17581__i + 2];
          ++G__17581__i;
        }
        more = new cljs.core.IndexedSeq(G__17581__a, 0);
      }
      return G__17580__delegate.call(this, x, y, more);
    };
    G__17580.cljs$lang$maxFixedArity = 2;
    G__17580.cljs$lang$applyTo = function(arglist__17582) {
      var x = cljs.core.first(arglist__17582);
      arglist__17582 = cljs.core.next(arglist__17582);
      var y = cljs.core.first(arglist__17582);
      var more = cljs.core.rest(arglist__17582);
      return G__17580__delegate(x, y, more);
    };
    G__17580.cljs$core$IFn$_invoke$arity$variadic = G__17580__delegate;
    return G__17580;
  }();
  cljs$core$unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$unchecked_divide_int__1.call(this, x);
      case 2:
        return cljs$core$unchecked_divide_int__2.call(this, x, y);
      default:
        var G__17583 = null;
        if (arguments.length > 2) {
          var G__17584__i = 0, G__17584__a = new Array(arguments.length - 2);
          while (G__17584__i < G__17584__a.length) {
            G__17584__a[G__17584__i] = arguments[G__17584__i + 2];
            ++G__17584__i;
          }
          G__17583 = new cljs.core.IndexedSeq(G__17584__a, 0);
        }
        return cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17583);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_divide_int.cljs$lang$applyTo = cljs$core$unchecked_divide_int__3.cljs$lang$applyTo;
  cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_divide_int__1;
  cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_divide_int__2;
  cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_divide_int;
}();
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var cljs$core$unchecked_multiply = null;
  var cljs$core$unchecked_multiply__0 = function() {
    return 1;
  };
  var cljs$core$unchecked_multiply__1 = function(x) {
    return x;
  };
  var cljs$core$unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var cljs$core$unchecked_multiply__3 = function() {
    var G__17585__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply, x * y, more);
    };
    var G__17585 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17586__i = 0, G__17586__a = new Array(arguments.length - 2);
        while (G__17586__i < G__17586__a.length) {
          G__17586__a[G__17586__i] = arguments[G__17586__i + 2];
          ++G__17586__i;
        }
        more = new cljs.core.IndexedSeq(G__17586__a, 0);
      }
      return G__17585__delegate.call(this, x, y, more);
    };
    G__17585.cljs$lang$maxFixedArity = 2;
    G__17585.cljs$lang$applyTo = function(arglist__17587) {
      var x = cljs.core.first(arglist__17587);
      arglist__17587 = cljs.core.next(arglist__17587);
      var y = cljs.core.first(arglist__17587);
      var more = cljs.core.rest(arglist__17587);
      return G__17585__delegate(x, y, more);
    };
    G__17585.cljs$core$IFn$_invoke$arity$variadic = G__17585__delegate;
    return G__17585;
  }();
  cljs$core$unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$unchecked_multiply__0.call(this);
      case 1:
        return cljs$core$unchecked_multiply__1.call(this, x);
      case 2:
        return cljs$core$unchecked_multiply__2.call(this, x, y);
      default:
        var G__17588 = null;
        if (arguments.length > 2) {
          var G__17589__i = 0, G__17589__a = new Array(arguments.length - 2);
          while (G__17589__i < G__17589__a.length) {
            G__17589__a[G__17589__i] = arguments[G__17589__i + 2];
            ++G__17589__i;
          }
          G__17588 = new cljs.core.IndexedSeq(G__17589__a, 0);
        }
        return cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17588);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_multiply.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_multiply.cljs$lang$applyTo = cljs$core$unchecked_multiply__3.cljs$lang$applyTo;
  cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply__0;
  cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply__1;
  cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply__2;
  cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var cljs$core$unchecked_multiply_int = null;
  var cljs$core$unchecked_multiply_int__0 = function() {
    return 1;
  };
  var cljs$core$unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var cljs$core$unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var cljs$core$unchecked_multiply_int__3 = function() {
    var G__17590__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply_int, x * y, more);
    };
    var G__17590 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17591__i = 0, G__17591__a = new Array(arguments.length - 2);
        while (G__17591__i < G__17591__a.length) {
          G__17591__a[G__17591__i] = arguments[G__17591__i + 2];
          ++G__17591__i;
        }
        more = new cljs.core.IndexedSeq(G__17591__a, 0);
      }
      return G__17590__delegate.call(this, x, y, more);
    };
    G__17590.cljs$lang$maxFixedArity = 2;
    G__17590.cljs$lang$applyTo = function(arglist__17592) {
      var x = cljs.core.first(arglist__17592);
      arglist__17592 = cljs.core.next(arglist__17592);
      var y = cljs.core.first(arglist__17592);
      var more = cljs.core.rest(arglist__17592);
      return G__17590__delegate(x, y, more);
    };
    G__17590.cljs$core$IFn$_invoke$arity$variadic = G__17590__delegate;
    return G__17590;
  }();
  cljs$core$unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$unchecked_multiply_int__0.call(this);
      case 1:
        return cljs$core$unchecked_multiply_int__1.call(this, x);
      case 2:
        return cljs$core$unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__17593 = null;
        if (arguments.length > 2) {
          var G__17594__i = 0, G__17594__a = new Array(arguments.length - 2);
          while (G__17594__i < G__17594__a.length) {
            G__17594__a[G__17594__i] = arguments[G__17594__i + 2];
            ++G__17594__i;
          }
          G__17593 = new cljs.core.IndexedSeq(G__17594__a, 0);
        }
        return cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17593);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_multiply_int.cljs$lang$applyTo = cljs$core$unchecked_multiply_int__3.cljs$lang$applyTo;
  cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply_int__0;
  cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply_int__1;
  cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply_int__2;
  cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  var G__17597 = x;
  var G__17598 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__17597, G__17598) : cljs.core.mod.call(null, G__17597, G__17598);
};
cljs.core.unchecked_subtract = function() {
  var cljs$core$unchecked_subtract = null;
  var cljs$core$unchecked_subtract__1 = function(x) {
    return-x;
  };
  var cljs$core$unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var cljs$core$unchecked_subtract__3 = function() {
    var G__17599__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract, x - y, more);
    };
    var G__17599 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17600__i = 0, G__17600__a = new Array(arguments.length - 2);
        while (G__17600__i < G__17600__a.length) {
          G__17600__a[G__17600__i] = arguments[G__17600__i + 2];
          ++G__17600__i;
        }
        more = new cljs.core.IndexedSeq(G__17600__a, 0);
      }
      return G__17599__delegate.call(this, x, y, more);
    };
    G__17599.cljs$lang$maxFixedArity = 2;
    G__17599.cljs$lang$applyTo = function(arglist__17601) {
      var x = cljs.core.first(arglist__17601);
      arglist__17601 = cljs.core.next(arglist__17601);
      var y = cljs.core.first(arglist__17601);
      var more = cljs.core.rest(arglist__17601);
      return G__17599__delegate(x, y, more);
    };
    G__17599.cljs$core$IFn$_invoke$arity$variadic = G__17599__delegate;
    return G__17599;
  }();
  cljs$core$unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$unchecked_subtract__1.call(this, x);
      case 2:
        return cljs$core$unchecked_subtract__2.call(this, x, y);
      default:
        var G__17602 = null;
        if (arguments.length > 2) {
          var G__17603__i = 0, G__17603__a = new Array(arguments.length - 2);
          while (G__17603__i < G__17603__a.length) {
            G__17603__a[G__17603__i] = arguments[G__17603__i + 2];
            ++G__17603__i;
          }
          G__17602 = new cljs.core.IndexedSeq(G__17603__a, 0);
        }
        return cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17602);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_subtract.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_subtract.cljs$lang$applyTo = cljs$core$unchecked_subtract__3.cljs$lang$applyTo;
  cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract__1;
  cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract__2;
  cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var cljs$core$unchecked_subtract_int = null;
  var cljs$core$unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var cljs$core$unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var cljs$core$unchecked_subtract_int__3 = function() {
    var G__17604__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract_int, x - y, more);
    };
    var G__17604 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17605__i = 0, G__17605__a = new Array(arguments.length - 2);
        while (G__17605__i < G__17605__a.length) {
          G__17605__a[G__17605__i] = arguments[G__17605__i + 2];
          ++G__17605__i;
        }
        more = new cljs.core.IndexedSeq(G__17605__a, 0);
      }
      return G__17604__delegate.call(this, x, y, more);
    };
    G__17604.cljs$lang$maxFixedArity = 2;
    G__17604.cljs$lang$applyTo = function(arglist__17606) {
      var x = cljs.core.first(arglist__17606);
      arglist__17606 = cljs.core.next(arglist__17606);
      var y = cljs.core.first(arglist__17606);
      var more = cljs.core.rest(arglist__17606);
      return G__17604__delegate(x, y, more);
    };
    G__17604.cljs$core$IFn$_invoke$arity$variadic = G__17604__delegate;
    return G__17604;
  }();
  cljs$core$unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$unchecked_subtract_int__1.call(this, x);
      case 2:
        return cljs$core$unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__17607 = null;
        if (arguments.length > 2) {
          var G__17608__i = 0, G__17608__a = new Array(arguments.length - 2);
          while (G__17608__i < G__17608__a.length) {
            G__17608__a[G__17608__i] = arguments[G__17608__i + 2];
            ++G__17608__i;
          }
          G__17607 = new cljs.core.IndexedSeq(G__17608__a, 0);
        }
        return cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17607);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_subtract_int.cljs$lang$applyTo = cljs$core$unchecked_subtract_int__3.cljs$lang$applyTo;
  cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract_int__1;
  cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract_int__2;
  cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_subtract_int;
}();
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    var G__17611 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__17611) : Math.floor.call(null, G__17611);
  } else {
    var G__17612 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__17612) : Math.ceil.call(null, G__17612);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function() {
  var cljs$core$bit_xor = null;
  var cljs$core$bit_xor__2 = function(x, y) {
    return x ^ y;
  };
  var cljs$core$bit_xor__3 = function() {
    var G__17613__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_xor, x ^ y, more);
    };
    var G__17613 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17614__i = 0, G__17614__a = new Array(arguments.length - 2);
        while (G__17614__i < G__17614__a.length) {
          G__17614__a[G__17614__i] = arguments[G__17614__i + 2];
          ++G__17614__i;
        }
        more = new cljs.core.IndexedSeq(G__17614__a, 0);
      }
      return G__17613__delegate.call(this, x, y, more);
    };
    G__17613.cljs$lang$maxFixedArity = 2;
    G__17613.cljs$lang$applyTo = function(arglist__17615) {
      var x = cljs.core.first(arglist__17615);
      arglist__17615 = cljs.core.next(arglist__17615);
      var y = cljs.core.first(arglist__17615);
      var more = cljs.core.rest(arglist__17615);
      return G__17613__delegate(x, y, more);
    };
    G__17613.cljs$core$IFn$_invoke$arity$variadic = G__17613__delegate;
    return G__17613;
  }();
  cljs$core$bit_xor = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$bit_xor__2.call(this, x, y);
      default:
        var G__17616 = null;
        if (arguments.length > 2) {
          var G__17617__i = 0, G__17617__a = new Array(arguments.length - 2);
          while (G__17617__i < G__17617__a.length) {
            G__17617__a[G__17617__i] = arguments[G__17617__i + 2];
            ++G__17617__i;
          }
          G__17616 = new cljs.core.IndexedSeq(G__17617__a, 0);
        }
        return cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17616);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$bit_xor.cljs$lang$maxFixedArity = 2;
  cljs$core$bit_xor.cljs$lang$applyTo = cljs$core$bit_xor__3.cljs$lang$applyTo;
  cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_xor__2;
  cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$bit_xor;
}();
cljs.core.bit_and = function() {
  var cljs$core$bit_and = null;
  var cljs$core$bit_and__2 = function(x, y) {
    return x & y;
  };
  var cljs$core$bit_and__3 = function() {
    var G__17618__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and, x & y, more);
    };
    var G__17618 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17619__i = 0, G__17619__a = new Array(arguments.length - 2);
        while (G__17619__i < G__17619__a.length) {
          G__17619__a[G__17619__i] = arguments[G__17619__i + 2];
          ++G__17619__i;
        }
        more = new cljs.core.IndexedSeq(G__17619__a, 0);
      }
      return G__17618__delegate.call(this, x, y, more);
    };
    G__17618.cljs$lang$maxFixedArity = 2;
    G__17618.cljs$lang$applyTo = function(arglist__17620) {
      var x = cljs.core.first(arglist__17620);
      arglist__17620 = cljs.core.next(arglist__17620);
      var y = cljs.core.first(arglist__17620);
      var more = cljs.core.rest(arglist__17620);
      return G__17618__delegate(x, y, more);
    };
    G__17618.cljs$core$IFn$_invoke$arity$variadic = G__17618__delegate;
    return G__17618;
  }();
  cljs$core$bit_and = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$bit_and__2.call(this, x, y);
      default:
        var G__17621 = null;
        if (arguments.length > 2) {
          var G__17622__i = 0, G__17622__a = new Array(arguments.length - 2);
          while (G__17622__i < G__17622__a.length) {
            G__17622__a[G__17622__i] = arguments[G__17622__i + 2];
            ++G__17622__i;
          }
          G__17621 = new cljs.core.IndexedSeq(G__17622__a, 0);
        }
        return cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17621);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$bit_and.cljs$lang$maxFixedArity = 2;
  cljs$core$bit_and.cljs$lang$applyTo = cljs$core$bit_and__3.cljs$lang$applyTo;
  cljs$core$bit_and.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and__2;
  cljs$core$bit_and.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$bit_and;
}();
cljs.core.bit_or = function() {
  var cljs$core$bit_or = null;
  var cljs$core$bit_or__2 = function(x, y) {
    return x | y;
  };
  var cljs$core$bit_or__3 = function() {
    var G__17623__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_or, x | y, more);
    };
    var G__17623 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17624__i = 0, G__17624__a = new Array(arguments.length - 2);
        while (G__17624__i < G__17624__a.length) {
          G__17624__a[G__17624__i] = arguments[G__17624__i + 2];
          ++G__17624__i;
        }
        more = new cljs.core.IndexedSeq(G__17624__a, 0);
      }
      return G__17623__delegate.call(this, x, y, more);
    };
    G__17623.cljs$lang$maxFixedArity = 2;
    G__17623.cljs$lang$applyTo = function(arglist__17625) {
      var x = cljs.core.first(arglist__17625);
      arglist__17625 = cljs.core.next(arglist__17625);
      var y = cljs.core.first(arglist__17625);
      var more = cljs.core.rest(arglist__17625);
      return G__17623__delegate(x, y, more);
    };
    G__17623.cljs$core$IFn$_invoke$arity$variadic = G__17623__delegate;
    return G__17623;
  }();
  cljs$core$bit_or = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$bit_or__2.call(this, x, y);
      default:
        var G__17626 = null;
        if (arguments.length > 2) {
          var G__17627__i = 0, G__17627__a = new Array(arguments.length - 2);
          while (G__17627__i < G__17627__a.length) {
            G__17627__a[G__17627__i] = arguments[G__17627__i + 2];
            ++G__17627__i;
          }
          G__17626 = new cljs.core.IndexedSeq(G__17627__a, 0);
        }
        return cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17626);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$bit_or.cljs$lang$maxFixedArity = 2;
  cljs$core$bit_or.cljs$lang$applyTo = cljs$core$bit_or__3.cljs$lang$applyTo;
  cljs$core$bit_or.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_or__2;
  cljs$core$bit_or.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$bit_or;
}();
cljs.core.bit_and_not = function() {
  var cljs$core$bit_and_not = null;
  var cljs$core$bit_and_not__2 = function(x, y) {
    return x & ~y;
  };
  var cljs$core$bit_and_not__3 = function() {
    var G__17628__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and_not, x & ~y, more);
    };
    var G__17628 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17629__i = 0, G__17629__a = new Array(arguments.length - 2);
        while (G__17629__i < G__17629__a.length) {
          G__17629__a[G__17629__i] = arguments[G__17629__i + 2];
          ++G__17629__i;
        }
        more = new cljs.core.IndexedSeq(G__17629__a, 0);
      }
      return G__17628__delegate.call(this, x, y, more);
    };
    G__17628.cljs$lang$maxFixedArity = 2;
    G__17628.cljs$lang$applyTo = function(arglist__17630) {
      var x = cljs.core.first(arglist__17630);
      arglist__17630 = cljs.core.next(arglist__17630);
      var y = cljs.core.first(arglist__17630);
      var more = cljs.core.rest(arglist__17630);
      return G__17628__delegate(x, y, more);
    };
    G__17628.cljs$core$IFn$_invoke$arity$variadic = G__17628__delegate;
    return G__17628;
  }();
  cljs$core$bit_and_not = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$bit_and_not__2.call(this, x, y);
      default:
        var G__17631 = null;
        if (arguments.length > 2) {
          var G__17632__i = 0, G__17632__a = new Array(arguments.length - 2);
          while (G__17632__i < G__17632__a.length) {
            G__17632__a[G__17632__i] = arguments[G__17632__i + 2];
            ++G__17632__i;
          }
          G__17631 = new cljs.core.IndexedSeq(G__17632__a, 0);
        }
        return cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17631);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$bit_and_not.cljs$lang$maxFixedArity = 2;
  cljs$core$bit_and_not.cljs$lang$applyTo = cljs$core$bit_and_not__3.cljs$lang$applyTo;
  cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and_not__2;
  cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$bit_and_not;
}();
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var cljs$core$_EQ__EQ_ = null;
  var cljs$core$_EQ__EQ___1 = function(x) {
    return true;
  };
  var cljs$core$_EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var cljs$core$_EQ__EQ___3 = function() {
    var G__17637__delegate = function(x, y, more) {
      while (true) {
        if (cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__17638 = y;
            var G__17639 = cljs.core.first(more);
            var G__17640 = cljs.core.next(more);
            x = G__17638;
            y = G__17639;
            more = G__17640;
            continue;
          } else {
            return cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17637 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17641__i = 0, G__17641__a = new Array(arguments.length - 2);
        while (G__17641__i < G__17641__a.length) {
          G__17641__a[G__17641__i] = arguments[G__17641__i + 2];
          ++G__17641__i;
        }
        more = new cljs.core.IndexedSeq(G__17641__a, 0);
      }
      return G__17637__delegate.call(this, x, y, more);
    };
    G__17637.cljs$lang$maxFixedArity = 2;
    G__17637.cljs$lang$applyTo = function(arglist__17642) {
      var x = cljs.core.first(arglist__17642);
      arglist__17642 = cljs.core.next(arglist__17642);
      var y = cljs.core.first(arglist__17642);
      var more = cljs.core.rest(arglist__17642);
      return G__17637__delegate(x, y, more);
    };
    G__17637.cljs$core$IFn$_invoke$arity$variadic = G__17637__delegate;
    return G__17637;
  }();
  cljs$core$_EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_EQ__EQ___1.call(this, x);
      case 2:
        return cljs$core$_EQ__EQ___2.call(this, x, y);
      default:
        var G__17643 = null;
        if (arguments.length > 2) {
          var G__17644__i = 0, G__17644__a = new Array(arguments.length - 2);
          while (G__17644__i < G__17644__a.length) {
            G__17644__a[G__17644__i] = arguments[G__17644__i + 2];
            ++G__17644__i;
          }
          G__17643 = new cljs.core.IndexedSeq(G__17644__a, 0);
        }
        return cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17643);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_EQ__EQ_.cljs$lang$maxFixedArity = 2;
  cljs$core$_EQ__EQ_.cljs$lang$applyTo = cljs$core$_EQ__EQ___3.cljs$lang$applyTo;
  cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ__EQ___1;
  cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ__EQ___2;
  cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__17645 = n__$1 - 1;
      var G__17646 = cljs.core.next(xs);
      n__$1 = G__17645;
      xs = G__17646;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var cljs$core$str = null;
  var cljs$core$str__0 = function() {
    return "";
  };
  var cljs$core$str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__17650 = x;
      return goog.string.buildString(G__17650);
    }
  };
  var cljs$core$str__2 = function() {
    var G__17651__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(cljs$core$str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__17652 = sb.append(cljs$core$str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__17653 = cljs.core.next(more);
          sb = G__17652;
          more = G__17653;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__17651 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__17654__i = 0, G__17654__a = new Array(arguments.length - 1);
        while (G__17654__i < G__17654__a.length) {
          G__17654__a[G__17654__i] = arguments[G__17654__i + 1];
          ++G__17654__i;
        }
        ys = new cljs.core.IndexedSeq(G__17654__a, 0);
      }
      return G__17651__delegate.call(this, x, ys);
    };
    G__17651.cljs$lang$maxFixedArity = 1;
    G__17651.cljs$lang$applyTo = function(arglist__17655) {
      var x = cljs.core.first(arglist__17655);
      var ys = cljs.core.rest(arglist__17655);
      return G__17651__delegate(x, ys);
    };
    G__17651.cljs$core$IFn$_invoke$arity$variadic = G__17651__delegate;
    return G__17651;
  }();
  cljs$core$str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$str__0.call(this);
      case 1:
        return cljs$core$str__1.call(this, x);
      default:
        var G__17656 = null;
        if (arguments.length > 1) {
          var G__17657__i = 0, G__17657__a = new Array(arguments.length - 1);
          while (G__17657__i < G__17657__a.length) {
            G__17657__a[G__17657__i] = arguments[G__17657__i + 1];
            ++G__17657__i;
          }
          G__17656 = new cljs.core.IndexedSeq(G__17657__a, 0);
        }
        return cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__17656);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$str.cljs$lang$maxFixedArity = 1;
  cljs$core$str.cljs$lang$applyTo = cljs$core$str__2.cljs$lang$applyTo;
  cljs$core$str.cljs$core$IFn$_invoke$arity$0 = cljs$core$str__0;
  cljs$core$str.cljs$core$IFn$_invoke$arity$1 = cljs$core$str__1;
  cljs$core$str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$str;
}();
cljs.core.subs = function() {
  var cljs$core$subs = null;
  var cljs$core$subs__2 = function(s, start) {
    return s.substring(start);
  };
  var cljs$core$subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  cljs$core$subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return cljs$core$subs__2.call(this, s, start);
      case 3:
        return cljs$core$subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$subs.cljs$core$IFn$_invoke$arity$2 = cljs$core$subs__2;
  cljs$core$subs.cljs$core$IFn$_invoke$arity$3 = cljs$core$subs__3;
  return cljs$core$subs;
}();
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__17658 = cljs.core.next(xs);
            var G__17659 = cljs.core.next(ys);
            xs = G__17658;
            ys = G__17659;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__17660 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__17661 = cljs.core.next(s);
        res = G__17660;
        s = G__17661;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__17666 = (h + (cljs.core.hash(function() {
        var G__17664 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17664) : cljs.core.key.call(null, G__17664);
      }()) ^ cljs.core.hash(function() {
        var G__17665 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__17665) : cljs.core.val.call(null, G__17665);
      }()))) % 4503599627370496;
      var G__17667 = cljs.core.next(s);
      h = G__17666;
      s = G__17667;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__17668 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__17669 = cljs.core.next(s__$1);
      h = G__17668;
      s__$1 = G__17669;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__17680_17690 = cljs.core.seq(fn_map);
  var chunk__17681_17691 = null;
  var count__17682_17692 = 0;
  var i__17683_17693 = 0;
  while (true) {
    if (i__17683_17693 < count__17682_17692) {
      var vec__17684_17694 = chunk__17681_17691.cljs$core$IIndexed$_nth$arity$2(null, i__17683_17693);
      var key_name_17695 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17684_17694, 0, null);
      var f_17696 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17684_17694, 1, null);
      var str_name_17697 = function() {
        var G__17685 = key_name_17695;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__17685) : cljs.core.name.call(null, G__17685);
      }();
      obj[str_name_17697] = f_17696;
      var G__17698 = seq__17680_17690;
      var G__17699 = chunk__17681_17691;
      var G__17700 = count__17682_17692;
      var G__17701 = i__17683_17693 + 1;
      seq__17680_17690 = G__17698;
      chunk__17681_17691 = G__17699;
      count__17682_17692 = G__17700;
      i__17683_17693 = G__17701;
      continue;
    } else {
      var temp__4126__auto___17702 = cljs.core.seq(seq__17680_17690);
      if (temp__4126__auto___17702) {
        var seq__17680_17703__$1 = temp__4126__auto___17702;
        if (cljs.core.chunked_seq_QMARK_(seq__17680_17703__$1)) {
          var c__4894__auto___17704 = function() {
            var G__17686 = seq__17680_17703__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__17686) : cljs.core.chunk_first.call(null, G__17686);
          }();
          var G__17705 = function() {
            var G__17687 = seq__17680_17703__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__17687) : cljs.core.chunk_rest.call(null, G__17687);
          }();
          var G__17706 = c__4894__auto___17704;
          var G__17707 = cljs.core.count(c__4894__auto___17704);
          var G__17708 = 0;
          seq__17680_17690 = G__17705;
          chunk__17681_17691 = G__17706;
          count__17682_17692 = G__17707;
          i__17683_17693 = G__17708;
          continue;
        } else {
          var vec__17688_17709 = cljs.core.first(seq__17680_17703__$1);
          var key_name_17710 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17688_17709, 0, null);
          var f_17711 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17688_17709, 1, null);
          var str_name_17712 = function() {
            var G__17689 = key_name_17710;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__17689) : cljs.core.name.call(null, G__17689);
          }();
          obj[str_name_17712] = f_17711;
          var G__17713 = cljs.core.next(seq__17680_17703__$1);
          var G__17714 = null;
          var G__17715 = 0;
          var G__17716 = 0;
          seq__17680_17690 = G__17713;
          chunk__17681_17691 = G__17714;
          count__17682_17692 = G__17715;
          i__17683_17693 = G__17716;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  var G__17718 = coll;
  if (G__17718) {
    var bit__4783__auto__ = G__17718.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4783__auto__ || G__17718.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__17718.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__17718);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__17718);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var cljs$core$list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__17719 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__17719;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__17720 = i - 1;
        var G__17721 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__17720;
        r = G__17721;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var cljs$core$list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__17722__i = 0, G__17722__a = new Array(arguments.length - 0);
      while (G__17722__i < G__17722__a.length) {
        G__17722__a[G__17722__i] = arguments[G__17722__i + 0];
        ++G__17722__i;
      }
      xs = new cljs.core.IndexedSeq(G__17722__a, 0);
    }
    return cljs$core$list__delegate.call(this, xs);
  };
  cljs$core$list.cljs$lang$maxFixedArity = 0;
  cljs$core$list.cljs$lang$applyTo = function(arglist__17723) {
    var xs = cljs.core.seq(arglist__17723);
    return cljs$core$list__delegate(xs);
  };
  cljs$core$list.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list__delegate;
  return cljs$core$list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4109__auto__ = coll == null;
    if (or__4109__auto__) {
      return or__4109__auto__;
    } else {
      var G__17727 = coll;
      if (G__17727) {
        var bit__4776__auto__ = G__17727.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4776__auto__ || G__17727.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  var G__17729 = x;
  if (G__17729) {
    var bit__4783__auto__ = G__17729.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4783__auto__ || G__17729.cljs$core$IList$) {
      return true;
    } else {
      if (!G__17729.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__17729);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__17729);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4097__auto__ = cljs.core.not(a.ns);
      if (and__4097__auto__) {
        return b.ns;
      } else {
        return and__4097__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__17736 = a.ns;
            var G__17737 = b.ns;
            return goog.array.defaultCompare(G__17736, G__17737);
          }();
          if (0 === nsc) {
            var G__17738 = a.name;
            var G__17739 = b.name;
            return goog.array.defaultCompare(G__17738, G__17739);
          } else {
            return nsc;
          }
        }
      } else {
        var G__17740 = a.name;
        var G__17741 = b.name;
        return goog.array.defaultCompare(G__17740, G__17741);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4525__auto__ = self__._hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__17743 = null;
  var G__17743__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__17743__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__17743 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17743__2.call(this, self__, coll);
      case 3:
        return G__17743__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17743.cljs$core$IFn$_invoke$arity$2 = G__17743__2;
  G__17743.cljs$core$IFn$_invoke$arity$3 = G__17743__3;
  return G__17743;
}();
cljs.core.Keyword.prototype.apply = function(self__, args17742) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args17742)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (function() {
    var G__17745 = x;
    if (G__17745) {
      var bit__4776__auto__ = G__17745.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4776__auto__ || G__17745.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var cljs$core$keyword = null;
  var cljs$core$keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__17747 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__17747) : cljs.core.name.call(null, G__17747);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var cljs$core$keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  cljs$core$keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return cljs$core$keyword__1.call(this, ns);
      case 2:
        return cljs$core$keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$keyword.cljs$core$IFn$_invoke$arity$1 = cljs$core$keyword__1;
  cljs$core$keyword.cljs$core$IFn$_invoke$arity$2 = cljs$core$keyword__2;
  return cljs$core$keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__17748 = ls.sval();
        ls = G__17748;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var cljs$core$array_chunk = null;
  var cljs$core$array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var cljs$core$array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var cljs$core$array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  cljs$core$array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return cljs$core$array_chunk__1.call(this, arr);
      case 2:
        return cljs$core$array_chunk__2.call(this, arr, off);
      case 3:
        return cljs$core$array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_chunk__1;
  cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_chunk__2;
  cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_chunk__3;
  return cljs$core$array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (function() {
    var G__17750 = s;
    if (G__17750) {
      var bit__4776__auto__ = G__17750.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4776__auto__ || G__17750.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__17751 = cljs.core.next(s__$1);
      s__$1 = G__17751;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_17752 = 0;
  var xs_17753 = cljs.core.seq(coll);
  while (true) {
    if (xs_17753) {
      ret[i_17752] = cljs.core.to_array(cljs.core.first(xs_17753));
      var G__17754 = i_17752 + 1;
      var G__17755 = cljs.core.next(xs_17753);
      i_17752 = G__17754;
      xs_17753 = G__17755;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var cljs$core$int_array = null;
  var cljs$core$int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return cljs$core$int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var cljs$core$int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__17758 = i + 1;
          var G__17759 = cljs.core.next(s__$1);
          i = G__17758;
          s__$1 = G__17759;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4994__auto___17760 = size;
      var i_17761 = 0;
      while (true) {
        if (i_17761 < n__4994__auto___17760) {
          a[i_17761] = init_val_or_seq;
          var G__17762 = i_17761 + 1;
          i_17761 = G__17762;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  cljs$core$int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return cljs$core$int_array__1.call(this, size);
      case 2:
        return cljs$core$int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$int_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$int_array__1;
  cljs$core$int_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$int_array__2;
  return cljs$core$int_array;
}();
cljs.core.long_array = function() {
  var cljs$core$long_array = null;
  var cljs$core$long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return cljs$core$long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var cljs$core$long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__17765 = i + 1;
          var G__17766 = cljs.core.next(s__$1);
          i = G__17765;
          s__$1 = G__17766;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4994__auto___17767 = size;
      var i_17768 = 0;
      while (true) {
        if (i_17768 < n__4994__auto___17767) {
          a[i_17768] = init_val_or_seq;
          var G__17769 = i_17768 + 1;
          i_17768 = G__17769;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  cljs$core$long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return cljs$core$long_array__1.call(this, size);
      case 2:
        return cljs$core$long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$long_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$long_array__1;
  cljs$core$long_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$long_array__2;
  return cljs$core$long_array;
}();
cljs.core.double_array = function() {
  var cljs$core$double_array = null;
  var cljs$core$double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return cljs$core$double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var cljs$core$double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__17772 = i + 1;
          var G__17773 = cljs.core.next(s__$1);
          i = G__17772;
          s__$1 = G__17773;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4994__auto___17774 = size;
      var i_17775 = 0;
      while (true) {
        if (i_17775 < n__4994__auto___17774) {
          a[i_17775] = init_val_or_seq;
          var G__17776 = i_17775 + 1;
          i_17775 = G__17776;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  cljs$core$double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return cljs$core$double_array__1.call(this, size);
      case 2:
        return cljs$core$double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$double_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$double_array__1;
  cljs$core$double_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$double_array__2;
  return cljs$core$double_array;
}();
cljs.core.object_array = function() {
  var cljs$core$object_array = null;
  var cljs$core$object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return cljs$core$object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var cljs$core$object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__17779 = i + 1;
          var G__17780 = cljs.core.next(s__$1);
          i = G__17779;
          s__$1 = G__17780;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4994__auto___17781 = size;
      var i_17782 = 0;
      while (true) {
        if (i_17782 < n__4994__auto___17781) {
          a[i_17782] = init_val_or_seq;
          var G__17783 = i_17782 + 1;
          i_17782 = G__17783;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  cljs$core$object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return cljs$core$object_array__1.call(this, size);
      case 2:
        return cljs$core$object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$object_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$object_array__1;
  cljs$core$object_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$object_array__2;
  return cljs$core$object_array;
}();
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__17784 = cljs.core.next(s__$1);
        var G__17785 = i - 1;
        var G__17786 = sum + 1;
        s__$1 = G__17784;
        i = G__17785;
        sum = G__17786;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var cljs$core$concat = null;
  var cljs$core$concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var cljs$core$concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var cljs$core$concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var cljs$core$concat__3 = function() {
    var G__17806__delegate = function(x, y, zs) {
      var cat = function cljs$core$concat_$_cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$concat_$_cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$concat_$_cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cljs$core$concat_$_cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(cljs$core$concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__17806 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__17807__i = 0, G__17807__a = new Array(arguments.length - 2);
        while (G__17807__i < G__17807__a.length) {
          G__17807__a[G__17807__i] = arguments[G__17807__i + 2];
          ++G__17807__i;
        }
        zs = new cljs.core.IndexedSeq(G__17807__a, 0);
      }
      return G__17806__delegate.call(this, x, y, zs);
    };
    G__17806.cljs$lang$maxFixedArity = 2;
    G__17806.cljs$lang$applyTo = function(arglist__17808) {
      var x = cljs.core.first(arglist__17808);
      arglist__17808 = cljs.core.next(arglist__17808);
      var y = cljs.core.first(arglist__17808);
      var zs = cljs.core.rest(arglist__17808);
      return G__17806__delegate(x, y, zs);
    };
    G__17806.cljs$core$IFn$_invoke$arity$variadic = G__17806__delegate;
    return G__17806;
  }();
  cljs$core$concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$concat__0.call(this);
      case 1:
        return cljs$core$concat__1.call(this, x);
      case 2:
        return cljs$core$concat__2.call(this, x, y);
      default:
        var G__17809 = null;
        if (arguments.length > 2) {
          var G__17810__i = 0, G__17810__a = new Array(arguments.length - 2);
          while (G__17810__i < G__17810__a.length) {
            G__17810__a[G__17810__i] = arguments[G__17810__i + 2];
            ++G__17810__i;
          }
          G__17809 = new cljs.core.IndexedSeq(G__17810__a, 0);
        }
        return cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17809);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$concat.cljs$lang$maxFixedArity = 2;
  cljs$core$concat.cljs$lang$applyTo = cljs$core$concat__3.cljs$lang$applyTo;
  cljs$core$concat.cljs$core$IFn$_invoke$arity$0 = cljs$core$concat__0;
  cljs$core$concat.cljs$core$IFn$_invoke$arity$1 = cljs$core$concat__1;
  cljs$core$concat.cljs$core$IFn$_invoke$arity$2 = cljs$core$concat__2;
  cljs$core$concat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$concat;
}();
cljs.core.list_STAR_ = function() {
  var cljs$core$list_STAR_ = null;
  var cljs$core$list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var cljs$core$list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var cljs$core$list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var cljs$core$list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var cljs$core$list_STAR___5 = function() {
    var G__17811__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__17811 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__17812__i = 0, G__17812__a = new Array(arguments.length - 4);
        while (G__17812__i < G__17812__a.length) {
          G__17812__a[G__17812__i] = arguments[G__17812__i + 4];
          ++G__17812__i;
        }
        more = new cljs.core.IndexedSeq(G__17812__a, 0);
      }
      return G__17811__delegate.call(this, a, b, c, d, more);
    };
    G__17811.cljs$lang$maxFixedArity = 4;
    G__17811.cljs$lang$applyTo = function(arglist__17813) {
      var a = cljs.core.first(arglist__17813);
      arglist__17813 = cljs.core.next(arglist__17813);
      var b = cljs.core.first(arglist__17813);
      arglist__17813 = cljs.core.next(arglist__17813);
      var c = cljs.core.first(arglist__17813);
      arglist__17813 = cljs.core.next(arglist__17813);
      var d = cljs.core.first(arglist__17813);
      var more = cljs.core.rest(arglist__17813);
      return G__17811__delegate(a, b, c, d, more);
    };
    G__17811.cljs$core$IFn$_invoke$arity$variadic = G__17811__delegate;
    return G__17811;
  }();
  cljs$core$list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$list_STAR___1.call(this, a);
      case 2:
        return cljs$core$list_STAR___2.call(this, a, b);
      case 3:
        return cljs$core$list_STAR___3.call(this, a, b, c);
      case 4:
        return cljs$core$list_STAR___4.call(this, a, b, c, d);
      default:
        var G__17814 = null;
        if (arguments.length > 4) {
          var G__17815__i = 0, G__17815__a = new Array(arguments.length - 4);
          while (G__17815__i < G__17815__a.length) {
            G__17815__a[G__17815__i] = arguments[G__17815__i + 4];
            ++G__17815__i;
          }
          G__17814 = new cljs.core.IndexedSeq(G__17815__a, 0);
        }
        return cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__17814);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$list_STAR_.cljs$lang$maxFixedArity = 4;
  cljs$core$list_STAR_.cljs$lang$applyTo = cljs$core$list_STAR___5.cljs$lang$applyTo;
  cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$list_STAR___1;
  cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$list_STAR___2;
  cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$3 = cljs$core$list_STAR___3;
  cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$4 = cljs$core$list_STAR___4;
  cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$list_STAR_;
}();
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var cljs$core$conj_BANG_ = null;
  var cljs$core$conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var cljs$core$conj_BANG___1 = function(coll) {
    return coll;
  };
  var cljs$core$conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var cljs$core$conj_BANG___3 = function() {
    var G__17816__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__17817 = ntcoll;
          var G__17818 = cljs.core.first(vals);
          var G__17819 = cljs.core.next(vals);
          tcoll = G__17817;
          val = G__17818;
          vals = G__17819;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__17816 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__17820__i = 0, G__17820__a = new Array(arguments.length - 2);
        while (G__17820__i < G__17820__a.length) {
          G__17820__a[G__17820__i] = arguments[G__17820__i + 2];
          ++G__17820__i;
        }
        vals = new cljs.core.IndexedSeq(G__17820__a, 0);
      }
      return G__17816__delegate.call(this, tcoll, val, vals);
    };
    G__17816.cljs$lang$maxFixedArity = 2;
    G__17816.cljs$lang$applyTo = function(arglist__17821) {
      var tcoll = cljs.core.first(arglist__17821);
      arglist__17821 = cljs.core.next(arglist__17821);
      var val = cljs.core.first(arglist__17821);
      var vals = cljs.core.rest(arglist__17821);
      return G__17816__delegate(tcoll, val, vals);
    };
    G__17816.cljs$core$IFn$_invoke$arity$variadic = G__17816__delegate;
    return G__17816;
  }();
  cljs$core$conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$conj_BANG___0.call(this);
      case 1:
        return cljs$core$conj_BANG___1.call(this, tcoll);
      case 2:
        return cljs$core$conj_BANG___2.call(this, tcoll, val);
      default:
        var G__17822 = null;
        if (arguments.length > 2) {
          var G__17823__i = 0, G__17823__a = new Array(arguments.length - 2);
          while (G__17823__i < G__17823__a.length) {
            G__17823__a[G__17823__i] = arguments[G__17823__i + 2];
            ++G__17823__i;
          }
          G__17822 = new cljs.core.IndexedSeq(G__17823__a, 0);
        }
        return cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__17822);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$conj_BANG_.cljs$lang$maxFixedArity = 2;
  cljs$core$conj_BANG_.cljs$lang$applyTo = cljs$core$conj_BANG___3.cljs$lang$applyTo;
  cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj_BANG___0;
  cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj_BANG___1;
  cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj_BANG___2;
  cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var cljs$core$assoc_BANG_ = null;
  var cljs$core$assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var cljs$core$assoc_BANG___4 = function() {
    var G__17824__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__17825 = ntcoll;
          var G__17826 = cljs.core.first(kvs);
          var G__17827 = cljs.core.second(kvs);
          var G__17828 = cljs.core.nnext(kvs);
          tcoll = G__17825;
          key = G__17826;
          val = G__17827;
          kvs = G__17828;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__17824 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__17829__i = 0, G__17829__a = new Array(arguments.length - 3);
        while (G__17829__i < G__17829__a.length) {
          G__17829__a[G__17829__i] = arguments[G__17829__i + 3];
          ++G__17829__i;
        }
        kvs = new cljs.core.IndexedSeq(G__17829__a, 0);
      }
      return G__17824__delegate.call(this, tcoll, key, val, kvs);
    };
    G__17824.cljs$lang$maxFixedArity = 3;
    G__17824.cljs$lang$applyTo = function(arglist__17830) {
      var tcoll = cljs.core.first(arglist__17830);
      arglist__17830 = cljs.core.next(arglist__17830);
      var key = cljs.core.first(arglist__17830);
      arglist__17830 = cljs.core.next(arglist__17830);
      var val = cljs.core.first(arglist__17830);
      var kvs = cljs.core.rest(arglist__17830);
      return G__17824__delegate(tcoll, key, val, kvs);
    };
    G__17824.cljs$core$IFn$_invoke$arity$variadic = G__17824__delegate;
    return G__17824;
  }();
  cljs$core$assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return cljs$core$assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__17831 = null;
        if (arguments.length > 3) {
          var G__17832__i = 0, G__17832__a = new Array(arguments.length - 3);
          while (G__17832__i < G__17832__a.length) {
            G__17832__a[G__17832__i] = arguments[G__17832__i + 3];
            ++G__17832__i;
          }
          G__17831 = new cljs.core.IndexedSeq(G__17832__a, 0);
        }
        return cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__17831);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$assoc_BANG_.cljs$lang$maxFixedArity = 3;
  cljs$core$assoc_BANG_.cljs$lang$applyTo = cljs$core$assoc_BANG___4.cljs$lang$applyTo;
  cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc_BANG___3;
  cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var cljs$core$dissoc_BANG_ = null;
  var cljs$core$dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var cljs$core$dissoc_BANG___3 = function() {
    var G__17833__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__17834 = ntcoll;
          var G__17835 = cljs.core.first(ks);
          var G__17836 = cljs.core.next(ks);
          tcoll = G__17834;
          key = G__17835;
          ks = G__17836;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__17833 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__17837__i = 0, G__17837__a = new Array(arguments.length - 2);
        while (G__17837__i < G__17837__a.length) {
          G__17837__a[G__17837__i] = arguments[G__17837__i + 2];
          ++G__17837__i;
        }
        ks = new cljs.core.IndexedSeq(G__17837__a, 0);
      }
      return G__17833__delegate.call(this, tcoll, key, ks);
    };
    G__17833.cljs$lang$maxFixedArity = 2;
    G__17833.cljs$lang$applyTo = function(arglist__17838) {
      var tcoll = cljs.core.first(arglist__17838);
      arglist__17838 = cljs.core.next(arglist__17838);
      var key = cljs.core.first(arglist__17838);
      var ks = cljs.core.rest(arglist__17838);
      return G__17833__delegate(tcoll, key, ks);
    };
    G__17833.cljs$core$IFn$_invoke$arity$variadic = G__17833__delegate;
    return G__17833;
  }();
  cljs$core$dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__17839 = null;
        if (arguments.length > 2) {
          var G__17840__i = 0, G__17840__a = new Array(arguments.length - 2);
          while (G__17840__i < G__17840__a.length) {
            G__17840__a[G__17840__i] = arguments[G__17840__i + 2];
            ++G__17840__i;
          }
          G__17839 = new cljs.core.IndexedSeq(G__17840__a, 0);
        }
        return cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__17839);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  cljs$core$dissoc_BANG_.cljs$lang$applyTo = cljs$core$dissoc_BANG___3.cljs$lang$applyTo;
  cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc_BANG___2;
  cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var cljs$core$disj_BANG_ = null;
  var cljs$core$disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var cljs$core$disj_BANG___3 = function() {
    var G__17841__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__17842 = ntcoll;
          var G__17843 = cljs.core.first(vals);
          var G__17844 = cljs.core.next(vals);
          tcoll = G__17842;
          val = G__17843;
          vals = G__17844;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__17841 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__17845__i = 0, G__17845__a = new Array(arguments.length - 2);
        while (G__17845__i < G__17845__a.length) {
          G__17845__a[G__17845__i] = arguments[G__17845__i + 2];
          ++G__17845__i;
        }
        vals = new cljs.core.IndexedSeq(G__17845__a, 0);
      }
      return G__17841__delegate.call(this, tcoll, val, vals);
    };
    G__17841.cljs$lang$maxFixedArity = 2;
    G__17841.cljs$lang$applyTo = function(arglist__17846) {
      var tcoll = cljs.core.first(arglist__17846);
      arglist__17846 = cljs.core.next(arglist__17846);
      var val = cljs.core.first(arglist__17846);
      var vals = cljs.core.rest(arglist__17846);
      return G__17841__delegate(tcoll, val, vals);
    };
    G__17841.cljs$core$IFn$_invoke$arity$variadic = G__17841__delegate;
    return G__17841;
  }();
  cljs$core$disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$disj_BANG___2.call(this, tcoll, val);
      default:
        var G__17847 = null;
        if (arguments.length > 2) {
          var G__17848__i = 0, G__17848__a = new Array(arguments.length - 2);
          while (G__17848__i < G__17848__a.length) {
            G__17848__a[G__17848__i] = arguments[G__17848__i + 2];
            ++G__17848__i;
          }
          G__17847 = new cljs.core.IndexedSeq(G__17848__a, 0);
        }
        return cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__17847);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$disj_BANG_.cljs$lang$maxFixedArity = 2;
  cljs$core$disj_BANG_.cljs$lang$applyTo = cljs$core$disj_BANG___3.cljs$lang$applyTo;
  cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj_BANG___2;
  cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$disj_BANG_;
}();
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5038 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5038);
      } else {
        var G__18059 = a5038;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18059) : f.call(null, G__18059);
      }
    } else {
      var b5039 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5038, b5039);
        } else {
          var G__18060 = a5038;
          var G__18061 = b5039;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18060, G__18061) : f.call(null, G__18060, G__18061);
        }
      } else {
        var c5040 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5038, b5039, c5040);
          } else {
            var G__18062 = a5038;
            var G__18063 = b5039;
            var G__18064 = c5040;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18062, G__18063, G__18064) : f.call(null, G__18062, G__18063, G__18064);
          }
        } else {
          var d5041 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5038, b5039, c5040, d5041);
            } else {
              var G__18065 = a5038;
              var G__18066 = b5039;
              var G__18067 = c5040;
              var G__18068 = d5041;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18065, G__18066, G__18067, G__18068) : f.call(null, G__18065, G__18066, G__18067, G__18068);
            }
          } else {
            var e5042 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5038, b5039, c5040, d5041, e5042);
              } else {
                var G__18069 = a5038;
                var G__18070 = b5039;
                var G__18071 = c5040;
                var G__18072 = d5041;
                var G__18073 = e5042;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__18069, G__18070, G__18071, G__18072, G__18073) : f.call(null, G__18069, G__18070, G__18071, G__18072, G__18073);
              }
            } else {
              var f5043 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5038, b5039, c5040, d5041, e5042, f5043);
                } else {
                  var G__18074 = a5038;
                  var G__18075 = b5039;
                  var G__18076 = c5040;
                  var G__18077 = d5041;
                  var G__18078 = e5042;
                  var G__18079 = f5043;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__18074, G__18075, G__18076, G__18077, G__18078, G__18079) : f.call(null, G__18074, G__18075, G__18076, G__18077, G__18078, G__18079);
                }
              } else {
                var g5044 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5038, b5039, c5040, d5041, e5042, f5043, g5044);
                  } else {
                    var G__18080 = a5038;
                    var G__18081 = b5039;
                    var G__18082 = c5040;
                    var G__18083 = d5041;
                    var G__18084 = e5042;
                    var G__18085 = f5043;
                    var G__18086 = g5044;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__18080, G__18081, G__18082, G__18083, G__18084, G__18085, G__18086) : f.call(null, G__18080, G__18081, G__18082, G__18083, G__18084, G__18085, G__18086);
                  }
                } else {
                  var h5045 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5038, b5039, c5040, d5041, e5042, f5043, g5044, h5045);
                    } else {
                      var G__18087 = a5038;
                      var G__18088 = b5039;
                      var G__18089 = c5040;
                      var G__18090 = d5041;
                      var G__18091 = e5042;
                      var G__18092 = f5043;
                      var G__18093 = g5044;
                      var G__18094 = h5045;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__18087, G__18088, G__18089, G__18090, G__18091, G__18092, G__18093, G__18094) : f.call(null, G__18087, G__18088, G__18089, G__18090, G__18091, G__18092, G__18093, G__18094);
                    }
                  } else {
                    var i5046 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5038, b5039, c5040, d5041, e5042, f5043, g5044, h5045, i5046);
                      } else {
                        var G__18095 = a5038;
                        var G__18096 = b5039;
                        var G__18097 = c5040;
                        var G__18098 = d5041;
                        var G__18099 = e5042;
                        var G__18100 = f5043;
                        var G__18101 = g5044;
                        var G__18102 = h5045;
                        var G__18103 = i5046;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__18095, G__18096, G__18097, G__18098, G__18099, G__18100, G__18101, G__18102, G__18103) : f.call(null, G__18095, G__18096, G__18097, G__18098, G__18099, G__18100, G__18101, G__18102, G__18103);
                      }
                    } else {
                      var j5047 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5038, b5039, c5040, d5041, e5042, f5043, g5044, h5045, i5046, j5047);
                        } else {
                          var G__18104 = a5038;
                          var G__18105 = b5039;
                          var G__18106 = c5040;
                          var G__18107 = d5041;
                          var G__18108 = e5042;
                          var G__18109 = f5043;
                          var G__18110 = g5044;
                          var G__18111 = h5045;
                          var G__18112 = i5046;
                          var G__18113 = j5047;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__18104, G__18105, G__18106, G__18107, G__18108, G__18109, G__18110, G__18111, G__18112, G__18113) : f.call(null, G__18104, G__18105, G__18106, G__18107, G__18108, G__18109, G__18110, G__18111, G__18112, G__18113);
                        }
                      } else {
                        var k5048 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5038, b5039, c5040, d5041, e5042, f5043, g5044, h5045, i5046, j5047, k5048);
                          } else {
                            var G__18114 = a5038;
                            var G__18115 = b5039;
                            var G__18116 = c5040;
                            var G__18117 = d5041;
                            var G__18118 = e5042;
                            var G__18119 = f5043;
                            var G__18120 = g5044;
                            var G__18121 = h5045;
                            var G__18122 = i5046;
                            var G__18123 = j5047;
                            var G__18124 = k5048;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__18114, G__18115, G__18116, G__18117, G__18118, G__18119, G__18120, G__18121, G__18122, G__18123, G__18124) : f.call(null, G__18114, G__18115, G__18116, G__18117, G__18118, G__18119, G__18120, G__18121, G__18122, G__18123, G__18124);
                          }
                        } else {
                          var l5049 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5038, b5039, c5040, d5041, e5042, f5043, g5044, h5045, i5046, j5047, k5048, l5049);
                            } else {
                              var G__18125 = a5038;
                              var G__18126 = b5039;
                              var G__18127 = c5040;
                              var G__18128 = d5041;
                              var G__18129 = e5042;
                              var G__18130 = f5043;
                              var G__18131 = g5044;
                              var G__18132 = h5045;
                              var G__18133 = i5046;
                              var G__18134 = j5047;
                              var G__18135 = k5048;
                              var G__18136 = l5049;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__18125, G__18126, G__18127, G__18128, G__18129, G__18130, G__18131, G__18132, G__18133, G__18134, G__18135, G__18136) : f.call(null, G__18125, G__18126, G__18127, G__18128, G__18129, G__18130, G__18131, G__18132, G__18133, G__18134, G__18135, G__18136);
                            }
                          } else {
                            var m5050 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5038, b5039, c5040, d5041, e5042, f5043, g5044, h5045, i5046, j5047, k5048, l5049, m5050);
                              } else {
                                var G__18137 = a5038;
                                var G__18138 = b5039;
                                var G__18139 = c5040;
                                var G__18140 = d5041;
                                var G__18141 = e5042;
                                var G__18142 = f5043;
                                var G__18143 = g5044;
                                var G__18144 = h5045;
                                var G__18145 = i5046;
                                var G__18146 = j5047;
                                var G__18147 = k5048;
                                var G__18148 = l5049;
                                var G__18149 = m5050;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__18137, G__18138, G__18139, G__18140, G__18141, G__18142, G__18143, G__18144, G__18145, G__18146, G__18147, G__18148, G__18149) : f.call(null, G__18137, G__18138, G__18139, G__18140, G__18141, G__18142, G__18143, G__18144, G__18145, G__18146, G__18147, G__18148, G__18149);
                              }
                            } else {
                              var n5051 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5038, b5039, c5040, d5041, e5042, f5043, g5044, h5045, i5046, j5047, k5048, l5049, m5050, n5051);
                                } else {
                                  var G__18150 = a5038;
                                  var G__18151 = b5039;
                                  var G__18152 = c5040;
                                  var G__18153 = d5041;
                                  var G__18154 = e5042;
                                  var G__18155 = f5043;
                                  var G__18156 = g5044;
                                  var G__18157 = h5045;
                                  var G__18158 = i5046;
                                  var G__18159 = j5047;
                                  var G__18160 = k5048;
                                  var G__18161 = l5049;
                                  var G__18162 = m5050;
                                  var G__18163 = n5051;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__18150, G__18151, G__18152, G__18153, G__18154, G__18155, G__18156, G__18157, G__18158, G__18159, G__18160, G__18161, G__18162, G__18163) : f.call(null, G__18150, G__18151, G__18152, G__18153, G__18154, G__18155, G__18156, G__18157, G__18158, G__18159, G__18160, G__18161, G__18162, G__18163);
                                }
                              } else {
                                var o5052 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5038, b5039, c5040, d5041, e5042, f5043, g5044, h5045, i5046, j5047, k5048, l5049, m5050, n5051, o5052);
                                  } else {
                                    var G__18164 = a5038;
                                    var G__18165 = b5039;
                                    var G__18166 = c5040;
                                    var G__18167 = d5041;
                                    var G__18168 = e5042;
                                    var G__18169 = f5043;
                                    var G__18170 = g5044;
                                    var G__18171 = h5045;
                                    var G__18172 = i5046;
                                    var G__18173 = j5047;
                                    var G__18174 = k5048;
                                    var G__18175 = l5049;
                                    var G__18176 = m5050;
                                    var G__18177 = n5051;
                                    var G__18178 = o5052;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__18164, G__18165, G__18166, G__18167, G__18168, G__18169, G__18170, G__18171, G__18172, G__18173, G__18174, G__18175, G__18176, G__18177, G__18178) : f.call(null, G__18164, G__18165, G__18166, G__18167, G__18168, G__18169, G__18170, G__18171, G__18172, G__18173, G__18174, G__18175, G__18176, G__18177, G__18178);
                                  }
                                } else {
                                  var p5053 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5038, b5039, c5040, d5041, e5042, f5043, g5044, h5045, i5046, j5047, k5048, l5049, m5050, n5051, o5052, p5053);
                                    } else {
                                      var G__18179 = a5038;
                                      var G__18180 = b5039;
                                      var G__18181 = c5040;
                                      var G__18182 = d5041;
                                      var G__18183 = e5042;
                                      var G__18184 = f5043;
                                      var G__18185 = g5044;
                                      var G__18186 = h5045;
                                      var G__18187 = i5046;
                                      var G__18188 = j5047;
                                      var G__18189 = k5048;
                                      var G__18190 = l5049;
                                      var G__18191 = m5050;
                                      var G__18192 = n5051;
                                      var G__18193 = o5052;
                                      var G__18194 = p5053;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__18179, G__18180, G__18181, G__18182, G__18183, G__18184, G__18185, G__18186, G__18187, G__18188, G__18189, G__18190, G__18191, G__18192, G__18193, G__18194) : f.call(null, G__18179, G__18180, G__18181, G__18182, G__18183, G__18184, G__18185, G__18186, G__18187, G__18188, G__18189, G__18190, G__18191, G__18192, G__18193, G__18194);
                                    }
                                  } else {
                                    var q5054 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5038, b5039, c5040, d5041, e5042, f5043, g5044, h5045, i5046, j5047, k5048, l5049, m5050, n5051, o5052, p5053, q5054);
                                      } else {
                                        var G__18195 = a5038;
                                        var G__18196 = b5039;
                                        var G__18197 = c5040;
                                        var G__18198 = d5041;
                                        var G__18199 = e5042;
                                        var G__18200 = f5043;
                                        var G__18201 = g5044;
                                        var G__18202 = h5045;
                                        var G__18203 = i5046;
                                        var G__18204 = j5047;
                                        var G__18205 = k5048;
                                        var G__18206 = l5049;
                                        var G__18207 = m5050;
                                        var G__18208 = n5051;
                                        var G__18209 = o5052;
                                        var G__18210 = p5053;
                                        var G__18211 = q5054;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__18195, G__18196, G__18197, G__18198, G__18199, G__18200, G__18201, G__18202, G__18203, G__18204, G__18205, G__18206, G__18207, G__18208, G__18209, G__18210, G__18211) : f.call(null, G__18195, G__18196, G__18197, G__18198, G__18199, G__18200, G__18201, G__18202, G__18203, G__18204, G__18205, G__18206, G__18207, G__18208, G__18209, G__18210, G__18211);
                                      }
                                    } else {
                                      var r5055 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5038, b5039, c5040, d5041, e5042, f5043, g5044, h5045, i5046, j5047, k5048, l5049, m5050, n5051, o5052, p5053, q5054, r5055);
                                        } else {
                                          var G__18212 = a5038;
                                          var G__18213 = b5039;
                                          var G__18214 = c5040;
                                          var G__18215 = d5041;
                                          var G__18216 = e5042;
                                          var G__18217 = f5043;
                                          var G__18218 = g5044;
                                          var G__18219 = h5045;
                                          var G__18220 = i5046;
                                          var G__18221 = j5047;
                                          var G__18222 = k5048;
                                          var G__18223 = l5049;
                                          var G__18224 = m5050;
                                          var G__18225 = n5051;
                                          var G__18226 = o5052;
                                          var G__18227 = p5053;
                                          var G__18228 = q5054;
                                          var G__18229 = r5055;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__18212, G__18213, G__18214, G__18215, G__18216, G__18217, G__18218, G__18219, G__18220, G__18221, G__18222, G__18223, G__18224, G__18225, G__18226, G__18227, G__18228, G__18229) : f.call(null, G__18212, G__18213, G__18214, G__18215, G__18216, G__18217, G__18218, G__18219, G__18220, G__18221, G__18222, G__18223, G__18224, G__18225, G__18226, G__18227, G__18228, G__18229);
                                        }
                                      } else {
                                        var s5056 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5038, b5039, c5040, d5041, e5042, f5043, g5044, h5045, i5046, j5047, k5048, l5049, m5050, n5051, o5052, p5053, q5054, r5055, s5056);
                                          } else {
                                            var G__18230 = a5038;
                                            var G__18231 = b5039;
                                            var G__18232 = c5040;
                                            var G__18233 = d5041;
                                            var G__18234 = e5042;
                                            var G__18235 = f5043;
                                            var G__18236 = g5044;
                                            var G__18237 = h5045;
                                            var G__18238 = i5046;
                                            var G__18239 = j5047;
                                            var G__18240 = k5048;
                                            var G__18241 = l5049;
                                            var G__18242 = m5050;
                                            var G__18243 = n5051;
                                            var G__18244 = o5052;
                                            var G__18245 = p5053;
                                            var G__18246 = q5054;
                                            var G__18247 = r5055;
                                            var G__18248 = s5056;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__18230, G__18231, G__18232, G__18233, G__18234, G__18235, G__18236, G__18237, G__18238, G__18239, G__18240, G__18241, G__18242, G__18243, G__18244, G__18245, G__18246, G__18247, G__18248) : f.call(null, G__18230, G__18231, G__18232, G__18233, G__18234, G__18235, G__18236, G__18237, G__18238, G__18239, G__18240, G__18241, G__18242, G__18243, G__18244, G__18245, G__18246, G__18247, 
                                            G__18248);
                                          }
                                        } else {
                                          var t5057 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5038, b5039, c5040, d5041, e5042, f5043, g5044, h5045, i5046, j5047, k5048, l5049, m5050, n5051, o5052, p5053, q5054, r5055, s5056, t5057);
                                            } else {
                                              var G__18249 = a5038;
                                              var G__18250 = b5039;
                                              var G__18251 = c5040;
                                              var G__18252 = d5041;
                                              var G__18253 = e5042;
                                              var G__18254 = f5043;
                                              var G__18255 = g5044;
                                              var G__18256 = h5045;
                                              var G__18257 = i5046;
                                              var G__18258 = j5047;
                                              var G__18259 = k5048;
                                              var G__18260 = l5049;
                                              var G__18261 = m5050;
                                              var G__18262 = n5051;
                                              var G__18263 = o5052;
                                              var G__18264 = p5053;
                                              var G__18265 = q5054;
                                              var G__18266 = r5055;
                                              var G__18267 = s5056;
                                              var G__18268 = t5057;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__18249, G__18250, G__18251, G__18252, G__18253, G__18254, G__18255, G__18256, G__18257, G__18258, G__18259, G__18260, G__18261, G__18262, G__18263, G__18264, G__18265, G__18266, G__18267, G__18268) : f.call(null, G__18249, G__18250, G__18251, G__18252, G__18253, G__18254, G__18255, G__18256, G__18257, G__18258, G__18259, G__18260, G__18261, G__18262, G__18263, G__18264, G__18265, 
                                              G__18266, G__18267, G__18268);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var cljs$core$apply = null;
  var cljs$core$apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var cljs$core$apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var cljs$core$apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var cljs$core$apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var cljs$core$apply__6 = function() {
    var G__18269__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__18269 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__18270__i = 0, G__18270__a = new Array(arguments.length - 5);
        while (G__18270__i < G__18270__a.length) {
          G__18270__a[G__18270__i] = arguments[G__18270__i + 5];
          ++G__18270__i;
        }
        args = new cljs.core.IndexedSeq(G__18270__a, 0);
      }
      return G__18269__delegate.call(this, f, a, b, c, d, args);
    };
    G__18269.cljs$lang$maxFixedArity = 5;
    G__18269.cljs$lang$applyTo = function(arglist__18271) {
      var f = cljs.core.first(arglist__18271);
      arglist__18271 = cljs.core.next(arglist__18271);
      var a = cljs.core.first(arglist__18271);
      arglist__18271 = cljs.core.next(arglist__18271);
      var b = cljs.core.first(arglist__18271);
      arglist__18271 = cljs.core.next(arglist__18271);
      var c = cljs.core.first(arglist__18271);
      arglist__18271 = cljs.core.next(arglist__18271);
      var d = cljs.core.first(arglist__18271);
      var args = cljs.core.rest(arglist__18271);
      return G__18269__delegate(f, a, b, c, d, args);
    };
    G__18269.cljs$core$IFn$_invoke$arity$variadic = G__18269__delegate;
    return G__18269;
  }();
  cljs$core$apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$apply__2.call(this, f, a);
      case 3:
        return cljs$core$apply__3.call(this, f, a, b);
      case 4:
        return cljs$core$apply__4.call(this, f, a, b, c);
      case 5:
        return cljs$core$apply__5.call(this, f, a, b, c, d);
      default:
        var G__18272 = null;
        if (arguments.length > 5) {
          var G__18273__i = 0, G__18273__a = new Array(arguments.length - 5);
          while (G__18273__i < G__18273__a.length) {
            G__18273__a[G__18273__i] = arguments[G__18273__i + 5];
            ++G__18273__i;
          }
          G__18272 = new cljs.core.IndexedSeq(G__18273__a, 0);
        }
        return cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__18272);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$apply.cljs$lang$maxFixedArity = 5;
  cljs$core$apply.cljs$lang$applyTo = cljs$core$apply__6.cljs$lang$applyTo;
  cljs$core$apply.cljs$core$IFn$_invoke$arity$2 = cljs$core$apply__2;
  cljs$core$apply.cljs$core$IFn$_invoke$arity$3 = cljs$core$apply__3;
  cljs$core$apply.cljs$core$IFn$_invoke$arity$4 = cljs$core$apply__4;
  cljs$core$apply.cljs$core$IFn$_invoke$arity$5 = cljs$core$apply__5;
  cljs$core$apply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$apply;
}();
cljs.core.vary_meta = function() {
  var cljs$core$vary_meta = null;
  var cljs$core$vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__18289 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18289) : f.call(null, G__18289);
    }());
  };
  var cljs$core$vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__18290 = cljs.core.meta(obj);
      var G__18291 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18290, G__18291) : f.call(null, G__18290, G__18291);
    }());
  };
  var cljs$core$vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__18292 = cljs.core.meta(obj);
      var G__18293 = a;
      var G__18294 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18292, G__18293, G__18294) : f.call(null, G__18292, G__18293, G__18294);
    }());
  };
  var cljs$core$vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__18295 = cljs.core.meta(obj);
      var G__18296 = a;
      var G__18297 = b;
      var G__18298 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18295, G__18296, G__18297, G__18298) : f.call(null, G__18295, G__18296, G__18297, G__18298);
    }());
  };
  var cljs$core$vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__18299 = cljs.core.meta(obj);
      var G__18300 = a;
      var G__18301 = b;
      var G__18302 = c;
      var G__18303 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__18299, G__18300, G__18301, G__18302, G__18303) : f.call(null, G__18299, G__18300, G__18301, G__18302, G__18303);
    }());
  };
  var cljs$core$vary_meta__7 = function() {
    var G__18304__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__18304 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__18305__i = 0, G__18305__a = new Array(arguments.length - 6);
        while (G__18305__i < G__18305__a.length) {
          G__18305__a[G__18305__i] = arguments[G__18305__i + 6];
          ++G__18305__i;
        }
        args = new cljs.core.IndexedSeq(G__18305__a, 0);
      }
      return G__18304__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__18304.cljs$lang$maxFixedArity = 6;
    G__18304.cljs$lang$applyTo = function(arglist__18306) {
      var obj = cljs.core.first(arglist__18306);
      arglist__18306 = cljs.core.next(arglist__18306);
      var f = cljs.core.first(arglist__18306);
      arglist__18306 = cljs.core.next(arglist__18306);
      var a = cljs.core.first(arglist__18306);
      arglist__18306 = cljs.core.next(arglist__18306);
      var b = cljs.core.first(arglist__18306);
      arglist__18306 = cljs.core.next(arglist__18306);
      var c = cljs.core.first(arglist__18306);
      arglist__18306 = cljs.core.next(arglist__18306);
      var d = cljs.core.first(arglist__18306);
      var args = cljs.core.rest(arglist__18306);
      return G__18304__delegate(obj, f, a, b, c, d, args);
    };
    G__18304.cljs$core$IFn$_invoke$arity$variadic = G__18304__delegate;
    return G__18304;
  }();
  cljs$core$vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$vary_meta__2.call(this, obj, f);
      case 3:
        return cljs$core$vary_meta__3.call(this, obj, f, a);
      case 4:
        return cljs$core$vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return cljs$core$vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return cljs$core$vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__18307 = null;
        if (arguments.length > 6) {
          var G__18308__i = 0, G__18308__a = new Array(arguments.length - 6);
          while (G__18308__i < G__18308__a.length) {
            G__18308__a[G__18308__i] = arguments[G__18308__i + 6];
            ++G__18308__i;
          }
          G__18307 = new cljs.core.IndexedSeq(G__18308__a, 0);
        }
        return cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__18307);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$vary_meta.cljs$lang$maxFixedArity = 6;
  cljs$core$vary_meta.cljs$lang$applyTo = cljs$core$vary_meta__7.cljs$lang$applyTo;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$2 = cljs$core$vary_meta__2;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$3 = cljs$core$vary_meta__3;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$4 = cljs$core$vary_meta__4;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$5 = cljs$core$vary_meta__5;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$6 = cljs$core$vary_meta__6;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var cljs$core$not_EQ_ = null;
  var cljs$core$not_EQ___1 = function(x) {
    return false;
  };
  var cljs$core$not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var cljs$core$not_EQ___3 = function() {
    var G__18309__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__18309 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18310__i = 0, G__18310__a = new Array(arguments.length - 2);
        while (G__18310__i < G__18310__a.length) {
          G__18310__a[G__18310__i] = arguments[G__18310__i + 2];
          ++G__18310__i;
        }
        more = new cljs.core.IndexedSeq(G__18310__a, 0);
      }
      return G__18309__delegate.call(this, x, y, more);
    };
    G__18309.cljs$lang$maxFixedArity = 2;
    G__18309.cljs$lang$applyTo = function(arglist__18311) {
      var x = cljs.core.first(arglist__18311);
      arglist__18311 = cljs.core.next(arglist__18311);
      var y = cljs.core.first(arglist__18311);
      var more = cljs.core.rest(arglist__18311);
      return G__18309__delegate(x, y, more);
    };
    G__18309.cljs$core$IFn$_invoke$arity$variadic = G__18309__delegate;
    return G__18309;
  }();
  cljs$core$not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$not_EQ___1.call(this, x);
      case 2:
        return cljs$core$not_EQ___2.call(this, x, y);
      default:
        var G__18312 = null;
        if (arguments.length > 2) {
          var G__18313__i = 0, G__18313__a = new Array(arguments.length - 2);
          while (G__18313__i < G__18313__a.length) {
            G__18313__a[G__18313__i] = arguments[G__18313__i + 2];
            ++G__18313__i;
          }
          G__18312 = new cljs.core.IndexedSeq(G__18313__a, 0);
        }
        return cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18312);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$not_EQ_.cljs$lang$maxFixedArity = 2;
  cljs$core$not_EQ_.cljs$lang$applyTo = cljs$core$not_EQ___3.cljs$lang$applyTo;
  cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$not_EQ___1;
  cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$not_EQ___2;
  cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$not_EQ_;
}();
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t18317 !== "undefined") {
  } else {
    cljs.core.t18317 = function(nil_iter, meta18318) {
      this.nil_iter = nil_iter;
      this.meta18318 = meta18318;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t18317.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t18317.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t18317.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t18317.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18319) {
      var self__ = this;
      var _18319__$1 = this;
      return self__.meta18318;
    };
    cljs.core.t18317.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18319, meta18318__$1) {
      var self__ = this;
      var _18319__$1 = this;
      return new cljs.core.t18317(self__.nil_iter, meta18318__$1);
    };
    cljs.core.t18317.cljs$lang$type = true;
    cljs.core.t18317.cljs$lang$ctorStr = "cljs.core/t18317";
    cljs.core.t18317.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
      return cljs.core._write(writer__4689__auto__, "cljs.core/t18317");
    };
    cljs.core.__GT_t18317 = function cljs$core$nil_iter_$___GT_t18317(nil_iter__$1, meta18318) {
      return new cljs.core.t18317(nil_iter__$1, meta18318);
    };
  }
  return new cljs.core.t18317(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4097__auto__ = !(lt.stepper == null);
      if (and__4097__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4097__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__18320 = lt;
        var G__18321 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__18320, G__18321) : self__.xform.call(null, G__18320, G__18321);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__18322 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__18322) : self__.xform.call(null, G__18322);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__18324 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__18324) : xform.call(null, G__18324);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__18326 = cljs.core.next(iters__$1);
        iters__$1 = G__18326;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4994__auto___18327 = self__.iters.length;
  var i_18328 = 0;
  while (true) {
    if (i_18328 < n__4994__auto___18327) {
      self__.nexts[i_18328] = self__.iters[i_18328].next();
      var G__18329 = i_18328 + 1;
      i_18328 = G__18329;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4097__auto__ = !(lt.stepper == null);
      if (and__4097__auto__) {
        return this$.hasNext();
      } else {
        return and__4097__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__18325 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__18325) : self__.xform.call(null, G__18325);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var cljs$core$multi_stepper = null;
  var cljs$core$multi_stepper__2 = function(xform, iters) {
    return cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var cljs$core$multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var cljs$core$multi_stepper_$_stepfn = null;
      var cljs$core$multi_stepper_$_stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var cljs$core$multi_stepper_$_stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      cljs$core$multi_stepper_$_stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return cljs$core$multi_stepper_$_stepfn__1.call(this, result);
          case 2:
            return cljs$core$multi_stepper_$_stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$multi_stepper_$_stepfn__1;
      cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper_$_stepfn__2;
      return cljs$core$multi_stepper_$_stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__18334 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__18334) : xform.call(null, G__18334);
    }(), iters, nexts);
  };
  cljs$core$multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return cljs$core$multi_stepper__2.call(this, xform, iters);
      case 3:
        return cljs$core$multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper__2;
  cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3 = cljs$core$multi_stepper__3;
  return cljs$core$multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__18335_18339 = cljs.core.seq(colls);
  var chunk__18336_18340 = null;
  var count__18337_18341 = 0;
  var i__18338_18342 = 0;
  while (true) {
    if (i__18338_18342 < count__18337_18341) {
      var coll_18343 = chunk__18336_18340.cljs$core$IIndexed$_nth$arity$2(null, i__18338_18342);
      iters.push(cljs.core.iter(coll_18343));
      var G__18344 = seq__18335_18339;
      var G__18345 = chunk__18336_18340;
      var G__18346 = count__18337_18341;
      var G__18347 = i__18338_18342 + 1;
      seq__18335_18339 = G__18344;
      chunk__18336_18340 = G__18345;
      count__18337_18341 = G__18346;
      i__18338_18342 = G__18347;
      continue;
    } else {
      var temp__4126__auto___18348 = cljs.core.seq(seq__18335_18339);
      if (temp__4126__auto___18348) {
        var seq__18335_18349__$1 = temp__4126__auto___18348;
        if (cljs.core.chunked_seq_QMARK_(seq__18335_18349__$1)) {
          var c__4894__auto___18350 = cljs.core.chunk_first(seq__18335_18349__$1);
          var G__18351 = cljs.core.chunk_rest(seq__18335_18349__$1);
          var G__18352 = c__4894__auto___18350;
          var G__18353 = cljs.core.count(c__4894__auto___18350);
          var G__18354 = 0;
          seq__18335_18339 = G__18351;
          chunk__18336_18340 = G__18352;
          count__18337_18341 = G__18353;
          i__18338_18342 = G__18354;
          continue;
        } else {
          var coll_18355 = cljs.core.first(seq__18335_18349__$1);
          iters.push(cljs.core.iter(coll_18355));
          var G__18356 = cljs.core.next(seq__18335_18349__$1);
          var G__18357 = null;
          var G__18358 = 0;
          var G__18359 = 0;
          seq__18335_18339 = G__18356;
          chunk__18336_18340 = G__18357;
          count__18337_18341 = G__18358;
          i__18338_18342 = G__18359;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var cljs$core$sequence = null;
  var cljs$core$sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__4109__auto__ = cljs.core.seq(coll);
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var cljs$core$sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var cljs$core$sequence__3 = function() {
    var G__18360__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__18360 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__18361__i = 0, G__18361__a = new Array(arguments.length - 2);
        while (G__18361__i < G__18361__a.length) {
          G__18361__a[G__18361__i] = arguments[G__18361__i + 2];
          ++G__18361__i;
        }
        colls = new cljs.core.IndexedSeq(G__18361__a, 0);
      }
      return G__18360__delegate.call(this, xform, coll, colls);
    };
    G__18360.cljs$lang$maxFixedArity = 2;
    G__18360.cljs$lang$applyTo = function(arglist__18362) {
      var xform = cljs.core.first(arglist__18362);
      arglist__18362 = cljs.core.next(arglist__18362);
      var coll = cljs.core.first(arglist__18362);
      var colls = cljs.core.rest(arglist__18362);
      return G__18360__delegate(xform, coll, colls);
    };
    G__18360.cljs$core$IFn$_invoke$arity$variadic = G__18360__delegate;
    return G__18360;
  }();
  cljs$core$sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$sequence__1.call(this, xform);
      case 2:
        return cljs$core$sequence__2.call(this, xform, coll);
      default:
        var G__18363 = null;
        if (arguments.length > 2) {
          var G__18364__i = 0, G__18364__a = new Array(arguments.length - 2);
          while (G__18364__i < G__18364__a.length) {
            G__18364__a[G__18364__i] = arguments[G__18364__i + 2];
            ++G__18364__i;
          }
          G__18363 = new cljs.core.IndexedSeq(G__18364__a, 0);
        }
        return cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__18363);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$sequence.cljs$lang$maxFixedArity = 2;
  cljs$core$sequence.cljs$lang$applyTo = cljs$core$sequence__3.cljs$lang$applyTo;
  cljs$core$sequence.cljs$core$IFn$_invoke$arity$1 = cljs$core$sequence__1;
  cljs$core$sequence.cljs$core$IFn$_invoke$arity$2 = cljs$core$sequence__2;
  cljs$core$sequence.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$sequence;
}();
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__18366 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18366) : pred.call(null, G__18366);
      }())) {
        var G__18367 = pred;
        var G__18368 = cljs.core.next(coll);
        pred = G__18367;
        coll = G__18368;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4109__auto__ = function() {
        var G__18372 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18372) : pred.call(null, G__18372);
      }();
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        var G__18373 = pred;
        var G__18374 = cljs.core.next(coll);
        pred = G__18373;
        coll = G__18374;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__18381 = null;
    var G__18381__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__18381__1 = function(x) {
      return cljs.core.not(function() {
        var G__18378 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18378) : f.call(null, G__18378);
      }());
    };
    var G__18381__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__18379 = x;
        var G__18380 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18379, G__18380) : f.call(null, G__18379, G__18380);
      }());
    };
    var G__18381__3 = function() {
      var G__18382__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__18382 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__18383__i = 0, G__18383__a = new Array(arguments.length - 2);
          while (G__18383__i < G__18383__a.length) {
            G__18383__a[G__18383__i] = arguments[G__18383__i + 2];
            ++G__18383__i;
          }
          zs = new cljs.core.IndexedSeq(G__18383__a, 0);
        }
        return G__18382__delegate.call(this, x, y, zs);
      };
      G__18382.cljs$lang$maxFixedArity = 2;
      G__18382.cljs$lang$applyTo = function(arglist__18384) {
        var x = cljs.core.first(arglist__18384);
        arglist__18384 = cljs.core.next(arglist__18384);
        var y = cljs.core.first(arglist__18384);
        var zs = cljs.core.rest(arglist__18384);
        return G__18382__delegate(x, y, zs);
      };
      G__18382.cljs$core$IFn$_invoke$arity$variadic = G__18382__delegate;
      return G__18382;
    }();
    G__18381 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__18381__0.call(this);
        case 1:
          return G__18381__1.call(this, x);
        case 2:
          return G__18381__2.call(this, x, y);
        default:
          var G__18385 = null;
          if (arguments.length > 2) {
            var G__18386__i = 0, G__18386__a = new Array(arguments.length - 2);
            while (G__18386__i < G__18386__a.length) {
              G__18386__a[G__18386__i] = arguments[G__18386__i + 2];
              ++G__18386__i;
            }
            G__18385 = new cljs.core.IndexedSeq(G__18386__a, 0);
          }
          return G__18381__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18385);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__18381.cljs$lang$maxFixedArity = 2;
    G__18381.cljs$lang$applyTo = G__18381__3.cljs$lang$applyTo;
    G__18381.cljs$core$IFn$_invoke$arity$0 = G__18381__0;
    G__18381.cljs$core$IFn$_invoke$arity$1 = G__18381__1;
    G__18381.cljs$core$IFn$_invoke$arity$2 = G__18381__2;
    G__18381.cljs$core$IFn$_invoke$arity$variadic = G__18381__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__18381;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__18387__delegate = function(args) {
      return x;
    };
    var G__18387 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__18388__i = 0, G__18388__a = new Array(arguments.length - 0);
        while (G__18388__i < G__18388__a.length) {
          G__18388__a[G__18388__i] = arguments[G__18388__i + 0];
          ++G__18388__i;
        }
        args = new cljs.core.IndexedSeq(G__18388__a, 0);
      }
      return G__18387__delegate.call(this, args);
    };
    G__18387.cljs$lang$maxFixedArity = 0;
    G__18387.cljs$lang$applyTo = function(arglist__18389) {
      var args = cljs.core.seq(arglist__18389);
      return G__18387__delegate(args);
    };
    G__18387.cljs$core$IFn$_invoke$arity$variadic = G__18387__delegate;
    return G__18387;
  }();
};
cljs.core.comp = function() {
  var cljs$core$comp = null;
  var cljs$core$comp__0 = function() {
    return cljs.core.identity;
  };
  var cljs$core$comp__1 = function(f) {
    return f;
  };
  var cljs$core$comp__2 = function(f, g) {
    return function() {
      var G__18444 = null;
      var G__18444__0 = function() {
        var G__18417 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18417) : f.call(null, G__18417);
      };
      var G__18444__1 = function(x) {
        var G__18418 = function() {
          var G__18419 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18419) : g.call(null, G__18419);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18418) : f.call(null, G__18418);
      };
      var G__18444__2 = function(x, y) {
        var G__18420 = function() {
          var G__18421 = x;
          var G__18422 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__18421, G__18422) : g.call(null, G__18421, G__18422);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18420) : f.call(null, G__18420);
      };
      var G__18444__3 = function(x, y, z) {
        var G__18423 = function() {
          var G__18424 = x;
          var G__18425 = y;
          var G__18426 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__18424, G__18425, G__18426) : g.call(null, G__18424, G__18425, G__18426);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18423) : f.call(null, G__18423);
      };
      var G__18444__4 = function() {
        var G__18445__delegate = function(x, y, z, args) {
          var G__18427 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18427) : f.call(null, G__18427);
        };
        var G__18445 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18446__i = 0, G__18446__a = new Array(arguments.length - 3);
            while (G__18446__i < G__18446__a.length) {
              G__18446__a[G__18446__i] = arguments[G__18446__i + 3];
              ++G__18446__i;
            }
            args = new cljs.core.IndexedSeq(G__18446__a, 0);
          }
          return G__18445__delegate.call(this, x, y, z, args);
        };
        G__18445.cljs$lang$maxFixedArity = 3;
        G__18445.cljs$lang$applyTo = function(arglist__18447) {
          var x = cljs.core.first(arglist__18447);
          arglist__18447 = cljs.core.next(arglist__18447);
          var y = cljs.core.first(arglist__18447);
          arglist__18447 = cljs.core.next(arglist__18447);
          var z = cljs.core.first(arglist__18447);
          var args = cljs.core.rest(arglist__18447);
          return G__18445__delegate(x, y, z, args);
        };
        G__18445.cljs$core$IFn$_invoke$arity$variadic = G__18445__delegate;
        return G__18445;
      }();
      G__18444 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18444__0.call(this);
          case 1:
            return G__18444__1.call(this, x);
          case 2:
            return G__18444__2.call(this, x, y);
          case 3:
            return G__18444__3.call(this, x, y, z);
          default:
            var G__18448 = null;
            if (arguments.length > 3) {
              var G__18449__i = 0, G__18449__a = new Array(arguments.length - 3);
              while (G__18449__i < G__18449__a.length) {
                G__18449__a[G__18449__i] = arguments[G__18449__i + 3];
                ++G__18449__i;
              }
              G__18448 = new cljs.core.IndexedSeq(G__18449__a, 0);
            }
            return G__18444__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18448);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18444.cljs$lang$maxFixedArity = 3;
      G__18444.cljs$lang$applyTo = G__18444__4.cljs$lang$applyTo;
      G__18444.cljs$core$IFn$_invoke$arity$0 = G__18444__0;
      G__18444.cljs$core$IFn$_invoke$arity$1 = G__18444__1;
      G__18444.cljs$core$IFn$_invoke$arity$2 = G__18444__2;
      G__18444.cljs$core$IFn$_invoke$arity$3 = G__18444__3;
      G__18444.cljs$core$IFn$_invoke$arity$variadic = G__18444__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18444;
    }();
  };
  var cljs$core$comp__3 = function(f, g, h) {
    return function() {
      var G__18450 = null;
      var G__18450__0 = function() {
        var G__18428 = function() {
          var G__18429 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18429) : g.call(null, G__18429);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18428) : f.call(null, G__18428);
      };
      var G__18450__1 = function(x) {
        var G__18430 = function() {
          var G__18431 = function() {
            var G__18432 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__18432) : h.call(null, G__18432);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18431) : g.call(null, G__18431);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18430) : f.call(null, G__18430);
      };
      var G__18450__2 = function(x, y) {
        var G__18433 = function() {
          var G__18434 = function() {
            var G__18435 = x;
            var G__18436 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__18435, G__18436) : h.call(null, G__18435, G__18436);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18434) : g.call(null, G__18434);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18433) : f.call(null, G__18433);
      };
      var G__18450__3 = function(x, y, z) {
        var G__18437 = function() {
          var G__18438 = function() {
            var G__18439 = x;
            var G__18440 = y;
            var G__18441 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__18439, G__18440, G__18441) : h.call(null, G__18439, G__18440, G__18441);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18438) : g.call(null, G__18438);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18437) : f.call(null, G__18437);
      };
      var G__18450__4 = function() {
        var G__18451__delegate = function(x, y, z, args) {
          var G__18442 = function() {
            var G__18443 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18443) : g.call(null, G__18443);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18442) : f.call(null, G__18442);
        };
        var G__18451 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18452__i = 0, G__18452__a = new Array(arguments.length - 3);
            while (G__18452__i < G__18452__a.length) {
              G__18452__a[G__18452__i] = arguments[G__18452__i + 3];
              ++G__18452__i;
            }
            args = new cljs.core.IndexedSeq(G__18452__a, 0);
          }
          return G__18451__delegate.call(this, x, y, z, args);
        };
        G__18451.cljs$lang$maxFixedArity = 3;
        G__18451.cljs$lang$applyTo = function(arglist__18453) {
          var x = cljs.core.first(arglist__18453);
          arglist__18453 = cljs.core.next(arglist__18453);
          var y = cljs.core.first(arglist__18453);
          arglist__18453 = cljs.core.next(arglist__18453);
          var z = cljs.core.first(arglist__18453);
          var args = cljs.core.rest(arglist__18453);
          return G__18451__delegate(x, y, z, args);
        };
        G__18451.cljs$core$IFn$_invoke$arity$variadic = G__18451__delegate;
        return G__18451;
      }();
      G__18450 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18450__0.call(this);
          case 1:
            return G__18450__1.call(this, x);
          case 2:
            return G__18450__2.call(this, x, y);
          case 3:
            return G__18450__3.call(this, x, y, z);
          default:
            var G__18454 = null;
            if (arguments.length > 3) {
              var G__18455__i = 0, G__18455__a = new Array(arguments.length - 3);
              while (G__18455__i < G__18455__a.length) {
                G__18455__a[G__18455__i] = arguments[G__18455__i + 3];
                ++G__18455__i;
              }
              G__18454 = new cljs.core.IndexedSeq(G__18455__a, 0);
            }
            return G__18450__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18454);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18450.cljs$lang$maxFixedArity = 3;
      G__18450.cljs$lang$applyTo = G__18450__4.cljs$lang$applyTo;
      G__18450.cljs$core$IFn$_invoke$arity$0 = G__18450__0;
      G__18450.cljs$core$IFn$_invoke$arity$1 = G__18450__1;
      G__18450.cljs$core$IFn$_invoke$arity$2 = G__18450__2;
      G__18450.cljs$core$IFn$_invoke$arity$3 = G__18450__3;
      G__18450.cljs$core$IFn$_invoke$arity$variadic = G__18450__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18450;
    }();
  };
  var cljs$core$comp__4 = function() {
    var G__18456__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__18457__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__18458 = cljs.core.first(fs__$2).call(null, ret);
                var G__18459 = cljs.core.next(fs__$2);
                ret = G__18458;
                fs__$2 = G__18459;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__18457 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__18460__i = 0, G__18460__a = new Array(arguments.length - 0);
              while (G__18460__i < G__18460__a.length) {
                G__18460__a[G__18460__i] = arguments[G__18460__i + 0];
                ++G__18460__i;
              }
              args = new cljs.core.IndexedSeq(G__18460__a, 0);
            }
            return G__18457__delegate.call(this, args);
          };
          G__18457.cljs$lang$maxFixedArity = 0;
          G__18457.cljs$lang$applyTo = function(arglist__18461) {
            var args = cljs.core.seq(arglist__18461);
            return G__18457__delegate(args);
          };
          G__18457.cljs$core$IFn$_invoke$arity$variadic = G__18457__delegate;
          return G__18457;
        }();
      }(fs__$1);
    };
    var G__18456 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__18462__i = 0, G__18462__a = new Array(arguments.length - 3);
        while (G__18462__i < G__18462__a.length) {
          G__18462__a[G__18462__i] = arguments[G__18462__i + 3];
          ++G__18462__i;
        }
        fs = new cljs.core.IndexedSeq(G__18462__a, 0);
      }
      return G__18456__delegate.call(this, f1, f2, f3, fs);
    };
    G__18456.cljs$lang$maxFixedArity = 3;
    G__18456.cljs$lang$applyTo = function(arglist__18463) {
      var f1 = cljs.core.first(arglist__18463);
      arglist__18463 = cljs.core.next(arglist__18463);
      var f2 = cljs.core.first(arglist__18463);
      arglist__18463 = cljs.core.next(arglist__18463);
      var f3 = cljs.core.first(arglist__18463);
      var fs = cljs.core.rest(arglist__18463);
      return G__18456__delegate(f1, f2, f3, fs);
    };
    G__18456.cljs$core$IFn$_invoke$arity$variadic = G__18456__delegate;
    return G__18456;
  }();
  cljs$core$comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$comp__0.call(this);
      case 1:
        return cljs$core$comp__1.call(this, f1);
      case 2:
        return cljs$core$comp__2.call(this, f1, f2);
      case 3:
        return cljs$core$comp__3.call(this, f1, f2, f3);
      default:
        var G__18464 = null;
        if (arguments.length > 3) {
          var G__18465__i = 0, G__18465__a = new Array(arguments.length - 3);
          while (G__18465__i < G__18465__a.length) {
            G__18465__a[G__18465__i] = arguments[G__18465__i + 3];
            ++G__18465__i;
          }
          G__18464 = new cljs.core.IndexedSeq(G__18465__a, 0);
        }
        return cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__18464);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$comp.cljs$lang$maxFixedArity = 3;
  cljs$core$comp.cljs$lang$applyTo = cljs$core$comp__4.cljs$lang$applyTo;
  cljs$core$comp.cljs$core$IFn$_invoke$arity$0 = cljs$core$comp__0;
  cljs$core$comp.cljs$core$IFn$_invoke$arity$1 = cljs$core$comp__1;
  cljs$core$comp.cljs$core$IFn$_invoke$arity$2 = cljs$core$comp__2;
  cljs$core$comp.cljs$core$IFn$_invoke$arity$3 = cljs$core$comp__3;
  cljs$core$comp.cljs$core$IFn$_invoke$arity$variadic = cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$comp;
}();
cljs.core.partial = function() {
  var cljs$core$partial = null;
  var cljs$core$partial__1 = function(f) {
    return f;
  };
  var cljs$core$partial__2 = function(f, arg1) {
    return function() {
      var G__18550 = null;
      var G__18550__0 = function() {
        var G__18508 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18508) : f.call(null, G__18508);
      };
      var G__18550__1 = function(x) {
        var G__18509 = arg1;
        var G__18510 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18509, G__18510) : f.call(null, G__18509, G__18510);
      };
      var G__18550__2 = function(x, y) {
        var G__18511 = arg1;
        var G__18512 = x;
        var G__18513 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18511, G__18512, G__18513) : f.call(null, G__18511, G__18512, G__18513);
      };
      var G__18550__3 = function(x, y, z) {
        var G__18514 = arg1;
        var G__18515 = x;
        var G__18516 = y;
        var G__18517 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18514, G__18515, G__18516, G__18517) : f.call(null, G__18514, G__18515, G__18516, G__18517);
      };
      var G__18550__4 = function() {
        var G__18551__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__18551 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18552__i = 0, G__18552__a = new Array(arguments.length - 3);
            while (G__18552__i < G__18552__a.length) {
              G__18552__a[G__18552__i] = arguments[G__18552__i + 3];
              ++G__18552__i;
            }
            args = new cljs.core.IndexedSeq(G__18552__a, 0);
          }
          return G__18551__delegate.call(this, x, y, z, args);
        };
        G__18551.cljs$lang$maxFixedArity = 3;
        G__18551.cljs$lang$applyTo = function(arglist__18553) {
          var x = cljs.core.first(arglist__18553);
          arglist__18553 = cljs.core.next(arglist__18553);
          var y = cljs.core.first(arglist__18553);
          arglist__18553 = cljs.core.next(arglist__18553);
          var z = cljs.core.first(arglist__18553);
          var args = cljs.core.rest(arglist__18553);
          return G__18551__delegate(x, y, z, args);
        };
        G__18551.cljs$core$IFn$_invoke$arity$variadic = G__18551__delegate;
        return G__18551;
      }();
      G__18550 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18550__0.call(this);
          case 1:
            return G__18550__1.call(this, x);
          case 2:
            return G__18550__2.call(this, x, y);
          case 3:
            return G__18550__3.call(this, x, y, z);
          default:
            var G__18554 = null;
            if (arguments.length > 3) {
              var G__18555__i = 0, G__18555__a = new Array(arguments.length - 3);
              while (G__18555__i < G__18555__a.length) {
                G__18555__a[G__18555__i] = arguments[G__18555__i + 3];
                ++G__18555__i;
              }
              G__18554 = new cljs.core.IndexedSeq(G__18555__a, 0);
            }
            return G__18550__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18554);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18550.cljs$lang$maxFixedArity = 3;
      G__18550.cljs$lang$applyTo = G__18550__4.cljs$lang$applyTo;
      G__18550.cljs$core$IFn$_invoke$arity$0 = G__18550__0;
      G__18550.cljs$core$IFn$_invoke$arity$1 = G__18550__1;
      G__18550.cljs$core$IFn$_invoke$arity$2 = G__18550__2;
      G__18550.cljs$core$IFn$_invoke$arity$3 = G__18550__3;
      G__18550.cljs$core$IFn$_invoke$arity$variadic = G__18550__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18550;
    }();
  };
  var cljs$core$partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__18556 = null;
      var G__18556__0 = function() {
        var G__18518 = arg1;
        var G__18519 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18518, G__18519) : f.call(null, G__18518, G__18519);
      };
      var G__18556__1 = function(x) {
        var G__18520 = arg1;
        var G__18521 = arg2;
        var G__18522 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18520, G__18521, G__18522) : f.call(null, G__18520, G__18521, G__18522);
      };
      var G__18556__2 = function(x, y) {
        var G__18523 = arg1;
        var G__18524 = arg2;
        var G__18525 = x;
        var G__18526 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18523, G__18524, G__18525, G__18526) : f.call(null, G__18523, G__18524, G__18525, G__18526);
      };
      var G__18556__3 = function(x, y, z) {
        var G__18527 = arg1;
        var G__18528 = arg2;
        var G__18529 = x;
        var G__18530 = y;
        var G__18531 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__18527, G__18528, G__18529, G__18530, G__18531) : f.call(null, G__18527, G__18528, G__18529, G__18530, G__18531);
      };
      var G__18556__4 = function() {
        var G__18557__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__18557 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18558__i = 0, G__18558__a = new Array(arguments.length - 3);
            while (G__18558__i < G__18558__a.length) {
              G__18558__a[G__18558__i] = arguments[G__18558__i + 3];
              ++G__18558__i;
            }
            args = new cljs.core.IndexedSeq(G__18558__a, 0);
          }
          return G__18557__delegate.call(this, x, y, z, args);
        };
        G__18557.cljs$lang$maxFixedArity = 3;
        G__18557.cljs$lang$applyTo = function(arglist__18559) {
          var x = cljs.core.first(arglist__18559);
          arglist__18559 = cljs.core.next(arglist__18559);
          var y = cljs.core.first(arglist__18559);
          arglist__18559 = cljs.core.next(arglist__18559);
          var z = cljs.core.first(arglist__18559);
          var args = cljs.core.rest(arglist__18559);
          return G__18557__delegate(x, y, z, args);
        };
        G__18557.cljs$core$IFn$_invoke$arity$variadic = G__18557__delegate;
        return G__18557;
      }();
      G__18556 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18556__0.call(this);
          case 1:
            return G__18556__1.call(this, x);
          case 2:
            return G__18556__2.call(this, x, y);
          case 3:
            return G__18556__3.call(this, x, y, z);
          default:
            var G__18560 = null;
            if (arguments.length > 3) {
              var G__18561__i = 0, G__18561__a = new Array(arguments.length - 3);
              while (G__18561__i < G__18561__a.length) {
                G__18561__a[G__18561__i] = arguments[G__18561__i + 3];
                ++G__18561__i;
              }
              G__18560 = new cljs.core.IndexedSeq(G__18561__a, 0);
            }
            return G__18556__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18560);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18556.cljs$lang$maxFixedArity = 3;
      G__18556.cljs$lang$applyTo = G__18556__4.cljs$lang$applyTo;
      G__18556.cljs$core$IFn$_invoke$arity$0 = G__18556__0;
      G__18556.cljs$core$IFn$_invoke$arity$1 = G__18556__1;
      G__18556.cljs$core$IFn$_invoke$arity$2 = G__18556__2;
      G__18556.cljs$core$IFn$_invoke$arity$3 = G__18556__3;
      G__18556.cljs$core$IFn$_invoke$arity$variadic = G__18556__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18556;
    }();
  };
  var cljs$core$partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__18562 = null;
      var G__18562__0 = function() {
        var G__18532 = arg1;
        var G__18533 = arg2;
        var G__18534 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18532, G__18533, G__18534) : f.call(null, G__18532, G__18533, G__18534);
      };
      var G__18562__1 = function(x) {
        var G__18535 = arg1;
        var G__18536 = arg2;
        var G__18537 = arg3;
        var G__18538 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18535, G__18536, G__18537, G__18538) : f.call(null, G__18535, G__18536, G__18537, G__18538);
      };
      var G__18562__2 = function(x, y) {
        var G__18539 = arg1;
        var G__18540 = arg2;
        var G__18541 = arg3;
        var G__18542 = x;
        var G__18543 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__18539, G__18540, G__18541, G__18542, G__18543) : f.call(null, G__18539, G__18540, G__18541, G__18542, G__18543);
      };
      var G__18562__3 = function(x, y, z) {
        var G__18544 = arg1;
        var G__18545 = arg2;
        var G__18546 = arg3;
        var G__18547 = x;
        var G__18548 = y;
        var G__18549 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__18544, G__18545, G__18546, G__18547, G__18548, G__18549) : f.call(null, G__18544, G__18545, G__18546, G__18547, G__18548, G__18549);
      };
      var G__18562__4 = function() {
        var G__18563__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__18563 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18564__i = 0, G__18564__a = new Array(arguments.length - 3);
            while (G__18564__i < G__18564__a.length) {
              G__18564__a[G__18564__i] = arguments[G__18564__i + 3];
              ++G__18564__i;
            }
            args = new cljs.core.IndexedSeq(G__18564__a, 0);
          }
          return G__18563__delegate.call(this, x, y, z, args);
        };
        G__18563.cljs$lang$maxFixedArity = 3;
        G__18563.cljs$lang$applyTo = function(arglist__18565) {
          var x = cljs.core.first(arglist__18565);
          arglist__18565 = cljs.core.next(arglist__18565);
          var y = cljs.core.first(arglist__18565);
          arglist__18565 = cljs.core.next(arglist__18565);
          var z = cljs.core.first(arglist__18565);
          var args = cljs.core.rest(arglist__18565);
          return G__18563__delegate(x, y, z, args);
        };
        G__18563.cljs$core$IFn$_invoke$arity$variadic = G__18563__delegate;
        return G__18563;
      }();
      G__18562 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18562__0.call(this);
          case 1:
            return G__18562__1.call(this, x);
          case 2:
            return G__18562__2.call(this, x, y);
          case 3:
            return G__18562__3.call(this, x, y, z);
          default:
            var G__18566 = null;
            if (arguments.length > 3) {
              var G__18567__i = 0, G__18567__a = new Array(arguments.length - 3);
              while (G__18567__i < G__18567__a.length) {
                G__18567__a[G__18567__i] = arguments[G__18567__i + 3];
                ++G__18567__i;
              }
              G__18566 = new cljs.core.IndexedSeq(G__18567__a, 0);
            }
            return G__18562__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18566);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18562.cljs$lang$maxFixedArity = 3;
      G__18562.cljs$lang$applyTo = G__18562__4.cljs$lang$applyTo;
      G__18562.cljs$core$IFn$_invoke$arity$0 = G__18562__0;
      G__18562.cljs$core$IFn$_invoke$arity$1 = G__18562__1;
      G__18562.cljs$core$IFn$_invoke$arity$2 = G__18562__2;
      G__18562.cljs$core$IFn$_invoke$arity$3 = G__18562__3;
      G__18562.cljs$core$IFn$_invoke$arity$variadic = G__18562__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18562;
    }();
  };
  var cljs$core$partial__5 = function() {
    var G__18568__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__18569__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__18569 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__18570__i = 0, G__18570__a = new Array(arguments.length - 0);
            while (G__18570__i < G__18570__a.length) {
              G__18570__a[G__18570__i] = arguments[G__18570__i + 0];
              ++G__18570__i;
            }
            args = new cljs.core.IndexedSeq(G__18570__a, 0);
          }
          return G__18569__delegate.call(this, args);
        };
        G__18569.cljs$lang$maxFixedArity = 0;
        G__18569.cljs$lang$applyTo = function(arglist__18571) {
          var args = cljs.core.seq(arglist__18571);
          return G__18569__delegate(args);
        };
        G__18569.cljs$core$IFn$_invoke$arity$variadic = G__18569__delegate;
        return G__18569;
      }();
    };
    var G__18568 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__18572__i = 0, G__18572__a = new Array(arguments.length - 4);
        while (G__18572__i < G__18572__a.length) {
          G__18572__a[G__18572__i] = arguments[G__18572__i + 4];
          ++G__18572__i;
        }
        more = new cljs.core.IndexedSeq(G__18572__a, 0);
      }
      return G__18568__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__18568.cljs$lang$maxFixedArity = 4;
    G__18568.cljs$lang$applyTo = function(arglist__18573) {
      var f = cljs.core.first(arglist__18573);
      arglist__18573 = cljs.core.next(arglist__18573);
      var arg1 = cljs.core.first(arglist__18573);
      arglist__18573 = cljs.core.next(arglist__18573);
      var arg2 = cljs.core.first(arglist__18573);
      arglist__18573 = cljs.core.next(arglist__18573);
      var arg3 = cljs.core.first(arglist__18573);
      var more = cljs.core.rest(arglist__18573);
      return G__18568__delegate(f, arg1, arg2, arg3, more);
    };
    G__18568.cljs$core$IFn$_invoke$arity$variadic = G__18568__delegate;
    return G__18568;
  }();
  cljs$core$partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$partial__1.call(this, f);
      case 2:
        return cljs$core$partial__2.call(this, f, arg1);
      case 3:
        return cljs$core$partial__3.call(this, f, arg1, arg2);
      case 4:
        return cljs$core$partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__18574 = null;
        if (arguments.length > 4) {
          var G__18575__i = 0, G__18575__a = new Array(arguments.length - 4);
          while (G__18575__i < G__18575__a.length) {
            G__18575__a[G__18575__i] = arguments[G__18575__i + 4];
            ++G__18575__i;
          }
          G__18574 = new cljs.core.IndexedSeq(G__18575__a, 0);
        }
        return cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__18574);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$partial.cljs$lang$maxFixedArity = 4;
  cljs$core$partial.cljs$lang$applyTo = cljs$core$partial__5.cljs$lang$applyTo;
  cljs$core$partial.cljs$core$IFn$_invoke$arity$1 = cljs$core$partial__1;
  cljs$core$partial.cljs$core$IFn$_invoke$arity$2 = cljs$core$partial__2;
  cljs$core$partial.cljs$core$IFn$_invoke$arity$3 = cljs$core$partial__3;
  cljs$core$partial.cljs$core$IFn$_invoke$arity$4 = cljs$core$partial__4;
  cljs$core$partial.cljs$core$IFn$_invoke$arity$variadic = cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$partial;
}();
cljs.core.fnil = function() {
  var cljs$core$fnil = null;
  var cljs$core$fnil__2 = function(f, x) {
    return function() {
      var G__18608 = null;
      var G__18608__1 = function(a) {
        var G__18592 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18592) : f.call(null, G__18592);
      };
      var G__18608__2 = function(a, b) {
        var G__18593 = a == null ? x : a;
        var G__18594 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18593, G__18594) : f.call(null, G__18593, G__18594);
      };
      var G__18608__3 = function(a, b, c) {
        var G__18595 = a == null ? x : a;
        var G__18596 = b;
        var G__18597 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18595, G__18596, G__18597) : f.call(null, G__18595, G__18596, G__18597);
      };
      var G__18608__4 = function() {
        var G__18609__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__18609 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__18610__i = 0, G__18610__a = new Array(arguments.length - 3);
            while (G__18610__i < G__18610__a.length) {
              G__18610__a[G__18610__i] = arguments[G__18610__i + 3];
              ++G__18610__i;
            }
            ds = new cljs.core.IndexedSeq(G__18610__a, 0);
          }
          return G__18609__delegate.call(this, a, b, c, ds);
        };
        G__18609.cljs$lang$maxFixedArity = 3;
        G__18609.cljs$lang$applyTo = function(arglist__18611) {
          var a = cljs.core.first(arglist__18611);
          arglist__18611 = cljs.core.next(arglist__18611);
          var b = cljs.core.first(arglist__18611);
          arglist__18611 = cljs.core.next(arglist__18611);
          var c = cljs.core.first(arglist__18611);
          var ds = cljs.core.rest(arglist__18611);
          return G__18609__delegate(a, b, c, ds);
        };
        G__18609.cljs$core$IFn$_invoke$arity$variadic = G__18609__delegate;
        return G__18609;
      }();
      G__18608 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__18608__1.call(this, a);
          case 2:
            return G__18608__2.call(this, a, b);
          case 3:
            return G__18608__3.call(this, a, b, c);
          default:
            var G__18612 = null;
            if (arguments.length > 3) {
              var G__18613__i = 0, G__18613__a = new Array(arguments.length - 3);
              while (G__18613__i < G__18613__a.length) {
                G__18613__a[G__18613__i] = arguments[G__18613__i + 3];
                ++G__18613__i;
              }
              G__18612 = new cljs.core.IndexedSeq(G__18613__a, 0);
            }
            return G__18608__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__18612);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18608.cljs$lang$maxFixedArity = 3;
      G__18608.cljs$lang$applyTo = G__18608__4.cljs$lang$applyTo;
      G__18608.cljs$core$IFn$_invoke$arity$1 = G__18608__1;
      G__18608.cljs$core$IFn$_invoke$arity$2 = G__18608__2;
      G__18608.cljs$core$IFn$_invoke$arity$3 = G__18608__3;
      G__18608.cljs$core$IFn$_invoke$arity$variadic = G__18608__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18608;
    }();
  };
  var cljs$core$fnil__3 = function(f, x, y) {
    return function() {
      var G__18614 = null;
      var G__18614__2 = function(a, b) {
        var G__18598 = a == null ? x : a;
        var G__18599 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18598, G__18599) : f.call(null, G__18598, G__18599);
      };
      var G__18614__3 = function(a, b, c) {
        var G__18600 = a == null ? x : a;
        var G__18601 = b == null ? y : b;
        var G__18602 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18600, G__18601, G__18602) : f.call(null, G__18600, G__18601, G__18602);
      };
      var G__18614__4 = function() {
        var G__18615__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__18615 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__18616__i = 0, G__18616__a = new Array(arguments.length - 3);
            while (G__18616__i < G__18616__a.length) {
              G__18616__a[G__18616__i] = arguments[G__18616__i + 3];
              ++G__18616__i;
            }
            ds = new cljs.core.IndexedSeq(G__18616__a, 0);
          }
          return G__18615__delegate.call(this, a, b, c, ds);
        };
        G__18615.cljs$lang$maxFixedArity = 3;
        G__18615.cljs$lang$applyTo = function(arglist__18617) {
          var a = cljs.core.first(arglist__18617);
          arglist__18617 = cljs.core.next(arglist__18617);
          var b = cljs.core.first(arglist__18617);
          arglist__18617 = cljs.core.next(arglist__18617);
          var c = cljs.core.first(arglist__18617);
          var ds = cljs.core.rest(arglist__18617);
          return G__18615__delegate(a, b, c, ds);
        };
        G__18615.cljs$core$IFn$_invoke$arity$variadic = G__18615__delegate;
        return G__18615;
      }();
      G__18614 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__18614__2.call(this, a, b);
          case 3:
            return G__18614__3.call(this, a, b, c);
          default:
            var G__18618 = null;
            if (arguments.length > 3) {
              var G__18619__i = 0, G__18619__a = new Array(arguments.length - 3);
              while (G__18619__i < G__18619__a.length) {
                G__18619__a[G__18619__i] = arguments[G__18619__i + 3];
                ++G__18619__i;
              }
              G__18618 = new cljs.core.IndexedSeq(G__18619__a, 0);
            }
            return G__18614__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__18618);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18614.cljs$lang$maxFixedArity = 3;
      G__18614.cljs$lang$applyTo = G__18614__4.cljs$lang$applyTo;
      G__18614.cljs$core$IFn$_invoke$arity$2 = G__18614__2;
      G__18614.cljs$core$IFn$_invoke$arity$3 = G__18614__3;
      G__18614.cljs$core$IFn$_invoke$arity$variadic = G__18614__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18614;
    }();
  };
  var cljs$core$fnil__4 = function(f, x, y, z) {
    return function() {
      var G__18620 = null;
      var G__18620__2 = function(a, b) {
        var G__18603 = a == null ? x : a;
        var G__18604 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18603, G__18604) : f.call(null, G__18603, G__18604);
      };
      var G__18620__3 = function(a, b, c) {
        var G__18605 = a == null ? x : a;
        var G__18606 = b == null ? y : b;
        var G__18607 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18605, G__18606, G__18607) : f.call(null, G__18605, G__18606, G__18607);
      };
      var G__18620__4 = function() {
        var G__18621__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__18621 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__18622__i = 0, G__18622__a = new Array(arguments.length - 3);
            while (G__18622__i < G__18622__a.length) {
              G__18622__a[G__18622__i] = arguments[G__18622__i + 3];
              ++G__18622__i;
            }
            ds = new cljs.core.IndexedSeq(G__18622__a, 0);
          }
          return G__18621__delegate.call(this, a, b, c, ds);
        };
        G__18621.cljs$lang$maxFixedArity = 3;
        G__18621.cljs$lang$applyTo = function(arglist__18623) {
          var a = cljs.core.first(arglist__18623);
          arglist__18623 = cljs.core.next(arglist__18623);
          var b = cljs.core.first(arglist__18623);
          arglist__18623 = cljs.core.next(arglist__18623);
          var c = cljs.core.first(arglist__18623);
          var ds = cljs.core.rest(arglist__18623);
          return G__18621__delegate(a, b, c, ds);
        };
        G__18621.cljs$core$IFn$_invoke$arity$variadic = G__18621__delegate;
        return G__18621;
      }();
      G__18620 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__18620__2.call(this, a, b);
          case 3:
            return G__18620__3.call(this, a, b, c);
          default:
            var G__18624 = null;
            if (arguments.length > 3) {
              var G__18625__i = 0, G__18625__a = new Array(arguments.length - 3);
              while (G__18625__i < G__18625__a.length) {
                G__18625__a[G__18625__i] = arguments[G__18625__i + 3];
                ++G__18625__i;
              }
              G__18624 = new cljs.core.IndexedSeq(G__18625__a, 0);
            }
            return G__18620__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__18624);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18620.cljs$lang$maxFixedArity = 3;
      G__18620.cljs$lang$applyTo = G__18620__4.cljs$lang$applyTo;
      G__18620.cljs$core$IFn$_invoke$arity$2 = G__18620__2;
      G__18620.cljs$core$IFn$_invoke$arity$3 = G__18620__3;
      G__18620.cljs$core$IFn$_invoke$arity$variadic = G__18620__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18620;
    }();
  };
  cljs$core$fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return cljs$core$fnil__2.call(this, f, x);
      case 3:
        return cljs$core$fnil__3.call(this, f, x, y);
      case 4:
        return cljs$core$fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$fnil.cljs$core$IFn$_invoke$arity$2 = cljs$core$fnil__2;
  cljs$core$fnil.cljs$core$IFn$_invoke$arity$3 = cljs$core$fnil__3;
  cljs$core$fnil.cljs$core$IFn$_invoke$arity$4 = cljs$core$fnil__4;
  return cljs$core$fnil;
}();
cljs.core.map_indexed = function() {
  var cljs$core$map_indexed = null;
  var cljs$core$map_indexed__1 = function(f) {
    return function(rf) {
      var i = function() {
        var G__18656 = -1;
        return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__18656) : cljs.core.volatile_BANG_.call(null, G__18656);
      }();
      return function(i) {
        return function() {
          var G__18686 = null;
          var G__18686__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__18686__1 = function(result) {
            var G__18657 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18657) : rf.call(null, G__18657);
          };
          var G__18686__2 = function(result, input) {
            var G__18658 = result;
            var G__18659 = function() {
              var G__18660 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
              var G__18661 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18660, G__18661) : f.call(null, G__18660, G__18661);
            }();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18658, G__18659) : rf.call(null, G__18658, G__18659);
          };
          G__18686 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__18686__0.call(this);
              case 1:
                return G__18686__1.call(this, result);
              case 2:
                return G__18686__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18686.cljs$core$IFn$_invoke$arity$0 = G__18686__0;
          G__18686.cljs$core$IFn$_invoke$arity$1 = G__18686__1;
          G__18686.cljs$core$IFn$_invoke$arity$2 = G__18686__2;
          return G__18686;
        }();
      }(i);
    };
  };
  var cljs$core$map_indexed__2 = function(f, coll) {
    var mapi = function cljs$core$map_indexed_$_mapi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4994__auto___18687 = size;
            var i_18688 = 0;
            while (true) {
              if (i_18688 < n__4994__auto___18687) {
                cljs.core.chunk_append(b, function() {
                  var G__18682 = idx + i_18688;
                  var G__18683 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_18688);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18682, G__18683) : f.call(null, G__18682, G__18683);
                }());
                var G__18689 = i_18688 + 1;
                i_18688 = G__18689;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$map_indexed_$_mapi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            return cljs.core.cons(function() {
              var G__18684 = idx;
              var G__18685 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18684, G__18685) : f.call(null, G__18684, G__18685);
            }(), cljs$core$map_indexed_$_mapi(idx + 1, cljs.core.rest(s)));
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return mapi(0, coll);
  };
  cljs$core$map_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$map_indexed__1.call(this, f);
      case 2:
        return cljs$core$map_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$map_indexed__1;
  cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$map_indexed__2;
  return cljs$core$map_indexed;
}();
cljs.core.keep = function() {
  var cljs$core$keep = null;
  var cljs$core$keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__18708 = null;
        var G__18708__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__18708__1 = function(result) {
          var G__18702 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18702) : rf.call(null, G__18702);
        };
        var G__18708__2 = function(result, input) {
          var v = function() {
            var G__18703 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18703) : f.call(null, G__18703);
          }();
          if (v == null) {
            return result;
          } else {
            var G__18704 = result;
            var G__18705 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18704, G__18705) : rf.call(null, G__18704, G__18705);
          }
        };
        G__18708 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__18708__0.call(this);
            case 1:
              return G__18708__1.call(this, result);
            case 2:
              return G__18708__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__18708.cljs$core$IFn$_invoke$arity$0 = G__18708__0;
        G__18708.cljs$core$IFn$_invoke$arity$1 = G__18708__1;
        G__18708.cljs$core$IFn$_invoke$arity$2 = G__18708__2;
        return G__18708;
      }();
    };
  };
  var cljs$core$keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4994__auto___18709 = size;
          var i_18710 = 0;
          while (true) {
            if (i_18710 < n__4994__auto___18709) {
              var x_18711 = function() {
                var G__18706 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_18710);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18706) : f.call(null, G__18706);
              }();
              if (x_18711 == null) {
              } else {
                cljs.core.chunk_append(b, x_18711);
              }
              var G__18712 = i_18710 + 1;
              i_18710 = G__18712;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__18707 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18707) : f.call(null, G__18707);
          }();
          if (x == null) {
            return cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$keep__1.call(this, f);
      case 2:
        return cljs$core$keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$keep.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep__1;
  cljs$core$keep.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep__2;
  return cljs$core$keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__18713 = this$__$1;
  return goog.getUid(G__18713);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__18714 = cljs.core.seq(self__.watches);
  var chunk__18715 = null;
  var count__18716 = 0;
  var i__18717 = 0;
  while (true) {
    if (i__18717 < count__18716) {
      var vec__18718 = chunk__18715.cljs$core$IIndexed$_nth$arity$2(null, i__18717);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18718, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18718, 1, null);
      var G__18719_18728 = key;
      var G__18720_18729 = this$__$1;
      var G__18721_18730 = oldval;
      var G__18722_18731 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18719_18728, G__18720_18729, G__18721_18730, G__18722_18731) : f.call(null, G__18719_18728, G__18720_18729, G__18721_18730, G__18722_18731);
      var G__18732 = seq__18714;
      var G__18733 = chunk__18715;
      var G__18734 = count__18716;
      var G__18735 = i__18717 + 1;
      seq__18714 = G__18732;
      chunk__18715 = G__18733;
      count__18716 = G__18734;
      i__18717 = G__18735;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__18714);
      if (temp__4126__auto__) {
        var seq__18714__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__18714__$1)) {
          var c__4894__auto__ = cljs.core.chunk_first(seq__18714__$1);
          var G__18736 = cljs.core.chunk_rest(seq__18714__$1);
          var G__18737 = c__4894__auto__;
          var G__18738 = cljs.core.count(c__4894__auto__);
          var G__18739 = 0;
          seq__18714 = G__18736;
          chunk__18715 = G__18737;
          count__18716 = G__18738;
          i__18717 = G__18739;
          continue;
        } else {
          var vec__18723 = cljs.core.first(seq__18714__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18723, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18723, 1, null);
          var G__18724_18740 = key;
          var G__18725_18741 = this$__$1;
          var G__18726_18742 = oldval;
          var G__18727_18743 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18724_18740, G__18725_18741, G__18726_18742, G__18727_18743) : f.call(null, G__18724_18740, G__18725_18741, G__18726_18742, G__18727_18743);
          var G__18744 = cljs.core.next(seq__18714__$1);
          var G__18745 = null;
          var G__18746 = 0;
          var G__18747 = 0;
          seq__18714 = G__18744;
          chunk__18715 = G__18745;
          count__18716 = G__18746;
          i__18717 = G__18747;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var cljs$core$atom = null;
  var cljs$core$atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var cljs$core$atom__2 = function() {
    var G__18751__delegate = function(x, p__18748) {
      var map__18750 = p__18748;
      var map__18750__$1 = cljs.core.seq_QMARK_(map__18750) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__18750) : map__18750;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__18750__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__18750__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__18751 = function(x, var_args) {
      var p__18748 = null;
      if (arguments.length > 1) {
        var G__18752__i = 0, G__18752__a = new Array(arguments.length - 1);
        while (G__18752__i < G__18752__a.length) {
          G__18752__a[G__18752__i] = arguments[G__18752__i + 1];
          ++G__18752__i;
        }
        p__18748 = new cljs.core.IndexedSeq(G__18752__a, 0);
      }
      return G__18751__delegate.call(this, x, p__18748);
    };
    G__18751.cljs$lang$maxFixedArity = 1;
    G__18751.cljs$lang$applyTo = function(arglist__18753) {
      var x = cljs.core.first(arglist__18753);
      var p__18748 = cljs.core.rest(arglist__18753);
      return G__18751__delegate(x, p__18748);
    };
    G__18751.cljs$core$IFn$_invoke$arity$variadic = G__18751__delegate;
    return G__18751;
  }();
  cljs$core$atom = function(x, var_args) {
    var p__18748 = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$atom__1.call(this, x);
      default:
        var G__18754 = null;
        if (arguments.length > 1) {
          var G__18755__i = 0, G__18755__a = new Array(arguments.length - 1);
          while (G__18755__i < G__18755__a.length) {
            G__18755__a[G__18755__i] = arguments[G__18755__i + 1];
            ++G__18755__i;
          }
          G__18754 = new cljs.core.IndexedSeq(G__18755__a, 0);
        }
        return cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__18754);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$atom.cljs$lang$maxFixedArity = 1;
  cljs$core$atom.cljs$lang$applyTo = cljs$core$atom__2.cljs$lang$applyTo;
  cljs$core$atom.cljs$core$IFn$_invoke$arity$1 = cljs$core$atom__1;
  cljs$core$atom.cljs$core$IFn$_invoke$arity$variadic = cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$atom;
}();
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__18758 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__18758) : validate.call(null, G__18758);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__18759 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__18759) : cljs.core.pr_str.call(null, G__18759);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var cljs$core$swap_BANG_ = null;
  var cljs$core$swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__18766 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18766) : f.call(null, G__18766);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var cljs$core$swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__18767 = a.state;
        var G__18768 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18767, G__18768) : f.call(null, G__18767, G__18768);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var cljs$core$swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__18769 = a.state;
        var G__18770 = x;
        var G__18771 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18769, G__18770, G__18771) : f.call(null, G__18769, G__18770, G__18771);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var cljs$core$swap_BANG___5 = function() {
    var G__18772__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__18772 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__18773__i = 0, G__18773__a = new Array(arguments.length - 4);
        while (G__18773__i < G__18773__a.length) {
          G__18773__a[G__18773__i] = arguments[G__18773__i + 4];
          ++G__18773__i;
        }
        more = new cljs.core.IndexedSeq(G__18773__a, 0);
      }
      return G__18772__delegate.call(this, a, f, x, y, more);
    };
    G__18772.cljs$lang$maxFixedArity = 4;
    G__18772.cljs$lang$applyTo = function(arglist__18774) {
      var a = cljs.core.first(arglist__18774);
      arglist__18774 = cljs.core.next(arglist__18774);
      var f = cljs.core.first(arglist__18774);
      arglist__18774 = cljs.core.next(arglist__18774);
      var x = cljs.core.first(arglist__18774);
      arglist__18774 = cljs.core.next(arglist__18774);
      var y = cljs.core.first(arglist__18774);
      var more = cljs.core.rest(arglist__18774);
      return G__18772__delegate(a, f, x, y, more);
    };
    G__18772.cljs$core$IFn$_invoke$arity$variadic = G__18772__delegate;
    return G__18772;
  }();
  cljs$core$swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$swap_BANG___2.call(this, a, f);
      case 3:
        return cljs$core$swap_BANG___3.call(this, a, f, x);
      case 4:
        return cljs$core$swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__18775 = null;
        if (arguments.length > 4) {
          var G__18776__i = 0, G__18776__a = new Array(arguments.length - 4);
          while (G__18776__i < G__18776__a.length) {
            G__18776__a[G__18776__i] = arguments[G__18776__i + 4];
            ++G__18776__i;
          }
          G__18775 = new cljs.core.IndexedSeq(G__18776__a, 0);
        }
        return cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__18775);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$swap_BANG_.cljs$lang$maxFixedArity = 4;
  cljs$core$swap_BANG_.cljs$lang$applyTo = cljs$core$swap_BANG___5.cljs$lang$applyTo;
  cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$swap_BANG___2;
  cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$swap_BANG___3;
  cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$swap_BANG___4;
  cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var cljs$core$keep_indexed = null;
  var cljs$core$keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__18843 = null;
          var G__18843__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__18843__1 = function(result) {
            var G__18810 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18810) : rf.call(null, G__18810);
          };
          var G__18843__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__18811 = i;
              var G__18812 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18811, G__18812) : f.call(null, G__18811, G__18812);
            }();
            if (v == null) {
              return result;
            } else {
              var G__18813 = result;
              var G__18814 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18813, G__18814) : rf.call(null, G__18813, G__18814);
            }
          };
          G__18843 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__18843__0.call(this);
              case 1:
                return G__18843__1.call(this, result);
              case 2:
                return G__18843__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18843.cljs$core$IFn$_invoke$arity$0 = G__18843__0;
          G__18843.cljs$core$IFn$_invoke$arity$1 = G__18843__1;
          G__18843.cljs$core$IFn$_invoke$arity$2 = G__18843__2;
          return G__18843;
        }();
      }(ia);
    };
  };
  var cljs$core$keep_indexed__2 = function(f, coll) {
    var keepi = function cljs$core$keep_indexed_$_keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4994__auto___18844 = size;
            var i_18845 = 0;
            while (true) {
              if (i_18845 < n__4994__auto___18844) {
                var x_18846 = function() {
                  var G__18839 = idx + i_18845;
                  var G__18840 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_18845);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18839, G__18840) : f.call(null, G__18839, G__18840);
                }();
                if (x_18846 == null) {
                } else {
                  cljs.core.chunk_append(b, x_18846);
                }
                var G__18847 = i_18845 + 1;
                i_18845 = G__18847;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keep_indexed_$_keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__18841 = idx;
              var G__18842 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18841, G__18842) : f.call(null, G__18841, G__18842);
            }();
            if (x == null) {
              return cljs$core$keep_indexed_$_keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, cljs$core$keep_indexed_$_keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  cljs$core$keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$keep_indexed__1.call(this, f);
      case 2:
        return cljs$core$keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep_indexed__1;
  cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep_indexed__2;
  return cljs$core$keep_indexed;
}();
cljs.core.every_pred = function() {
  var cljs$core$every_pred = null;
  var cljs$core$every_pred__1 = function(p) {
    return function() {
      var cljs$core$every_pred_$_ep1 = null;
      var cljs$core$every_pred_$_ep1__0 = function() {
        return true;
      };
      var cljs$core$every_pred_$_ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__19061 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19061) : p.call(null, G__19061);
        }());
      };
      var cljs$core$every_pred_$_ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__4097__auto__ = function() {
            var G__19063 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19063) : p.call(null, G__19063);
          }();
          if (cljs.core.truth_(and__4097__auto__)) {
            var G__19064 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19064) : p.call(null, G__19064);
          } else {
            return and__4097__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__4097__auto__ = function() {
            var G__19066 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19066) : p.call(null, G__19066);
          }();
          if (cljs.core.truth_(and__4097__auto__)) {
            var and__4097__auto____$1 = function() {
              var G__19068 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19068) : p.call(null, G__19068);
            }();
            if (cljs.core.truth_(and__4097__auto____$1)) {
              var G__19069 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19069) : p.call(null, G__19069);
            } else {
              return and__4097__auto____$1;
            }
          } else {
            return and__4097__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep1__4 = function() {
        var G__19238__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__19238 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19239__i = 0, G__19239__a = new Array(arguments.length - 3);
            while (G__19239__i < G__19239__a.length) {
              G__19239__a[G__19239__i] = arguments[G__19239__i + 3];
              ++G__19239__i;
            }
            args = new cljs.core.IndexedSeq(G__19239__a, 0);
          }
          return G__19238__delegate.call(this, x, y, z, args);
        };
        G__19238.cljs$lang$maxFixedArity = 3;
        G__19238.cljs$lang$applyTo = function(arglist__19240) {
          var x = cljs.core.first(arglist__19240);
          arglist__19240 = cljs.core.next(arglist__19240);
          var y = cljs.core.first(arglist__19240);
          arglist__19240 = cljs.core.next(arglist__19240);
          var z = cljs.core.first(arglist__19240);
          var args = cljs.core.rest(arglist__19240);
          return G__19238__delegate(x, y, z, args);
        };
        G__19238.cljs$core$IFn$_invoke$arity$variadic = G__19238__delegate;
        return G__19238;
      }();
      cljs$core$every_pred_$_ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$every_pred_$_ep1__0.call(this);
          case 1:
            return cljs$core$every_pred_$_ep1__1.call(this, x);
          case 2:
            return cljs$core$every_pred_$_ep1__2.call(this, x, y);
          case 3:
            return cljs$core$every_pred_$_ep1__3.call(this, x, y, z);
          default:
            var G__19241 = null;
            if (arguments.length > 3) {
              var G__19242__i = 0, G__19242__a = new Array(arguments.length - 3);
              while (G__19242__i < G__19242__a.length) {
                G__19242__a[G__19242__i] = arguments[G__19242__i + 3];
                ++G__19242__i;
              }
              G__19241 = new cljs.core.IndexedSeq(G__19242__a, 0);
            }
            return cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19241);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$every_pred_$_ep1.cljs$lang$maxFixedArity = 3;
      cljs$core$every_pred_$_ep1.cljs$lang$applyTo = cljs$core$every_pred_$_ep1__4.cljs$lang$applyTo;
      cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep1__0;
      cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep1__1;
      cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep1__2;
      cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep1__3;
      cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$every_pred_$_ep1;
    }();
  };
  var cljs$core$every_pred__2 = function(p1, p2) {
    return function() {
      var cljs$core$every_pred_$_ep2 = null;
      var cljs$core$every_pred_$_ep2__0 = function() {
        return true;
      };
      var cljs$core$every_pred_$_ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__4097__auto__ = function() {
            var G__19101 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19101) : p1.call(null, G__19101);
          }();
          if (cljs.core.truth_(and__4097__auto__)) {
            var G__19102 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19102) : p2.call(null, G__19102);
          } else {
            return and__4097__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__4097__auto__ = function() {
            var G__19104 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19104) : p1.call(null, G__19104);
          }();
          if (cljs.core.truth_(and__4097__auto__)) {
            var and__4097__auto____$1 = function() {
              var G__19106 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19106) : p1.call(null, G__19106);
            }();
            if (cljs.core.truth_(and__4097__auto____$1)) {
              var and__4097__auto____$2 = function() {
                var G__19108 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19108) : p2.call(null, G__19108);
              }();
              if (cljs.core.truth_(and__4097__auto____$2)) {
                var G__19109 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19109) : p2.call(null, G__19109);
              } else {
                return and__4097__auto____$2;
              }
            } else {
              return and__4097__auto____$1;
            }
          } else {
            return and__4097__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__4097__auto__ = function() {
            var G__19111 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19111) : p1.call(null, G__19111);
          }();
          if (cljs.core.truth_(and__4097__auto__)) {
            var and__4097__auto____$1 = function() {
              var G__19113 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19113) : p1.call(null, G__19113);
            }();
            if (cljs.core.truth_(and__4097__auto____$1)) {
              var and__4097__auto____$2 = function() {
                var G__19115 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19115) : p1.call(null, G__19115);
              }();
              if (cljs.core.truth_(and__4097__auto____$2)) {
                var and__4097__auto____$3 = function() {
                  var G__19117 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19117) : p2.call(null, G__19117);
                }();
                if (cljs.core.truth_(and__4097__auto____$3)) {
                  var and__4097__auto____$4 = function() {
                    var G__19119 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19119) : p2.call(null, G__19119);
                  }();
                  if (cljs.core.truth_(and__4097__auto____$4)) {
                    var G__19120 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19120) : p2.call(null, G__19120);
                  } else {
                    return and__4097__auto____$4;
                  }
                } else {
                  return and__4097__auto____$3;
                }
              } else {
                return and__4097__auto____$2;
              }
            } else {
              return and__4097__auto____$1;
            }
          } else {
            return and__4097__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep2__4 = function() {
        var G__19243__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__18848_SHARP_) {
            var and__4097__auto__ = function() {
              var G__19125 = p1__18848_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19125) : p1.call(null, G__19125);
            }();
            if (cljs.core.truth_(and__4097__auto__)) {
              var G__19126 = p1__18848_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19126) : p2.call(null, G__19126);
            } else {
              return and__4097__auto__;
            }
          }, args));
        };
        var G__19243 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19244__i = 0, G__19244__a = new Array(arguments.length - 3);
            while (G__19244__i < G__19244__a.length) {
              G__19244__a[G__19244__i] = arguments[G__19244__i + 3];
              ++G__19244__i;
            }
            args = new cljs.core.IndexedSeq(G__19244__a, 0);
          }
          return G__19243__delegate.call(this, x, y, z, args);
        };
        G__19243.cljs$lang$maxFixedArity = 3;
        G__19243.cljs$lang$applyTo = function(arglist__19245) {
          var x = cljs.core.first(arglist__19245);
          arglist__19245 = cljs.core.next(arglist__19245);
          var y = cljs.core.first(arglist__19245);
          arglist__19245 = cljs.core.next(arglist__19245);
          var z = cljs.core.first(arglist__19245);
          var args = cljs.core.rest(arglist__19245);
          return G__19243__delegate(x, y, z, args);
        };
        G__19243.cljs$core$IFn$_invoke$arity$variadic = G__19243__delegate;
        return G__19243;
      }();
      cljs$core$every_pred_$_ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$every_pred_$_ep2__0.call(this);
          case 1:
            return cljs$core$every_pred_$_ep2__1.call(this, x);
          case 2:
            return cljs$core$every_pred_$_ep2__2.call(this, x, y);
          case 3:
            return cljs$core$every_pred_$_ep2__3.call(this, x, y, z);
          default:
            var G__19246 = null;
            if (arguments.length > 3) {
              var G__19247__i = 0, G__19247__a = new Array(arguments.length - 3);
              while (G__19247__i < G__19247__a.length) {
                G__19247__a[G__19247__i] = arguments[G__19247__i + 3];
                ++G__19247__i;
              }
              G__19246 = new cljs.core.IndexedSeq(G__19247__a, 0);
            }
            return cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19246);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$every_pred_$_ep2.cljs$lang$maxFixedArity = 3;
      cljs$core$every_pred_$_ep2.cljs$lang$applyTo = cljs$core$every_pred_$_ep2__4.cljs$lang$applyTo;
      cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep2__0;
      cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep2__1;
      cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep2__2;
      cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep2__3;
      cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$every_pred_$_ep2;
    }();
  };
  var cljs$core$every_pred__3 = function(p1, p2, p3) {
    return function() {
      var cljs$core$every_pred_$_ep3 = null;
      var cljs$core$every_pred_$_ep3__0 = function() {
        return true;
      };
      var cljs$core$every_pred_$_ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__4097__auto__ = function() {
            var G__19172 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19172) : p1.call(null, G__19172);
          }();
          if (cljs.core.truth_(and__4097__auto__)) {
            var and__4097__auto____$1 = function() {
              var G__19174 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19174) : p2.call(null, G__19174);
            }();
            if (cljs.core.truth_(and__4097__auto____$1)) {
              var G__19175 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19175) : p3.call(null, G__19175);
            } else {
              return and__4097__auto____$1;
            }
          } else {
            return and__4097__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__4097__auto__ = function() {
            var G__19177 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19177) : p1.call(null, G__19177);
          }();
          if (cljs.core.truth_(and__4097__auto__)) {
            var and__4097__auto____$1 = function() {
              var G__19179 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19179) : p2.call(null, G__19179);
            }();
            if (cljs.core.truth_(and__4097__auto____$1)) {
              var and__4097__auto____$2 = function() {
                var G__19181 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19181) : p3.call(null, G__19181);
              }();
              if (cljs.core.truth_(and__4097__auto____$2)) {
                var and__4097__auto____$3 = function() {
                  var G__19183 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19183) : p1.call(null, G__19183);
                }();
                if (cljs.core.truth_(and__4097__auto____$3)) {
                  var and__4097__auto____$4 = function() {
                    var G__19185 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19185) : p2.call(null, G__19185);
                  }();
                  if (cljs.core.truth_(and__4097__auto____$4)) {
                    var G__19186 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19186) : p3.call(null, G__19186);
                  } else {
                    return and__4097__auto____$4;
                  }
                } else {
                  return and__4097__auto____$3;
                }
              } else {
                return and__4097__auto____$2;
              }
            } else {
              return and__4097__auto____$1;
            }
          } else {
            return and__4097__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__4097__auto__ = function() {
            var G__19188 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19188) : p1.call(null, G__19188);
          }();
          if (cljs.core.truth_(and__4097__auto__)) {
            var and__4097__auto____$1 = function() {
              var G__19190 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19190) : p2.call(null, G__19190);
            }();
            if (cljs.core.truth_(and__4097__auto____$1)) {
              var and__4097__auto____$2 = function() {
                var G__19192 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19192) : p3.call(null, G__19192);
              }();
              if (cljs.core.truth_(and__4097__auto____$2)) {
                var and__4097__auto____$3 = function() {
                  var G__19194 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19194) : p1.call(null, G__19194);
                }();
                if (cljs.core.truth_(and__4097__auto____$3)) {
                  var and__4097__auto____$4 = function() {
                    var G__19196 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19196) : p2.call(null, G__19196);
                  }();
                  if (cljs.core.truth_(and__4097__auto____$4)) {
                    var and__4097__auto____$5 = function() {
                      var G__19198 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19198) : p3.call(null, G__19198);
                    }();
                    if (cljs.core.truth_(and__4097__auto____$5)) {
                      var and__4097__auto____$6 = function() {
                        var G__19200 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19200) : p1.call(null, G__19200);
                      }();
                      if (cljs.core.truth_(and__4097__auto____$6)) {
                        var and__4097__auto____$7 = function() {
                          var G__19202 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19202) : p2.call(null, G__19202);
                        }();
                        if (cljs.core.truth_(and__4097__auto____$7)) {
                          var G__19203 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19203) : p3.call(null, G__19203);
                        } else {
                          return and__4097__auto____$7;
                        }
                      } else {
                        return and__4097__auto____$6;
                      }
                    } else {
                      return and__4097__auto____$5;
                    }
                  } else {
                    return and__4097__auto____$4;
                  }
                } else {
                  return and__4097__auto____$3;
                }
              } else {
                return and__4097__auto____$2;
              }
            } else {
              return and__4097__auto____$1;
            }
          } else {
            return and__4097__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep3__4 = function() {
        var G__19248__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__18849_SHARP_) {
            var and__4097__auto__ = function() {
              var G__19210 = p1__18849_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19210) : p1.call(null, G__19210);
            }();
            if (cljs.core.truth_(and__4097__auto__)) {
              var and__4097__auto____$1 = function() {
                var G__19212 = p1__18849_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19212) : p2.call(null, G__19212);
              }();
              if (cljs.core.truth_(and__4097__auto____$1)) {
                var G__19213 = p1__18849_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19213) : p3.call(null, G__19213);
              } else {
                return and__4097__auto____$1;
              }
            } else {
              return and__4097__auto__;
            }
          }, args));
        };
        var G__19248 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19249__i = 0, G__19249__a = new Array(arguments.length - 3);
            while (G__19249__i < G__19249__a.length) {
              G__19249__a[G__19249__i] = arguments[G__19249__i + 3];
              ++G__19249__i;
            }
            args = new cljs.core.IndexedSeq(G__19249__a, 0);
          }
          return G__19248__delegate.call(this, x, y, z, args);
        };
        G__19248.cljs$lang$maxFixedArity = 3;
        G__19248.cljs$lang$applyTo = function(arglist__19250) {
          var x = cljs.core.first(arglist__19250);
          arglist__19250 = cljs.core.next(arglist__19250);
          var y = cljs.core.first(arglist__19250);
          arglist__19250 = cljs.core.next(arglist__19250);
          var z = cljs.core.first(arglist__19250);
          var args = cljs.core.rest(arglist__19250);
          return G__19248__delegate(x, y, z, args);
        };
        G__19248.cljs$core$IFn$_invoke$arity$variadic = G__19248__delegate;
        return G__19248;
      }();
      cljs$core$every_pred_$_ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$every_pred_$_ep3__0.call(this);
          case 1:
            return cljs$core$every_pred_$_ep3__1.call(this, x);
          case 2:
            return cljs$core$every_pred_$_ep3__2.call(this, x, y);
          case 3:
            return cljs$core$every_pred_$_ep3__3.call(this, x, y, z);
          default:
            var G__19251 = null;
            if (arguments.length > 3) {
              var G__19252__i = 0, G__19252__a = new Array(arguments.length - 3);
              while (G__19252__i < G__19252__a.length) {
                G__19252__a[G__19252__i] = arguments[G__19252__i + 3];
                ++G__19252__i;
              }
              G__19251 = new cljs.core.IndexedSeq(G__19252__a, 0);
            }
            return cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19251);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$every_pred_$_ep3.cljs$lang$maxFixedArity = 3;
      cljs$core$every_pred_$_ep3.cljs$lang$applyTo = cljs$core$every_pred_$_ep3__4.cljs$lang$applyTo;
      cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep3__0;
      cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep3__1;
      cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep3__2;
      cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep3__3;
      cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$every_pred_$_ep3;
    }();
  };
  var cljs$core$every_pred__4 = function() {
    var G__19253__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var cljs$core$every_pred_$_epn = null;
          var cljs$core$every_pred_$_epn__0 = function() {
            return true;
          };
          var cljs$core$every_pred_$_epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__18850_SHARP_) {
                var G__19229 = x;
                return p1__18850_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18850_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19229) : p1__18850_SHARP_.call(null, G__19229);
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$every_pred_$_epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__18851_SHARP_) {
                var and__4097__auto__ = function() {
                  var G__19231 = x;
                  return p1__18851_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18851_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19231) : p1__18851_SHARP_.call(null, G__19231);
                }();
                if (cljs.core.truth_(and__4097__auto__)) {
                  var G__19232 = y;
                  return p1__18851_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18851_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19232) : p1__18851_SHARP_.call(null, G__19232);
                } else {
                  return and__4097__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$every_pred_$_epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__18852_SHARP_) {
                var and__4097__auto__ = function() {
                  var G__19234 = x;
                  return p1__18852_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18852_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19234) : p1__18852_SHARP_.call(null, G__19234);
                }();
                if (cljs.core.truth_(and__4097__auto__)) {
                  var and__4097__auto____$1 = function() {
                    var G__19236 = y;
                    return p1__18852_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18852_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19236) : p1__18852_SHARP_.call(null, G__19236);
                  }();
                  if (cljs.core.truth_(and__4097__auto____$1)) {
                    var G__19237 = z;
                    return p1__18852_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18852_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19237) : p1__18852_SHARP_.call(null, G__19237);
                  } else {
                    return and__4097__auto____$1;
                  }
                } else {
                  return and__4097__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$every_pred_$_epn__4 = function() {
            var G__19254__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__18853_SHARP_) {
                  return cljs.core.every_QMARK_(p1__18853_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__19254 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__19255__i = 0, G__19255__a = new Array(arguments.length - 3);
                while (G__19255__i < G__19255__a.length) {
                  G__19255__a[G__19255__i] = arguments[G__19255__i + 3];
                  ++G__19255__i;
                }
                args = new cljs.core.IndexedSeq(G__19255__a, 0);
              }
              return G__19254__delegate.call(this, x, y, z, args);
            };
            G__19254.cljs$lang$maxFixedArity = 3;
            G__19254.cljs$lang$applyTo = function(arglist__19256) {
              var x = cljs.core.first(arglist__19256);
              arglist__19256 = cljs.core.next(arglist__19256);
              var y = cljs.core.first(arglist__19256);
              arglist__19256 = cljs.core.next(arglist__19256);
              var z = cljs.core.first(arglist__19256);
              var args = cljs.core.rest(arglist__19256);
              return G__19254__delegate(x, y, z, args);
            };
            G__19254.cljs$core$IFn$_invoke$arity$variadic = G__19254__delegate;
            return G__19254;
          }();
          cljs$core$every_pred_$_epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return cljs$core$every_pred_$_epn__0.call(this);
              case 1:
                return cljs$core$every_pred_$_epn__1.call(this, x);
              case 2:
                return cljs$core$every_pred_$_epn__2.call(this, x, y);
              case 3:
                return cljs$core$every_pred_$_epn__3.call(this, x, y, z);
              default:
                var G__19257 = null;
                if (arguments.length > 3) {
                  var G__19258__i = 0, G__19258__a = new Array(arguments.length - 3);
                  while (G__19258__i < G__19258__a.length) {
                    G__19258__a[G__19258__i] = arguments[G__19258__i + 3];
                    ++G__19258__i;
                  }
                  G__19257 = new cljs.core.IndexedSeq(G__19258__a, 0);
                }
                return cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19257);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          cljs$core$every_pred_$_epn.cljs$lang$maxFixedArity = 3;
          cljs$core$every_pred_$_epn.cljs$lang$applyTo = cljs$core$every_pred_$_epn__4.cljs$lang$applyTo;
          cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_epn__0;
          cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_epn__1;
          cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_epn__2;
          cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_epn__3;
          cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return cljs$core$every_pred_$_epn;
        }();
      }(ps__$1);
    };
    var G__19253 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__19259__i = 0, G__19259__a = new Array(arguments.length - 3);
        while (G__19259__i < G__19259__a.length) {
          G__19259__a[G__19259__i] = arguments[G__19259__i + 3];
          ++G__19259__i;
        }
        ps = new cljs.core.IndexedSeq(G__19259__a, 0);
      }
      return G__19253__delegate.call(this, p1, p2, p3, ps);
    };
    G__19253.cljs$lang$maxFixedArity = 3;
    G__19253.cljs$lang$applyTo = function(arglist__19260) {
      var p1 = cljs.core.first(arglist__19260);
      arglist__19260 = cljs.core.next(arglist__19260);
      var p2 = cljs.core.first(arglist__19260);
      arglist__19260 = cljs.core.next(arglist__19260);
      var p3 = cljs.core.first(arglist__19260);
      var ps = cljs.core.rest(arglist__19260);
      return G__19253__delegate(p1, p2, p3, ps);
    };
    G__19253.cljs$core$IFn$_invoke$arity$variadic = G__19253__delegate;
    return G__19253;
  }();
  cljs$core$every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$every_pred__1.call(this, p1);
      case 2:
        return cljs$core$every_pred__2.call(this, p1, p2);
      case 3:
        return cljs$core$every_pred__3.call(this, p1, p2, p3);
      default:
        var G__19261 = null;
        if (arguments.length > 3) {
          var G__19262__i = 0, G__19262__a = new Array(arguments.length - 3);
          while (G__19262__i < G__19262__a.length) {
            G__19262__a[G__19262__i] = arguments[G__19262__i + 3];
            ++G__19262__i;
          }
          G__19261 = new cljs.core.IndexedSeq(G__19262__a, 0);
        }
        return cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__19261);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$every_pred.cljs$lang$maxFixedArity = 3;
  cljs$core$every_pred.cljs$lang$applyTo = cljs$core$every_pred__4.cljs$lang$applyTo;
  cljs$core$every_pred.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred__1;
  cljs$core$every_pred.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred__2;
  cljs$core$every_pred.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred__3;
  cljs$core$every_pred.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$every_pred;
}();
cljs.core.some_fn = function() {
  var cljs$core$some_fn = null;
  var cljs$core$some_fn__1 = function(p) {
    return function() {
      var cljs$core$some_fn_$_sp1 = null;
      var cljs$core$some_fn_$_sp1__0 = function() {
        return null;
      };
      var cljs$core$some_fn_$_sp1__1 = function(x) {
        var G__19468 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19468) : p.call(null, G__19468);
      };
      var cljs$core$some_fn_$_sp1__2 = function(x, y) {
        var or__4109__auto__ = function() {
          var G__19470 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19470) : p.call(null, G__19470);
        }();
        if (cljs.core.truth_(or__4109__auto__)) {
          return or__4109__auto__;
        } else {
          var G__19471 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19471) : p.call(null, G__19471);
        }
      };
      var cljs$core$some_fn_$_sp1__3 = function(x, y, z) {
        var or__4109__auto__ = function() {
          var G__19473 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19473) : p.call(null, G__19473);
        }();
        if (cljs.core.truth_(or__4109__auto__)) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = function() {
            var G__19475 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19475) : p.call(null, G__19475);
          }();
          if (cljs.core.truth_(or__4109__auto____$1)) {
            return or__4109__auto____$1;
          } else {
            var G__19476 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19476) : p.call(null, G__19476);
          }
        }
      };
      var cljs$core$some_fn_$_sp1__4 = function() {
        var G__19637__delegate = function(x, y, z, args) {
          var or__4109__auto__ = cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4109__auto__)) {
            return or__4109__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__19637 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19638__i = 0, G__19638__a = new Array(arguments.length - 3);
            while (G__19638__i < G__19638__a.length) {
              G__19638__a[G__19638__i] = arguments[G__19638__i + 3];
              ++G__19638__i;
            }
            args = new cljs.core.IndexedSeq(G__19638__a, 0);
          }
          return G__19637__delegate.call(this, x, y, z, args);
        };
        G__19637.cljs$lang$maxFixedArity = 3;
        G__19637.cljs$lang$applyTo = function(arglist__19639) {
          var x = cljs.core.first(arglist__19639);
          arglist__19639 = cljs.core.next(arglist__19639);
          var y = cljs.core.first(arglist__19639);
          arglist__19639 = cljs.core.next(arglist__19639);
          var z = cljs.core.first(arglist__19639);
          var args = cljs.core.rest(arglist__19639);
          return G__19637__delegate(x, y, z, args);
        };
        G__19637.cljs$core$IFn$_invoke$arity$variadic = G__19637__delegate;
        return G__19637;
      }();
      cljs$core$some_fn_$_sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$some_fn_$_sp1__0.call(this);
          case 1:
            return cljs$core$some_fn_$_sp1__1.call(this, x);
          case 2:
            return cljs$core$some_fn_$_sp1__2.call(this, x, y);
          case 3:
            return cljs$core$some_fn_$_sp1__3.call(this, x, y, z);
          default:
            var G__19640 = null;
            if (arguments.length > 3) {
              var G__19641__i = 0, G__19641__a = new Array(arguments.length - 3);
              while (G__19641__i < G__19641__a.length) {
                G__19641__a[G__19641__i] = arguments[G__19641__i + 3];
                ++G__19641__i;
              }
              G__19640 = new cljs.core.IndexedSeq(G__19641__a, 0);
            }
            return cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19640);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$some_fn_$_sp1.cljs$lang$maxFixedArity = 3;
      cljs$core$some_fn_$_sp1.cljs$lang$applyTo = cljs$core$some_fn_$_sp1__4.cljs$lang$applyTo;
      cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp1__0;
      cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp1__1;
      cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp1__2;
      cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp1__3;
      cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$some_fn_$_sp1;
    }();
  };
  var cljs$core$some_fn__2 = function(p1, p2) {
    return function() {
      var cljs$core$some_fn_$_sp2 = null;
      var cljs$core$some_fn_$_sp2__0 = function() {
        return null;
      };
      var cljs$core$some_fn_$_sp2__1 = function(x) {
        var or__4109__auto__ = function() {
          var G__19508 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19508) : p1.call(null, G__19508);
        }();
        if (cljs.core.truth_(or__4109__auto__)) {
          return or__4109__auto__;
        } else {
          var G__19509 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19509) : p2.call(null, G__19509);
        }
      };
      var cljs$core$some_fn_$_sp2__2 = function(x, y) {
        var or__4109__auto__ = function() {
          var G__19511 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19511) : p1.call(null, G__19511);
        }();
        if (cljs.core.truth_(or__4109__auto__)) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = function() {
            var G__19513 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19513) : p1.call(null, G__19513);
          }();
          if (cljs.core.truth_(or__4109__auto____$1)) {
            return or__4109__auto____$1;
          } else {
            var or__4109__auto____$2 = function() {
              var G__19515 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19515) : p2.call(null, G__19515);
            }();
            if (cljs.core.truth_(or__4109__auto____$2)) {
              return or__4109__auto____$2;
            } else {
              var G__19516 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19516) : p2.call(null, G__19516);
            }
          }
        }
      };
      var cljs$core$some_fn_$_sp2__3 = function(x, y, z) {
        var or__4109__auto__ = function() {
          var G__19518 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19518) : p1.call(null, G__19518);
        }();
        if (cljs.core.truth_(or__4109__auto__)) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = function() {
            var G__19520 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19520) : p1.call(null, G__19520);
          }();
          if (cljs.core.truth_(or__4109__auto____$1)) {
            return or__4109__auto____$1;
          } else {
            var or__4109__auto____$2 = function() {
              var G__19522 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19522) : p1.call(null, G__19522);
            }();
            if (cljs.core.truth_(or__4109__auto____$2)) {
              return or__4109__auto____$2;
            } else {
              var or__4109__auto____$3 = function() {
                var G__19524 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19524) : p2.call(null, G__19524);
              }();
              if (cljs.core.truth_(or__4109__auto____$3)) {
                return or__4109__auto____$3;
              } else {
                var or__4109__auto____$4 = function() {
                  var G__19526 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19526) : p2.call(null, G__19526);
                }();
                if (cljs.core.truth_(or__4109__auto____$4)) {
                  return or__4109__auto____$4;
                } else {
                  var G__19527 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19527) : p2.call(null, G__19527);
                }
              }
            }
          }
        }
      };
      var cljs$core$some_fn_$_sp2__4 = function() {
        var G__19642__delegate = function(x, y, z, args) {
          var or__4109__auto__ = cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4109__auto__)) {
            return or__4109__auto__;
          } else {
            return cljs.core.some(function(or__4109__auto__) {
              return function(p1__19263_SHARP_) {
                var or__4109__auto____$1 = function() {
                  var G__19529 = p1__19263_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19529) : p1.call(null, G__19529);
                }();
                if (cljs.core.truth_(or__4109__auto____$1)) {
                  return or__4109__auto____$1;
                } else {
                  var G__19530 = p1__19263_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19530) : p2.call(null, G__19530);
                }
              };
            }(or__4109__auto__), args);
          }
        };
        var G__19642 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19643__i = 0, G__19643__a = new Array(arguments.length - 3);
            while (G__19643__i < G__19643__a.length) {
              G__19643__a[G__19643__i] = arguments[G__19643__i + 3];
              ++G__19643__i;
            }
            args = new cljs.core.IndexedSeq(G__19643__a, 0);
          }
          return G__19642__delegate.call(this, x, y, z, args);
        };
        G__19642.cljs$lang$maxFixedArity = 3;
        G__19642.cljs$lang$applyTo = function(arglist__19644) {
          var x = cljs.core.first(arglist__19644);
          arglist__19644 = cljs.core.next(arglist__19644);
          var y = cljs.core.first(arglist__19644);
          arglist__19644 = cljs.core.next(arglist__19644);
          var z = cljs.core.first(arglist__19644);
          var args = cljs.core.rest(arglist__19644);
          return G__19642__delegate(x, y, z, args);
        };
        G__19642.cljs$core$IFn$_invoke$arity$variadic = G__19642__delegate;
        return G__19642;
      }();
      cljs$core$some_fn_$_sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$some_fn_$_sp2__0.call(this);
          case 1:
            return cljs$core$some_fn_$_sp2__1.call(this, x);
          case 2:
            return cljs$core$some_fn_$_sp2__2.call(this, x, y);
          case 3:
            return cljs$core$some_fn_$_sp2__3.call(this, x, y, z);
          default:
            var G__19645 = null;
            if (arguments.length > 3) {
              var G__19646__i = 0, G__19646__a = new Array(arguments.length - 3);
              while (G__19646__i < G__19646__a.length) {
                G__19646__a[G__19646__i] = arguments[G__19646__i + 3];
                ++G__19646__i;
              }
              G__19645 = new cljs.core.IndexedSeq(G__19646__a, 0);
            }
            return cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19645);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$some_fn_$_sp2.cljs$lang$maxFixedArity = 3;
      cljs$core$some_fn_$_sp2.cljs$lang$applyTo = cljs$core$some_fn_$_sp2__4.cljs$lang$applyTo;
      cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp2__0;
      cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp2__1;
      cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp2__2;
      cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp2__3;
      cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$some_fn_$_sp2;
    }();
  };
  var cljs$core$some_fn__3 = function(p1, p2, p3) {
    return function() {
      var cljs$core$some_fn_$_sp3 = null;
      var cljs$core$some_fn_$_sp3__0 = function() {
        return null;
      };
      var cljs$core$some_fn_$_sp3__1 = function(x) {
        var or__4109__auto__ = function() {
          var G__19576 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19576) : p1.call(null, G__19576);
        }();
        if (cljs.core.truth_(or__4109__auto__)) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = function() {
            var G__19578 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19578) : p2.call(null, G__19578);
          }();
          if (cljs.core.truth_(or__4109__auto____$1)) {
            return or__4109__auto____$1;
          } else {
            var G__19579 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19579) : p3.call(null, G__19579);
          }
        }
      };
      var cljs$core$some_fn_$_sp3__2 = function(x, y) {
        var or__4109__auto__ = function() {
          var G__19581 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19581) : p1.call(null, G__19581);
        }();
        if (cljs.core.truth_(or__4109__auto__)) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = function() {
            var G__19583 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19583) : p2.call(null, G__19583);
          }();
          if (cljs.core.truth_(or__4109__auto____$1)) {
            return or__4109__auto____$1;
          } else {
            var or__4109__auto____$2 = function() {
              var G__19585 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19585) : p3.call(null, G__19585);
            }();
            if (cljs.core.truth_(or__4109__auto____$2)) {
              return or__4109__auto____$2;
            } else {
              var or__4109__auto____$3 = function() {
                var G__19587 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19587) : p1.call(null, G__19587);
              }();
              if (cljs.core.truth_(or__4109__auto____$3)) {
                return or__4109__auto____$3;
              } else {
                var or__4109__auto____$4 = function() {
                  var G__19589 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19589) : p2.call(null, G__19589);
                }();
                if (cljs.core.truth_(or__4109__auto____$4)) {
                  return or__4109__auto____$4;
                } else {
                  var G__19590 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19590) : p3.call(null, G__19590);
                }
              }
            }
          }
        }
      };
      var cljs$core$some_fn_$_sp3__3 = function(x, y, z) {
        var or__4109__auto__ = function() {
          var G__19592 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19592) : p1.call(null, G__19592);
        }();
        if (cljs.core.truth_(or__4109__auto__)) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = function() {
            var G__19594 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19594) : p2.call(null, G__19594);
          }();
          if (cljs.core.truth_(or__4109__auto____$1)) {
            return or__4109__auto____$1;
          } else {
            var or__4109__auto____$2 = function() {
              var G__19596 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19596) : p3.call(null, G__19596);
            }();
            if (cljs.core.truth_(or__4109__auto____$2)) {
              return or__4109__auto____$2;
            } else {
              var or__4109__auto____$3 = function() {
                var G__19598 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19598) : p1.call(null, G__19598);
              }();
              if (cljs.core.truth_(or__4109__auto____$3)) {
                return or__4109__auto____$3;
              } else {
                var or__4109__auto____$4 = function() {
                  var G__19600 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19600) : p2.call(null, G__19600);
                }();
                if (cljs.core.truth_(or__4109__auto____$4)) {
                  return or__4109__auto____$4;
                } else {
                  var or__4109__auto____$5 = function() {
                    var G__19602 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19602) : p3.call(null, G__19602);
                  }();
                  if (cljs.core.truth_(or__4109__auto____$5)) {
                    return or__4109__auto____$5;
                  } else {
                    var or__4109__auto____$6 = function() {
                      var G__19604 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19604) : p1.call(null, G__19604);
                    }();
                    if (cljs.core.truth_(or__4109__auto____$6)) {
                      return or__4109__auto____$6;
                    } else {
                      var or__4109__auto____$7 = function() {
                        var G__19606 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19606) : p2.call(null, G__19606);
                      }();
                      if (cljs.core.truth_(or__4109__auto____$7)) {
                        return or__4109__auto____$7;
                      } else {
                        var G__19607 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19607) : p3.call(null, G__19607);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var cljs$core$some_fn_$_sp3__4 = function() {
        var G__19647__delegate = function(x, y, z, args) {
          var or__4109__auto__ = cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4109__auto__)) {
            return or__4109__auto__;
          } else {
            return cljs.core.some(function(or__4109__auto__) {
              return function(p1__19264_SHARP_) {
                var or__4109__auto____$1 = function() {
                  var G__19609 = p1__19264_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19609) : p1.call(null, G__19609);
                }();
                if (cljs.core.truth_(or__4109__auto____$1)) {
                  return or__4109__auto____$1;
                } else {
                  var or__4109__auto____$2 = function() {
                    var G__19611 = p1__19264_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19611) : p2.call(null, G__19611);
                  }();
                  if (cljs.core.truth_(or__4109__auto____$2)) {
                    return or__4109__auto____$2;
                  } else {
                    var G__19612 = p1__19264_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19612) : p3.call(null, G__19612);
                  }
                }
              };
            }(or__4109__auto__), args);
          }
        };
        var G__19647 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19648__i = 0, G__19648__a = new Array(arguments.length - 3);
            while (G__19648__i < G__19648__a.length) {
              G__19648__a[G__19648__i] = arguments[G__19648__i + 3];
              ++G__19648__i;
            }
            args = new cljs.core.IndexedSeq(G__19648__a, 0);
          }
          return G__19647__delegate.call(this, x, y, z, args);
        };
        G__19647.cljs$lang$maxFixedArity = 3;
        G__19647.cljs$lang$applyTo = function(arglist__19649) {
          var x = cljs.core.first(arglist__19649);
          arglist__19649 = cljs.core.next(arglist__19649);
          var y = cljs.core.first(arglist__19649);
          arglist__19649 = cljs.core.next(arglist__19649);
          var z = cljs.core.first(arglist__19649);
          var args = cljs.core.rest(arglist__19649);
          return G__19647__delegate(x, y, z, args);
        };
        G__19647.cljs$core$IFn$_invoke$arity$variadic = G__19647__delegate;
        return G__19647;
      }();
      cljs$core$some_fn_$_sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$some_fn_$_sp3__0.call(this);
          case 1:
            return cljs$core$some_fn_$_sp3__1.call(this, x);
          case 2:
            return cljs$core$some_fn_$_sp3__2.call(this, x, y);
          case 3:
            return cljs$core$some_fn_$_sp3__3.call(this, x, y, z);
          default:
            var G__19650 = null;
            if (arguments.length > 3) {
              var G__19651__i = 0, G__19651__a = new Array(arguments.length - 3);
              while (G__19651__i < G__19651__a.length) {
                G__19651__a[G__19651__i] = arguments[G__19651__i + 3];
                ++G__19651__i;
              }
              G__19650 = new cljs.core.IndexedSeq(G__19651__a, 0);
            }
            return cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19650);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$some_fn_$_sp3.cljs$lang$maxFixedArity = 3;
      cljs$core$some_fn_$_sp3.cljs$lang$applyTo = cljs$core$some_fn_$_sp3__4.cljs$lang$applyTo;
      cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp3__0;
      cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp3__1;
      cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp3__2;
      cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp3__3;
      cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$some_fn_$_sp3;
    }();
  };
  var cljs$core$some_fn__4 = function() {
    var G__19652__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var cljs$core$some_fn_$_spn = null;
          var cljs$core$some_fn_$_spn__0 = function() {
            return null;
          };
          var cljs$core$some_fn_$_spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__19265_SHARP_) {
                var G__19628 = x;
                return p1__19265_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19265_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19628) : p1__19265_SHARP_.call(null, G__19628);
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$some_fn_$_spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__19266_SHARP_) {
                var or__4109__auto__ = function() {
                  var G__19630 = x;
                  return p1__19266_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19266_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19630) : p1__19266_SHARP_.call(null, G__19630);
                }();
                if (cljs.core.truth_(or__4109__auto__)) {
                  return or__4109__auto__;
                } else {
                  var G__19631 = y;
                  return p1__19266_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19266_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19631) : p1__19266_SHARP_.call(null, G__19631);
                }
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$some_fn_$_spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__19267_SHARP_) {
                var or__4109__auto__ = function() {
                  var G__19633 = x;
                  return p1__19267_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19267_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19633) : p1__19267_SHARP_.call(null, G__19633);
                }();
                if (cljs.core.truth_(or__4109__auto__)) {
                  return or__4109__auto__;
                } else {
                  var or__4109__auto____$1 = function() {
                    var G__19635 = y;
                    return p1__19267_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19267_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19635) : p1__19267_SHARP_.call(null, G__19635);
                  }();
                  if (cljs.core.truth_(or__4109__auto____$1)) {
                    return or__4109__auto____$1;
                  } else {
                    var G__19636 = z;
                    return p1__19267_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19267_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19636) : p1__19267_SHARP_.call(null, G__19636);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$some_fn_$_spn__4 = function() {
            var G__19653__delegate = function(x, y, z, args) {
              var or__4109__auto__ = cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__4109__auto__)) {
                return or__4109__auto__;
              } else {
                return cljs.core.some(function(or__4109__auto__, ps__$1) {
                  return function(p1__19268_SHARP_) {
                    return cljs.core.some(p1__19268_SHARP_, args);
                  };
                }(or__4109__auto__, ps__$1), ps__$1);
              }
            };
            var G__19653 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__19654__i = 0, G__19654__a = new Array(arguments.length - 3);
                while (G__19654__i < G__19654__a.length) {
                  G__19654__a[G__19654__i] = arguments[G__19654__i + 3];
                  ++G__19654__i;
                }
                args = new cljs.core.IndexedSeq(G__19654__a, 0);
              }
              return G__19653__delegate.call(this, x, y, z, args);
            };
            G__19653.cljs$lang$maxFixedArity = 3;
            G__19653.cljs$lang$applyTo = function(arglist__19655) {
              var x = cljs.core.first(arglist__19655);
              arglist__19655 = cljs.core.next(arglist__19655);
              var y = cljs.core.first(arglist__19655);
              arglist__19655 = cljs.core.next(arglist__19655);
              var z = cljs.core.first(arglist__19655);
              var args = cljs.core.rest(arglist__19655);
              return G__19653__delegate(x, y, z, args);
            };
            G__19653.cljs$core$IFn$_invoke$arity$variadic = G__19653__delegate;
            return G__19653;
          }();
          cljs$core$some_fn_$_spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return cljs$core$some_fn_$_spn__0.call(this);
              case 1:
                return cljs$core$some_fn_$_spn__1.call(this, x);
              case 2:
                return cljs$core$some_fn_$_spn__2.call(this, x, y);
              case 3:
                return cljs$core$some_fn_$_spn__3.call(this, x, y, z);
              default:
                var G__19656 = null;
                if (arguments.length > 3) {
                  var G__19657__i = 0, G__19657__a = new Array(arguments.length - 3);
                  while (G__19657__i < G__19657__a.length) {
                    G__19657__a[G__19657__i] = arguments[G__19657__i + 3];
                    ++G__19657__i;
                  }
                  G__19656 = new cljs.core.IndexedSeq(G__19657__a, 0);
                }
                return cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19656);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          cljs$core$some_fn_$_spn.cljs$lang$maxFixedArity = 3;
          cljs$core$some_fn_$_spn.cljs$lang$applyTo = cljs$core$some_fn_$_spn__4.cljs$lang$applyTo;
          cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_spn__0;
          cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_spn__1;
          cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_spn__2;
          cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_spn__3;
          cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return cljs$core$some_fn_$_spn;
        }();
      }(ps__$1);
    };
    var G__19652 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__19658__i = 0, G__19658__a = new Array(arguments.length - 3);
        while (G__19658__i < G__19658__a.length) {
          G__19658__a[G__19658__i] = arguments[G__19658__i + 3];
          ++G__19658__i;
        }
        ps = new cljs.core.IndexedSeq(G__19658__a, 0);
      }
      return G__19652__delegate.call(this, p1, p2, p3, ps);
    };
    G__19652.cljs$lang$maxFixedArity = 3;
    G__19652.cljs$lang$applyTo = function(arglist__19659) {
      var p1 = cljs.core.first(arglist__19659);
      arglist__19659 = cljs.core.next(arglist__19659);
      var p2 = cljs.core.first(arglist__19659);
      arglist__19659 = cljs.core.next(arglist__19659);
      var p3 = cljs.core.first(arglist__19659);
      var ps = cljs.core.rest(arglist__19659);
      return G__19652__delegate(p1, p2, p3, ps);
    };
    G__19652.cljs$core$IFn$_invoke$arity$variadic = G__19652__delegate;
    return G__19652;
  }();
  cljs$core$some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$some_fn__1.call(this, p1);
      case 2:
        return cljs$core$some_fn__2.call(this, p1, p2);
      case 3:
        return cljs$core$some_fn__3.call(this, p1, p2, p3);
      default:
        var G__19660 = null;
        if (arguments.length > 3) {
          var G__19661__i = 0, G__19661__a = new Array(arguments.length - 3);
          while (G__19661__i < G__19661__a.length) {
            G__19661__a[G__19661__i] = arguments[G__19661__i + 3];
            ++G__19661__i;
          }
          G__19660 = new cljs.core.IndexedSeq(G__19661__a, 0);
        }
        return cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__19660);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$some_fn.cljs$lang$maxFixedArity = 3;
  cljs$core$some_fn.cljs$lang$applyTo = cljs$core$some_fn__4.cljs$lang$applyTo;
  cljs$core$some_fn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn__1;
  cljs$core$some_fn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn__2;
  cljs$core$some_fn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn__3;
  cljs$core$some_fn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$some_fn;
}();
cljs.core.map = function() {
  var cljs$core$map = null;
  var cljs$core$map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__19716 = null;
        var G__19716__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19716__1 = function(result) {
          var G__19702 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19702) : rf.call(null, G__19702);
        };
        var G__19716__2 = function(result, input) {
          var G__19703 = result;
          var G__19704 = function() {
            var G__19705 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19705) : f.call(null, G__19705);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19703, G__19704) : rf.call(null, G__19703, G__19704);
        };
        var G__19716__3 = function() {
          var G__19717__delegate = function(result, input, inputs) {
            var G__19706 = result;
            var G__19707 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19706, G__19707) : rf.call(null, G__19706, G__19707);
          };
          var G__19717 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__19718__i = 0, G__19718__a = new Array(arguments.length - 2);
              while (G__19718__i < G__19718__a.length) {
                G__19718__a[G__19718__i] = arguments[G__19718__i + 2];
                ++G__19718__i;
              }
              inputs = new cljs.core.IndexedSeq(G__19718__a, 0);
            }
            return G__19717__delegate.call(this, result, input, inputs);
          };
          G__19717.cljs$lang$maxFixedArity = 2;
          G__19717.cljs$lang$applyTo = function(arglist__19719) {
            var result = cljs.core.first(arglist__19719);
            arglist__19719 = cljs.core.next(arglist__19719);
            var input = cljs.core.first(arglist__19719);
            var inputs = cljs.core.rest(arglist__19719);
            return G__19717__delegate(result, input, inputs);
          };
          G__19717.cljs$core$IFn$_invoke$arity$variadic = G__19717__delegate;
          return G__19717;
        }();
        G__19716 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__19716__0.call(this);
            case 1:
              return G__19716__1.call(this, result);
            case 2:
              return G__19716__2.call(this, result, input);
            default:
              var G__19720 = null;
              if (arguments.length > 2) {
                var G__19721__i = 0, G__19721__a = new Array(arguments.length - 2);
                while (G__19721__i < G__19721__a.length) {
                  G__19721__a[G__19721__i] = arguments[G__19721__i + 2];
                  ++G__19721__i;
                }
                G__19720 = new cljs.core.IndexedSeq(G__19721__a, 0);
              }
              return G__19716__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__19720);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19716.cljs$lang$maxFixedArity = 2;
        G__19716.cljs$lang$applyTo = G__19716__3.cljs$lang$applyTo;
        G__19716.cljs$core$IFn$_invoke$arity$0 = G__19716__0;
        G__19716.cljs$core$IFn$_invoke$arity$1 = G__19716__1;
        G__19716.cljs$core$IFn$_invoke$arity$2 = G__19716__2;
        G__19716.cljs$core$IFn$_invoke$arity$variadic = G__19716__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__19716;
      }();
    };
  };
  var cljs$core$map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4994__auto___19722 = size;
          var i_19723 = 0;
          while (true) {
            if (i_19723 < n__4994__auto___19722) {
              cljs.core.chunk_append(b, function() {
                var G__19708 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19723);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19708) : f.call(null, G__19708);
              }());
              var G__19724 = i_19723 + 1;
              i_19723 = G__19724;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__19709 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19709) : f.call(null, G__19709);
          }(), cljs$core$map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var cljs$core$map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__19710 = cljs.core.first(s1);
          var G__19711 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19710, G__19711) : f.call(null, G__19710, G__19711);
        }(), cljs$core$map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var cljs$core$map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__19712 = cljs.core.first(s1);
          var G__19713 = cljs.core.first(s2);
          var G__19714 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19712, G__19713, G__19714) : f.call(null, G__19712, G__19713, G__19714);
        }(), cljs$core$map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var cljs$core$map__5 = function() {
    var G__19725__delegate = function(f, c1, c2, c3, colls) {
      var step = function cljs$core$map_$_step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$map_$_step(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return cljs$core$map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__19662_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__19662_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__19725 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__19726__i = 0, G__19726__a = new Array(arguments.length - 4);
        while (G__19726__i < G__19726__a.length) {
          G__19726__a[G__19726__i] = arguments[G__19726__i + 4];
          ++G__19726__i;
        }
        colls = new cljs.core.IndexedSeq(G__19726__a, 0);
      }
      return G__19725__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__19725.cljs$lang$maxFixedArity = 4;
    G__19725.cljs$lang$applyTo = function(arglist__19727) {
      var f = cljs.core.first(arglist__19727);
      arglist__19727 = cljs.core.next(arglist__19727);
      var c1 = cljs.core.first(arglist__19727);
      arglist__19727 = cljs.core.next(arglist__19727);
      var c2 = cljs.core.first(arglist__19727);
      arglist__19727 = cljs.core.next(arglist__19727);
      var c3 = cljs.core.first(arglist__19727);
      var colls = cljs.core.rest(arglist__19727);
      return G__19725__delegate(f, c1, c2, c3, colls);
    };
    G__19725.cljs$core$IFn$_invoke$arity$variadic = G__19725__delegate;
    return G__19725;
  }();
  cljs$core$map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$map__1.call(this, f);
      case 2:
        return cljs$core$map__2.call(this, f, c1);
      case 3:
        return cljs$core$map__3.call(this, f, c1, c2);
      case 4:
        return cljs$core$map__4.call(this, f, c1, c2, c3);
      default:
        var G__19728 = null;
        if (arguments.length > 4) {
          var G__19729__i = 0, G__19729__a = new Array(arguments.length - 4);
          while (G__19729__i < G__19729__a.length) {
            G__19729__a[G__19729__i] = arguments[G__19729__i + 4];
            ++G__19729__i;
          }
          G__19728 = new cljs.core.IndexedSeq(G__19729__a, 0);
        }
        return cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__19728);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$map.cljs$lang$maxFixedArity = 4;
  cljs$core$map.cljs$lang$applyTo = cljs$core$map__5.cljs$lang$applyTo;
  cljs$core$map.cljs$core$IFn$_invoke$arity$1 = cljs$core$map__1;
  cljs$core$map.cljs$core$IFn$_invoke$arity$2 = cljs$core$map__2;
  cljs$core$map.cljs$core$IFn$_invoke$arity$3 = cljs$core$map__3;
  cljs$core$map.cljs$core$IFn$_invoke$arity$4 = cljs$core$map__4;
  cljs$core$map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$map;
}();
cljs.core.take = function() {
  var cljs$core$take = null;
  var cljs$core$take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__19738 = null;
          var G__19738__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__19738__1 = function(result) {
            var G__19735 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19735) : rf.call(null, G__19735);
          };
          var G__19738__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__19736 = result;
              var G__19737 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19736, G__19737) : rf.call(null, G__19736, G__19737);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__19738 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19738__0.call(this);
              case 1:
                return G__19738__1.call(this, result);
              case 2:
                return G__19738__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19738.cljs$core$IFn$_invoke$arity$0 = G__19738__0;
          G__19738.cljs$core$IFn$_invoke$arity$1 = G__19738__1;
          G__19738.cljs$core$IFn$_invoke$arity$2 = G__19738__2;
          return G__19738;
        }();
      }(na);
    };
  };
  var cljs$core$take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), cljs$core$take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$take__1.call(this, n);
      case 2:
        return cljs$core$take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$take.cljs$core$IFn$_invoke$arity$1 = cljs$core$take__1;
  cljs$core$take.cljs$core$IFn$_invoke$arity$2 = cljs$core$take__2;
  return cljs$core$take;
}();
cljs.core.drop = function() {
  var cljs$core$drop = null;
  var cljs$core$drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__19745 = null;
          var G__19745__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__19745__1 = function(result) {
            var G__19742 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19742) : rf.call(null, G__19742);
          };
          var G__19745__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__19743 = result;
              var G__19744 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19743, G__19744) : rf.call(null, G__19743, G__19744);
            }
          };
          G__19745 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19745__0.call(this);
              case 1:
                return G__19745__1.call(this, result);
              case 2:
                return G__19745__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19745.cljs$core$IFn$_invoke$arity$0 = G__19745__0;
          G__19745.cljs$core$IFn$_invoke$arity$1 = G__19745__1;
          G__19745.cljs$core$IFn$_invoke$arity$2 = G__19745__2;
          return G__19745;
        }();
      }(na);
    };
  };
  var cljs$core$drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__19746 = n__$1 - 1;
          var G__19747 = cljs.core.rest(s);
          n__$1 = G__19746;
          coll__$1 = G__19747;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  cljs$core$drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$drop__1.call(this, n);
      case 2:
        return cljs$core$drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$drop.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop__1;
  cljs$core$drop.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop__2;
  return cljs$core$drop;
}();
cljs.core.drop_last = function() {
  var cljs$core$drop_last = null;
  var cljs$core$drop_last__1 = function(s) {
    return cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var cljs$core$drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  cljs$core$drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return cljs$core$drop_last__1.call(this, n);
      case 2:
        return cljs$core$drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$drop_last.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_last__1;
  cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_last__2;
  return cljs$core$drop_last;
}();
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__19750 = cljs.core.next(s);
      var G__19751 = cljs.core.next(lead);
      s = G__19750;
      lead = G__19751;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var cljs$core$drop_while = null;
  var cljs$core$drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__19764 = null;
          var G__19764__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__19764__1 = function(result) {
            var G__19758 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19758) : rf.call(null, G__19758);
          };
          var G__19764__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__4097__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__4097__auto__)) {
                var G__19759 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19759) : pred.call(null, G__19759);
              } else {
                return and__4097__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__19760 = result;
              var G__19761 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19760, G__19761) : rf.call(null, G__19760, G__19761);
            }
          };
          G__19764 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19764__0.call(this);
              case 1:
                return G__19764__1.call(this, result);
              case 2:
                return G__19764__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19764.cljs$core$IFn$_invoke$arity$0 = G__19764__0;
          G__19764.cljs$core$IFn$_invoke$arity$1 = G__19764__1;
          G__19764.cljs$core$IFn$_invoke$arity$2 = G__19764__2;
          return G__19764;
        }();
      }(da);
    };
  };
  var cljs$core$drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__4097__auto__ = s;
          if (and__4097__auto__) {
            var G__19763 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__19763) : pred__$1.call(null, G__19763);
          } else {
            return and__4097__auto__;
          }
        }())) {
          var G__19765 = pred__$1;
          var G__19766 = cljs.core.rest(s);
          pred__$1 = G__19765;
          coll__$1 = G__19766;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  cljs$core$drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$drop_while__1.call(this, pred);
      case 2:
        return cljs$core$drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$drop_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_while__1;
  cljs$core$drop_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_while__2;
  return cljs$core$drop_while;
}();
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var cljs$core$repeat = null;
  var cljs$core$repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var cljs$core$repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  cljs$core$repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return cljs$core$repeat__1.call(this, n);
      case 2:
        return cljs$core$repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$repeat.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeat__1;
  cljs$core$repeat.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeat__2;
  return cljs$core$repeat;
}();
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var cljs$core$repeatedly = null;
  var cljs$core$repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var cljs$core$repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  cljs$core$repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return cljs$core$repeatedly__1.call(this, n);
      case 2:
        return cljs$core$repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeatedly__1;
  cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeatedly__2;
  return cljs$core$repeatedly;
}();
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, function() {
      var G__19775 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19775) : f.call(null, G__19775);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var cljs$core$interleave = null;
  var cljs$core$interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs$core$interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var cljs$core$interleave__3 = function() {
    var G__19778__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs$core$interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__19778 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__19779__i = 0, G__19779__a = new Array(arguments.length - 2);
        while (G__19779__i < G__19779__a.length) {
          G__19779__a[G__19779__i] = arguments[G__19779__i + 2];
          ++G__19779__i;
        }
        colls = new cljs.core.IndexedSeq(G__19779__a, 0);
      }
      return G__19778__delegate.call(this, c1, c2, colls);
    };
    G__19778.cljs$lang$maxFixedArity = 2;
    G__19778.cljs$lang$applyTo = function(arglist__19780) {
      var c1 = cljs.core.first(arglist__19780);
      arglist__19780 = cljs.core.next(arglist__19780);
      var c2 = cljs.core.first(arglist__19780);
      var colls = cljs.core.rest(arglist__19780);
      return G__19778__delegate(c1, c2, colls);
    };
    G__19778.cljs$core$IFn$_invoke$arity$variadic = G__19778__delegate;
    return G__19778;
  }();
  cljs$core$interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$interleave__2.call(this, c1, c2);
      default:
        var G__19781 = null;
        if (arguments.length > 2) {
          var G__19782__i = 0, G__19782__a = new Array(arguments.length - 2);
          while (G__19782__i < G__19782__a.length) {
            G__19782__a[G__19782__i] = arguments[G__19782__i + 2];
            ++G__19782__i;
          }
          G__19781 = new cljs.core.IndexedSeq(G__19782__a, 0);
        }
        return cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__19781);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$interleave.cljs$lang$maxFixedArity = 2;
  cljs$core$interleave.cljs$lang$applyTo = cljs$core$interleave__3.cljs$lang$applyTo;
  cljs$core$interleave.cljs$core$IFn$_invoke$arity$2 = cljs$core$interleave__2;
  cljs$core$interleave.cljs$core$IFn$_invoke$arity$variadic = cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$interleave;
}();
cljs.core.interpose = function() {
  var cljs$core$interpose = null;
  var cljs$core$interpose__1 = function(sep) {
    return function(rf) {
      var started = cljs.core.volatile_BANG_(false);
      return function(started) {
        return function() {
          var G__19797 = null;
          var G__19797__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__19797__1 = function(result) {
            var G__19790 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19790) : rf.call(null, G__19790);
          };
          var G__19797__2 = function(result, input) {
            if (cljs.core.truth_(cljs.core.deref(started))) {
              var sepr = function() {
                var G__19791 = result;
                var G__19792 = sep;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19791, G__19792) : rf.call(null, G__19791, G__19792);
              }();
              if (cljs.core.reduced_QMARK_(sepr)) {
                return sepr;
              } else {
                var G__19793 = sepr;
                var G__19794 = input;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19793, G__19794) : rf.call(null, G__19793, G__19794);
              }
            } else {
              cljs.core.vreset_BANG_(started, true);
              var G__19795 = result;
              var G__19796 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19795, G__19796) : rf.call(null, G__19795, G__19796);
            }
          };
          G__19797 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19797__0.call(this);
              case 1:
                return G__19797__1.call(this, result);
              case 2:
                return G__19797__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19797.cljs$core$IFn$_invoke$arity$0 = G__19797__0;
          G__19797.cljs$core$IFn$_invoke$arity$1 = G__19797__1;
          G__19797.cljs$core$IFn$_invoke$arity$2 = G__19797__2;
          return G__19797;
        }();
      }(started);
    };
  };
  var cljs$core$interpose__2 = function(sep, coll) {
    return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
  };
  cljs$core$interpose = function(sep, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$interpose__1.call(this, sep);
      case 2:
        return cljs$core$interpose__2.call(this, sep, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$interpose.cljs$core$IFn$_invoke$arity$1 = cljs$core$interpose__1;
  cljs$core$interpose.cljs$core$IFn$_invoke$arity$2 = cljs$core$interpose__2;
  return cljs$core$interpose;
}();
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var cljs$core$mapcat = null;
  var cljs$core$mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var cljs$core$mapcat__2 = function() {
    var G__19806__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__19806 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__19807__i = 0, G__19807__a = new Array(arguments.length - 1);
        while (G__19807__i < G__19807__a.length) {
          G__19807__a[G__19807__i] = arguments[G__19807__i + 1];
          ++G__19807__i;
        }
        colls = new cljs.core.IndexedSeq(G__19807__a, 0);
      }
      return G__19806__delegate.call(this, f, colls);
    };
    G__19806.cljs$lang$maxFixedArity = 1;
    G__19806.cljs$lang$applyTo = function(arglist__19808) {
      var f = cljs.core.first(arglist__19808);
      var colls = cljs.core.rest(arglist__19808);
      return G__19806__delegate(f, colls);
    };
    G__19806.cljs$core$IFn$_invoke$arity$variadic = G__19806__delegate;
    return G__19806;
  }();
  cljs$core$mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$mapcat__1.call(this, f);
      default:
        var G__19809 = null;
        if (arguments.length > 1) {
          var G__19810__i = 0, G__19810__a = new Array(arguments.length - 1);
          while (G__19810__i < G__19810__a.length) {
            G__19810__a[G__19810__i] = arguments[G__19810__i + 1];
            ++G__19810__i;
          }
          G__19809 = new cljs.core.IndexedSeq(G__19810__a, 0);
        }
        return cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__19809);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$mapcat.cljs$lang$maxFixedArity = 1;
  cljs$core$mapcat.cljs$lang$applyTo = cljs$core$mapcat__2.cljs$lang$applyTo;
  cljs$core$mapcat.cljs$core$IFn$_invoke$arity$1 = cljs$core$mapcat__1;
  cljs$core$mapcat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$mapcat;
}();
cljs.core.filter = function() {
  var cljs$core$filter = null;
  var cljs$core$filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__19829 = null;
        var G__19829__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19829__1 = function(result) {
          var G__19823 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19823) : rf.call(null, G__19823);
        };
        var G__19829__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__19824 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19824) : pred.call(null, G__19824);
          }())) {
            var G__19825 = result;
            var G__19826 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19825, G__19826) : rf.call(null, G__19825, G__19826);
          } else {
            return result;
          }
        };
        G__19829 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19829__0.call(this);
            case 1:
              return G__19829__1.call(this, result);
            case 2:
              return G__19829__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19829.cljs$core$IFn$_invoke$arity$0 = G__19829__0;
        G__19829.cljs$core$IFn$_invoke$arity$1 = G__19829__1;
        G__19829.cljs$core$IFn$_invoke$arity$2 = G__19829__2;
        return G__19829;
      }();
    };
  };
  var cljs$core$filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4994__auto___19830 = size;
          var i_19831 = 0;
          while (true) {
            if (i_19831 < n__4994__auto___19830) {
              if (cljs.core.truth_(function() {
                var G__19827 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19831);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19827) : pred.call(null, G__19827);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19831));
              } else {
              }
              var G__19832 = i_19831 + 1;
              i_19831 = G__19832;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__19828 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19828) : pred.call(null, G__19828);
          }())) {
            return cljs.core.cons(f, cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$filter__1.call(this, pred);
      case 2:
        return cljs$core$filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$filter.cljs$core$IFn$_invoke$arity$1 = cljs$core$filter__1;
  cljs$core$filter.cljs$core$IFn$_invoke$arity$2 = cljs$core$filter__2;
  return cljs$core$filter;
}();
cljs.core.remove = function() {
  var cljs$core$remove = null;
  var cljs$core$remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var cljs$core$remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  cljs$core$remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$remove__1.call(this, pred);
      case 2:
        return cljs$core$remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$remove.cljs$core$IFn$_invoke$arity$1 = cljs$core$remove__1;
  cljs$core$remove.cljs$core$IFn$_invoke$arity$2 = cljs$core$remove__2;
  return cljs$core$remove;
}();
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__19839 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__19839) : branch_QMARK_.call(null, G__19839);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([function() {
        var G__19840 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__19840) : children.call(null, G__19840);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__19841_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__19841_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var cljs$core$into = null;
  var cljs$core$into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__19844 = to;
        if (G__19844) {
          var bit__4776__auto__ = G__19844.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4776__auto__ || G__19844.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var cljs$core$into__3 = function(to, xform, from) {
    if (function() {
      var G__19845 = to;
      if (G__19845) {
        var bit__4776__auto__ = G__19845.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4776__auto__ || G__19845.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  cljs$core$into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return cljs$core$into__2.call(this, to, xform);
      case 3:
        return cljs$core$into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$into.cljs$core$IFn$_invoke$arity$2 = cljs$core$into__2;
  cljs$core$into.cljs$core$IFn$_invoke$arity$3 = cljs$core$into__3;
  return cljs$core$into;
}();
cljs.core.mapv = function() {
  var cljs$core$mapv = null;
  var cljs$core$mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__19847 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19847) : f.call(null, G__19847);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var cljs$core$mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var cljs$core$mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var cljs$core$mapv__5 = function() {
    var G__19848__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__19848 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__19849__i = 0, G__19849__a = new Array(arguments.length - 4);
        while (G__19849__i < G__19849__a.length) {
          G__19849__a[G__19849__i] = arguments[G__19849__i + 4];
          ++G__19849__i;
        }
        colls = new cljs.core.IndexedSeq(G__19849__a, 0);
      }
      return G__19848__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__19848.cljs$lang$maxFixedArity = 4;
    G__19848.cljs$lang$applyTo = function(arglist__19850) {
      var f = cljs.core.first(arglist__19850);
      arglist__19850 = cljs.core.next(arglist__19850);
      var c1 = cljs.core.first(arglist__19850);
      arglist__19850 = cljs.core.next(arglist__19850);
      var c2 = cljs.core.first(arglist__19850);
      arglist__19850 = cljs.core.next(arglist__19850);
      var c3 = cljs.core.first(arglist__19850);
      var colls = cljs.core.rest(arglist__19850);
      return G__19848__delegate(f, c1, c2, c3, colls);
    };
    G__19848.cljs$core$IFn$_invoke$arity$variadic = G__19848__delegate;
    return G__19848;
  }();
  cljs$core$mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$mapv__2.call(this, f, c1);
      case 3:
        return cljs$core$mapv__3.call(this, f, c1, c2);
      case 4:
        return cljs$core$mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__19851 = null;
        if (arguments.length > 4) {
          var G__19852__i = 0, G__19852__a = new Array(arguments.length - 4);
          while (G__19852__i < G__19852__a.length) {
            G__19852__a[G__19852__i] = arguments[G__19852__i + 4];
            ++G__19852__i;
          }
          G__19851 = new cljs.core.IndexedSeq(G__19852__a, 0);
        }
        return cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__19851);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$mapv.cljs$lang$maxFixedArity = 4;
  cljs$core$mapv.cljs$lang$applyTo = cljs$core$mapv__5.cljs$lang$applyTo;
  cljs$core$mapv.cljs$core$IFn$_invoke$arity$2 = cljs$core$mapv__2;
  cljs$core$mapv.cljs$core$IFn$_invoke$arity$3 = cljs$core$mapv__3;
  cljs$core$mapv.cljs$core$IFn$_invoke$arity$4 = cljs$core$mapv__4;
  cljs$core$mapv.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$mapv;
}();
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__19854 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19854) : pred.call(null, G__19854);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var cljs$core$partition = null;
  var cljs$core$partition__2 = function(n, coll) {
    return cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var cljs$core$partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var cljs$core$partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, cljs$core$partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return cljs$core$partition__2.call(this, n, step);
      case 3:
        return cljs$core$partition__3.call(this, n, step, pad);
      case 4:
        return cljs$core$partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$partition.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition__2;
  cljs$core$partition.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition__3;
  cljs$core$partition.cljs$core$IFn$_invoke$arity$4 = cljs$core$partition__4;
  return cljs$core$partition;
}();
cljs.core.get_in = function() {
  var cljs$core$get_in = null;
  var cljs$core$get_in__2 = function(m, ks) {
    return cljs$core$get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var cljs$core$get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__19869 = m__$1;
          if (G__19869) {
            var bit__4783__auto__ = G__19869.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4783__auto__ || G__19869.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__19869.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__19869);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__19869);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__19870 = sentinel;
            var G__19871 = m__$2;
            var G__19872 = cljs.core.next(ks__$1);
            sentinel = G__19870;
            m__$1 = G__19871;
            ks__$1 = G__19872;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  cljs$core$get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$get_in__2.call(this, m, ks);
      case 3:
        return cljs$core$get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$get_in.cljs$core$IFn$_invoke$arity$2 = cljs$core$get_in__2;
  cljs$core$get_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$get_in__3;
  return cljs$core$get_in;
}();
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__19873, v) {
  var vec__19878 = p__19873;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19878, 0, null);
  var ks = cljs.core.nthnext(vec__19878, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var cljs$core$update_in = null;
  var cljs$core$update_in__3 = function(m, p__19879, f) {
    var vec__19917 = p__19879;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19917, 0, null);
    var ks = cljs.core.nthnext(vec__19917, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__19918 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19918) : f.call(null, G__19918);
      }());
    }
  };
  var cljs$core$update_in__4 = function(m, p__19880, f, a) {
    var vec__19919 = p__19880;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19919, 0, null);
    var ks = cljs.core.nthnext(vec__19919, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__19920 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__19921 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19920, G__19921) : f.call(null, G__19920, G__19921);
      }());
    }
  };
  var cljs$core$update_in__5 = function(m, p__19881, f, a, b) {
    var vec__19922 = p__19881;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19922, 0, null);
    var ks = cljs.core.nthnext(vec__19922, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__19923 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__19924 = a;
        var G__19925 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19923, G__19924, G__19925) : f.call(null, G__19923, G__19924, G__19925);
      }());
    }
  };
  var cljs$core$update_in__6 = function(m, p__19882, f, a, b, c) {
    var vec__19926 = p__19882;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19926, 0, null);
    var ks = cljs.core.nthnext(vec__19926, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__19927 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__19928 = a;
        var G__19929 = b;
        var G__19930 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19927, G__19928, G__19929, G__19930) : f.call(null, G__19927, G__19928, G__19929, G__19930);
      }());
    }
  };
  var cljs$core$update_in__7 = function() {
    var G__19932__delegate = function(m, p__19883, f, a, b, c, args) {
      var vec__19931 = p__19883;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19931, 0, null);
      var ks = cljs.core.nthnext(vec__19931, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs$core$update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__19932 = function(m, p__19883, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__19933__i = 0, G__19933__a = new Array(arguments.length - 6);
        while (G__19933__i < G__19933__a.length) {
          G__19933__a[G__19933__i] = arguments[G__19933__i + 6];
          ++G__19933__i;
        }
        args = new cljs.core.IndexedSeq(G__19933__a, 0);
      }
      return G__19932__delegate.call(this, m, p__19883, f, a, b, c, args);
    };
    G__19932.cljs$lang$maxFixedArity = 6;
    G__19932.cljs$lang$applyTo = function(arglist__19934) {
      var m = cljs.core.first(arglist__19934);
      arglist__19934 = cljs.core.next(arglist__19934);
      var p__19883 = cljs.core.first(arglist__19934);
      arglist__19934 = cljs.core.next(arglist__19934);
      var f = cljs.core.first(arglist__19934);
      arglist__19934 = cljs.core.next(arglist__19934);
      var a = cljs.core.first(arglist__19934);
      arglist__19934 = cljs.core.next(arglist__19934);
      var b = cljs.core.first(arglist__19934);
      arglist__19934 = cljs.core.next(arglist__19934);
      var c = cljs.core.first(arglist__19934);
      var args = cljs.core.rest(arglist__19934);
      return G__19932__delegate(m, p__19883, f, a, b, c, args);
    };
    G__19932.cljs$core$IFn$_invoke$arity$variadic = G__19932__delegate;
    return G__19932;
  }();
  cljs$core$update_in = function(m, p__19883, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return cljs$core$update_in__3.call(this, m, p__19883, f);
      case 4:
        return cljs$core$update_in__4.call(this, m, p__19883, f, a);
      case 5:
        return cljs$core$update_in__5.call(this, m, p__19883, f, a, b);
      case 6:
        return cljs$core$update_in__6.call(this, m, p__19883, f, a, b, c);
      default:
        var G__19935 = null;
        if (arguments.length > 6) {
          var G__19936__i = 0, G__19936__a = new Array(arguments.length - 6);
          while (G__19936__i < G__19936__a.length) {
            G__19936__a[G__19936__i] = arguments[G__19936__i + 6];
            ++G__19936__i;
          }
          G__19935 = new cljs.core.IndexedSeq(G__19936__a, 0);
        }
        return cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__19883, f, a, b, c, G__19935);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$update_in.cljs$lang$maxFixedArity = 6;
  cljs$core$update_in.cljs$lang$applyTo = cljs$core$update_in__7.cljs$lang$applyTo;
  cljs$core$update_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$update_in__3;
  cljs$core$update_in.cljs$core$IFn$_invoke$arity$4 = cljs$core$update_in__4;
  cljs$core$update_in.cljs$core$IFn$_invoke$arity$5 = cljs$core$update_in__5;
  cljs$core$update_in.cljs$core$IFn$_invoke$arity$6 = cljs$core$update_in__6;
  cljs$core$update_in.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$update_in;
}();
cljs.core.update = function() {
  var cljs$core$update = null;
  var cljs$core$update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19947 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19947) : f.call(null, G__19947);
    }());
  };
  var cljs$core$update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19948 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__19949 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19948, G__19949) : f.call(null, G__19948, G__19949);
    }());
  };
  var cljs$core$update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19950 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__19951 = x;
      var G__19952 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19950, G__19951, G__19952) : f.call(null, G__19950, G__19951, G__19952);
    }());
  };
  var cljs$core$update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19953 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__19954 = x;
      var G__19955 = y;
      var G__19956 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19953, G__19954, G__19955, G__19956) : f.call(null, G__19953, G__19954, G__19955, G__19956);
    }());
  };
  var cljs$core$update__7 = function() {
    var G__19957__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__19957 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__19958__i = 0, G__19958__a = new Array(arguments.length - 6);
        while (G__19958__i < G__19958__a.length) {
          G__19958__a[G__19958__i] = arguments[G__19958__i + 6];
          ++G__19958__i;
        }
        more = new cljs.core.IndexedSeq(G__19958__a, 0);
      }
      return G__19957__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__19957.cljs$lang$maxFixedArity = 6;
    G__19957.cljs$lang$applyTo = function(arglist__19959) {
      var m = cljs.core.first(arglist__19959);
      arglist__19959 = cljs.core.next(arglist__19959);
      var k = cljs.core.first(arglist__19959);
      arglist__19959 = cljs.core.next(arglist__19959);
      var f = cljs.core.first(arglist__19959);
      arglist__19959 = cljs.core.next(arglist__19959);
      var x = cljs.core.first(arglist__19959);
      arglist__19959 = cljs.core.next(arglist__19959);
      var y = cljs.core.first(arglist__19959);
      arglist__19959 = cljs.core.next(arglist__19959);
      var z = cljs.core.first(arglist__19959);
      var more = cljs.core.rest(arglist__19959);
      return G__19957__delegate(m, k, f, x, y, z, more);
    };
    G__19957.cljs$core$IFn$_invoke$arity$variadic = G__19957__delegate;
    return G__19957;
  }();
  cljs$core$update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return cljs$core$update__3.call(this, m, k, f);
      case 4:
        return cljs$core$update__4.call(this, m, k, f, x);
      case 5:
        return cljs$core$update__5.call(this, m, k, f, x, y);
      case 6:
        return cljs$core$update__6.call(this, m, k, f, x, y, z);
      default:
        var G__19960 = null;
        if (arguments.length > 6) {
          var G__19961__i = 0, G__19961__a = new Array(arguments.length - 6);
          while (G__19961__i < G__19961__a.length) {
            G__19961__a[G__19961__i] = arguments[G__19961__i + 6];
            ++G__19961__i;
          }
          G__19960 = new cljs.core.IndexedSeq(G__19961__a, 0);
        }
        return cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__19960);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$update.cljs$lang$maxFixedArity = 6;
  cljs$core$update.cljs$lang$applyTo = cljs$core$update__7.cljs$lang$applyTo;
  cljs$core$update.cljs$core$IFn$_invoke$arity$3 = cljs$core$update__3;
  cljs$core$update.cljs$core$IFn$_invoke$arity$4 = cljs$core$update__4;
  cljs$core$update.cljs$core$IFn$_invoke$arity$5 = cljs$core$update__5;
  cljs$core$update.cljs$core$IFn$_invoke$arity$6 = cljs$core$update__6;
  cljs$core$update.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__19962 = ll - 5;
      var G__19963 = r;
      ll = G__19962;
      ret = G__19963;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__19968 = cljs.core.pv_aget(node, 0);
      var G__19969 = level - 5;
      node = G__19968;
      level = G__19969;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__19970 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__19971 = level - 5;
        node = G__19970;
        level = G__19971;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__19981 = init__$2;
              var G__19982 = j + i;
              var G__19983 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19981, G__19982, G__19983) : f.call(null, G__19981, G__19982, G__19983);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__19994 = j + 1;
              var G__19995 = init__$3;
              j = G__19994;
              init__$2 = G__19995;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__19984 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19984) : cljs.core.deref.call(null, G__19984);
      } else {
        var G__19996 = i + len;
        var G__19997 = init__$2;
        i = G__19996;
        init__$1 = G__19997;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__19985 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__19985) : cljs.core.tv_editable_root.call(null, G__19985);
  }(), function() {
    var G__19986 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__19986) : cljs.core.tv_editable_tail.call(null, G__19986);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__19987 = init__$2;
              var G__19988 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19987, G__19988) : f.call(null, G__19987, G__19988);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__19998 = j + 1;
              var G__19999 = init__$3;
              j = G__19998;
              init__$2 = G__19999;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__19989 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19989) : cljs.core.deref.call(null, G__19989);
      } else {
        var G__20000 = i + len;
        var G__20001 = init__$2;
        i = G__20000;
        init__$1 = G__20001;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__19990 = coll__$1;
      var G__19991 = cljs.core.first_array_for_longvec(coll__$1);
      var G__19992 = 0;
      var G__19993 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19990, G__19991, G__19992, G__19993) : cljs.core.chunked_seq.call(null, G__19990, G__19991, G__19992, G__19993);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4994__auto___20002 = len;
    var i_20003 = 0;
    while (true) {
      if (i_20003 < n__4994__auto___20002) {
        new_tail[i_20003] = self__.tail[i_20003];
        var G__20004 = i_20003 + 1;
        i_20003 = G__20004;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__20005 = null;
  var G__20005__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__20005__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__20005 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20005__2.call(this, self__, k);
      case 3:
        return G__20005__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20005.cljs$core$IFn$_invoke$arity$2 = G__20005__2;
  G__20005.cljs$core$IFn$_invoke$arity$3 = G__20005__3;
  return G__20005;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args19980) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19980)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__20006 = i + 1;
        var G__20007 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__20006;
        out = G__20007;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function() {
  var cljs$core$vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var cljs$core$vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__20008__i = 0, G__20008__a = new Array(arguments.length - 0);
      while (G__20008__i < G__20008__a.length) {
        G__20008__a[G__20008__i] = arguments[G__20008__i + 0];
        ++G__20008__i;
      }
      args = new cljs.core.IndexedSeq(G__20008__a, 0);
    }
    return cljs$core$vector__delegate.call(this, args);
  };
  cljs$core$vector.cljs$lang$maxFixedArity = 0;
  cljs$core$vector.cljs$lang$applyTo = function(arglist__20009) {
    var args = cljs.core.seq(arglist__20009);
    return cljs$core$vector__delegate(args);
  };
  cljs$core$vector.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vector__delegate;
  return cljs$core$vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__20010 = self__.vec;
      var G__20011 = self__.node;
      var G__20012 = self__.i;
      var G__20013 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__20010, G__20011, G__20012, G__20013) : cljs.core.chunked_seq.call(null, G__20010, G__20011, G__20012, G__20013);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__20014 = self__.vec;
    var G__20015 = self__.i + self__.off;
    var G__20016 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__20014, G__20015, G__20016) : cljs.core.subvec.call(null, G__20014, G__20015, G__20016);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__20017 = self__.vec;
    var G__20018 = self__.i + self__.off;
    var G__20019 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__20017, G__20018, G__20019) : cljs.core.subvec.call(null, G__20017, G__20018, G__20019);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__20020 = self__.vec;
      var G__20021 = self__.node;
      var G__20022 = self__.i;
      var G__20023 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__20020, G__20021, G__20022, G__20023) : cljs.core.chunked_seq.call(null, G__20020, G__20021, G__20022, G__20023);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__20024 = self__.vec;
    var G__20025 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__20026 = end;
    var G__20027 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__20024, G__20025, G__20026, G__20027) : cljs.core.chunked_seq.call(null, G__20024, G__20025, G__20026, G__20027);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__20028 = self__.vec;
  var G__20029 = self__.node;
  var G__20030 = self__.i;
  var G__20031 = self__.off;
  var G__20032 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__20028, G__20029, G__20030, G__20031, G__20032) : cljs.core.chunked_seq.call(null, G__20028, G__20029, G__20030, G__20031, G__20032);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__20033 = self__.vec;
    var G__20034 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__20035 = end;
    var G__20036 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__20033, G__20034, G__20035, G__20036) : cljs.core.chunked_seq.call(null, G__20033, G__20034, G__20035, G__20036);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.chunked_seq = function() {
  var cljs$core$chunked_seq = null;
  var cljs$core$chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var cljs$core$chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var cljs$core$chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  cljs$core$chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return cljs$core$chunked_seq__3.call(this, vec, node, i);
      case 4:
        return cljs$core$chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return cljs$core$chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$chunked_seq__3;
  cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$chunked_seq__4;
  cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$5 = cljs$core$chunked_seq__5;
  return cljs$core$chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__20038 = init__$1;
        var G__20039 = j;
        var G__20040 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20038, G__20039, G__20040) : f.call(null, G__20038, G__20039, G__20040);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__20041 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20041) : cljs.core.deref.call(null, G__20041);
      } else {
        var G__20063 = i + 1;
        var G__20064 = j + 1;
        var G__20065 = init__$2;
        i = G__20063;
        j = G__20064;
        init__$1 = G__20065;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__20042 = self__.meta;
  var G__20043 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__20044 = self__.start;
  var G__20045 = function() {
    var x__4421__auto__ = self__.end;
    var y__4422__auto__ = v_pos + 1;
    return x__4421__auto__ > y__4422__auto__ ? x__4421__auto__ : y__4422__auto__;
  }();
  var G__20046 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__20042, G__20043, G__20044, G__20045, G__20046) : cljs.core.build_subvec.call(null, G__20042, G__20043, G__20044, G__20045, G__20046);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__20047 = self__.meta;
    var G__20048 = self__.v;
    var G__20049 = self__.start;
    var G__20050 = self__.end - 1;
    var G__20051 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__20047, G__20048, G__20049, G__20050, G__20051) : cljs.core.build_subvec.call(null, G__20047, G__20048, G__20049, G__20050, G__20051);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__20053 = meta__$1;
  var G__20054 = self__.v;
  var G__20055 = self__.start;
  var G__20056 = self__.end;
  var G__20057 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__20053, G__20054, G__20055, G__20056, G__20057) : cljs.core.build_subvec.call(null, G__20053, G__20054, G__20055, G__20056, G__20057);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__20058 = self__.meta;
  var G__20059 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__20060 = self__.start;
  var G__20061 = self__.end + 1;
  var G__20062 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__20058, G__20059, G__20060, G__20061, G__20062) : cljs.core.build_subvec.call(null, G__20058, G__20059, G__20060, G__20061, G__20062);
};
cljs.core.Subvec.prototype.call = function() {
  var G__20066 = null;
  var G__20066__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__20066__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__20066 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20066__2.call(this, self__, k);
      case 3:
        return G__20066__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20066.cljs$core$IFn$_invoke$arity$2 = G__20066__2;
  G__20066.cljs$core$IFn$_invoke$arity$3 = G__20066__3;
  return G__20066;
}();
cljs.core.Subvec.prototype.apply = function(self__, args20037) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20037)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__20067 = meta;
      var G__20068 = v.v;
      var G__20069 = v.start + start;
      var G__20070 = v.start + end;
      var G__20071 = __hash;
      meta = G__20067;
      v = G__20068;
      start = G__20069;
      end = G__20070;
      __hash = G__20071;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var cljs$core$subvec = null;
  var cljs$core$subvec__2 = function(v, start) {
    return cljs$core$subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var cljs$core$subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  cljs$core$subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return cljs$core$subvec__2.call(this, v, start);
      case 3:
        return cljs$core$subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$subvec.cljs$core$IFn$_invoke$arity$2 = cljs$core$subvec__2;
  cljs$core$subvec.cljs$core$IFn$_invoke$arity$3 = cljs$core$subvec__3;
  return cljs$core$subvec;
}();
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj20078 = {};
    return obj20078;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__20086 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__20087 = level - 5;
        node = G__20086;
        level = G__20087;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__20091 = null;
  var G__20091__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20091__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20091 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20091__2.call(this, self__, k);
      case 3:
        return G__20091__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20091.cljs$core$IFn$_invoke$arity$2 = G__20091__2;
  G__20091.cljs$core$IFn$_invoke$arity$3 = G__20091__3;
  return G__20091;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args20088) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20088)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4109__auto__ = self__.front;
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4109__auto__ = self__.rear;
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__20092 = i + incr;
        i = G__20092;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__20093 = i + 1;
      var G__20094 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__20093;
      out = G__20094;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = function() {
    var obj20098 = {};
    return obj20098;
  }();
  var l = ks.length;
  var i_20099 = 0;
  while (true) {
    if (i_20099 < l) {
      var k_20100 = ks[i_20099];
      new_obj[k_20100] = obj[k_20100];
      var G__20101 = i_20099 + 1;
      i_20099 = G__20101;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4097__auto__ = function() {
      var G__20105 = k;
      return goog.isString(G__20105);
    }();
    if (cljs.core.truth_(and__4097__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4097__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__20106 = init__$1;
        var G__20107 = k;
        var G__20108 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20106, G__20107, G__20108) : f.call(null, G__20106, G__20107, G__20108);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__20109 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20109) : cljs.core.deref.call(null, G__20109);
      } else {
        var G__20115 = cljs.core.rest(keys__$1);
        var G__20116 = init__$2;
        keys__$1 = G__20115;
        init__$1 = G__20116;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4097__auto__ = function() {
      var G__20111 = k;
      return goog.isString(G__20111);
    }();
    if (cljs.core.truth_(and__4097__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4097__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__20112 = k;
    return goog.isString(G__20112);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4097__auto__ = function() {
      var G__20114 = k;
      return goog.isString(G__20114);
    }();
    if (cljs.core.truth_(and__4097__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4097__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__20102_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20102_SHARP_, self__.strobj[p1__20102_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__20117 = null;
  var G__20117__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20117__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20117 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20117__2.call(this, self__, k);
      case 3:
        return G__20117__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20117.cljs$core$IFn$_invoke$arity$2 = G__20117__2;
  G__20117.cljs$core$IFn$_invoke$arity$3 = G__20117__3;
  return G__20117;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args20103) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20103)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj20119 = {};
  return obj20119;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__20120 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20120, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20120, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function cljs$core$array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__20121 = i + 2;
        i = G__20121;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function cljs$core$array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__20122 = i + 2;
        i = G__20122;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function cljs$core$array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__20123 = i + 2;
        i = G__20123;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function cljs$core$array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__20124 = i + 2;
        i = G__20124;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function cljs$core$array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__20125 = i + 2;
        i = G__20125;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__4109__auto__ = function() {
        var G__20129 = k;
        return goog.isString(G__20129);
      }();
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_20130 = 0;
  while (true) {
    if (i_20130 < l) {
      narr[i_20130] = arr[i_20130];
      var G__20131 = i_20130 + 1;
      i_20130 = G__20131;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20133 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__20133) : cljs.core.keys.call(null, G__20133);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20134 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__20134) : cljs.core.vals.call(null, G__20134);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20135 = cljs.core.seq(coll);
  var chunk__20136 = null;
  var count__20137 = 0;
  var i__20138 = 0;
  while (true) {
    if (i__20138 < count__20137) {
      var vec__20139 = chunk__20136.cljs$core$IIndexed$_nth$arity$2(null, i__20138);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20139, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20139, 1, null);
      var G__20140_20153 = v;
      var G__20141_20154 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20140_20153, G__20141_20154) : f.call(null, G__20140_20153, G__20141_20154);
      var G__20155 = seq__20135;
      var G__20156 = chunk__20136;
      var G__20157 = count__20137;
      var G__20158 = i__20138 + 1;
      seq__20135 = G__20155;
      chunk__20136 = G__20156;
      count__20137 = G__20157;
      i__20138 = G__20158;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20135);
      if (temp__4126__auto__) {
        var seq__20135__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20135__$1)) {
          var c__4894__auto__ = cljs.core.chunk_first(seq__20135__$1);
          var G__20159 = cljs.core.chunk_rest(seq__20135__$1);
          var G__20160 = c__4894__auto__;
          var G__20161 = cljs.core.count(c__4894__auto__);
          var G__20162 = 0;
          seq__20135 = G__20159;
          chunk__20136 = G__20160;
          count__20137 = G__20161;
          i__20138 = G__20162;
          continue;
        } else {
          var vec__20142 = cljs.core.first(seq__20135__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20142, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20142, 1, null);
          var G__20143_20163 = v;
          var G__20144_20164 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20143_20163, G__20144_20164) : f.call(null, G__20143_20163, G__20144_20164);
          var G__20165 = cljs.core.next(seq__20135__$1);
          var G__20166 = null;
          var G__20167 = 0;
          var G__20168 = 0;
          seq__20135 = G__20165;
          chunk__20136 = G__20166;
          count__20137 = G__20167;
          i__20138 = G__20168;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__20145 = init__$1;
        var G__20146 = self__.arr[i];
        var G__20147 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20145, G__20146, G__20147) : f.call(null, G__20145, G__20146, G__20147);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__20148 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20148) : cljs.core.deref.call(null, G__20148);
      } else {
        var G__20169 = i + 2;
        var G__20170 = init__$2;
        i = G__20169;
        init__$1 = G__20170;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__20149 = other;
    if (G__20149) {
      var bit__4776__auto__ = G__20149.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4776__auto__ || G__20149.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__20171 = i + 2;
              i = G__20171;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj20151 = {};
    return obj20151;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__20172 = s + 2;
            var G__20173 = d;
            s = G__20172;
            d = G__20173;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__20174 = s + 2;
            var G__20175 = d + 2;
            s = G__20174;
            d = G__20175;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__20152 = cljs.core.aclone(self__.arr);
        G__20152[idx + 1] = v;
        return G__20152;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__20176 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__20177 = cljs.core.next(es);
          ret = G__20176;
          es = G__20177;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__20178 = null;
  var G__20178__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20178__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20178 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20178__2.call(this, self__, k);
      case 3:
        return G__20178__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20178.cljs$core$IFn$_invoke$arity$2 = G__20178__2;
  G__20178.cljs$core$IFn$_invoke$arity$3 = G__20178__3;
  return G__20178;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args20132) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20132)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__20179 = i + 2;
        var G__20180 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__20179;
        ret = G__20180;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__20181_20189 = self__.arr;
      G__20181_20189.pop();
      G__20181_20189.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__20182 = self__.len;
          var G__20183 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__20182, G__20183) : cljs.core.array__GT_transient_hash_map.call(null, G__20182, G__20183);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__20184 = o;
      if (G__20184) {
        var bit__4783__auto__ = G__20184.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4783__auto__ || G__20184.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__20184.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__20184);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__20184);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__20185 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20185) : cljs.core.key.call(null, G__20185);
      }(), function() {
        var G__20186 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20186) : cljs.core.val.call(null, G__20186);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__20190 = cljs.core.next(es);
          var G__20191 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__20187 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20187) : cljs.core.key.call(null, G__20187);
          }(), function() {
            var G__20188 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20188) : cljs.core.val.call(null, G__20188);
          }());
          es = G__20190;
          tcoll__$2 = G__20191;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__20192 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__20193 = i + 2;
      out = G__20192;
      i = G__20193;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var cljs$core$clone_and_set = null;
  var cljs$core$clone_and_set__3 = function(arr, i, a) {
    var G__20196 = cljs.core.aclone(arr);
    G__20196[i] = a;
    return G__20196;
  };
  var cljs$core$clone_and_set__5 = function(arr, i, a, j, b) {
    var G__20197 = cljs.core.aclone(arr);
    G__20197[i] = a;
    G__20197[j] = b;
    return G__20197;
  };
  cljs$core$clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return cljs$core$clone_and_set__3.call(this, arr, i, a);
      case 5:
        return cljs$core$clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$3 = cljs$core$clone_and_set__3;
  cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$5 = cljs$core$clone_and_set__5;
  return cljs$core$clone_and_set;
}();
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var cljs$core$edit_and_set = null;
  var cljs$core$edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var cljs$core$edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  cljs$core$edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return cljs$core$edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return cljs$core$edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$4 = cljs$core$edit_and_set__4;
  cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$6 = cljs$core$edit_and_set__6;
  return cljs$core$edit_and_set;
}();
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__20202 = init__$1;
          var G__20203 = k;
          var G__20204 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20202, G__20203, G__20204) : f.call(null, G__20202, G__20203, G__20204);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__20205 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20205) : cljs.core.deref.call(null, G__20205);
      } else {
        var G__20206 = i + 2;
        var G__20207 = init__$2;
        i = G__20206;
        init__$1 = G__20207;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__20208 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__20208) : cljs.core.create_inode_seq.call(null, G__20208);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_20222 = 0;
        var j_20223 = 0;
        while (true) {
          if (i_20222 < 32) {
            if ((self__.bitmap >>> i_20222 & 1) === 0) {
              var G__20224 = i_20222 + 1;
              var G__20225 = j_20223;
              i_20222 = G__20224;
              j_20223 = G__20225;
              continue;
            } else {
              nodes[i_20222] = !(self__.arr[j_20223] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_20223]), self__.arr[j_20223], self__.arr[j_20223 + 1], added_leaf_QMARK_) : self__.arr[j_20223 + 1];
              var G__20226 = i_20222 + 1;
              var G__20227 = j_20223 + 2;
              i_20222 = G__20226;
              j_20223 = G__20227;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__20209 = edit__$1;
          var G__20210 = shift + 5;
          var G__20211 = key_or_nil;
          var G__20212 = val_or_node;
          var G__20213 = hash;
          var G__20214 = key;
          var G__20215 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__20209, G__20210, G__20211, G__20212, G__20213, G__20214, G__20215) : cljs.core.create_node.call(null, G__20209, G__20210, G__20211, G__20212, G__20213, G__20214, G__20215);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_20228 = 0;
      var j_20229 = 0;
      while (true) {
        if (i_20228 < 32) {
          if ((self__.bitmap >>> i_20228 & 1) === 0) {
            var G__20230 = i_20228 + 1;
            var G__20231 = j_20229;
            i_20228 = G__20230;
            j_20229 = G__20231;
            continue;
          } else {
            nodes[i_20228] = !(self__.arr[j_20229] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_20229]), self__.arr[j_20229], self__.arr[j_20229 + 1], added_leaf_QMARK_) : self__.arr[j_20229 + 1];
            var G__20232 = i_20228 + 1;
            var G__20233 = j_20229 + 2;
            i_20228 = G__20232;
            j_20229 = G__20233;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__20216 = shift + 5;
          var G__20217 = key_or_nil;
          var G__20218 = val_or_node;
          var G__20219 = hash;
          var G__20220 = key;
          var G__20221 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__20216, G__20217, G__20218, G__20219, G__20220, G__20221) : cljs.core.create_node.call(null, G__20216, G__20217, G__20218, G__20219, G__20220, G__20221);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__20234 = i + 1;
        var G__20235 = j + 2;
        var G__20236 = bitmap | 1 << i;
        i = G__20234;
        j = G__20235;
        bitmap = G__20236;
        continue;
      } else {
        var G__20237 = i + 1;
        var G__20238 = j;
        var G__20239 = bitmap;
        i = G__20237;
        j = G__20238;
        bitmap = G__20239;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__20240 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__20240) : cljs.core.create_array_node_seq.call(null, G__20240);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__20241 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20241) : cljs.core.deref.call(null, G__20241);
        } else {
          var G__20242 = i + 1;
          var G__20243 = init__$2;
          i = G__20242;
          init__$1 = G__20243;
          continue;
        }
      } else {
        var G__20244 = i + 1;
        var G__20245 = init__$1;
        i = G__20244;
        init__$1 = G__20245;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__20246 = i + 2;
        i = G__20246;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__20247 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__20247) : cljs.core.create_inode_seq.call(null, G__20247);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var cljs$core$create_node = null;
  var cljs$core$create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var cljs$core$create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  cljs$core$create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return cljs$core$create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return cljs$core$create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$create_node.cljs$core$IFn$_invoke$arity$6 = cljs$core$create_node__6;
  cljs$core$create_node.cljs$core$IFn$_invoke$arity$7 = cljs$core$create_node__7;
  return cljs$core$create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__20248 = self__.nodes;
    var G__20249 = self__.i + 2;
    var G__20250 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__20248, G__20249, G__20250) : cljs.core.create_inode_seq.call(null, G__20248, G__20249, G__20250);
  } else {
    var G__20251 = self__.nodes;
    var G__20252 = self__.i;
    var G__20253 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__20251, G__20252, G__20253) : cljs.core.create_inode_seq.call(null, G__20251, G__20252, G__20253);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.create_inode_seq = function() {
  var cljs$core$create_inode_seq = null;
  var cljs$core$create_inode_seq__1 = function(nodes) {
    return cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var cljs$core$create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__20257 = j + 2;
                j = G__20257;
                continue;
              }
            } else {
              var G__20258 = j + 2;
              j = G__20258;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  cljs$core$create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return cljs$core$create_inode_seq__1.call(this, nodes);
      case 3:
        return cljs$core$create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_inode_seq__1;
  cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$create_inode_seq__3;
  return cljs$core$create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__20259 = null;
  var G__20260 = self__.nodes;
  var G__20261 = self__.i;
  var G__20262 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__20259, G__20260, G__20261, G__20262) : cljs.core.create_array_node_seq.call(null, G__20259, G__20260, G__20261, G__20262);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.create_array_node_seq = function() {
  var cljs$core$create_array_node_seq = null;
  var cljs$core$create_array_node_seq__1 = function(nodes) {
    return cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var cljs$core$create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__20267 = j + 1;
              j = G__20267;
              continue;
            }
          } else {
            var G__20268 = j + 1;
            j = G__20268;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  cljs$core$create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return cljs$core$create_array_node_seq__1.call(this, meta);
      case 4:
        return cljs$core$create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_array_node_seq__1;
  cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$create_array_node_seq__4;
  return cljs$core$create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20270 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__20270) : cljs.core.keys.call(null, G__20270);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20271 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__20271) : cljs.core.vals.call(null, G__20271);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20272 = cljs.core.seq(coll);
  var chunk__20273 = null;
  var count__20274 = 0;
  var i__20275 = 0;
  while (true) {
    if (i__20275 < count__20274) {
      var vec__20276 = chunk__20273.cljs$core$IIndexed$_nth$arity$2(null, i__20275);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20276, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20276, 1, null);
      var G__20277_20288 = v;
      var G__20278_20289 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20277_20288, G__20278_20289) : f.call(null, G__20277_20288, G__20278_20289);
      var G__20290 = seq__20272;
      var G__20291 = chunk__20273;
      var G__20292 = count__20274;
      var G__20293 = i__20275 + 1;
      seq__20272 = G__20290;
      chunk__20273 = G__20291;
      count__20274 = G__20292;
      i__20275 = G__20293;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20272);
      if (temp__4126__auto__) {
        var seq__20272__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20272__$1)) {
          var c__4894__auto__ = cljs.core.chunk_first(seq__20272__$1);
          var G__20294 = cljs.core.chunk_rest(seq__20272__$1);
          var G__20295 = c__4894__auto__;
          var G__20296 = cljs.core.count(c__4894__auto__);
          var G__20297 = 0;
          seq__20272 = G__20294;
          chunk__20273 = G__20295;
          count__20274 = G__20296;
          i__20275 = G__20297;
          continue;
        } else {
          var vec__20279 = cljs.core.first(seq__20272__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20279, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20279, 1, null);
          var G__20280_20298 = v;
          var G__20281_20299 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20280_20298, G__20281_20299) : f.call(null, G__20280_20298, G__20281_20299);
          var G__20300 = cljs.core.next(seq__20272__$1);
          var G__20301 = null;
          var G__20302 = 0;
          var G__20303 = 0;
          seq__20272 = G__20300;
          chunk__20273 = G__20301;
          count__20274 = G__20302;
          i__20275 = G__20303;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__20282 = init;
    var G__20283 = null;
    var G__20284 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20282, G__20283, G__20284) : f.call(null, G__20282, G__20283, G__20284);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__20285 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20285) : cljs.core.deref.call(null, G__20285);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj20287 = {};
    return obj20287;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__20304 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__20305 = cljs.core.next(es);
          ret = G__20304;
          es = G__20305;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__20306 = null;
  var G__20306__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20306__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20306 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20306__2.call(this, self__, k);
      case 3:
        return G__20306__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20306.cljs$core$IFn$_invoke$arity$2 = G__20306__2;
  G__20306.cljs$core$IFn$_invoke$arity$3 = G__20306__3;
  return G__20306;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args20269) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20269)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__20307 = i + 2;
      var G__20308 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__20307;
      ret = G__20308;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__20309 = i + 1;
      var G__20310 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__20309;
      out = G__20310;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__20311 = o;
      if (G__20311) {
        var bit__4783__auto__ = G__20311.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4783__auto__ || G__20311.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__20311.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__20311);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__20311);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__20312 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20312) : cljs.core.key.call(null, G__20312);
      }(), function() {
        var G__20313 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20313) : cljs.core.val.call(null, G__20313);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__20316 = cljs.core.next(es);
          var G__20317 = tcoll__$1.assoc_BANG_(function() {
            var G__20314 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20314) : cljs.core.key.call(null, G__20314);
          }(), function() {
            var G__20315 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20315) : cljs.core.val.call(null, G__20315);
          }());
          es = G__20316;
          tcoll__$1 = G__20317;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__20318 = ascending_QMARK_ ? t.left : t.right;
      var G__20319 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__20318;
      stack__$1 = G__20319;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__20332 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20332) : cljs.core.deref.call(null, G__20332);
  } else {
    var init__$2 = function() {
      var G__20333 = init__$1;
      var G__20334 = node.key;
      var G__20335 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20333, G__20334, G__20335) : f.call(null, G__20333, G__20334, G__20335);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__20336 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20336) : cljs.core.deref.call(null, G__20336);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__20337 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20337) : cljs.core.deref.call(null, G__20337);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__20339 = null;
  var G__20339__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20339__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20339 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20339__2.call(this, self__, k);
      case 3:
        return G__20339__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20339.cljs$core$IFn$_invoke$arity$2 = G__20339__2;
  G__20339.cljs$core$IFn$_invoke$arity$3 = G__20339__3;
  return G__20339;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args20338) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20338)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__20341 = null;
  var G__20341__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20341__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20341 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20341__2.call(this, self__, k);
      case 3:
        return G__20341__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20341.cljs$core$IFn$_invoke$arity$2 = G__20341__2;
  G__20341.cljs$core$IFn$_invoke$arity$3 = G__20341__3;
  return G__20341;
}();
cljs.core.RedNode.prototype.apply = function(self__, args20340) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20340)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__20354 = k;
      var G__20355 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20354, G__20355) : comp.call(null, G__20354, G__20355);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__20374 = k;
      var G__20375 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20374, G__20375) : comp.call(null, G__20374, G__20375);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__20386 = k;
    var G__20387 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20386, G__20387) : comp.call(null, G__20386, G__20387);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20389 = cljs.core.seq(coll);
  var chunk__20390 = null;
  var count__20391 = 0;
  var i__20392 = 0;
  while (true) {
    if (i__20392 < count__20391) {
      var vec__20393 = chunk__20390.cljs$core$IIndexed$_nth$arity$2(null, i__20392);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20393, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20393, 1, null);
      var G__20394_20406 = v;
      var G__20395_20407 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20394_20406, G__20395_20407) : f.call(null, G__20394_20406, G__20395_20407);
      var G__20408 = seq__20389;
      var G__20409 = chunk__20390;
      var G__20410 = count__20391;
      var G__20411 = i__20392 + 1;
      seq__20389 = G__20408;
      chunk__20390 = G__20409;
      count__20391 = G__20410;
      i__20392 = G__20411;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20389);
      if (temp__4126__auto__) {
        var seq__20389__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20389__$1)) {
          var c__4894__auto__ = cljs.core.chunk_first(seq__20389__$1);
          var G__20412 = cljs.core.chunk_rest(seq__20389__$1);
          var G__20413 = c__4894__auto__;
          var G__20414 = cljs.core.count(c__4894__auto__);
          var G__20415 = 0;
          seq__20389 = G__20412;
          chunk__20390 = G__20413;
          count__20391 = G__20414;
          i__20392 = G__20415;
          continue;
        } else {
          var vec__20396 = cljs.core.first(seq__20389__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20396, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20396, 1, null);
          var G__20397_20416 = v;
          var G__20398_20417 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20397_20416, G__20398_20417) : f.call(null, G__20397_20416, G__20398_20417);
          var G__20418 = cljs.core.next(seq__20389__$1);
          var G__20419 = null;
          var G__20420 = 0;
          var G__20421 = 0;
          seq__20389 = G__20418;
          chunk__20390 = G__20419;
          count__20391 = G__20420;
          i__20392 = G__20421;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20399 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__20399) : cljs.core.keys.call(null, G__20399);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20400 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__20400) : cljs.core.vals.call(null, G__20400);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__20401 = k;
        var G__20402 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__20401, G__20402) : self__.comp.call(null, G__20401, G__20402);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__20422 = t.left;
          t = G__20422;
          continue;
        } else {
          var G__20423 = t.right;
          t = G__20423;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__20424 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__20425 = cljs.core.next(es);
          ret = G__20424;
          es = G__20425;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__20426 = null;
  var G__20426__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20426__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20426 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20426__2.call(this, self__, k);
      case 3:
        return G__20426__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20426.cljs$core$IFn$_invoke$arity$2 = G__20426__2;
  G__20426.cljs$core$IFn$_invoke$arity$3 = G__20426__3;
  return G__20426;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args20388) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20388)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__20403 = k;
          var G__20404 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__20403, G__20404) : self__.comp.call(null, G__20403, G__20404);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__20427 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__20428 = t.left;
              stack = G__20427;
              t = G__20428;
              continue;
            } else {
              var G__20429 = stack;
              var G__20430 = t.right;
              stack = G__20429;
              t = G__20430;
              continue;
            }
          } else {
            if (c > 0) {
              var G__20431 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__20432 = t.right;
              stack = G__20431;
              t = G__20432;
              continue;
            } else {
              var G__20433 = stack;
              var G__20434 = t.left;
              stack = G__20433;
              t = G__20434;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__20405 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20405) : cljs.core.key.call(null, G__20405);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.hash_map = function() {
  var cljs$core$hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__20435 = cljs.core.nnext(in$);
        var G__20436 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__20435;
        out = G__20436;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var cljs$core$hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__20437__i = 0, G__20437__a = new Array(arguments.length - 0);
      while (G__20437__i < G__20437__a.length) {
        G__20437__a[G__20437__i] = arguments[G__20437__i + 0];
        ++G__20437__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__20437__a, 0);
    }
    return cljs$core$hash_map__delegate.call(this, keyvals);
  };
  cljs$core$hash_map.cljs$lang$maxFixedArity = 0;
  cljs$core$hash_map.cljs$lang$applyTo = function(arglist__20438) {
    var keyvals = cljs.core.seq(arglist__20438);
    return cljs$core$hash_map__delegate(keyvals);
  };
  cljs$core$hash_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_map__delegate;
  return cljs$core$hash_map;
}();
cljs.core.array_map = function() {
  var cljs$core$array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var cljs$core$array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__20439__i = 0, G__20439__a = new Array(arguments.length - 0);
      while (G__20439__i < G__20439__a.length) {
        G__20439__a[G__20439__i] = arguments[G__20439__i + 0];
        ++G__20439__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__20439__a, 0);
    }
    return cljs$core$array_map__delegate.call(this, keyvals);
  };
  cljs$core$array_map.cljs$lang$maxFixedArity = 0;
  cljs$core$array_map.cljs$lang$applyTo = function(arglist__20440) {
    var keyvals = cljs.core.seq(arglist__20440);
    return cljs$core$array_map__delegate(keyvals);
  };
  cljs$core$array_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$array_map__delegate;
  return cljs$core$array_map;
}();
cljs.core.obj_map = function() {
  var cljs$core$obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj20444 = {};
      return obj20444;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__20445 = cljs.core.nnext(kvs);
        kvs = G__20445;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var cljs$core$obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__20446__i = 0, G__20446__a = new Array(arguments.length - 0);
      while (G__20446__i < G__20446__a.length) {
        G__20446__a[G__20446__i] = arguments[G__20446__i + 0];
        ++G__20446__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__20446__a, 0);
    }
    return cljs$core$obj_map__delegate.call(this, keyvals);
  };
  cljs$core$obj_map.cljs$lang$maxFixedArity = 0;
  cljs$core$obj_map.cljs$lang$applyTo = function(arglist__20447) {
    var keyvals = cljs.core.seq(arglist__20447);
    return cljs$core$obj_map__delegate(keyvals);
  };
  cljs$core$obj_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$obj_map__delegate;
  return cljs$core$obj_map;
}();
cljs.core.sorted_map = function() {
  var cljs$core$sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__20448 = cljs.core.nnext(in$);
        var G__20449 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__20448;
        out = G__20449;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var cljs$core$sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__20450__i = 0, G__20450__a = new Array(arguments.length - 0);
      while (G__20450__i < G__20450__a.length) {
        G__20450__a[G__20450__i] = arguments[G__20450__i + 0];
        ++G__20450__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__20450__a, 0);
    }
    return cljs$core$sorted_map__delegate.call(this, keyvals);
  };
  cljs$core$sorted_map.cljs$lang$maxFixedArity = 0;
  cljs$core$sorted_map.cljs$lang$applyTo = function(arglist__20451) {
    var keyvals = cljs.core.seq(arglist__20451);
    return cljs$core$sorted_map__delegate(keyvals);
  };
  cljs$core$sorted_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map__delegate;
  return cljs$core$sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var cljs$core$sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__20452 = cljs.core.nnext(in$);
        var G__20453 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__20452;
        out = G__20453;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var cljs$core$sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__20454__i = 0, G__20454__a = new Array(arguments.length - 1);
      while (G__20454__i < G__20454__a.length) {
        G__20454__a[G__20454__i] = arguments[G__20454__i + 1];
        ++G__20454__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__20454__a, 0);
    }
    return cljs$core$sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  cljs$core$sorted_map_by.cljs$lang$maxFixedArity = 1;
  cljs$core$sorted_map_by.cljs$lang$applyTo = function(arglist__20455) {
    var comparator = cljs.core.first(arglist__20455);
    var keyvals = cljs.core.rest(arglist__20455);
    return cljs$core$sorted_map_by__delegate(comparator, keyvals);
  };
  cljs$core$sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map_by__delegate;
  return cljs$core$sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20456 = self__.mseq;
    if (G__20456) {
      var bit__4783__auto__ = G__20456.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4783__auto__ || G__20456.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20456.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20456);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20456);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20457 = self__.mseq;
    if (G__20457) {
      var bit__4783__auto__ = G__20457.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4783__auto__ || G__20457.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20457.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20457);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20457);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20458 = self__.mseq;
    if (G__20458) {
      var bit__4783__auto__ = G__20458.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4783__auto__ || G__20458.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20458.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20458);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20458);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20459 = self__.mseq;
    if (G__20459) {
      var bit__4783__auto__ = G__20459.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4783__auto__ || G__20459.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20459.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20459);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20459);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var cljs$core$merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__20460_SHARP_, p2__20461_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__4109__auto__ = p1__20460_SHARP_;
          if (cljs.core.truth_(or__4109__auto__)) {
            return or__4109__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__20461_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var cljs$core$merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__20462__i = 0, G__20462__a = new Array(arguments.length - 0);
      while (G__20462__i < G__20462__a.length) {
        G__20462__a[G__20462__i] = arguments[G__20462__i + 0];
        ++G__20462__i;
      }
      maps = new cljs.core.IndexedSeq(G__20462__a, 0);
    }
    return cljs$core$merge__delegate.call(this, maps);
  };
  cljs$core$merge.cljs$lang$maxFixedArity = 0;
  cljs$core$merge.cljs$lang$applyTo = function(arglist__20463) {
    var maps = cljs.core.seq(arglist__20463);
    return cljs$core$merge__delegate(maps);
  };
  cljs$core$merge.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge__delegate;
  return cljs$core$merge;
}();
cljs.core.merge_with = function() {
  var cljs$core$merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__20466 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__20467 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20466, G__20467) : f.call(null, G__20466, G__20467);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__4109__auto__ = m1;
            if (cljs.core.truth_(or__4109__auto__)) {
              return or__4109__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var cljs$core$merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__20468__i = 0, G__20468__a = new Array(arguments.length - 1);
      while (G__20468__i < G__20468__a.length) {
        G__20468__a[G__20468__i] = arguments[G__20468__i + 1];
        ++G__20468__i;
      }
      maps = new cljs.core.IndexedSeq(G__20468__a, 0);
    }
    return cljs$core$merge_with__delegate.call(this, f, maps);
  };
  cljs$core$merge_with.cljs$lang$maxFixedArity = 1;
  cljs$core$merge_with.cljs$lang$applyTo = function(arglist__20469) {
    var f = cljs.core.first(arglist__20469);
    var maps = cljs.core.rest(arglist__20469);
    return cljs$core$merge_with__delegate(f, maps);
  };
  cljs$core$merge_with.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge_with__delegate;
  return cljs$core$merge_with;
}();
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__20470 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__20471 = cljs.core.next(keys);
      ret = G__20470;
      keys = G__20471;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20474 = cljs.core.seq(coll);
  var chunk__20475 = null;
  var count__20476 = 0;
  var i__20477 = 0;
  while (true) {
    if (i__20477 < count__20476) {
      var vec__20478 = chunk__20475.cljs$core$IIndexed$_nth$arity$2(null, i__20477);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20478, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20478, 1, null);
      var G__20479_20484 = v;
      var G__20480_20485 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20479_20484, G__20480_20485) : f.call(null, G__20479_20484, G__20480_20485);
      var G__20486 = seq__20474;
      var G__20487 = chunk__20475;
      var G__20488 = count__20476;
      var G__20489 = i__20477 + 1;
      seq__20474 = G__20486;
      chunk__20475 = G__20487;
      count__20476 = G__20488;
      i__20477 = G__20489;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20474);
      if (temp__4126__auto__) {
        var seq__20474__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20474__$1)) {
          var c__4894__auto__ = cljs.core.chunk_first(seq__20474__$1);
          var G__20490 = cljs.core.chunk_rest(seq__20474__$1);
          var G__20491 = c__4894__auto__;
          var G__20492 = cljs.core.count(c__4894__auto__);
          var G__20493 = 0;
          seq__20474 = G__20490;
          chunk__20475 = G__20491;
          count__20476 = G__20492;
          i__20477 = G__20493;
          continue;
        } else {
          var vec__20481 = cljs.core.first(seq__20474__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20481, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20481, 1, null);
          var G__20482_20494 = v;
          var G__20483_20495 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20482_20494, G__20483_20495) : f.call(null, G__20482_20494, G__20483_20495);
          var G__20496 = cljs.core.next(seq__20474__$1);
          var G__20497 = null;
          var G__20498 = 0;
          var G__20499 = 0;
          seq__20474 = G__20496;
          chunk__20475 = G__20497;
          count__20476 = G__20498;
          i__20477 = G__20499;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__20472_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__20472_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__20500 = null;
  var G__20500__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20500__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20500 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20500__2.call(this, self__, k);
      case 3:
        return G__20500__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20500.cljs$core$IFn$_invoke$arity$2 = G__20500__2;
  G__20500.cljs$core$IFn$_invoke$arity$3 = G__20500__3;
  return G__20500;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args20473) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20473)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__20501 = i + 1;
        var G__20502 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__20501;
        out = G__20502;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__20503 = i + 1;
        var G__20504 = cljs.core._conj_BANG_(out, items[i]);
        i = G__20503;
        out = G__20504;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__20506 = null;
  var G__20506__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__20506__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__20506 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20506__2.call(this, self__, k);
      case 3:
        return G__20506__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20506.cljs$core$IFn$_invoke$arity$2 = G__20506__2;
  G__20506.cljs$core$IFn$_invoke$arity$3 = G__20506__3;
  return G__20506;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args20505) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20505)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20509 = cljs.core.seq(coll);
  var chunk__20510 = null;
  var count__20511 = 0;
  var i__20512 = 0;
  while (true) {
    if (i__20512 < count__20511) {
      var vec__20513 = chunk__20510.cljs$core$IIndexed$_nth$arity$2(null, i__20512);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20513, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20513, 1, null);
      var G__20514_20519 = v;
      var G__20515_20520 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20514_20519, G__20515_20520) : f.call(null, G__20514_20519, G__20515_20520);
      var G__20521 = seq__20509;
      var G__20522 = chunk__20510;
      var G__20523 = count__20511;
      var G__20524 = i__20512 + 1;
      seq__20509 = G__20521;
      chunk__20510 = G__20522;
      count__20511 = G__20523;
      i__20512 = G__20524;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20509);
      if (temp__4126__auto__) {
        var seq__20509__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20509__$1)) {
          var c__4894__auto__ = cljs.core.chunk_first(seq__20509__$1);
          var G__20525 = cljs.core.chunk_rest(seq__20509__$1);
          var G__20526 = c__4894__auto__;
          var G__20527 = cljs.core.count(c__4894__auto__);
          var G__20528 = 0;
          seq__20509 = G__20525;
          chunk__20510 = G__20526;
          count__20511 = G__20527;
          i__20512 = G__20528;
          continue;
        } else {
          var vec__20516 = cljs.core.first(seq__20509__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20516, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20516, 1, null);
          var G__20517_20529 = v;
          var G__20518_20530 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20517_20529, G__20518_20530) : f.call(null, G__20517_20529, G__20518_20530);
          var G__20531 = cljs.core.next(seq__20509__$1);
          var G__20532 = null;
          var G__20533 = 0;
          var G__20534 = 0;
          seq__20509 = G__20531;
          chunk__20510 = G__20532;
          count__20511 = G__20533;
          i__20512 = G__20534;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__20507_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__20507_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__20535 = null;
  var G__20535__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20535__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20535 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20535__2.call(this, self__, k);
      case 3:
        return G__20535__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20535.cljs$core$IFn$_invoke$arity$2 = G__20535__2;
  G__20535.cljs$core$IFn$_invoke$arity$3 = G__20535__3;
  return G__20535;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args20508) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20508)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4988__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4988__auto__.length) {
        var G__20536 = i + 1;
        var G__20537 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__20536;
        res = G__20537;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__20538 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__20539 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__20538;
          out = G__20539;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var cljs$core$hash_set = null;
  var cljs$core$hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var cljs$core$hash_set__1 = function() {
    var G__20540__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__20540 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__20541__i = 0, G__20541__a = new Array(arguments.length - 0);
        while (G__20541__i < G__20541__a.length) {
          G__20541__a[G__20541__i] = arguments[G__20541__i + 0];
          ++G__20541__i;
        }
        keys = new cljs.core.IndexedSeq(G__20541__a, 0);
      }
      return G__20540__delegate.call(this, keys);
    };
    G__20540.cljs$lang$maxFixedArity = 0;
    G__20540.cljs$lang$applyTo = function(arglist__20542) {
      var keys = cljs.core.seq(arglist__20542);
      return G__20540__delegate(keys);
    };
    G__20540.cljs$core$IFn$_invoke$arity$variadic = G__20540__delegate;
    return G__20540;
  }();
  cljs$core$hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$hash_set__0.call(this);
      default:
        var G__20543 = null;
        if (arguments.length > 0) {
          var G__20544__i = 0, G__20544__a = new Array(arguments.length - 0);
          while (G__20544__i < G__20544__a.length) {
            G__20544__a[G__20544__i] = arguments[G__20544__i + 0];
            ++G__20544__i;
          }
          G__20543 = new cljs.core.IndexedSeq(G__20544__a, 0);
        }
        return cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__20543);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$hash_set.cljs$lang$maxFixedArity = 0;
  cljs$core$hash_set.cljs$lang$applyTo = cljs$core$hash_set__1.cljs$lang$applyTo;
  cljs$core$hash_set.cljs$core$IFn$_invoke$arity$0 = cljs$core$hash_set__0;
  cljs$core$hash_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$hash_set;
}();
cljs.core.sorted_set = function() {
  var cljs$core$sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var cljs$core$sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__20545__i = 0, G__20545__a = new Array(arguments.length - 0);
      while (G__20545__i < G__20545__a.length) {
        G__20545__a[G__20545__i] = arguments[G__20545__i + 0];
        ++G__20545__i;
      }
      keys = new cljs.core.IndexedSeq(G__20545__a, 0);
    }
    return cljs$core$sorted_set__delegate.call(this, keys);
  };
  cljs$core$sorted_set.cljs$lang$maxFixedArity = 0;
  cljs$core$sorted_set.cljs$lang$applyTo = function(arglist__20546) {
    var keys = cljs.core.seq(arglist__20546);
    return cljs$core$sorted_set__delegate(keys);
  };
  cljs$core$sorted_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set__delegate;
  return cljs$core$sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var cljs$core$sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var cljs$core$sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__20547__i = 0, G__20547__a = new Array(arguments.length - 1);
      while (G__20547__i < G__20547__a.length) {
        G__20547__a[G__20547__i] = arguments[G__20547__i + 1];
        ++G__20547__i;
      }
      keys = new cljs.core.IndexedSeq(G__20547__a, 0);
    }
    return cljs$core$sorted_set_by__delegate.call(this, comparator, keys);
  };
  cljs$core$sorted_set_by.cljs$lang$maxFixedArity = 1;
  cljs$core$sorted_set_by.cljs$lang$applyTo = function(arglist__20548) {
    var comparator = cljs.core.first(arglist__20548);
    var keys = cljs.core.rest(arglist__20548);
    return cljs$core$sorted_set_by__delegate(comparator, keys);
  };
  cljs$core$sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set_by__delegate;
  return cljs$core$sorted_set_by;
}();
cljs.core.replace = function() {
  var cljs$core$replace = null;
  var cljs$core$replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__20549_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__20549_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__20549_SHARP_;
      }
    });
  };
  var cljs$core$replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__20550_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__20550_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__20550_SHARP_;
        }
      }, coll);
    }
  };
  cljs$core$replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$replace__1.call(this, smap);
      case 2:
        return cljs$core$replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$replace.cljs$core$IFn$_invoke$arity$1 = cljs$core$replace__1;
  cljs$core$replace.cljs$core$IFn$_invoke$arity$2 = cljs$core$replace__2;
  return cljs$core$replace;
}();
cljs.core.distinct = function() {
  var cljs$core$distinct = null;
  var cljs$core$distinct__0 = function() {
    return function(rf) {
      var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
      return function(seen) {
        return function() {
          var G__20571 = null;
          var G__20571__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__20571__1 = function(result) {
            var G__20561 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20561) : rf.call(null, G__20561);
          };
          var G__20571__2 = function(result, input) {
            if (cljs.core.contains_QMARK_(function() {
              var G__20562 = seen;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20562) : cljs.core.deref.call(null, G__20562);
            }(), input)) {
              return result;
            } else {
              seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
              var G__20563 = result;
              var G__20564 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20563, G__20564) : rf.call(null, G__20563, G__20564);
            }
          };
          G__20571 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20571__0.call(this);
              case 1:
                return G__20571__1.call(this, result);
              case 2:
                return G__20571__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20571.cljs$core$IFn$_invoke$arity$0 = G__20571__0;
          G__20571.cljs$core$IFn$_invoke$arity$1 = G__20571__1;
          G__20571.cljs$core$IFn$_invoke$arity$2 = G__20571__2;
          return G__20571;
        }();
      }(seen);
    };
  };
  var cljs$core$distinct__1 = function(coll) {
    var step = function cljs$core$distinct_$_step(xs, seen) {
      return new cljs.core.LazySeq(null, function() {
        return function(p__20569, seen__$1) {
          while (true) {
            var vec__20570 = p__20569;
            var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20570, 0, null);
            var xs__$1 = vec__20570;
            var temp__4126__auto__ = cljs.core.seq(xs__$1);
            if (temp__4126__auto__) {
              var s = temp__4126__auto__;
              if (cljs.core.contains_QMARK_(seen__$1, f)) {
                var G__20572 = cljs.core.rest(s);
                var G__20573 = seen__$1;
                p__20569 = G__20572;
                seen__$1 = G__20573;
                continue;
              } else {
                return cljs.core.cons(f, cljs$core$distinct_$_step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
              }
            } else {
              return null;
            }
            break;
          }
        }.call(null, xs, seen);
      }, null, null);
    };
    return step(coll, cljs.core.PersistentHashSet.EMPTY);
  };
  cljs$core$distinct = function(coll) {
    switch(arguments.length) {
      case 0:
        return cljs$core$distinct__0.call(this);
      case 1:
        return cljs$core$distinct__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$distinct.cljs$core$IFn$_invoke$arity$0 = cljs$core$distinct__0;
  cljs$core$distinct.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct__1;
  return cljs$core$distinct;
}();
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__20574 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__20575 = cljs.core.next(s__$1);
      ret = G__20574;
      s__$1 = G__20575;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (function() {
    var G__20577 = x;
    if (G__20577) {
      var bit__4776__auto__ = G__20577.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4776__auto__ || G__20577.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__20578 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__20579 = cljs.core.next(ks);
      var G__20580 = cljs.core.next(vs);
      map = G__20578;
      ks = G__20579;
      vs = G__20580;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var cljs$core$max_key = null;
  var cljs$core$max_key__2 = function(k, x) {
    return x;
  };
  var cljs$core$max_key__3 = function(k, x, y) {
    if (function() {
      var G__20591 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__20591) : k.call(null, G__20591);
    }() > function() {
      var G__20592 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__20592) : k.call(null, G__20592);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var cljs$core$max_key__4 = function() {
    var G__20593__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__20581_SHARP_, p2__20582_SHARP_) {
        return cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k, p1__20581_SHARP_, p2__20582_SHARP_);
      }, cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__20593 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__20594__i = 0, G__20594__a = new Array(arguments.length - 3);
        while (G__20594__i < G__20594__a.length) {
          G__20594__a[G__20594__i] = arguments[G__20594__i + 3];
          ++G__20594__i;
        }
        more = new cljs.core.IndexedSeq(G__20594__a, 0);
      }
      return G__20593__delegate.call(this, k, x, y, more);
    };
    G__20593.cljs$lang$maxFixedArity = 3;
    G__20593.cljs$lang$applyTo = function(arglist__20595) {
      var k = cljs.core.first(arglist__20595);
      arglist__20595 = cljs.core.next(arglist__20595);
      var x = cljs.core.first(arglist__20595);
      arglist__20595 = cljs.core.next(arglist__20595);
      var y = cljs.core.first(arglist__20595);
      var more = cljs.core.rest(arglist__20595);
      return G__20593__delegate(k, x, y, more);
    };
    G__20593.cljs$core$IFn$_invoke$arity$variadic = G__20593__delegate;
    return G__20593;
  }();
  cljs$core$max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$max_key__2.call(this, k, x);
      case 3:
        return cljs$core$max_key__3.call(this, k, x, y);
      default:
        var G__20596 = null;
        if (arguments.length > 3) {
          var G__20597__i = 0, G__20597__a = new Array(arguments.length - 3);
          while (G__20597__i < G__20597__a.length) {
            G__20597__a[G__20597__i] = arguments[G__20597__i + 3];
            ++G__20597__i;
          }
          G__20596 = new cljs.core.IndexedSeq(G__20597__a, 0);
        }
        return cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__20596);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$max_key.cljs$lang$maxFixedArity = 3;
  cljs$core$max_key.cljs$lang$applyTo = cljs$core$max_key__4.cljs$lang$applyTo;
  cljs$core$max_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$max_key__2;
  cljs$core$max_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$max_key__3;
  cljs$core$max_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$max_key;
}();
cljs.core.min_key = function() {
  var cljs$core$min_key = null;
  var cljs$core$min_key__2 = function(k, x) {
    return x;
  };
  var cljs$core$min_key__3 = function(k, x, y) {
    if (function() {
      var G__20608 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__20608) : k.call(null, G__20608);
    }() < function() {
      var G__20609 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__20609) : k.call(null, G__20609);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var cljs$core$min_key__4 = function() {
    var G__20610__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__20598_SHARP_, p2__20599_SHARP_) {
        return cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k, p1__20598_SHARP_, p2__20599_SHARP_);
      }, cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__20610 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__20611__i = 0, G__20611__a = new Array(arguments.length - 3);
        while (G__20611__i < G__20611__a.length) {
          G__20611__a[G__20611__i] = arguments[G__20611__i + 3];
          ++G__20611__i;
        }
        more = new cljs.core.IndexedSeq(G__20611__a, 0);
      }
      return G__20610__delegate.call(this, k, x, y, more);
    };
    G__20610.cljs$lang$maxFixedArity = 3;
    G__20610.cljs$lang$applyTo = function(arglist__20612) {
      var k = cljs.core.first(arglist__20612);
      arglist__20612 = cljs.core.next(arglist__20612);
      var x = cljs.core.first(arglist__20612);
      arglist__20612 = cljs.core.next(arglist__20612);
      var y = cljs.core.first(arglist__20612);
      var more = cljs.core.rest(arglist__20612);
      return G__20610__delegate(k, x, y, more);
    };
    G__20610.cljs$core$IFn$_invoke$arity$variadic = G__20610__delegate;
    return G__20610;
  }();
  cljs$core$min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$min_key__2.call(this, k, x);
      case 3:
        return cljs$core$min_key__3.call(this, k, x, y);
      default:
        var G__20613 = null;
        if (arguments.length > 3) {
          var G__20614__i = 0, G__20614__a = new Array(arguments.length - 3);
          while (G__20614__i < G__20614__a.length) {
            G__20614__a[G__20614__i] = arguments[G__20614__i + 3];
            ++G__20614__i;
          }
          G__20613 = new cljs.core.IndexedSeq(G__20614__a, 0);
        }
        return cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__20613);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$min_key.cljs$lang$maxFixedArity = 3;
  cljs$core$min_key.cljs$lang$applyTo = cljs$core$min_key__4.cljs$lang$applyTo;
  cljs$core$min_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$min_key__2;
  cljs$core$min_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$min_key__3;
  cljs$core$min_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var cljs$core$partition_all = null;
  var cljs$core$partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__20631 = null;
          var G__20631__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__20631__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__20626 = result;
                var G__20627 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20626, G__20627) : rf.call(null, G__20626, G__20627);
              }());
            }();
            var G__20628 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20628) : rf.call(null, G__20628);
          };
          var G__20631__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__20629 = result;
              var G__20630 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20629, G__20630) : rf.call(null, G__20629, G__20630);
            } else {
              return result;
            }
          };
          G__20631 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20631__0.call(this);
              case 1:
                return G__20631__1.call(this, result);
              case 2:
                return G__20631__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20631.cljs$core$IFn$_invoke$arity$0 = G__20631__0;
          G__20631.cljs$core$IFn$_invoke$arity$1 = G__20631__1;
          G__20631.cljs$core$IFn$_invoke$arity$2 = G__20631__2;
          return G__20631;
        }();
      }(a);
    };
  };
  var cljs$core$partition_all__2 = function(n, coll) {
    return cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var cljs$core$partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$partition_all__1.call(this, n);
      case 2:
        return cljs$core$partition_all__2.call(this, n, step);
      case 3:
        return cljs$core$partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$partition_all.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_all__1;
  cljs$core$partition_all.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_all__2;
  cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition_all__3;
  return cljs$core$partition_all;
}();
cljs.core.take_while = function() {
  var cljs$core$take_while = null;
  var cljs$core$take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__20644 = null;
        var G__20644__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20644__1 = function(result) {
          var G__20639 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20639) : rf.call(null, G__20639);
        };
        var G__20644__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__20640 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20640) : pred.call(null, G__20640);
          }())) {
            var G__20641 = result;
            var G__20642 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20641, G__20642) : rf.call(null, G__20641, G__20642);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__20644 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20644__0.call(this);
            case 1:
              return G__20644__1.call(this, result);
            case 2:
              return G__20644__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20644.cljs$core$IFn$_invoke$arity$0 = G__20644__0;
        G__20644.cljs$core$IFn$_invoke$arity$1 = G__20644__1;
        G__20644.cljs$core$IFn$_invoke$arity$2 = G__20644__2;
        return G__20644;
      }();
    };
  };
  var cljs$core$take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__20643 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20643) : pred.call(null, G__20643);
        }())) {
          return cljs.core.cons(cljs.core.first(s), cljs$core$take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$take_while__1.call(this, pred);
      case 2:
        return cljs$core$take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$take_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_while__1;
  cljs$core$take_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_while__2;
  return cljs$core$take_while;
}();
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__20649 = function() {
      var G__20651 = cljs.core._entry_key(sc, e);
      var G__20652 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20651, G__20652) : comp.call(null, G__20651, G__20652);
    }();
    var G__20650 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__20649, G__20650) : test.call(null, G__20649, G__20650);
  };
};
cljs.core.subseq = function() {
  var cljs$core$subseq = null;
  var cljs$core$subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__20656 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20656, 0, null);
        var s = vec__20656;
        if (cljs.core.truth_(function() {
          var G__20657 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__20657) : include.call(null, G__20657);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var cljs$core$subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__20658 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20658, 0, null);
      var s = vec__20658;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  cljs$core$subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return cljs$core$subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return cljs$core$subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$subseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$subseq__3;
  cljs$core$subseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$subseq__5;
  return cljs$core$subseq;
}();
cljs.core.rsubseq = function() {
  var cljs$core$rsubseq = null;
  var cljs$core$rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__20662 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20662, 0, null);
        var s = vec__20662;
        if (cljs.core.truth_(function() {
          var G__20663 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__20663) : include.call(null, G__20663);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var cljs$core$rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__20664 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20664, 0, null);
      var s = vec__20664;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  cljs$core$rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return cljs$core$rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return cljs$core$rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$rsubseq__3;
  cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$rsubseq__5;
  return cljs$core$rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__20665 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__20665) : Math.ceil.call(null, G__20665);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__20666 = ret;
        var G__20667 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20666, G__20667) : f.call(null, G__20666, G__20667);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__20668 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20668) : cljs.core.deref.call(null, G__20668);
      } else {
        var G__20669 = i + self__.step;
        var G__20670 = ret__$1;
        i = G__20669;
        ret = G__20670;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.range = function() {
  var cljs$core$range = null;
  var cljs$core$range__0 = function() {
    return cljs$core$range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var cljs$core$range__1 = function(end) {
    return cljs$core$range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var cljs$core$range__2 = function(start, end) {
    return cljs$core$range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var cljs$core$range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  cljs$core$range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return cljs$core$range__0.call(this);
      case 1:
        return cljs$core$range__1.call(this, start);
      case 2:
        return cljs$core$range__2.call(this, start, end);
      case 3:
        return cljs$core$range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$range.cljs$core$IFn$_invoke$arity$0 = cljs$core$range__0;
  cljs$core$range.cljs$core$IFn$_invoke$arity$1 = cljs$core$range__1;
  cljs$core$range.cljs$core$IFn$_invoke$arity$2 = cljs$core$range__2;
  cljs$core$range.cljs$core$IFn$_invoke$arity$3 = cljs$core$range__3;
  return cljs$core$range;
}();
cljs.core.take_nth = function() {
  var cljs$core$take_nth = null;
  var cljs$core$take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__20688 = null;
          var G__20688__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__20688__1 = function(result) {
            var G__20685 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20685) : rf.call(null, G__20685);
          };
          var G__20688__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__20686 = result;
              var G__20687 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20686, G__20687) : rf.call(null, G__20686, G__20687);
            } else {
              return result;
            }
          };
          G__20688 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20688__0.call(this);
              case 1:
                return G__20688__1.call(this, result);
              case 2:
                return G__20688__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20688.cljs$core$IFn$_invoke$arity$0 = G__20688__0;
          G__20688.cljs$core$IFn$_invoke$arity$1 = G__20688__1;
          G__20688.cljs$core$IFn$_invoke$arity$2 = G__20688__2;
          return G__20688;
        }();
      }(ia);
    };
  };
  var cljs$core$take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$take_nth__1.call(this, n);
      case 2:
        return cljs$core$take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$take_nth.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_nth__1;
  cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_nth__2;
  return cljs$core$take_nth;
}();
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var cljs$core$partition_by = null;
  var cljs$core$partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__20710 = null;
          var G__20710__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__20710__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__20701 = result;
                var G__20702 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20701, G__20702) : rf.call(null, G__20701, G__20702);
              }());
            }();
            var G__20703 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20703) : rf.call(null, G__20703);
          };
          var G__20710__2 = function(result, input) {
            var pval = function() {
              var G__20704 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20704) : cljs.core.deref.call(null, G__20704);
            }();
            var val = function() {
              var G__20705 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20705) : f.call(null, G__20705);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__20706 = result;
                var G__20707 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20706, G__20707) : rf.call(null, G__20706, G__20707);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__20710 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20710__0.call(this);
              case 1:
                return G__20710__1.call(this, result);
              case 2:
                return G__20710__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20710.cljs$core$IFn$_invoke$arity$0 = G__20710__0;
          G__20710.cljs$core$IFn$_invoke$arity$1 = G__20710__1;
          G__20710.cljs$core$IFn$_invoke$arity$2 = G__20710__2;
          return G__20710;
        }();
      }(a, pa);
    };
  };
  var cljs$core$partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__20708 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20708) : f.call(null, G__20708);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__20689_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__20709 = p1__20689_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20709) : f.call(null, G__20709);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$partition_by__1.call(this, f);
      case 2:
        return cljs$core$partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$partition_by.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_by__1;
  cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_by__2;
  return cljs$core$partition_by;
}();
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var cljs$core$reductions = null;
  var cljs$core$reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var cljs$core$reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__20719 = init;
          var G__20720 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20719, G__20720) : f.call(null, G__20719, G__20720);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  cljs$core$reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return cljs$core$reductions__2.call(this, f, init);
      case 3:
        return cljs$core$reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$reductions.cljs$core$IFn$_invoke$arity$2 = cljs$core$reductions__2;
  cljs$core$reductions.cljs$core$IFn$_invoke$arity$3 = cljs$core$reductions__3;
  return cljs$core$reductions;
}();
cljs.core.juxt = function() {
  var cljs$core$juxt = null;
  var cljs$core$juxt__1 = function(f) {
    return function() {
      var G__20815 = null;
      var G__20815__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__20815__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20773 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20773) : f.call(null, G__20773);
        }()], null);
      };
      var G__20815__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20774 = x;
          var G__20775 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20774, G__20775) : f.call(null, G__20774, G__20775);
        }()], null);
      };
      var G__20815__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20776 = x;
          var G__20777 = y;
          var G__20778 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20776, G__20777, G__20778) : f.call(null, G__20776, G__20777, G__20778);
        }()], null);
      };
      var G__20815__4 = function() {
        var G__20816__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__20816 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__20817__i = 0, G__20817__a = new Array(arguments.length - 3);
            while (G__20817__i < G__20817__a.length) {
              G__20817__a[G__20817__i] = arguments[G__20817__i + 3];
              ++G__20817__i;
            }
            args = new cljs.core.IndexedSeq(G__20817__a, 0);
          }
          return G__20816__delegate.call(this, x, y, z, args);
        };
        G__20816.cljs$lang$maxFixedArity = 3;
        G__20816.cljs$lang$applyTo = function(arglist__20818) {
          var x = cljs.core.first(arglist__20818);
          arglist__20818 = cljs.core.next(arglist__20818);
          var y = cljs.core.first(arglist__20818);
          arglist__20818 = cljs.core.next(arglist__20818);
          var z = cljs.core.first(arglist__20818);
          var args = cljs.core.rest(arglist__20818);
          return G__20816__delegate(x, y, z, args);
        };
        G__20816.cljs$core$IFn$_invoke$arity$variadic = G__20816__delegate;
        return G__20816;
      }();
      G__20815 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__20815__0.call(this);
          case 1:
            return G__20815__1.call(this, x);
          case 2:
            return G__20815__2.call(this, x, y);
          case 3:
            return G__20815__3.call(this, x, y, z);
          default:
            var G__20819 = null;
            if (arguments.length > 3) {
              var G__20820__i = 0, G__20820__a = new Array(arguments.length - 3);
              while (G__20820__i < G__20820__a.length) {
                G__20820__a[G__20820__i] = arguments[G__20820__i + 3];
                ++G__20820__i;
              }
              G__20819 = new cljs.core.IndexedSeq(G__20820__a, 0);
            }
            return G__20815__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20819);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20815.cljs$lang$maxFixedArity = 3;
      G__20815.cljs$lang$applyTo = G__20815__4.cljs$lang$applyTo;
      G__20815.cljs$core$IFn$_invoke$arity$0 = G__20815__0;
      G__20815.cljs$core$IFn$_invoke$arity$1 = G__20815__1;
      G__20815.cljs$core$IFn$_invoke$arity$2 = G__20815__2;
      G__20815.cljs$core$IFn$_invoke$arity$3 = G__20815__3;
      G__20815.cljs$core$IFn$_invoke$arity$variadic = G__20815__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20815;
    }();
  };
  var cljs$core$juxt__2 = function(f, g) {
    return function() {
      var G__20821 = null;
      var G__20821__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__20821__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20779 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20779) : f.call(null, G__20779);
        }(), function() {
          var G__20780 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20780) : g.call(null, G__20780);
        }()], null);
      };
      var G__20821__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20781 = x;
          var G__20782 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20781, G__20782) : f.call(null, G__20781, G__20782);
        }(), function() {
          var G__20783 = x;
          var G__20784 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__20783, G__20784) : g.call(null, G__20783, G__20784);
        }()], null);
      };
      var G__20821__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20785 = x;
          var G__20786 = y;
          var G__20787 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20785, G__20786, G__20787) : f.call(null, G__20785, G__20786, G__20787);
        }(), function() {
          var G__20788 = x;
          var G__20789 = y;
          var G__20790 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__20788, G__20789, G__20790) : g.call(null, G__20788, G__20789, G__20790);
        }()], null);
      };
      var G__20821__4 = function() {
        var G__20822__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__20822 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__20823__i = 0, G__20823__a = new Array(arguments.length - 3);
            while (G__20823__i < G__20823__a.length) {
              G__20823__a[G__20823__i] = arguments[G__20823__i + 3];
              ++G__20823__i;
            }
            args = new cljs.core.IndexedSeq(G__20823__a, 0);
          }
          return G__20822__delegate.call(this, x, y, z, args);
        };
        G__20822.cljs$lang$maxFixedArity = 3;
        G__20822.cljs$lang$applyTo = function(arglist__20824) {
          var x = cljs.core.first(arglist__20824);
          arglist__20824 = cljs.core.next(arglist__20824);
          var y = cljs.core.first(arglist__20824);
          arglist__20824 = cljs.core.next(arglist__20824);
          var z = cljs.core.first(arglist__20824);
          var args = cljs.core.rest(arglist__20824);
          return G__20822__delegate(x, y, z, args);
        };
        G__20822.cljs$core$IFn$_invoke$arity$variadic = G__20822__delegate;
        return G__20822;
      }();
      G__20821 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__20821__0.call(this);
          case 1:
            return G__20821__1.call(this, x);
          case 2:
            return G__20821__2.call(this, x, y);
          case 3:
            return G__20821__3.call(this, x, y, z);
          default:
            var G__20825 = null;
            if (arguments.length > 3) {
              var G__20826__i = 0, G__20826__a = new Array(arguments.length - 3);
              while (G__20826__i < G__20826__a.length) {
                G__20826__a[G__20826__i] = arguments[G__20826__i + 3];
                ++G__20826__i;
              }
              G__20825 = new cljs.core.IndexedSeq(G__20826__a, 0);
            }
            return G__20821__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20825);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20821.cljs$lang$maxFixedArity = 3;
      G__20821.cljs$lang$applyTo = G__20821__4.cljs$lang$applyTo;
      G__20821.cljs$core$IFn$_invoke$arity$0 = G__20821__0;
      G__20821.cljs$core$IFn$_invoke$arity$1 = G__20821__1;
      G__20821.cljs$core$IFn$_invoke$arity$2 = G__20821__2;
      G__20821.cljs$core$IFn$_invoke$arity$3 = G__20821__3;
      G__20821.cljs$core$IFn$_invoke$arity$variadic = G__20821__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20821;
    }();
  };
  var cljs$core$juxt__3 = function(f, g, h) {
    return function() {
      var G__20827 = null;
      var G__20827__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__20827__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20791 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20791) : f.call(null, G__20791);
        }(), function() {
          var G__20792 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20792) : g.call(null, G__20792);
        }(), function() {
          var G__20793 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__20793) : h.call(null, G__20793);
        }()], null);
      };
      var G__20827__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20794 = x;
          var G__20795 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20794, G__20795) : f.call(null, G__20794, G__20795);
        }(), function() {
          var G__20796 = x;
          var G__20797 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__20796, G__20797) : g.call(null, G__20796, G__20797);
        }(), function() {
          var G__20798 = x;
          var G__20799 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__20798, G__20799) : h.call(null, G__20798, G__20799);
        }()], null);
      };
      var G__20827__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20800 = x;
          var G__20801 = y;
          var G__20802 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20800, G__20801, G__20802) : f.call(null, G__20800, G__20801, G__20802);
        }(), function() {
          var G__20803 = x;
          var G__20804 = y;
          var G__20805 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__20803, G__20804, G__20805) : g.call(null, G__20803, G__20804, G__20805);
        }(), function() {
          var G__20806 = x;
          var G__20807 = y;
          var G__20808 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__20806, G__20807, G__20808) : h.call(null, G__20806, G__20807, G__20808);
        }()], null);
      };
      var G__20827__4 = function() {
        var G__20828__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__20828 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__20829__i = 0, G__20829__a = new Array(arguments.length - 3);
            while (G__20829__i < G__20829__a.length) {
              G__20829__a[G__20829__i] = arguments[G__20829__i + 3];
              ++G__20829__i;
            }
            args = new cljs.core.IndexedSeq(G__20829__a, 0);
          }
          return G__20828__delegate.call(this, x, y, z, args);
        };
        G__20828.cljs$lang$maxFixedArity = 3;
        G__20828.cljs$lang$applyTo = function(arglist__20830) {
          var x = cljs.core.first(arglist__20830);
          arglist__20830 = cljs.core.next(arglist__20830);
          var y = cljs.core.first(arglist__20830);
          arglist__20830 = cljs.core.next(arglist__20830);
          var z = cljs.core.first(arglist__20830);
          var args = cljs.core.rest(arglist__20830);
          return G__20828__delegate(x, y, z, args);
        };
        G__20828.cljs$core$IFn$_invoke$arity$variadic = G__20828__delegate;
        return G__20828;
      }();
      G__20827 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__20827__0.call(this);
          case 1:
            return G__20827__1.call(this, x);
          case 2:
            return G__20827__2.call(this, x, y);
          case 3:
            return G__20827__3.call(this, x, y, z);
          default:
            var G__20831 = null;
            if (arguments.length > 3) {
              var G__20832__i = 0, G__20832__a = new Array(arguments.length - 3);
              while (G__20832__i < G__20832__a.length) {
                G__20832__a[G__20832__i] = arguments[G__20832__i + 3];
                ++G__20832__i;
              }
              G__20831 = new cljs.core.IndexedSeq(G__20832__a, 0);
            }
            return G__20827__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20831);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20827.cljs$lang$maxFixedArity = 3;
      G__20827.cljs$lang$applyTo = G__20827__4.cljs$lang$applyTo;
      G__20827.cljs$core$IFn$_invoke$arity$0 = G__20827__0;
      G__20827.cljs$core$IFn$_invoke$arity$1 = G__20827__1;
      G__20827.cljs$core$IFn$_invoke$arity$2 = G__20827__2;
      G__20827.cljs$core$IFn$_invoke$arity$3 = G__20827__3;
      G__20827.cljs$core$IFn$_invoke$arity$variadic = G__20827__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20827;
    }();
  };
  var cljs$core$juxt__4 = function() {
    var G__20833__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__20834 = null;
          var G__20834__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__20721_SHARP_, p2__20722_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20721_SHARP_, function() {
                  return p2__20722_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__20722_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__20722_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20834__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__20723_SHARP_, p2__20724_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20723_SHARP_, function() {
                  var G__20809 = x;
                  return p2__20724_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__20724_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20809) : p2__20724_SHARP_.call(null, G__20809);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20834__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__20725_SHARP_, p2__20726_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20725_SHARP_, function() {
                  var G__20810 = x;
                  var G__20811 = y;
                  return p2__20726_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__20726_SHARP_.cljs$core$IFn$_invoke$arity$2(G__20810, G__20811) : p2__20726_SHARP_.call(null, G__20810, G__20811);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20834__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__20727_SHARP_, p2__20728_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20727_SHARP_, function() {
                  var G__20812 = x;
                  var G__20813 = y;
                  var G__20814 = z;
                  return p2__20728_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__20728_SHARP_.cljs$core$IFn$_invoke$arity$3(G__20812, G__20813, G__20814) : p2__20728_SHARP_.call(null, G__20812, G__20813, G__20814);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20834__4 = function() {
            var G__20835__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__20729_SHARP_, p2__20730_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20729_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__20730_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__20835 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__20836__i = 0, G__20836__a = new Array(arguments.length - 3);
                while (G__20836__i < G__20836__a.length) {
                  G__20836__a[G__20836__i] = arguments[G__20836__i + 3];
                  ++G__20836__i;
                }
                args = new cljs.core.IndexedSeq(G__20836__a, 0);
              }
              return G__20835__delegate.call(this, x, y, z, args);
            };
            G__20835.cljs$lang$maxFixedArity = 3;
            G__20835.cljs$lang$applyTo = function(arglist__20837) {
              var x = cljs.core.first(arglist__20837);
              arglist__20837 = cljs.core.next(arglist__20837);
              var y = cljs.core.first(arglist__20837);
              arglist__20837 = cljs.core.next(arglist__20837);
              var z = cljs.core.first(arglist__20837);
              var args = cljs.core.rest(arglist__20837);
              return G__20835__delegate(x, y, z, args);
            };
            G__20835.cljs$core$IFn$_invoke$arity$variadic = G__20835__delegate;
            return G__20835;
          }();
          G__20834 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__20834__0.call(this);
              case 1:
                return G__20834__1.call(this, x);
              case 2:
                return G__20834__2.call(this, x, y);
              case 3:
                return G__20834__3.call(this, x, y, z);
              default:
                var G__20838 = null;
                if (arguments.length > 3) {
                  var G__20839__i = 0, G__20839__a = new Array(arguments.length - 3);
                  while (G__20839__i < G__20839__a.length) {
                    G__20839__a[G__20839__i] = arguments[G__20839__i + 3];
                    ++G__20839__i;
                  }
                  G__20838 = new cljs.core.IndexedSeq(G__20839__a, 0);
                }
                return G__20834__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20838);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20834.cljs$lang$maxFixedArity = 3;
          G__20834.cljs$lang$applyTo = G__20834__4.cljs$lang$applyTo;
          G__20834.cljs$core$IFn$_invoke$arity$0 = G__20834__0;
          G__20834.cljs$core$IFn$_invoke$arity$1 = G__20834__1;
          G__20834.cljs$core$IFn$_invoke$arity$2 = G__20834__2;
          G__20834.cljs$core$IFn$_invoke$arity$3 = G__20834__3;
          G__20834.cljs$core$IFn$_invoke$arity$variadic = G__20834__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__20834;
        }();
      }(fs__$1);
    };
    var G__20833 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__20840__i = 0, G__20840__a = new Array(arguments.length - 3);
        while (G__20840__i < G__20840__a.length) {
          G__20840__a[G__20840__i] = arguments[G__20840__i + 3];
          ++G__20840__i;
        }
        fs = new cljs.core.IndexedSeq(G__20840__a, 0);
      }
      return G__20833__delegate.call(this, f, g, h, fs);
    };
    G__20833.cljs$lang$maxFixedArity = 3;
    G__20833.cljs$lang$applyTo = function(arglist__20841) {
      var f = cljs.core.first(arglist__20841);
      arglist__20841 = cljs.core.next(arglist__20841);
      var g = cljs.core.first(arglist__20841);
      arglist__20841 = cljs.core.next(arglist__20841);
      var h = cljs.core.first(arglist__20841);
      var fs = cljs.core.rest(arglist__20841);
      return G__20833__delegate(f, g, h, fs);
    };
    G__20833.cljs$core$IFn$_invoke$arity$variadic = G__20833__delegate;
    return G__20833;
  }();
  cljs$core$juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$juxt__1.call(this, f);
      case 2:
        return cljs$core$juxt__2.call(this, f, g);
      case 3:
        return cljs$core$juxt__3.call(this, f, g, h);
      default:
        var G__20842 = null;
        if (arguments.length > 3) {
          var G__20843__i = 0, G__20843__a = new Array(arguments.length - 3);
          while (G__20843__i < G__20843__a.length) {
            G__20843__a[G__20843__i] = arguments[G__20843__i + 3];
            ++G__20843__i;
          }
          G__20842 = new cljs.core.IndexedSeq(G__20843__a, 0);
        }
        return cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__20842);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$juxt.cljs$lang$maxFixedArity = 3;
  cljs$core$juxt.cljs$lang$applyTo = cljs$core$juxt__4.cljs$lang$applyTo;
  cljs$core$juxt.cljs$core$IFn$_invoke$arity$1 = cljs$core$juxt__1;
  cljs$core$juxt.cljs$core$IFn$_invoke$arity$2 = cljs$core$juxt__2;
  cljs$core$juxt.cljs$core$IFn$_invoke$arity$3 = cljs$core$juxt__3;
  cljs$core$juxt.cljs$core$IFn$_invoke$arity$variadic = cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$juxt;
}();
cljs.core.dorun = function() {
  var cljs$core$dorun = null;
  var cljs$core$dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__20844 = cljs.core.next(coll);
        coll = G__20844;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var cljs$core$dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__20845 = n - 1;
        var G__20846 = cljs.core.next(coll);
        n = G__20845;
        coll = G__20846;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  cljs$core$dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$dorun__1.call(this, n);
      case 2:
        return cljs$core$dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$dorun.cljs$core$IFn$_invoke$arity$1 = cljs$core$dorun__1;
  cljs$core$dorun.cljs$core$IFn$_invoke$arity$2 = cljs$core$dorun__2;
  return cljs$core$dorun;
}();
cljs.core.doall = function() {
  var cljs$core$doall = null;
  var cljs$core$doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var cljs$core$doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  cljs$core$doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$doall__1.call(this, n);
      case 2:
        return cljs$core$doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$doall.cljs$core$IFn$_invoke$arity$1 = cljs$core$doall__1;
  cljs$core$doall.cljs$core$IFn$_invoke$arity$2 = cljs$core$doall__2;
  return cljs$core$doall;
}();
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__20850 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20850, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20850, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4109__auto__ = flags;
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_20858 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4109__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4109__auto__)) {
              return or__4109__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__20859_20865 = cljs.core.first(coll);
          var G__20860_20866 = writer;
          var G__20861_20867 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20859_20865, G__20860_20866, G__20861_20867) : print_one.call(null, G__20859_20865, G__20860_20866, G__20861_20867);
        } else {
        }
        var coll_20868__$1 = cljs.core.next(coll);
        var n_20869 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_20868__$1 && (n_20869 == null || !(n_20869 === 0))) {
            cljs.core._write(writer, sep);
            var G__20862_20870 = cljs.core.first(coll_20868__$1);
            var G__20863_20871 = writer;
            var G__20864_20872 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20862_20870, G__20863_20871, G__20864_20872) : print_one.call(null, G__20862_20870, G__20863_20871, G__20864_20872);
            var G__20873 = cljs.core.next(coll_20868__$1);
            var G__20874 = n_20869 - 1;
            coll_20868__$1 = G__20873;
            n_20869 = G__20874;
            continue;
          } else {
            if (cljs.core.seq(coll_20868__$1) && n_20869 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4109__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4109__auto__)) {
                  return or__4109__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_20858;
  }
};
cljs.core.write_all = function() {
  var cljs$core$write_all__delegate = function(writer, ss) {
    var seq__20879 = cljs.core.seq(ss);
    var chunk__20880 = null;
    var count__20881 = 0;
    var i__20882 = 0;
    while (true) {
      if (i__20882 < count__20881) {
        var s = chunk__20880.cljs$core$IIndexed$_nth$arity$2(null, i__20882);
        cljs.core._write(writer, s);
        var G__20883 = seq__20879;
        var G__20884 = chunk__20880;
        var G__20885 = count__20881;
        var G__20886 = i__20882 + 1;
        seq__20879 = G__20883;
        chunk__20880 = G__20884;
        count__20881 = G__20885;
        i__20882 = G__20886;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__20879);
        if (temp__4126__auto__) {
          var seq__20879__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__20879__$1)) {
            var c__4894__auto__ = cljs.core.chunk_first(seq__20879__$1);
            var G__20887 = cljs.core.chunk_rest(seq__20879__$1);
            var G__20888 = c__4894__auto__;
            var G__20889 = cljs.core.count(c__4894__auto__);
            var G__20890 = 0;
            seq__20879 = G__20887;
            chunk__20880 = G__20888;
            count__20881 = G__20889;
            i__20882 = G__20890;
            continue;
          } else {
            var s = cljs.core.first(seq__20879__$1);
            cljs.core._write(writer, s);
            var G__20891 = cljs.core.next(seq__20879__$1);
            var G__20892 = null;
            var G__20893 = 0;
            var G__20894 = 0;
            seq__20879 = G__20891;
            chunk__20880 = G__20892;
            count__20881 = G__20893;
            i__20882 = G__20894;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var cljs$core$write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__20895__i = 0, G__20895__a = new Array(arguments.length - 1);
      while (G__20895__i < G__20895__a.length) {
        G__20895__a[G__20895__i] = arguments[G__20895__i + 1];
        ++G__20895__i;
      }
      ss = new cljs.core.IndexedSeq(G__20895__a, 0);
    }
    return cljs$core$write_all__delegate.call(this, writer, ss);
  };
  cljs$core$write_all.cljs$lang$maxFixedArity = 1;
  cljs$core$write_all.cljs$lang$applyTo = function(arglist__20896) {
    var writer = cljs.core.first(arglist__20896);
    var ss = cljs.core.rest(arglist__20896);
    return cljs$core$write_all__delegate(writer, ss);
  };
  cljs$core$write_all.cljs$core$IFn$_invoke$arity$variadic = cljs$core$write_all__delegate;
  return cljs$core$write_all;
}();
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj20898 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj20898;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__20901 = '[\\\\"\b\f\n\r\t]';
    var G__20902 = "g";
    return RegExp(G__20901, G__20902);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__4097__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__4097__auto__)) {
          var and__4097__auto____$1 = function() {
            var G__20916 = obj;
            if (G__20916) {
              var bit__4783__auto__ = G__20916.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4783__auto__ || G__20916.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__20916.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__20916);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__20916);
            }
          }();
          if (and__4097__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__4097__auto____$1;
          }
        } else {
          return and__4097__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        var G__20917_20927 = cljs.core.meta(obj);
        var G__20918_20928 = writer;
        var G__20919_20929 = opts;
        cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__20917_20927, G__20918_20928, G__20919_20929) : cljs.core.pr_writer.call(null, G__20917_20927, G__20918_20928, G__20919_20929);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__20920 = obj;
            if (G__20920) {
              var bit__4776__auto__ = G__20920.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4776__auto__ || G__20920.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__20921 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__20922 = cljs.core.pr_writer;
                var G__20923 = writer;
                var G__20924 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__20921, G__20922, G__20923, G__20924) : cljs.core.print_map.call(null, G__20921, G__20922, G__20923, G__20924);
              } else {
                if (cljs.core.array_QMARK_(obj)) {
                  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__20925 = obj;
                    return goog.isString(G__20925);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__20930 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__20930;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__20926 = obj;
                            if (G__20926) {
                              var bit__4783__auto__ = G__20926.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4783__auto__ || G__20926.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__20926.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__20926);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__20926);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4124__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var alt_impl = temp__4124__auto__;
    var G__20934 = obj;
    var G__20935 = writer;
    var G__20936 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__20934, G__20935, G__20936) : alt_impl.call(null, G__20934, G__20935, G__20936);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__20941 = cljs.core.seq(cljs.core.next(objs));
  var chunk__20942 = null;
  var count__20943 = 0;
  var i__20944 = 0;
  while (true) {
    if (i__20944 < count__20943) {
      var obj = chunk__20942.cljs$core$IIndexed$_nth$arity$2(null, i__20944);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__20945 = seq__20941;
      var G__20946 = chunk__20942;
      var G__20947 = count__20943;
      var G__20948 = i__20944 + 1;
      seq__20941 = G__20945;
      chunk__20942 = G__20946;
      count__20943 = G__20947;
      i__20944 = G__20948;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20941);
      if (temp__4126__auto__) {
        var seq__20941__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20941__$1)) {
          var c__4894__auto__ = cljs.core.chunk_first(seq__20941__$1);
          var G__20949 = cljs.core.chunk_rest(seq__20941__$1);
          var G__20950 = c__4894__auto__;
          var G__20951 = cljs.core.count(c__4894__auto__);
          var G__20952 = 0;
          seq__20941 = G__20949;
          chunk__20942 = G__20950;
          count__20943 = G__20951;
          i__20944 = G__20952;
          continue;
        } else {
          var obj = cljs.core.first(seq__20941__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__20953 = cljs.core.next(seq__20941__$1);
          var G__20954 = null;
          var G__20955 = 0;
          var G__20956 = 0;
          seq__20941 = G__20953;
          chunk__20942 = G__20954;
          count__20943 = G__20955;
          i__20944 = G__20956;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var cljs$core$pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var cljs$core$pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20957__i = 0, G__20957__a = new Array(arguments.length - 0);
      while (G__20957__i < G__20957__a.length) {
        G__20957__a[G__20957__i] = arguments[G__20957__i + 0];
        ++G__20957__i;
      }
      objs = new cljs.core.IndexedSeq(G__20957__a, 0);
    }
    return cljs$core$pr_str__delegate.call(this, objs);
  };
  cljs$core$pr_str.cljs$lang$maxFixedArity = 0;
  cljs$core$pr_str.cljs$lang$applyTo = function(arglist__20958) {
    var objs = cljs.core.seq(arglist__20958);
    return cljs$core$pr_str__delegate(objs);
  };
  cljs$core$pr_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr_str__delegate;
  return cljs$core$pr_str;
}();
cljs.core.prn_str = function() {
  var cljs$core$prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var cljs$core$prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20959__i = 0, G__20959__a = new Array(arguments.length - 0);
      while (G__20959__i < G__20959__a.length) {
        G__20959__a[G__20959__i] = arguments[G__20959__i + 0];
        ++G__20959__i;
      }
      objs = new cljs.core.IndexedSeq(G__20959__a, 0);
    }
    return cljs$core$prn_str__delegate.call(this, objs);
  };
  cljs$core$prn_str.cljs$lang$maxFixedArity = 0;
  cljs$core$prn_str.cljs$lang$applyTo = function(arglist__20960) {
    var objs = cljs.core.seq(arglist__20960);
    return cljs$core$prn_str__delegate(objs);
  };
  cljs$core$prn_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn_str__delegate;
  return cljs$core$prn_str;
}();
cljs.core.pr = function() {
  var cljs$core$pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var cljs$core$pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20961__i = 0, G__20961__a = new Array(arguments.length - 0);
      while (G__20961__i < G__20961__a.length) {
        G__20961__a[G__20961__i] = arguments[G__20961__i + 0];
        ++G__20961__i;
      }
      objs = new cljs.core.IndexedSeq(G__20961__a, 0);
    }
    return cljs$core$pr__delegate.call(this, objs);
  };
  cljs$core$pr.cljs$lang$maxFixedArity = 0;
  cljs$core$pr.cljs$lang$applyTo = function(arglist__20962) {
    var objs = cljs.core.seq(arglist__20962);
    return cljs$core$pr__delegate(objs);
  };
  cljs$core$pr.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr__delegate;
  return cljs$core$pr;
}();
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20963__i = 0, G__20963__a = new Array(arguments.length - 0);
      while (G__20963__i < G__20963__a.length) {
        G__20963__a[G__20963__i] = arguments[G__20963__i + 0];
        ++G__20963__i;
      }
      objs = new cljs.core.IndexedSeq(G__20963__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__20964) {
    var objs = cljs.core.seq(arglist__20964);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function() {
  var cljs$core$print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20965__i = 0, G__20965__a = new Array(arguments.length - 0);
      while (G__20965__i < G__20965__a.length) {
        G__20965__a[G__20965__i] = arguments[G__20965__i + 0];
        ++G__20965__i;
      }
      objs = new cljs.core.IndexedSeq(G__20965__a, 0);
    }
    return cljs$core$print_str__delegate.call(this, objs);
  };
  cljs$core$print_str.cljs$lang$maxFixedArity = 0;
  cljs$core$print_str.cljs$lang$applyTo = function(arglist__20966) {
    var objs = cljs.core.seq(arglist__20966);
    return cljs$core$print_str__delegate(objs);
  };
  cljs$core$print_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$print_str__delegate;
  return cljs$core$print_str;
}();
cljs.core.println = function() {
  var cljs$core$println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var cljs$core$println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20967__i = 0, G__20967__a = new Array(arguments.length - 0);
      while (G__20967__i < G__20967__a.length) {
        G__20967__a[G__20967__i] = arguments[G__20967__i + 0];
        ++G__20967__i;
      }
      objs = new cljs.core.IndexedSeq(G__20967__a, 0);
    }
    return cljs$core$println__delegate.call(this, objs);
  };
  cljs$core$println.cljs$lang$maxFixedArity = 0;
  cljs$core$println.cljs$lang$applyTo = function(arglist__20968) {
    var objs = cljs.core.seq(arglist__20968);
    return cljs$core$println__delegate(objs);
  };
  cljs$core$println.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println__delegate;
  return cljs$core$println;
}();
cljs.core.println_str = function() {
  var cljs$core$println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20969__i = 0, G__20969__a = new Array(arguments.length - 0);
      while (G__20969__i < G__20969__a.length) {
        G__20969__a[G__20969__i] = arguments[G__20969__i + 0];
        ++G__20969__i;
      }
      objs = new cljs.core.IndexedSeq(G__20969__a, 0);
    }
    return cljs$core$println_str__delegate.call(this, objs);
  };
  cljs$core$println_str.cljs$lang$maxFixedArity = 0;
  cljs$core$println_str.cljs$lang$applyTo = function(arglist__20970) {
    var objs = cljs.core.seq(arglist__20970);
    return cljs$core$println_str__delegate(objs);
  };
  cljs$core$println_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println_str__delegate;
  return cljs$core$println_str;
}();
cljs.core.prn = function() {
  var cljs$core$prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var cljs$core$prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20971__i = 0, G__20971__a = new Array(arguments.length - 0);
      while (G__20971__i < G__20971__a.length) {
        G__20971__a[G__20971__i] = arguments[G__20971__i + 0];
        ++G__20971__i;
      }
      objs = new cljs.core.IndexedSeq(G__20971__a, 0);
    }
    return cljs$core$prn__delegate.call(this, objs);
  };
  cljs$core$prn.cljs$lang$maxFixedArity = 0;
  cljs$core$prn.cljs$lang$applyTo = function(arglist__20972) {
    var objs = cljs.core.seq(arglist__20972);
    return cljs$core$prn__delegate(objs);
  };
  cljs$core$prn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn__delegate;
  return cljs$core$prn;
}();
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__20979_20985 = cljs.core.key(e);
    var G__20980_20986 = w;
    var G__20981_20987 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20979_20985, G__20980_20986, G__20981_20987) : print_one.call(null, G__20979_20985, G__20980_20986, G__20981_20987);
    cljs.core._write(w, " ");
    var G__20982 = cljs.core.val(e);
    var G__20983 = w;
    var G__20984 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20982, G__20983, G__20984) : print_one.call(null, G__20982, G__20983, G__20984);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var cljs$core$alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var cljs$core$alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__20988__i = 0, G__20988__a = new Array(arguments.length - 2);
      while (G__20988__i < G__20988__a.length) {
        G__20988__a[G__20988__i] = arguments[G__20988__i + 2];
        ++G__20988__i;
      }
      args = new cljs.core.IndexedSeq(G__20988__a, 0);
    }
    return cljs$core$alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  cljs$core$alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  cljs$core$alter_meta_BANG_.cljs$lang$applyTo = function(arglist__20989) {
    var iref = cljs.core.first(arglist__20989);
    arglist__20989 = cljs.core.next(arglist__20989);
    var f = cljs.core.first(arglist__20989);
    var args = cljs.core.rest(arglist__20989);
    return cljs$core$alter_meta_BANG___delegate(iref, f, args);
  };
  cljs$core$alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$alter_meta_BANG___delegate;
  return cljs$core$alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var cljs$core$gensym = null;
  var cljs$core$gensym__0 = function() {
    return cljs$core$gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var cljs$core$gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__20992 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20992) : cljs.core.atom.call(null, G__20992);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  cljs$core$gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return cljs$core$gensym__0.call(this);
      case 1:
        return cljs$core$gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$gensym.cljs$core$IFn$_invoke$arity$0 = cljs$core$gensym__0;
  cljs$core$gensym.cljs$core$IFn$_invoke$arity$1 = cljs$core$gensym__1;
  return cljs$core$gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__20994 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20994) : cljs.core.deref.call(null, G__20994);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__20995_SHARP_, p2__20996_SHARP_) {
    var ret = function() {
      var G__20999 = p1__20995_SHARP_;
      var G__21000 = p2__20996_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20999, G__21000) : rf.call(null, G__20999, G__21000);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__21003 = null;
      var G__21003__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__21003__1 = function(result) {
        var G__21002 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21002) : rf.call(null, G__21002);
      };
      var G__21003__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__21003 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__21003__0.call(this);
          case 1:
            return G__21003__1.call(this, result);
          case 2:
            return G__21003__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__21003.cljs$core$IFn$_invoke$arity$0 = G__21003__0;
      G__21003.cljs$core$IFn$_invoke$arity$1 = G__21003__1;
      G__21003.cljs$core$IFn$_invoke$arity$2 = G__21003__2;
      return G__21003;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var cljs$core$dedupe = null;
  var cljs$core$dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__21012 = null;
          var G__21012__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__21012__1 = function(result) {
            var G__21008 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21008) : rf.call(null, G__21008);
          };
          var G__21012__2 = function(result, input) {
            var prior = function() {
              var G__21009 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21009) : cljs.core.deref.call(null, G__21009);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__21010 = result;
              var G__21011 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21010, G__21011) : rf.call(null, G__21010, G__21011);
            }
          };
          G__21012 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__21012__0.call(this);
              case 1:
                return G__21012__1.call(this, result);
              case 2:
                return G__21012__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__21012.cljs$core$IFn$_invoke$arity$0 = G__21012__0;
          G__21012.cljs$core$IFn$_invoke$arity$1 = G__21012__1;
          G__21012.cljs$core$IFn$_invoke$arity$2 = G__21012__2;
          return G__21012;
        }();
      }(pa);
    };
  };
  var cljs$core$dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  cljs$core$dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return cljs$core$dedupe__0.call(this);
      case 1:
        return cljs$core$dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0 = cljs$core$dedupe__0;
  cljs$core$dedupe.cljs$core$IFn$_invoke$arity$1 = cljs$core$dedupe__1;
  return cljs$core$dedupe;
}();
cljs.core.random_sample = function() {
  var cljs$core$random_sample = null;
  var cljs$core$random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var cljs$core$random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  cljs$core$random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$random_sample__1.call(this, prob);
      case 2:
        return cljs$core$random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$random_sample.cljs$core$IFn$_invoke$arity$1 = cljs$core$random_sample__1;
  cljs$core$random_sample.cljs$core$IFn$_invoke$arity$2 = cljs$core$random_sample__2;
  return cljs$core$random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5085__auto__ = this;
  return cljs.core.es6_iterator(this__5085__auto__);
};
cljs.core.eduction = function cljs$core$eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__21014_SHARP_, p2__21013_SHARP_) {
    var G__21016 = p2__21013_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__21016) : proc.call(null, G__21016);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj21018 = {};
  return obj21018;
}();
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (function() {
    var and__4097__auto__ = x;
    if (and__4097__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4745__auto__ = x == null ? null : x;
    return function() {
      var or__4109__auto__ = cljs.core._clj__GT_js[function() {
        var G__21022 = x__4745__auto__;
        return goog.typeOf(G__21022);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (function() {
    var and__4097__auto__ = x;
    if (and__4097__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4745__auto__ = x == null ? null : x;
    return function() {
      var or__4109__auto__ = cljs.core._key__GT_js[function() {
        var G__21026 = x__4745__auto__;
        return goog.typeOf(G__21026);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (function() {
    var G__21029 = k;
    if (G__21029) {
      var bit__4783__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4109__auto__ = bit__4783__auto__;
        if (cljs.core.truth_(or__4109__auto__)) {
          return or__4109__auto__;
        } else {
          return G__21029.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__21029.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__21029);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__21029);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__21030 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__21030) : cljs.core.clj__GT_js.call(null, G__21030);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__21046 = x;
      if (G__21046) {
        var bit__4783__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__4109__auto__ = bit__4783__auto__;
          if (cljs.core.truth_(or__4109__auto__)) {
            return or__4109__auto__;
          } else {
            return G__21046.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__21046.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__21046);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__21046);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj21048 = {};
              return obj21048;
            }();
            var seq__21049_21059 = cljs.core.seq(x);
            var chunk__21050_21060 = null;
            var count__21051_21061 = 0;
            var i__21052_21062 = 0;
            while (true) {
              if (i__21052_21062 < count__21051_21061) {
                var vec__21053_21063 = chunk__21050_21060.cljs$core$IIndexed$_nth$arity$2(null, i__21052_21062);
                var k_21064 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21053_21063, 0, null);
                var v_21065 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21053_21063, 1, null);
                m[cljs.core.key__GT_js(k_21064)] = cljs$core$clj__GT_js(v_21065);
                var G__21066 = seq__21049_21059;
                var G__21067 = chunk__21050_21060;
                var G__21068 = count__21051_21061;
                var G__21069 = i__21052_21062 + 1;
                seq__21049_21059 = G__21066;
                chunk__21050_21060 = G__21067;
                count__21051_21061 = G__21068;
                i__21052_21062 = G__21069;
                continue;
              } else {
                var temp__4126__auto___21070 = cljs.core.seq(seq__21049_21059);
                if (temp__4126__auto___21070) {
                  var seq__21049_21071__$1 = temp__4126__auto___21070;
                  if (cljs.core.chunked_seq_QMARK_(seq__21049_21071__$1)) {
                    var c__4894__auto___21072 = cljs.core.chunk_first(seq__21049_21071__$1);
                    var G__21073 = cljs.core.chunk_rest(seq__21049_21071__$1);
                    var G__21074 = c__4894__auto___21072;
                    var G__21075 = cljs.core.count(c__4894__auto___21072);
                    var G__21076 = 0;
                    seq__21049_21059 = G__21073;
                    chunk__21050_21060 = G__21074;
                    count__21051_21061 = G__21075;
                    i__21052_21062 = G__21076;
                    continue;
                  } else {
                    var vec__21054_21077 = cljs.core.first(seq__21049_21071__$1);
                    var k_21078 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21054_21077, 0, null);
                    var v_21079 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21054_21077, 1, null);
                    m[cljs.core.key__GT_js(k_21078)] = cljs$core$clj__GT_js(v_21079);
                    var G__21080 = cljs.core.next(seq__21049_21071__$1);
                    var G__21081 = null;
                    var G__21082 = 0;
                    var G__21083 = 0;
                    seq__21049_21059 = G__21080;
                    chunk__21050_21060 = G__21081;
                    count__21051_21061 = G__21082;
                    i__21052_21062 = G__21083;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__21055_21084 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__21056_21085 = null;
              var count__21057_21086 = 0;
              var i__21058_21087 = 0;
              while (true) {
                if (i__21058_21087 < count__21057_21086) {
                  var x_21088__$1 = chunk__21056_21085.cljs$core$IIndexed$_nth$arity$2(null, i__21058_21087);
                  arr.push(x_21088__$1);
                  var G__21089 = seq__21055_21084;
                  var G__21090 = chunk__21056_21085;
                  var G__21091 = count__21057_21086;
                  var G__21092 = i__21058_21087 + 1;
                  seq__21055_21084 = G__21089;
                  chunk__21056_21085 = G__21090;
                  count__21057_21086 = G__21091;
                  i__21058_21087 = G__21092;
                  continue;
                } else {
                  var temp__4126__auto___21093 = cljs.core.seq(seq__21055_21084);
                  if (temp__4126__auto___21093) {
                    var seq__21055_21094__$1 = temp__4126__auto___21093;
                    if (cljs.core.chunked_seq_QMARK_(seq__21055_21094__$1)) {
                      var c__4894__auto___21095 = cljs.core.chunk_first(seq__21055_21094__$1);
                      var G__21096 = cljs.core.chunk_rest(seq__21055_21094__$1);
                      var G__21097 = c__4894__auto___21095;
                      var G__21098 = cljs.core.count(c__4894__auto___21095);
                      var G__21099 = 0;
                      seq__21055_21084 = G__21096;
                      chunk__21056_21085 = G__21097;
                      count__21057_21086 = G__21098;
                      i__21058_21087 = G__21099;
                      continue;
                    } else {
                      var x_21100__$1 = cljs.core.first(seq__21055_21094__$1);
                      arr.push(x_21100__$1);
                      var G__21101 = cljs.core.next(seq__21055_21094__$1);
                      var G__21102 = null;
                      var G__21103 = 0;
                      var G__21104 = 0;
                      seq__21055_21084 = G__21101;
                      chunk__21056_21085 = G__21102;
                      count__21057_21086 = G__21103;
                      i__21058_21087 = G__21104;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj21106 = {};
  return obj21106;
}();
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (function() {
    var and__4097__auto__ = x;
    if (and__4097__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4745__auto__ = x == null ? null : x;
    return function() {
      var or__4109__auto__ = cljs.core._js__GT_clj[function() {
        var G__21110 = x__4745__auto__;
        return goog.typeOf(G__21110);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var cljs$core$js__GT_clj = null;
  var cljs$core$js__GT_clj__1 = function(x) {
    return cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
  };
  var cljs$core$js__GT_clj__2 = function() {
    var G__21167__delegate = function(x, opts) {
      var map__21140 = opts;
      var map__21140__$1 = cljs.core.seq_QMARK_(map__21140) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__21140) : map__21140;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21140__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__21140, map__21140__$1, keywordize_keys, keyfn) {
        return function cljs$core$js__GT_clj_$_thisfn(x__$1) {
          if (function() {
            var G__21156 = x__$1;
            if (G__21156) {
              var bit__4783__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__4109__auto__ = bit__4783__auto__;
                if (cljs.core.truth_(or__4109__auto__)) {
                  return or__4109__auto__;
                } else {
                  return G__21156.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__21156.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__21156);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__21156);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn, x__$1));
              } else {
                if (cljs.core.array_QMARK_(x__$1)) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4863__auto__ = function(map__21140, map__21140__$1, keywordize_keys, keyfn) {
                        return function cljs$core$js__GT_clj_$_thisfn_$_iter__21157(s__21158) {
                          return new cljs.core.LazySeq(null, function(map__21140, map__21140__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__21158__$1 = s__21158;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__21158__$1);
                                if (temp__4126__auto__) {
                                  var s__21158__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__21158__$2)) {
                                    var c__4861__auto__ = cljs.core.chunk_first(s__21158__$2);
                                    var size__4862__auto__ = cljs.core.count(c__4861__auto__);
                                    var b__21160 = cljs.core.chunk_buffer(size__4862__auto__);
                                    if (function() {
                                      var i__21159 = 0;
                                      while (true) {
                                        if (i__21159 < size__4862__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4861__auto__, i__21159);
                                          cljs.core.chunk_append(b__21160, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__21165 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__21165) : keyfn.call(null, G__21165);
                                          }(), cljs$core$js__GT_clj_$_thisfn(x__$1[k])], null));
                                          var G__21168 = i__21159 + 1;
                                          i__21159 = G__21168;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__21160), cljs$core$js__GT_clj_$_thisfn_$_iter__21157(cljs.core.chunk_rest(s__21158__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__21160), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__21158__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__21166 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__21166) : keyfn.call(null, G__21166);
                                    }(), cljs$core$js__GT_clj_$_thisfn(x__$1[k])], null), cljs$core$js__GT_clj_$_thisfn_$_iter__21157(cljs.core.rest(s__21158__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__21140, map__21140__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__21140, map__21140__$1, keywordize_keys, keyfn);
                      return iter__4863__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__21140, map__21140__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__21167 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__21169__i = 0, G__21169__a = new Array(arguments.length - 1);
        while (G__21169__i < G__21169__a.length) {
          G__21169__a[G__21169__i] = arguments[G__21169__i + 1];
          ++G__21169__i;
        }
        opts = new cljs.core.IndexedSeq(G__21169__a, 0);
      }
      return G__21167__delegate.call(this, x, opts);
    };
    G__21167.cljs$lang$maxFixedArity = 1;
    G__21167.cljs$lang$applyTo = function(arglist__21170) {
      var x = cljs.core.first(arglist__21170);
      var opts = cljs.core.rest(arglist__21170);
      return G__21167__delegate(x, opts);
    };
    G__21167.cljs$core$IFn$_invoke$arity$variadic = G__21167__delegate;
    return G__21167;
  }();
  cljs$core$js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$js__GT_clj__1.call(this, x);
      default:
        var G__21171 = null;
        if (arguments.length > 1) {
          var G__21172__i = 0, G__21172__a = new Array(arguments.length - 1);
          while (G__21172__i < G__21172__a.length) {
            G__21172__a[G__21172__i] = arguments[G__21172__i + 1];
            ++G__21172__i;
          }
          G__21171 = new cljs.core.IndexedSeq(G__21172__a, 0);
        }
        return cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__21171);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$js__GT_clj.cljs$lang$maxFixedArity = 1;
  cljs$core$js__GT_clj.cljs$lang$applyTo = cljs$core$js__GT_clj__2.cljs$lang$applyTo;
  cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$1 = cljs$core$js__GT_clj__1;
  cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$js__GT_clj;
}();
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__21175 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__21175) : cljs.core.atom.call(null, G__21175);
  }();
  return function(mem) {
    return function() {
      var G__21177__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__21176 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21176) : cljs.core.deref.call(null, G__21176);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__21177 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__21178__i = 0, G__21178__a = new Array(arguments.length - 0);
          while (G__21178__i < G__21178__a.length) {
            G__21178__a[G__21178__i] = arguments[G__21178__i + 0];
            ++G__21178__i;
          }
          args = new cljs.core.IndexedSeq(G__21178__a, 0);
        }
        return G__21177__delegate.call(this, args);
      };
      G__21177.cljs$lang$maxFixedArity = 0;
      G__21177.cljs$lang$applyTo = function(arglist__21179) {
        var args = cljs.core.seq(arglist__21179);
        return G__21177__delegate(args);
      };
      G__21177.cljs$core$IFn$_invoke$arity$variadic = G__21177__delegate;
      return G__21177;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var cljs$core$trampoline = null;
  var cljs$core$trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__21181 = ret;
        f = G__21181;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var cljs$core$trampoline__2 = function() {
    var G__21182__delegate = function(f, args) {
      return cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__21182 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__21183__i = 0, G__21183__a = new Array(arguments.length - 1);
        while (G__21183__i < G__21183__a.length) {
          G__21183__a[G__21183__i] = arguments[G__21183__i + 1];
          ++G__21183__i;
        }
        args = new cljs.core.IndexedSeq(G__21183__a, 0);
      }
      return G__21182__delegate.call(this, f, args);
    };
    G__21182.cljs$lang$maxFixedArity = 1;
    G__21182.cljs$lang$applyTo = function(arglist__21184) {
      var f = cljs.core.first(arglist__21184);
      var args = cljs.core.rest(arglist__21184);
      return G__21182__delegate(f, args);
    };
    G__21182.cljs$core$IFn$_invoke$arity$variadic = G__21182__delegate;
    return G__21182;
  }();
  cljs$core$trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$trampoline__1.call(this, f);
      default:
        var G__21185 = null;
        if (arguments.length > 1) {
          var G__21186__i = 0, G__21186__a = new Array(arguments.length - 1);
          while (G__21186__i < G__21186__a.length) {
            G__21186__a[G__21186__i] = arguments[G__21186__i + 1];
            ++G__21186__i;
          }
          G__21185 = new cljs.core.IndexedSeq(G__21186__a, 0);
        }
        return cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__21185);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$trampoline.cljs$lang$maxFixedArity = 1;
  cljs$core$trampoline.cljs$lang$applyTo = cljs$core$trampoline__2.cljs$lang$applyTo;
  cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1 = cljs$core$trampoline__1;
  cljs$core$trampoline.cljs$core$IFn$_invoke$arity$variadic = cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$trampoline;
}();
cljs.core.rand = function() {
  var cljs$core$rand = null;
  var cljs$core$rand__0 = function() {
    return cljs$core$rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var cljs$core$rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  cljs$core$rand = function(n) {
    switch(arguments.length) {
      case 0:
        return cljs$core$rand__0.call(this);
      case 1:
        return cljs$core$rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$rand.cljs$core$IFn$_invoke$arity$0 = cljs$core$rand__0;
  cljs$core$rand.cljs$core$IFn$_invoke$arity$1 = cljs$core$rand__1;
  return cljs$core$rand;
}();
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__21189 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__21189) : Math.floor.call(null, G__21189);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__21191 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21191) : f.call(null, G__21191);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__21193 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__21193) : cljs.core.atom.call(null, G__21193);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var cljs$core$swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var cljs$core$swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__21194__i = 0, G__21194__a = new Array(arguments.length - 1);
      while (G__21194__i < G__21194__a.length) {
        G__21194__a[G__21194__i] = arguments[G__21194__i + 1];
        ++G__21194__i;
      }
      args = new cljs.core.IndexedSeq(G__21194__a, 0);
    }
    return cljs$core$swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  cljs$core$swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  cljs$core$swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__21195) {
    var f = cljs.core.first(arglist__21195);
    var args = cljs.core.rest(arglist__21195);
    return cljs$core$swap_global_hierarchy_BANG___delegate(f, args);
  };
  cljs$core$swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_global_hierarchy_BANG___delegate;
  return cljs$core$swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var cljs$core$isa_QMARK_ = null;
  var cljs$core$isa_QMARK___2 = function(child, parent) {
    return cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__21260 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21260) : cljs.core.deref.call(null, G__21260);
    }(), child, parent);
  };
  var cljs$core$isa_QMARK___3 = function(h, child, parent) {
    var or__4109__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__4109__auto__) {
      return or__4109__auto__;
    } else {
      var or__4109__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__4109__auto____$1) {
        return or__4109__auto____$1;
      } else {
        var and__4097__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__4097__auto__) {
          var and__4097__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__4097__auto____$1) {
            var and__4097__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__4097__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__21285 = cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__21283 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__21283) : child.call(null, G__21283);
                  }(), function() {
                    var G__21284 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__21284) : parent.call(null, G__21284);
                  }());
                  var G__21286 = i + 1;
                  ret = G__21285;
                  i = G__21286;
                  continue;
                }
                break;
              }
            } else {
              return and__4097__auto____$2;
            }
          } else {
            return and__4097__auto____$1;
          }
        } else {
          return and__4097__auto__;
        }
      }
    }
  };
  cljs$core$isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return cljs$core$isa_QMARK___2.call(this, h, child);
      case 3:
        return cljs$core$isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$isa_QMARK___2;
  cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = cljs$core$isa_QMARK___3;
  return cljs$core$isa_QMARK_;
}();
cljs.core.parents = function() {
  var cljs$core$parents = null;
  var cljs$core$parents__1 = function(tag) {
    return cljs$core$parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__21290 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21290) : cljs.core.deref.call(null, G__21290);
    }(), tag);
  };
  var cljs$core$parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  cljs$core$parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return cljs$core$parents__1.call(this, h);
      case 2:
        return cljs$core$parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$parents.cljs$core$IFn$_invoke$arity$1 = cljs$core$parents__1;
  cljs$core$parents.cljs$core$IFn$_invoke$arity$2 = cljs$core$parents__2;
  return cljs$core$parents;
}();
cljs.core.ancestors = function() {
  var cljs$core$ancestors = null;
  var cljs$core$ancestors__1 = function(tag) {
    return cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__21294 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21294) : cljs.core.deref.call(null, G__21294);
    }(), tag);
  };
  var cljs$core$ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  cljs$core$ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return cljs$core$ancestors__1.call(this, h);
      case 2:
        return cljs$core$ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$ancestors.cljs$core$IFn$_invoke$arity$1 = cljs$core$ancestors__1;
  cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2 = cljs$core$ancestors__2;
  return cljs$core$ancestors;
}();
cljs.core.descendants = function() {
  var cljs$core$descendants = null;
  var cljs$core$descendants__1 = function(tag) {
    return cljs$core$descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__21298 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21298) : cljs.core.deref.call(null, G__21298);
    }(), tag);
  };
  var cljs$core$descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  cljs$core$descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return cljs$core$descendants__1.call(this, h);
      case 2:
        return cljs$core$descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$descendants.cljs$core$IFn$_invoke$arity$1 = cljs$core$descendants__1;
  cljs$core$descendants.cljs$core$IFn$_invoke$arity$2 = cljs$core$descendants__2;
  return cljs$core$descendants;
}();
cljs.core.derive = function() {
  var cljs$core$derive = null;
  var cljs$core$derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var cljs$core$derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__21307 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__21307) : targets.call(null, G__21307);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__21308 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__21308) : sources.call(null, G__21308);
        }()));
      };
    }(tp, td, ta);
    var or__4109__auto__ = cljs.core.contains_QMARK_(function() {
      var G__21312 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__21312) : tp.call(null, G__21312);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__21313 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__21313) : ta.call(null, G__21313);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__21314 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__21314) : ta.call(null, G__21314);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return h;
    }
  };
  cljs$core$derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return cljs$core$derive__2.call(this, h, tag);
      case 3:
        return cljs$core$derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$derive.cljs$core$IFn$_invoke$arity$2 = cljs$core$derive__2;
  cljs$core$derive.cljs$core$IFn$_invoke$arity$3 = cljs$core$derive__3;
  return cljs$core$derive;
}();
cljs.core.underive = function() {
  var cljs$core$underive = null;
  var cljs$core$underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var cljs$core$underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__21321 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__21321) : parentMap.call(null, G__21321);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__21322 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__21322) : parentMap.call(null, G__21322);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__21315_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__21315_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__21315_SHARP_), cljs.core.second(p1__21315_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__21323 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__21323) : parentMap.call(null, G__21323);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__21316_SHARP_, p2__21317_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__21316_SHARP_, p2__21317_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  cljs$core$underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return cljs$core$underive__2.call(this, h, tag);
      case 3:
        return cljs$core$underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$underive.cljs$core$IFn$_invoke$arity$2 = cljs$core$underive__2;
  cljs$core$underive.cljs$core$IFn$_invoke$arity$3 = cljs$core$underive__3;
  return cljs$core$underive;
}();
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__21326 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21326) : cljs.core.deref.call(null, G__21326);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__21327 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21327) : cljs.core.deref.call(null, G__21327);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__21343 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21343) : cljs.core.deref.call(null, G__21343);
  }().call(null, x);
  var or__4109__auto__ = cljs.core.truth_(function() {
    var and__4097__auto__ = xprefs;
    if (cljs.core.truth_(and__4097__auto__)) {
      var G__21345 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__21345) : xprefs.call(null, G__21345);
    } else {
      return and__4097__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4109__auto__)) {
    return or__4109__auto__;
  } else {
    var or__4109__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__21346 = cljs.core.rest(ps);
          ps = G__21346;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4109__auto____$1)) {
      return or__4109__auto____$1;
    } else {
      var or__4109__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__21347 = cljs.core.rest(ps);
            ps = G__21347;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4109__auto____$2)) {
        return or__4109__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4109__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4109__auto__)) {
    return or__4109__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__21361) {
    var vec__21362 = p__21361;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21362, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21362, 1, null);
    var e = vec__21362;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__21363 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21363) : cljs.core.deref.call(null, G__21363);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4109__auto__ = be == null;
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__21364 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21364) : cljs.core.deref.call(null, G__21364);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__21365 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21365) : cljs.core.deref.call(null, G__21365);
    }(), function() {
      var G__21366 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21366) : cljs.core.deref.call(null, G__21366);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj21368 = {};
  return obj21368;
}();
cljs.core._reset = function cljs$core$_reset(mf) {
  if (function() {
    var and__4097__auto__ = mf;
    if (and__4097__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4745__auto__ = mf == null ? null : mf;
    return function() {
      var or__4109__auto__ = cljs.core._reset[function() {
        var G__21372 = x__4745__auto__;
        return goog.typeOf(G__21372);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._reset["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (function() {
    var and__4097__auto__ = mf;
    if (and__4097__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4745__auto__ = mf == null ? null : mf;
    return function() {
      var or__4109__auto__ = cljs.core._add_method[function() {
        var G__21376 = x__4745__auto__;
        return goog.typeOf(G__21376);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._add_method["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (function() {
    var and__4097__auto__ = mf;
    if (and__4097__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4745__auto__ = mf == null ? null : mf;
    return function() {
      var or__4109__auto__ = cljs.core._remove_method[function() {
        var G__21380 = x__4745__auto__;
        return goog.typeOf(G__21380);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._remove_method["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__4097__auto__ = mf;
    if (and__4097__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4745__auto__ = mf == null ? null : mf;
    return function() {
      var or__4109__auto__ = cljs.core._prefer_method[function() {
        var G__21384 = x__4745__auto__;
        return goog.typeOf(G__21384);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._prefer_method["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (function() {
    var and__4097__auto__ = mf;
    if (and__4097__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4745__auto__ = mf == null ? null : mf;
    return function() {
      var or__4109__auto__ = cljs.core._get_method[function() {
        var G__21388 = x__4745__auto__;
        return goog.typeOf(G__21388);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._get_method["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (function() {
    var and__4097__auto__ = mf;
    if (and__4097__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4745__auto__ = mf == null ? null : mf;
    return function() {
      var or__4109__auto__ = cljs.core._methods[function() {
        var G__21392 = x__4745__auto__;
        return goog.typeOf(G__21392);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._methods["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (function() {
    var and__4097__auto__ = mf;
    if (and__4097__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4745__auto__ = mf == null ? null : mf;
    return function() {
      var or__4109__auto__ = cljs.core._prefers[function() {
        var G__21396 = x__4745__auto__;
        return goog.typeOf(G__21396);
      }()];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core._prefers["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__21398 = this$__$1;
  return goog.getUid(G__21398);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__21399 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21399) : cljs.core.deref.call(null, G__21399);
  }(), function() {
    var G__21400 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21400) : cljs.core.deref.call(null, G__21400);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__21401 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21401) : cljs.core.deref.call(null, G__21401);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__21402 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21402) : cljs.core.deref.call(null, G__21402);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__21403 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21403) : cljs.core.deref.call(null, G__21403);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__21404 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21404) : cljs.core.deref.call(null, G__21404);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__22245 = null;
  var G__22245__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__22245__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21405 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__21405) : self__.dispatch_fn.call(null, G__21405);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21406 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__21406) : target_fn.call(null, G__21406);
  };
  var G__22245__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21407 = a;
      var G__21408 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__21407, G__21408) : self__.dispatch_fn.call(null, G__21407, G__21408);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21409 = a;
    var G__21410 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__21409, G__21410) : target_fn.call(null, G__21409, G__21410);
  };
  var G__22245__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21411 = a;
      var G__21412 = b;
      var G__21413 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__21411, G__21412, G__21413) : self__.dispatch_fn.call(null, G__21411, G__21412, G__21413);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21414 = a;
    var G__21415 = b;
    var G__21416 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__21414, G__21415, G__21416) : target_fn.call(null, G__21414, G__21415, G__21416);
  };
  var G__22245__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21417 = a;
      var G__21418 = b;
      var G__21419 = c;
      var G__21420 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__21417, G__21418, G__21419, G__21420) : self__.dispatch_fn.call(null, G__21417, G__21418, G__21419, G__21420);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21421 = a;
    var G__21422 = b;
    var G__21423 = c;
    var G__21424 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__21421, G__21422, G__21423, G__21424) : target_fn.call(null, G__21421, G__21422, G__21423, G__21424);
  };
  var G__22245__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21425 = a;
      var G__21426 = b;
      var G__21427 = c;
      var G__21428 = d;
      var G__21429 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__21425, G__21426, G__21427, G__21428, G__21429) : self__.dispatch_fn.call(null, G__21425, G__21426, G__21427, G__21428, G__21429);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21430 = a;
    var G__21431 = b;
    var G__21432 = c;
    var G__21433 = d;
    var G__21434 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__21430, G__21431, G__21432, G__21433, G__21434) : target_fn.call(null, G__21430, G__21431, G__21432, G__21433, G__21434);
  };
  var G__22245__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21435 = a;
      var G__21436 = b;
      var G__21437 = c;
      var G__21438 = d;
      var G__21439 = e;
      var G__21440 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__21435, G__21436, G__21437, G__21438, G__21439, G__21440) : self__.dispatch_fn.call(null, G__21435, G__21436, G__21437, G__21438, G__21439, G__21440);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21441 = a;
    var G__21442 = b;
    var G__21443 = c;
    var G__21444 = d;
    var G__21445 = e;
    var G__21446 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__21441, G__21442, G__21443, G__21444, G__21445, G__21446) : target_fn.call(null, G__21441, G__21442, G__21443, G__21444, G__21445, G__21446);
  };
  var G__22245__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21447 = a;
      var G__21448 = b;
      var G__21449 = c;
      var G__21450 = d;
      var G__21451 = e;
      var G__21452 = f;
      var G__21453 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__21447, G__21448, G__21449, G__21450, G__21451, G__21452, G__21453) : self__.dispatch_fn.call(null, G__21447, G__21448, G__21449, G__21450, G__21451, G__21452, G__21453);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21454 = a;
    var G__21455 = b;
    var G__21456 = c;
    var G__21457 = d;
    var G__21458 = e;
    var G__21459 = f;
    var G__21460 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__21454, G__21455, G__21456, G__21457, G__21458, G__21459, G__21460) : target_fn.call(null, G__21454, G__21455, G__21456, G__21457, G__21458, G__21459, G__21460);
  };
  var G__22245__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21461 = a;
      var G__21462 = b;
      var G__21463 = c;
      var G__21464 = d;
      var G__21465 = e;
      var G__21466 = f;
      var G__21467 = g;
      var G__21468 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__21461, G__21462, G__21463, G__21464, G__21465, G__21466, G__21467, G__21468) : self__.dispatch_fn.call(null, G__21461, G__21462, G__21463, G__21464, G__21465, G__21466, G__21467, G__21468);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21469 = a;
    var G__21470 = b;
    var G__21471 = c;
    var G__21472 = d;
    var G__21473 = e;
    var G__21474 = f;
    var G__21475 = g;
    var G__21476 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__21469, G__21470, G__21471, G__21472, G__21473, G__21474, G__21475, G__21476) : target_fn.call(null, G__21469, G__21470, G__21471, G__21472, G__21473, G__21474, G__21475, G__21476);
  };
  var G__22245__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21477 = a;
      var G__21478 = b;
      var G__21479 = c;
      var G__21480 = d;
      var G__21481 = e;
      var G__21482 = f;
      var G__21483 = g;
      var G__21484 = h;
      var G__21485 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__21477, G__21478, G__21479, G__21480, G__21481, G__21482, G__21483, G__21484, G__21485) : self__.dispatch_fn.call(null, G__21477, G__21478, G__21479, G__21480, G__21481, G__21482, G__21483, G__21484, G__21485);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21486 = a;
    var G__21487 = b;
    var G__21488 = c;
    var G__21489 = d;
    var G__21490 = e;
    var G__21491 = f;
    var G__21492 = g;
    var G__21493 = h;
    var G__21494 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__21486, G__21487, G__21488, G__21489, G__21490, G__21491, G__21492, G__21493, G__21494) : target_fn.call(null, G__21486, G__21487, G__21488, G__21489, G__21490, G__21491, G__21492, G__21493, G__21494);
  };
  var G__22245__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21495 = a;
      var G__21496 = b;
      var G__21497 = c;
      var G__21498 = d;
      var G__21499 = e;
      var G__21500 = f;
      var G__21501 = g;
      var G__21502 = h;
      var G__21503 = i;
      var G__21504 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__21495, G__21496, G__21497, G__21498, G__21499, G__21500, G__21501, G__21502, G__21503, G__21504) : self__.dispatch_fn.call(null, G__21495, G__21496, G__21497, G__21498, G__21499, G__21500, G__21501, G__21502, G__21503, G__21504);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21505 = a;
    var G__21506 = b;
    var G__21507 = c;
    var G__21508 = d;
    var G__21509 = e;
    var G__21510 = f;
    var G__21511 = g;
    var G__21512 = h;
    var G__21513 = i;
    var G__21514 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__21505, G__21506, G__21507, G__21508, G__21509, G__21510, G__21511, G__21512, G__21513, G__21514) : target_fn.call(null, G__21505, G__21506, G__21507, G__21508, G__21509, G__21510, G__21511, G__21512, G__21513, G__21514);
  };
  var G__22245__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21515 = a;
      var G__21516 = b;
      var G__21517 = c;
      var G__21518 = d;
      var G__21519 = e;
      var G__21520 = f;
      var G__21521 = g;
      var G__21522 = h;
      var G__21523 = i;
      var G__21524 = j;
      var G__21525 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__21515, G__21516, G__21517, G__21518, G__21519, G__21520, G__21521, G__21522, G__21523, G__21524, G__21525) : self__.dispatch_fn.call(null, G__21515, G__21516, G__21517, G__21518, G__21519, G__21520, G__21521, G__21522, G__21523, G__21524, G__21525);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21526 = a;
    var G__21527 = b;
    var G__21528 = c;
    var G__21529 = d;
    var G__21530 = e;
    var G__21531 = f;
    var G__21532 = g;
    var G__21533 = h;
    var G__21534 = i;
    var G__21535 = j;
    var G__21536 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__21526, G__21527, G__21528, G__21529, G__21530, G__21531, G__21532, G__21533, G__21534, G__21535, G__21536) : target_fn.call(null, G__21526, G__21527, G__21528, G__21529, G__21530, G__21531, G__21532, G__21533, G__21534, G__21535, G__21536);
  };
  var G__22245__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21537 = a;
      var G__21538 = b;
      var G__21539 = c;
      var G__21540 = d;
      var G__21541 = e;
      var G__21542 = f;
      var G__21543 = g;
      var G__21544 = h;
      var G__21545 = i;
      var G__21546 = j;
      var G__21547 = k;
      var G__21548 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__21537, G__21538, G__21539, G__21540, G__21541, G__21542, G__21543, G__21544, G__21545, G__21546, G__21547, G__21548) : self__.dispatch_fn.call(null, G__21537, G__21538, G__21539, G__21540, G__21541, G__21542, G__21543, G__21544, G__21545, G__21546, G__21547, G__21548);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21549 = a;
    var G__21550 = b;
    var G__21551 = c;
    var G__21552 = d;
    var G__21553 = e;
    var G__21554 = f;
    var G__21555 = g;
    var G__21556 = h;
    var G__21557 = i;
    var G__21558 = j;
    var G__21559 = k;
    var G__21560 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__21549, G__21550, G__21551, G__21552, G__21553, G__21554, G__21555, G__21556, G__21557, G__21558, G__21559, G__21560) : target_fn.call(null, G__21549, G__21550, G__21551, G__21552, G__21553, G__21554, G__21555, G__21556, G__21557, G__21558, G__21559, G__21560);
  };
  var G__22245__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21561 = a;
      var G__21562 = b;
      var G__21563 = c;
      var G__21564 = d;
      var G__21565 = e;
      var G__21566 = f;
      var G__21567 = g;
      var G__21568 = h;
      var G__21569 = i;
      var G__21570 = j;
      var G__21571 = k;
      var G__21572 = l;
      var G__21573 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__21561, G__21562, G__21563, G__21564, G__21565, G__21566, G__21567, G__21568, G__21569, G__21570, G__21571, G__21572, G__21573) : self__.dispatch_fn.call(null, G__21561, G__21562, G__21563, G__21564, G__21565, G__21566, G__21567, G__21568, G__21569, G__21570, G__21571, G__21572, G__21573);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21574 = a;
    var G__21575 = b;
    var G__21576 = c;
    var G__21577 = d;
    var G__21578 = e;
    var G__21579 = f;
    var G__21580 = g;
    var G__21581 = h;
    var G__21582 = i;
    var G__21583 = j;
    var G__21584 = k;
    var G__21585 = l;
    var G__21586 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__21574, G__21575, G__21576, G__21577, G__21578, G__21579, G__21580, G__21581, G__21582, G__21583, G__21584, G__21585, G__21586) : target_fn.call(null, G__21574, G__21575, G__21576, G__21577, G__21578, G__21579, G__21580, G__21581, G__21582, G__21583, G__21584, G__21585, G__21586);
  };
  var G__22245__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21587 = a;
      var G__21588 = b;
      var G__21589 = c;
      var G__21590 = d;
      var G__21591 = e;
      var G__21592 = f;
      var G__21593 = g;
      var G__21594 = h;
      var G__21595 = i;
      var G__21596 = j;
      var G__21597 = k;
      var G__21598 = l;
      var G__21599 = m;
      var G__21600 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__21587, G__21588, G__21589, G__21590, G__21591, G__21592, G__21593, G__21594, G__21595, G__21596, G__21597, G__21598, G__21599, G__21600) : self__.dispatch_fn.call(null, G__21587, G__21588, G__21589, G__21590, G__21591, G__21592, G__21593, G__21594, G__21595, G__21596, G__21597, G__21598, G__21599, G__21600);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21601 = a;
    var G__21602 = b;
    var G__21603 = c;
    var G__21604 = d;
    var G__21605 = e;
    var G__21606 = f;
    var G__21607 = g;
    var G__21608 = h;
    var G__21609 = i;
    var G__21610 = j;
    var G__21611 = k;
    var G__21612 = l;
    var G__21613 = m;
    var G__21614 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__21601, G__21602, G__21603, G__21604, G__21605, G__21606, G__21607, G__21608, G__21609, G__21610, G__21611, G__21612, G__21613, G__21614) : target_fn.call(null, G__21601, G__21602, G__21603, G__21604, G__21605, G__21606, G__21607, G__21608, G__21609, G__21610, G__21611, G__21612, G__21613, G__21614);
  };
  var G__22245__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21615 = a;
      var G__21616 = b;
      var G__21617 = c;
      var G__21618 = d;
      var G__21619 = e;
      var G__21620 = f;
      var G__21621 = g;
      var G__21622 = h;
      var G__21623 = i;
      var G__21624 = j;
      var G__21625 = k;
      var G__21626 = l;
      var G__21627 = m;
      var G__21628 = n;
      var G__21629 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__21615, G__21616, G__21617, G__21618, G__21619, G__21620, G__21621, G__21622, G__21623, G__21624, G__21625, G__21626, G__21627, G__21628, G__21629) : self__.dispatch_fn.call(null, G__21615, G__21616, G__21617, G__21618, G__21619, G__21620, G__21621, G__21622, G__21623, G__21624, G__21625, G__21626, G__21627, G__21628, G__21629);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21630 = a;
    var G__21631 = b;
    var G__21632 = c;
    var G__21633 = d;
    var G__21634 = e;
    var G__21635 = f;
    var G__21636 = g;
    var G__21637 = h;
    var G__21638 = i;
    var G__21639 = j;
    var G__21640 = k;
    var G__21641 = l;
    var G__21642 = m;
    var G__21643 = n;
    var G__21644 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__21630, G__21631, G__21632, G__21633, G__21634, G__21635, G__21636, G__21637, G__21638, G__21639, G__21640, G__21641, G__21642, G__21643, G__21644) : target_fn.call(null, G__21630, G__21631, G__21632, G__21633, G__21634, G__21635, G__21636, G__21637, G__21638, G__21639, G__21640, G__21641, G__21642, G__21643, G__21644);
  };
  var G__22245__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21645 = a;
      var G__21646 = b;
      var G__21647 = c;
      var G__21648 = d;
      var G__21649 = e;
      var G__21650 = f;
      var G__21651 = g;
      var G__21652 = h;
      var G__21653 = i;
      var G__21654 = j;
      var G__21655 = k;
      var G__21656 = l;
      var G__21657 = m;
      var G__21658 = n;
      var G__21659 = o;
      var G__21660 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__21645, G__21646, G__21647, G__21648, G__21649, G__21650, G__21651, G__21652, G__21653, G__21654, G__21655, G__21656, G__21657, G__21658, G__21659, G__21660) : self__.dispatch_fn.call(null, G__21645, G__21646, G__21647, G__21648, G__21649, G__21650, G__21651, G__21652, G__21653, G__21654, G__21655, G__21656, G__21657, G__21658, G__21659, G__21660);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21661 = a;
    var G__21662 = b;
    var G__21663 = c;
    var G__21664 = d;
    var G__21665 = e;
    var G__21666 = f;
    var G__21667 = g;
    var G__21668 = h;
    var G__21669 = i;
    var G__21670 = j;
    var G__21671 = k;
    var G__21672 = l;
    var G__21673 = m;
    var G__21674 = n;
    var G__21675 = o;
    var G__21676 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__21661, G__21662, G__21663, G__21664, G__21665, G__21666, G__21667, G__21668, G__21669, G__21670, G__21671, G__21672, G__21673, G__21674, G__21675, G__21676) : target_fn.call(null, G__21661, G__21662, G__21663, G__21664, G__21665, G__21666, G__21667, G__21668, G__21669, G__21670, G__21671, G__21672, G__21673, G__21674, G__21675, G__21676);
  };
  var G__22245__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21677 = a;
      var G__21678 = b;
      var G__21679 = c;
      var G__21680 = d;
      var G__21681 = e;
      var G__21682 = f;
      var G__21683 = g;
      var G__21684 = h;
      var G__21685 = i;
      var G__21686 = j;
      var G__21687 = k;
      var G__21688 = l;
      var G__21689 = m;
      var G__21690 = n;
      var G__21691 = o;
      var G__21692 = p;
      var G__21693 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__21677, G__21678, G__21679, G__21680, G__21681, G__21682, G__21683, G__21684, G__21685, G__21686, G__21687, G__21688, G__21689, G__21690, G__21691, G__21692, G__21693) : self__.dispatch_fn.call(null, G__21677, G__21678, G__21679, G__21680, G__21681, G__21682, G__21683, G__21684, G__21685, G__21686, G__21687, G__21688, G__21689, G__21690, G__21691, G__21692, G__21693);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21694 = a;
    var G__21695 = b;
    var G__21696 = c;
    var G__21697 = d;
    var G__21698 = e;
    var G__21699 = f;
    var G__21700 = g;
    var G__21701 = h;
    var G__21702 = i;
    var G__21703 = j;
    var G__21704 = k;
    var G__21705 = l;
    var G__21706 = m;
    var G__21707 = n;
    var G__21708 = o;
    var G__21709 = p;
    var G__21710 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__21694, G__21695, G__21696, G__21697, G__21698, G__21699, G__21700, G__21701, G__21702, G__21703, G__21704, G__21705, G__21706, G__21707, G__21708, G__21709, G__21710) : target_fn.call(null, G__21694, G__21695, G__21696, G__21697, G__21698, G__21699, G__21700, G__21701, G__21702, G__21703, G__21704, G__21705, G__21706, G__21707, G__21708, G__21709, G__21710);
  };
  var G__22245__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21711 = a;
      var G__21712 = b;
      var G__21713 = c;
      var G__21714 = d;
      var G__21715 = e;
      var G__21716 = f;
      var G__21717 = g;
      var G__21718 = h;
      var G__21719 = i;
      var G__21720 = j;
      var G__21721 = k;
      var G__21722 = l;
      var G__21723 = m;
      var G__21724 = n;
      var G__21725 = o;
      var G__21726 = p;
      var G__21727 = q;
      var G__21728 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__21711, G__21712, G__21713, G__21714, G__21715, G__21716, G__21717, G__21718, G__21719, G__21720, G__21721, G__21722, G__21723, G__21724, G__21725, G__21726, G__21727, G__21728) : self__.dispatch_fn.call(null, G__21711, G__21712, G__21713, G__21714, G__21715, G__21716, G__21717, G__21718, G__21719, G__21720, G__21721, G__21722, G__21723, G__21724, G__21725, G__21726, G__21727, G__21728);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21729 = a;
    var G__21730 = b;
    var G__21731 = c;
    var G__21732 = d;
    var G__21733 = e;
    var G__21734 = f;
    var G__21735 = g;
    var G__21736 = h;
    var G__21737 = i;
    var G__21738 = j;
    var G__21739 = k;
    var G__21740 = l;
    var G__21741 = m;
    var G__21742 = n;
    var G__21743 = o;
    var G__21744 = p;
    var G__21745 = q;
    var G__21746 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__21729, G__21730, G__21731, G__21732, G__21733, G__21734, G__21735, G__21736, G__21737, G__21738, G__21739, G__21740, G__21741, G__21742, G__21743, G__21744, G__21745, G__21746) : target_fn.call(null, G__21729, G__21730, G__21731, G__21732, G__21733, G__21734, G__21735, G__21736, G__21737, G__21738, G__21739, G__21740, G__21741, G__21742, G__21743, G__21744, G__21745, G__21746);
  };
  var G__22245__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21747 = a;
      var G__21748 = b;
      var G__21749 = c;
      var G__21750 = d;
      var G__21751 = e;
      var G__21752 = f;
      var G__21753 = g;
      var G__21754 = h;
      var G__21755 = i;
      var G__21756 = j;
      var G__21757 = k;
      var G__21758 = l;
      var G__21759 = m;
      var G__21760 = n;
      var G__21761 = o;
      var G__21762 = p;
      var G__21763 = q;
      var G__21764 = r;
      var G__21765 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__21747, G__21748, G__21749, G__21750, G__21751, G__21752, G__21753, G__21754, G__21755, G__21756, G__21757, G__21758, G__21759, G__21760, G__21761, G__21762, G__21763, G__21764, G__21765) : self__.dispatch_fn.call(null, G__21747, G__21748, G__21749, G__21750, G__21751, G__21752, G__21753, G__21754, G__21755, G__21756, G__21757, G__21758, G__21759, G__21760, G__21761, G__21762, G__21763, 
      G__21764, G__21765);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21766 = a;
    var G__21767 = b;
    var G__21768 = c;
    var G__21769 = d;
    var G__21770 = e;
    var G__21771 = f;
    var G__21772 = g;
    var G__21773 = h;
    var G__21774 = i;
    var G__21775 = j;
    var G__21776 = k;
    var G__21777 = l;
    var G__21778 = m;
    var G__21779 = n;
    var G__21780 = o;
    var G__21781 = p;
    var G__21782 = q;
    var G__21783 = r;
    var G__21784 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__21766, G__21767, G__21768, G__21769, G__21770, G__21771, G__21772, G__21773, G__21774, G__21775, G__21776, G__21777, G__21778, G__21779, G__21780, G__21781, G__21782, G__21783, G__21784) : target_fn.call(null, G__21766, G__21767, G__21768, G__21769, G__21770, G__21771, G__21772, G__21773, G__21774, G__21775, G__21776, G__21777, G__21778, G__21779, G__21780, G__21781, G__21782, G__21783, G__21784);
  };
  var G__22245__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21785 = a;
      var G__21786 = b;
      var G__21787 = c;
      var G__21788 = d;
      var G__21789 = e;
      var G__21790 = f;
      var G__21791 = g;
      var G__21792 = h;
      var G__21793 = i;
      var G__21794 = j;
      var G__21795 = k;
      var G__21796 = l;
      var G__21797 = m;
      var G__21798 = n;
      var G__21799 = o;
      var G__21800 = p;
      var G__21801 = q;
      var G__21802 = r;
      var G__21803 = s;
      var G__21804 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__21785, G__21786, G__21787, G__21788, G__21789, G__21790, G__21791, G__21792, G__21793, G__21794, G__21795, G__21796, G__21797, G__21798, G__21799, G__21800, G__21801, G__21802, G__21803, G__21804) : self__.dispatch_fn.call(null, G__21785, G__21786, G__21787, G__21788, G__21789, G__21790, G__21791, G__21792, G__21793, G__21794, G__21795, G__21796, G__21797, G__21798, G__21799, G__21800, 
      G__21801, G__21802, G__21803, G__21804);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21805 = a;
    var G__21806 = b;
    var G__21807 = c;
    var G__21808 = d;
    var G__21809 = e;
    var G__21810 = f;
    var G__21811 = g;
    var G__21812 = h;
    var G__21813 = i;
    var G__21814 = j;
    var G__21815 = k;
    var G__21816 = l;
    var G__21817 = m;
    var G__21818 = n;
    var G__21819 = o;
    var G__21820 = p;
    var G__21821 = q;
    var G__21822 = r;
    var G__21823 = s;
    var G__21824 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__21805, G__21806, G__21807, G__21808, G__21809, G__21810, G__21811, G__21812, G__21813, G__21814, G__21815, G__21816, G__21817, G__21818, G__21819, G__21820, G__21821, G__21822, G__21823, G__21824) : target_fn.call(null, G__21805, G__21806, G__21807, G__21808, G__21809, G__21810, G__21811, G__21812, G__21813, G__21814, G__21815, G__21816, G__21817, G__21818, G__21819, G__21820, G__21821, G__21822, G__21823, 
    G__21824);
  };
  var G__22245__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__22245 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__22245__1.call(this, self__);
      case 2:
        return G__22245__2.call(this, self__, a);
      case 3:
        return G__22245__3.call(this, self__, a, b);
      case 4:
        return G__22245__4.call(this, self__, a, b, c);
      case 5:
        return G__22245__5.call(this, self__, a, b, c, d);
      case 6:
        return G__22245__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__22245__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__22245__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__22245__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__22245__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__22245__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__22245__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__22245__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__22245__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__22245__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__22245__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__22245__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__22245__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__22245__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__22245__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__22245__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__22245__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22245.cljs$core$IFn$_invoke$arity$1 = G__22245__1;
  G__22245.cljs$core$IFn$_invoke$arity$2 = G__22245__2;
  G__22245.cljs$core$IFn$_invoke$arity$3 = G__22245__3;
  G__22245.cljs$core$IFn$_invoke$arity$4 = G__22245__4;
  G__22245.cljs$core$IFn$_invoke$arity$5 = G__22245__5;
  G__22245.cljs$core$IFn$_invoke$arity$6 = G__22245__6;
  G__22245.cljs$core$IFn$_invoke$arity$7 = G__22245__7;
  G__22245.cljs$core$IFn$_invoke$arity$8 = G__22245__8;
  G__22245.cljs$core$IFn$_invoke$arity$9 = G__22245__9;
  G__22245.cljs$core$IFn$_invoke$arity$10 = G__22245__10;
  G__22245.cljs$core$IFn$_invoke$arity$11 = G__22245__11;
  G__22245.cljs$core$IFn$_invoke$arity$12 = G__22245__12;
  G__22245.cljs$core$IFn$_invoke$arity$13 = G__22245__13;
  G__22245.cljs$core$IFn$_invoke$arity$14 = G__22245__14;
  G__22245.cljs$core$IFn$_invoke$arity$15 = G__22245__15;
  G__22245.cljs$core$IFn$_invoke$arity$16 = G__22245__16;
  G__22245.cljs$core$IFn$_invoke$arity$17 = G__22245__17;
  G__22245.cljs$core$IFn$_invoke$arity$18 = G__22245__18;
  G__22245.cljs$core$IFn$_invoke$arity$19 = G__22245__19;
  G__22245.cljs$core$IFn$_invoke$arity$20 = G__22245__20;
  G__22245.cljs$core$IFn$_invoke$arity$21 = G__22245__21;
  G__22245.cljs$core$IFn$_invoke$arity$22 = G__22245__22;
  return G__22245;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args21397) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21397)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21825 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__21825) : self__.dispatch_fn.call(null, G__21825);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21826 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__21826) : target_fn.call(null, G__21826);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21827 = a;
    var G__21828 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__21827, G__21828) : self__.dispatch_fn.call(null, G__21827, G__21828);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21829 = a;
  var G__21830 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__21829, G__21830) : target_fn.call(null, G__21829, G__21830);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21831 = a;
    var G__21832 = b;
    var G__21833 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__21831, G__21832, G__21833) : self__.dispatch_fn.call(null, G__21831, G__21832, G__21833);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21834 = a;
  var G__21835 = b;
  var G__21836 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__21834, G__21835, G__21836) : target_fn.call(null, G__21834, G__21835, G__21836);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21837 = a;
    var G__21838 = b;
    var G__21839 = c;
    var G__21840 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__21837, G__21838, G__21839, G__21840) : self__.dispatch_fn.call(null, G__21837, G__21838, G__21839, G__21840);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21841 = a;
  var G__21842 = b;
  var G__21843 = c;
  var G__21844 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__21841, G__21842, G__21843, G__21844) : target_fn.call(null, G__21841, G__21842, G__21843, G__21844);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21845 = a;
    var G__21846 = b;
    var G__21847 = c;
    var G__21848 = d;
    var G__21849 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__21845, G__21846, G__21847, G__21848, G__21849) : self__.dispatch_fn.call(null, G__21845, G__21846, G__21847, G__21848, G__21849);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21850 = a;
  var G__21851 = b;
  var G__21852 = c;
  var G__21853 = d;
  var G__21854 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__21850, G__21851, G__21852, G__21853, G__21854) : target_fn.call(null, G__21850, G__21851, G__21852, G__21853, G__21854);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21855 = a;
    var G__21856 = b;
    var G__21857 = c;
    var G__21858 = d;
    var G__21859 = e;
    var G__21860 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__21855, G__21856, G__21857, G__21858, G__21859, G__21860) : self__.dispatch_fn.call(null, G__21855, G__21856, G__21857, G__21858, G__21859, G__21860);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21861 = a;
  var G__21862 = b;
  var G__21863 = c;
  var G__21864 = d;
  var G__21865 = e;
  var G__21866 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__21861, G__21862, G__21863, G__21864, G__21865, G__21866) : target_fn.call(null, G__21861, G__21862, G__21863, G__21864, G__21865, G__21866);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21867 = a;
    var G__21868 = b;
    var G__21869 = c;
    var G__21870 = d;
    var G__21871 = e;
    var G__21872 = f;
    var G__21873 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__21867, G__21868, G__21869, G__21870, G__21871, G__21872, G__21873) : self__.dispatch_fn.call(null, G__21867, G__21868, G__21869, G__21870, G__21871, G__21872, G__21873);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21874 = a;
  var G__21875 = b;
  var G__21876 = c;
  var G__21877 = d;
  var G__21878 = e;
  var G__21879 = f;
  var G__21880 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__21874, G__21875, G__21876, G__21877, G__21878, G__21879, G__21880) : target_fn.call(null, G__21874, G__21875, G__21876, G__21877, G__21878, G__21879, G__21880);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21881 = a;
    var G__21882 = b;
    var G__21883 = c;
    var G__21884 = d;
    var G__21885 = e;
    var G__21886 = f;
    var G__21887 = g;
    var G__21888 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__21881, G__21882, G__21883, G__21884, G__21885, G__21886, G__21887, G__21888) : self__.dispatch_fn.call(null, G__21881, G__21882, G__21883, G__21884, G__21885, G__21886, G__21887, G__21888);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21889 = a;
  var G__21890 = b;
  var G__21891 = c;
  var G__21892 = d;
  var G__21893 = e;
  var G__21894 = f;
  var G__21895 = g;
  var G__21896 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__21889, G__21890, G__21891, G__21892, G__21893, G__21894, G__21895, G__21896) : target_fn.call(null, G__21889, G__21890, G__21891, G__21892, G__21893, G__21894, G__21895, G__21896);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21897 = a;
    var G__21898 = b;
    var G__21899 = c;
    var G__21900 = d;
    var G__21901 = e;
    var G__21902 = f;
    var G__21903 = g;
    var G__21904 = h;
    var G__21905 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__21897, G__21898, G__21899, G__21900, G__21901, G__21902, G__21903, G__21904, G__21905) : self__.dispatch_fn.call(null, G__21897, G__21898, G__21899, G__21900, G__21901, G__21902, G__21903, G__21904, G__21905);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21906 = a;
  var G__21907 = b;
  var G__21908 = c;
  var G__21909 = d;
  var G__21910 = e;
  var G__21911 = f;
  var G__21912 = g;
  var G__21913 = h;
  var G__21914 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__21906, G__21907, G__21908, G__21909, G__21910, G__21911, G__21912, G__21913, G__21914) : target_fn.call(null, G__21906, G__21907, G__21908, G__21909, G__21910, G__21911, G__21912, G__21913, G__21914);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21915 = a;
    var G__21916 = b;
    var G__21917 = c;
    var G__21918 = d;
    var G__21919 = e;
    var G__21920 = f;
    var G__21921 = g;
    var G__21922 = h;
    var G__21923 = i;
    var G__21924 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__21915, G__21916, G__21917, G__21918, G__21919, G__21920, G__21921, G__21922, G__21923, G__21924) : self__.dispatch_fn.call(null, G__21915, G__21916, G__21917, G__21918, G__21919, G__21920, G__21921, G__21922, G__21923, G__21924);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21925 = a;
  var G__21926 = b;
  var G__21927 = c;
  var G__21928 = d;
  var G__21929 = e;
  var G__21930 = f;
  var G__21931 = g;
  var G__21932 = h;
  var G__21933 = i;
  var G__21934 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__21925, G__21926, G__21927, G__21928, G__21929, G__21930, G__21931, G__21932, G__21933, G__21934) : target_fn.call(null, G__21925, G__21926, G__21927, G__21928, G__21929, G__21930, G__21931, G__21932, G__21933, G__21934);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21935 = a;
    var G__21936 = b;
    var G__21937 = c;
    var G__21938 = d;
    var G__21939 = e;
    var G__21940 = f;
    var G__21941 = g;
    var G__21942 = h;
    var G__21943 = i;
    var G__21944 = j;
    var G__21945 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__21935, G__21936, G__21937, G__21938, G__21939, G__21940, G__21941, G__21942, G__21943, G__21944, G__21945) : self__.dispatch_fn.call(null, G__21935, G__21936, G__21937, G__21938, G__21939, G__21940, G__21941, G__21942, G__21943, G__21944, G__21945);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21946 = a;
  var G__21947 = b;
  var G__21948 = c;
  var G__21949 = d;
  var G__21950 = e;
  var G__21951 = f;
  var G__21952 = g;
  var G__21953 = h;
  var G__21954 = i;
  var G__21955 = j;
  var G__21956 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__21946, G__21947, G__21948, G__21949, G__21950, G__21951, G__21952, G__21953, G__21954, G__21955, G__21956) : target_fn.call(null, G__21946, G__21947, G__21948, G__21949, G__21950, G__21951, G__21952, G__21953, G__21954, G__21955, G__21956);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21957 = a;
    var G__21958 = b;
    var G__21959 = c;
    var G__21960 = d;
    var G__21961 = e;
    var G__21962 = f;
    var G__21963 = g;
    var G__21964 = h;
    var G__21965 = i;
    var G__21966 = j;
    var G__21967 = k;
    var G__21968 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__21957, G__21958, G__21959, G__21960, G__21961, G__21962, G__21963, G__21964, G__21965, G__21966, G__21967, G__21968) : self__.dispatch_fn.call(null, G__21957, G__21958, G__21959, G__21960, G__21961, G__21962, G__21963, G__21964, G__21965, G__21966, G__21967, G__21968);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21969 = a;
  var G__21970 = b;
  var G__21971 = c;
  var G__21972 = d;
  var G__21973 = e;
  var G__21974 = f;
  var G__21975 = g;
  var G__21976 = h;
  var G__21977 = i;
  var G__21978 = j;
  var G__21979 = k;
  var G__21980 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__21969, G__21970, G__21971, G__21972, G__21973, G__21974, G__21975, G__21976, G__21977, G__21978, G__21979, G__21980) : target_fn.call(null, G__21969, G__21970, G__21971, G__21972, G__21973, G__21974, G__21975, G__21976, G__21977, G__21978, G__21979, G__21980);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21981 = a;
    var G__21982 = b;
    var G__21983 = c;
    var G__21984 = d;
    var G__21985 = e;
    var G__21986 = f;
    var G__21987 = g;
    var G__21988 = h;
    var G__21989 = i;
    var G__21990 = j;
    var G__21991 = k;
    var G__21992 = l;
    var G__21993 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__21981, G__21982, G__21983, G__21984, G__21985, G__21986, G__21987, G__21988, G__21989, G__21990, G__21991, G__21992, G__21993) : self__.dispatch_fn.call(null, G__21981, G__21982, G__21983, G__21984, G__21985, G__21986, G__21987, G__21988, G__21989, G__21990, G__21991, G__21992, G__21993);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21994 = a;
  var G__21995 = b;
  var G__21996 = c;
  var G__21997 = d;
  var G__21998 = e;
  var G__21999 = f;
  var G__22000 = g;
  var G__22001 = h;
  var G__22002 = i;
  var G__22003 = j;
  var G__22004 = k;
  var G__22005 = l;
  var G__22006 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__21994, G__21995, G__21996, G__21997, G__21998, G__21999, G__22000, G__22001, G__22002, G__22003, G__22004, G__22005, G__22006) : target_fn.call(null, G__21994, G__21995, G__21996, G__21997, G__21998, G__21999, G__22000, G__22001, G__22002, G__22003, G__22004, G__22005, G__22006);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22007 = a;
    var G__22008 = b;
    var G__22009 = c;
    var G__22010 = d;
    var G__22011 = e;
    var G__22012 = f;
    var G__22013 = g;
    var G__22014 = h;
    var G__22015 = i;
    var G__22016 = j;
    var G__22017 = k;
    var G__22018 = l;
    var G__22019 = m;
    var G__22020 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__22007, G__22008, G__22009, G__22010, G__22011, G__22012, G__22013, G__22014, G__22015, G__22016, G__22017, G__22018, G__22019, G__22020) : self__.dispatch_fn.call(null, G__22007, G__22008, G__22009, G__22010, G__22011, G__22012, G__22013, G__22014, G__22015, G__22016, G__22017, G__22018, G__22019, G__22020);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22021 = a;
  var G__22022 = b;
  var G__22023 = c;
  var G__22024 = d;
  var G__22025 = e;
  var G__22026 = f;
  var G__22027 = g;
  var G__22028 = h;
  var G__22029 = i;
  var G__22030 = j;
  var G__22031 = k;
  var G__22032 = l;
  var G__22033 = m;
  var G__22034 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__22021, G__22022, G__22023, G__22024, G__22025, G__22026, G__22027, G__22028, G__22029, G__22030, G__22031, G__22032, G__22033, G__22034) : target_fn.call(null, G__22021, G__22022, G__22023, G__22024, G__22025, G__22026, G__22027, G__22028, G__22029, G__22030, G__22031, G__22032, G__22033, G__22034);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22035 = a;
    var G__22036 = b;
    var G__22037 = c;
    var G__22038 = d;
    var G__22039 = e;
    var G__22040 = f;
    var G__22041 = g;
    var G__22042 = h;
    var G__22043 = i;
    var G__22044 = j;
    var G__22045 = k;
    var G__22046 = l;
    var G__22047 = m;
    var G__22048 = n;
    var G__22049 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__22035, G__22036, G__22037, G__22038, G__22039, G__22040, G__22041, G__22042, G__22043, G__22044, G__22045, G__22046, G__22047, G__22048, G__22049) : self__.dispatch_fn.call(null, G__22035, G__22036, G__22037, G__22038, G__22039, G__22040, G__22041, G__22042, G__22043, G__22044, G__22045, G__22046, G__22047, G__22048, G__22049);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22050 = a;
  var G__22051 = b;
  var G__22052 = c;
  var G__22053 = d;
  var G__22054 = e;
  var G__22055 = f;
  var G__22056 = g;
  var G__22057 = h;
  var G__22058 = i;
  var G__22059 = j;
  var G__22060 = k;
  var G__22061 = l;
  var G__22062 = m;
  var G__22063 = n;
  var G__22064 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__22050, G__22051, G__22052, G__22053, G__22054, G__22055, G__22056, G__22057, G__22058, G__22059, G__22060, G__22061, G__22062, G__22063, G__22064) : target_fn.call(null, G__22050, G__22051, G__22052, G__22053, G__22054, G__22055, G__22056, G__22057, G__22058, G__22059, G__22060, G__22061, G__22062, G__22063, G__22064);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22065 = a;
    var G__22066 = b;
    var G__22067 = c;
    var G__22068 = d;
    var G__22069 = e;
    var G__22070 = f;
    var G__22071 = g;
    var G__22072 = h;
    var G__22073 = i;
    var G__22074 = j;
    var G__22075 = k;
    var G__22076 = l;
    var G__22077 = m;
    var G__22078 = n;
    var G__22079 = o;
    var G__22080 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__22065, G__22066, G__22067, G__22068, G__22069, G__22070, G__22071, G__22072, G__22073, G__22074, G__22075, G__22076, G__22077, G__22078, G__22079, G__22080) : self__.dispatch_fn.call(null, G__22065, G__22066, G__22067, G__22068, G__22069, G__22070, G__22071, G__22072, G__22073, G__22074, G__22075, G__22076, G__22077, G__22078, G__22079, G__22080);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22081 = a;
  var G__22082 = b;
  var G__22083 = c;
  var G__22084 = d;
  var G__22085 = e;
  var G__22086 = f;
  var G__22087 = g;
  var G__22088 = h;
  var G__22089 = i;
  var G__22090 = j;
  var G__22091 = k;
  var G__22092 = l;
  var G__22093 = m;
  var G__22094 = n;
  var G__22095 = o;
  var G__22096 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__22081, G__22082, G__22083, G__22084, G__22085, G__22086, G__22087, G__22088, G__22089, G__22090, G__22091, G__22092, G__22093, G__22094, G__22095, G__22096) : target_fn.call(null, G__22081, G__22082, G__22083, G__22084, G__22085, G__22086, G__22087, G__22088, G__22089, G__22090, G__22091, G__22092, G__22093, G__22094, G__22095, G__22096);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22097 = a;
    var G__22098 = b;
    var G__22099 = c;
    var G__22100 = d;
    var G__22101 = e;
    var G__22102 = f;
    var G__22103 = g;
    var G__22104 = h;
    var G__22105 = i;
    var G__22106 = j;
    var G__22107 = k;
    var G__22108 = l;
    var G__22109 = m;
    var G__22110 = n;
    var G__22111 = o;
    var G__22112 = p;
    var G__22113 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__22097, G__22098, G__22099, G__22100, G__22101, G__22102, G__22103, G__22104, G__22105, G__22106, G__22107, G__22108, G__22109, G__22110, G__22111, G__22112, G__22113) : self__.dispatch_fn.call(null, G__22097, G__22098, G__22099, G__22100, G__22101, G__22102, G__22103, G__22104, G__22105, G__22106, G__22107, G__22108, G__22109, G__22110, G__22111, G__22112, G__22113);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22114 = a;
  var G__22115 = b;
  var G__22116 = c;
  var G__22117 = d;
  var G__22118 = e;
  var G__22119 = f;
  var G__22120 = g;
  var G__22121 = h;
  var G__22122 = i;
  var G__22123 = j;
  var G__22124 = k;
  var G__22125 = l;
  var G__22126 = m;
  var G__22127 = n;
  var G__22128 = o;
  var G__22129 = p;
  var G__22130 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__22114, G__22115, G__22116, G__22117, G__22118, G__22119, G__22120, G__22121, G__22122, G__22123, G__22124, G__22125, G__22126, G__22127, G__22128, G__22129, G__22130) : target_fn.call(null, G__22114, G__22115, G__22116, G__22117, G__22118, G__22119, G__22120, G__22121, G__22122, G__22123, G__22124, G__22125, G__22126, G__22127, G__22128, G__22129, G__22130);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22131 = a;
    var G__22132 = b;
    var G__22133 = c;
    var G__22134 = d;
    var G__22135 = e;
    var G__22136 = f;
    var G__22137 = g;
    var G__22138 = h;
    var G__22139 = i;
    var G__22140 = j;
    var G__22141 = k;
    var G__22142 = l;
    var G__22143 = m;
    var G__22144 = n;
    var G__22145 = o;
    var G__22146 = p;
    var G__22147 = q;
    var G__22148 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__22131, G__22132, G__22133, G__22134, G__22135, G__22136, G__22137, G__22138, G__22139, G__22140, G__22141, G__22142, G__22143, G__22144, G__22145, G__22146, G__22147, G__22148) : self__.dispatch_fn.call(null, G__22131, G__22132, G__22133, G__22134, G__22135, G__22136, G__22137, G__22138, G__22139, G__22140, G__22141, G__22142, G__22143, G__22144, G__22145, G__22146, G__22147, G__22148);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22149 = a;
  var G__22150 = b;
  var G__22151 = c;
  var G__22152 = d;
  var G__22153 = e;
  var G__22154 = f;
  var G__22155 = g;
  var G__22156 = h;
  var G__22157 = i;
  var G__22158 = j;
  var G__22159 = k;
  var G__22160 = l;
  var G__22161 = m;
  var G__22162 = n;
  var G__22163 = o;
  var G__22164 = p;
  var G__22165 = q;
  var G__22166 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__22149, G__22150, G__22151, G__22152, G__22153, G__22154, G__22155, G__22156, G__22157, G__22158, G__22159, G__22160, G__22161, G__22162, G__22163, G__22164, G__22165, G__22166) : target_fn.call(null, G__22149, G__22150, G__22151, G__22152, G__22153, G__22154, G__22155, G__22156, G__22157, G__22158, G__22159, G__22160, G__22161, G__22162, G__22163, G__22164, G__22165, G__22166);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22167 = a;
    var G__22168 = b;
    var G__22169 = c;
    var G__22170 = d;
    var G__22171 = e;
    var G__22172 = f;
    var G__22173 = g;
    var G__22174 = h;
    var G__22175 = i;
    var G__22176 = j;
    var G__22177 = k;
    var G__22178 = l;
    var G__22179 = m;
    var G__22180 = n;
    var G__22181 = o;
    var G__22182 = p;
    var G__22183 = q;
    var G__22184 = r;
    var G__22185 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__22167, G__22168, G__22169, G__22170, G__22171, G__22172, G__22173, G__22174, G__22175, G__22176, G__22177, G__22178, G__22179, G__22180, G__22181, G__22182, G__22183, G__22184, G__22185) : self__.dispatch_fn.call(null, G__22167, G__22168, G__22169, G__22170, G__22171, G__22172, G__22173, G__22174, G__22175, G__22176, G__22177, G__22178, G__22179, G__22180, G__22181, G__22182, G__22183, 
    G__22184, G__22185);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22186 = a;
  var G__22187 = b;
  var G__22188 = c;
  var G__22189 = d;
  var G__22190 = e;
  var G__22191 = f;
  var G__22192 = g;
  var G__22193 = h;
  var G__22194 = i;
  var G__22195 = j;
  var G__22196 = k;
  var G__22197 = l;
  var G__22198 = m;
  var G__22199 = n;
  var G__22200 = o;
  var G__22201 = p;
  var G__22202 = q;
  var G__22203 = r;
  var G__22204 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__22186, G__22187, G__22188, G__22189, G__22190, G__22191, G__22192, G__22193, G__22194, G__22195, G__22196, G__22197, G__22198, G__22199, G__22200, G__22201, G__22202, G__22203, G__22204) : target_fn.call(null, G__22186, G__22187, G__22188, G__22189, G__22190, G__22191, G__22192, G__22193, G__22194, G__22195, G__22196, G__22197, G__22198, G__22199, G__22200, G__22201, G__22202, G__22203, G__22204);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22205 = a;
    var G__22206 = b;
    var G__22207 = c;
    var G__22208 = d;
    var G__22209 = e;
    var G__22210 = f;
    var G__22211 = g;
    var G__22212 = h;
    var G__22213 = i;
    var G__22214 = j;
    var G__22215 = k;
    var G__22216 = l;
    var G__22217 = m;
    var G__22218 = n;
    var G__22219 = o;
    var G__22220 = p;
    var G__22221 = q;
    var G__22222 = r;
    var G__22223 = s;
    var G__22224 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__22205, G__22206, G__22207, G__22208, G__22209, G__22210, G__22211, G__22212, G__22213, G__22214, G__22215, G__22216, G__22217, G__22218, G__22219, G__22220, G__22221, G__22222, G__22223, G__22224) : self__.dispatch_fn.call(null, G__22205, G__22206, G__22207, G__22208, G__22209, G__22210, G__22211, G__22212, G__22213, G__22214, G__22215, G__22216, G__22217, G__22218, G__22219, G__22220, 
    G__22221, G__22222, G__22223, G__22224);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22225 = a;
  var G__22226 = b;
  var G__22227 = c;
  var G__22228 = d;
  var G__22229 = e;
  var G__22230 = f;
  var G__22231 = g;
  var G__22232 = h;
  var G__22233 = i;
  var G__22234 = j;
  var G__22235 = k;
  var G__22236 = l;
  var G__22237 = m;
  var G__22238 = n;
  var G__22239 = o;
  var G__22240 = p;
  var G__22241 = q;
  var G__22242 = r;
  var G__22243 = s;
  var G__22244 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__22225, G__22226, G__22227, G__22228, G__22229, G__22230, G__22231, G__22232, G__22233, G__22234, G__22235, G__22236, G__22237, G__22238, G__22239, G__22240, G__22241, G__22242, G__22243, G__22244) : target_fn.call(null, G__22225, G__22226, G__22227, G__22228, G__22229, G__22230, G__22231, G__22232, G__22233, G__22234, G__22235, G__22236, G__22237, G__22238, G__22239, G__22240, G__22241, G__22242, G__22243, 
  G__22244);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__22246 = self__.uuid;
  var G__22247 = other.uuid;
  return goog.array.defaultCompare(G__22246, G__22247);
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__22248 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__22248);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write(writer__4689__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error;
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function() {
  var cljs$core$ex_info = null;
  var cljs$core$ex_info__2 = function(msg, data) {
    return cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
  };
  var cljs$core$ex_info__3 = function(msg, data, cause) {
    return new cljs.core.ExceptionInfo(msg, data, cause);
  };
  cljs$core$ex_info = function(msg, data, cause) {
    switch(arguments.length) {
      case 2:
        return cljs$core$ex_info__2.call(this, msg, data);
      case 3:
        return cljs$core$ex_info__3.call(this, msg, data, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$ex_info.cljs$core$IFn$_invoke$arity$2 = cljs$core$ex_info__2;
  cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3 = cljs$core$ex_info__3;
  return cljs$core$ex_info;
}();
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__22256 = x;
      var G__22257 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__22256, G__22257) : pred.call(null, G__22256, G__22257);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__22258 = y;
        var G__22259 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__22258, G__22259) : pred.call(null, G__22258, G__22259);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("centipair.core.utilities.dom");
goog.require("cljs.core");
goog.require("goog.dom");
centipair.core.utilities.dom.get_value = function centipair$core$utilities$dom$get_value(id) {
  return goog.dom.getElement(id).value;
};
centipair.core.utilities.dom.set_value = function centipair$core$utilities$dom$set_value(id, value) {
  return goog.dom.getElement(id).value = value;
};
centipair.core.utilities.dom.innerHtml = function centipair$core$utilities$dom$innerHtml(id, value) {
  return goog.dom.getElement(id).innerHTML = value;
};
goog.provide("centipair.core.utilities.validators");
goog.require("cljs.core");
centipair.core.utilities.validators.matches_regex_QMARK_ = function centipair$core$utilities$validators$matches_regex_QMARK_(v, regex) {
  return cljs.core.boolean$.call(null, cljs.core.re_matches.call(null, regex, v));
};
centipair.core.utilities.validators.has_value_QMARK_ = function centipair$core$utilities$validators$has_value_QMARK_(v) {
  var and__4097__auto__ = v;
  if (cljs.core.truth_(and__4097__auto__)) {
    return cljs.core.not_EQ_.call(null, v, "");
  } else {
    return and__4097__auto__;
  }
};
centipair.core.utilities.validators.not_nil_QMARK_ = function centipair$core$utilities$validators$not_nil_QMARK_(v) {
  return cljs.core.boolean$.call(null, function() {
    var or__4109__auto__ = v;
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return v === false;
    }
  }());
};
centipair.core.utilities.validators.is_email_QMARK_ = function centipair$core$utilities$validators$is_email_QMARK_(v) {
  if (v == null) {
    return false;
  } else {
    return centipair.core.utilities.validators.matches_regex_QMARK_.call(null, v, /[a-z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/i);
  }
};
centipair.core.utilities.validators.min_length_QMARK_ = function centipair$core$utilities$validators$min_length_QMARK_(v, len) {
  return cljs.core.count.call(null, v) >= len;
};
centipair.core.utilities.validators.required_field_error = "This field is required";
centipair.core.utilities.validators.email_field_error = "Not a valid email address";
centipair.core.utilities.validators.password_length_error = "Minimum 6 characters required";
centipair.core.utilities.validators.integer_error = "The value should be an integer";
centipair.core.utilities.validators.validation_error = function centipair$core$utilities$validators$validation_error(message) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "message", "message", -406056002), message, new cljs.core.Keyword(null, "valid", "valid", 155614240), false], null);
};
centipair.core.utilities.validators.validation_success = function centipair$core$utilities$validators$validation_success() {
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "valid", "valid", 155614240), true], null);
};
centipair.core.utilities.validators.required = function centipair$core$utilities$validators$required(field) {
  if (cljs.core.truth_(centipair.core.utilities.validators.has_value_QMARK_.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(field)))) {
    return centipair.core.utilities.validators.validation_success.call(null);
  } else {
    return centipair.core.utilities.validators.validation_error.call(null, centipair.core.utilities.validators.required_field_error);
  }
};
centipair.core.utilities.validators.checkbox_required = function centipair$core$utilities$validators$checkbox_required(field) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "checked", "checked", -50955819)).cljs$core$IFn$_invoke$arity$1(field), "checked")) {
    return centipair.core.utilities.validators.validation_success.call(null);
  } else {
    return centipair.core.utilities.validators.validation_error.call(null, centipair.core.utilities.validators.required_field_error);
  }
};
centipair.core.utilities.validators.agree_terms = function centipair$core$utilities$validators$agree_terms(field) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "checked", "checked", -50955819)).cljs$core$IFn$_invoke$arity$1(field), "checked")) {
    return centipair.core.utilities.validators.validation_success.call(null);
  } else {
    return centipair.core.utilities.validators.validation_error.call(null, "You have to agree to the terms and conditions");
  }
};
centipair.core.utilities.validators.email_required = function centipair$core$utilities$validators$email_required(field) {
  if (cljs.core.truth_(centipair.core.utilities.validators.has_value_QMARK_.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(field)))) {
    if (centipair.core.utilities.validators.is_email_QMARK_.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(field))) {
      return centipair.core.utilities.validators.validation_success.call(null);
    } else {
      return centipair.core.utilities.validators.validation_error.call(null, centipair.core.utilities.validators.email_field_error);
    }
  } else {
    return centipair.core.utilities.validators.validation_error.call(null, centipair.core.utilities.validators.required_field_error);
  }
};
centipair.core.utilities.validators.integer_required = function centipair$core$utilities$validators$integer_required(field) {
  if (cljs.core.truth_(centipair.core.utilities.validators.has_value_QMARK_.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(field)))) {
    if (cljs.core.integer_QMARK_.call(null, parseInt((new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(field)))) {
      return centipair.core.utilities.validators.validation_success.call(null);
    } else {
      return centipair.core.utilities.validators.validation_error.call(null, centipair.core.utilities.validators.integer_error);
    }
  } else {
    return centipair.core.utilities.validators.validation_error.call(null, centipair.core.utilities.validators.required_field_error);
  }
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var clojure$string$join = null;
  var clojure$string$join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var G__12372 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var G__12373 = cljs.core.next.call(null, coll__$1);
        sb = G__12372;
        coll__$1 = G__12373;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var clojure$string$join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var coll__$2 = cljs.core.next.call(null, coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__12374 = sb;
        var G__12375 = coll__$2;
        sb = G__12374;
        coll__$1 = G__12375;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  clojure$string$join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return clojure$string$join__1.call(this, separator);
      case 2:
        return clojure$string$join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clojure$string$join.cljs$core$IFn$_invoke$arity$1 = clojure$string$join__1;
  clojure$string$join.cljs$core$IFn$_invoke$arity$2 = clojure$string$join__2;
  return clojure$string$join;
}();
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__12376 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__12376;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__12380 = cljs.core._EQ_;
    var expr__12381 = limit;
    if (cljs.core.truth_(pred__12380.call(null, 1, expr__12381))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__12380.call(null, 2, expr__12381))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var clojure$string$split = null;
  var clojure$string$split__2 = function(s, re) {
    return clojure$string$split.call(null, s, re, 0);
  };
  var clojure$string$split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__12383 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__12384 = limit__$1 - 1;
            var G__12385 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__12383;
            limit__$1 = G__12384;
            parts = G__12385;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  clojure$string$split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return clojure$string$split__2.call(this, s, re);
      case 3:
        return clojure$string$split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clojure$string$split.cljs$core$IFn$_invoke$arity$2 = clojure$string$split__2;
  clojure$string$split.cljs$core$IFn$_invoke$arity$3 = clojure$string$split__3;
  return clojure$string$split;
}();
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__12386 = index - 1;
        index = G__12386;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___12387 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___12387)) {
        var replacement_12388 = temp__4124__auto___12387;
        buffer.append([cljs.core.str(replacement_12388)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__12389 = index + 1;
      index = G__12389;
      continue;
    }
    break;
  }
};
goog.provide("markdown.transformers");
goog.require("cljs.core");
goog.require("clojure.string");
markdown.transformers.heading_QMARK_ = function markdown$transformers$heading_QMARK_(text, type) {
  if (cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [" ", null], null), null), cljs.core.take.call(null, 4, text))) {
    return null;
  } else {
    var trimmed = cljs.core.truth_(text) ? clojure.string.trim.call(null, text) : null;
    var and__4097__auto__ = cljs.core.not_empty.call(null, trimmed);
    if (cljs.core.truth_(and__4097__auto__)) {
      return cljs.core.every_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([type], true), trimmed);
    } else {
      return and__4097__auto__;
    }
  }
};
markdown.transformers.h1_QMARK_ = function markdown$transformers$h1_QMARK_(text) {
  return markdown.transformers.heading_QMARK_.call(null, text, "\x3d");
};
markdown.transformers.h2_QMARK_ = function markdown$transformers$h2_QMARK_(text) {
  return markdown.transformers.heading_QMARK_.call(null, text, "-");
};
markdown.transformers.empty_line = function markdown$transformers$empty_line(text, state) {
  if (cljs.core.truth_(function() {
    var or__4109__auto__ = (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(state);
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return(new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855)).cljs$core$IFn$_invoke$arity$1(state);
    }
  }())) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(function() {
      var or__4109__auto__ = markdown.transformers.h1_QMARK_.call(null, text);
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return markdown.transformers.h2_QMARK_.call(null, text);
      }
    }()) ? "" : text, cljs.core.truth_(clojure.string.blank_QMARK_.call(null, text)) ? cljs.core.dissoc.call(null, state, new cljs.core.Keyword(null, "hr", "hr", 1377740067), new cljs.core.Keyword(null, "heading", "heading", -1312171873)) : state], null);
  }
};
markdown.transformers.escape_code = function markdown$transformers$escape_code(s) {
  return clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, s, /&/, "\x26amp;"), /\*/, "\x26#42;"), /\^/, "\x26#94;"), /\_/, "\x26#95;"), /\~/, 
  "\x26#126;"), /\</, "\x26lt;"), /\>/, "\x26gt;"), /\[/, "\x26#91;"), /\]/, "\x26#93;"), /\(/, "\x26#40;"), /\)/, "\x26#41;"), /\"/, "\x26quot;");
};
markdown.transformers.escape_link = function() {
  var markdown$transformers$escape_link__delegate = function(xs) {
    return cljs.core.seq.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.join.call(null, cljs.core.apply.call(null, cljs.core.concat, xs)), /\*/, "\x26#42;"), /\^/, "\x26#94;"), /\_/, "\x26#95;"), /\~/, "\x26#126;"));
  };
  var markdown$transformers$escape_link = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__22336__i = 0, G__22336__a = new Array(arguments.length - 0);
      while (G__22336__i < G__22336__a.length) {
        G__22336__a[G__22336__i] = arguments[G__22336__i + 0];
        ++G__22336__i;
      }
      xs = new cljs.core.IndexedSeq(G__22336__a, 0);
    }
    return markdown$transformers$escape_link__delegate.call(this, xs);
  };
  markdown$transformers$escape_link.cljs$lang$maxFixedArity = 0;
  markdown$transformers$escape_link.cljs$lang$applyTo = function(arglist__22337) {
    var xs = cljs.core.seq(arglist__22337);
    return markdown$transformers$escape_link__delegate(xs);
  };
  markdown$transformers$escape_link.cljs$core$IFn$_invoke$arity$variadic = markdown$transformers$escape_link__delegate;
  return markdown$transformers$escape_link;
}();
markdown.transformers.escaped_chars = function markdown$transformers$escaped_chars(text, state) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(function() {
    var or__4109__auto__ = (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(state);
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return(new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855)).cljs$core$IFn$_invoke$arity$1(state);
    }
  }()) ? text : clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, 
  text, /\\\\/, "\x26#92;"), /\\`/, "\x26#8216;"), /\\\*/, "\x26#42;"), /\\_/, "\x26#95;"), /\\\{/, "\x26#123;"), /\\\}/, "\x26#125;"), /\\\[/, "\x26#91;"), /\\\]/, "\x26#93;"), /\\\(/, "\x26#40;"), /\\\)/, "\x26#41;"), /\\#/, "\x26#35;"), /\\\+/, "\x26#43;"), /\\-/, "\x26#45;"), /\\\./, "\x26#46;"), /\\!/, "\x26#33;"), state], null);
};
markdown.transformers.separator = function markdown$transformers$separator(escape_QMARK_, text, open, close, separator__$1, state) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(state))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    var out = cljs.core.PersistentVector.EMPTY;
    var buf = cljs.core.PersistentVector.EMPTY;
    var tokens = cljs.core.partition_by.call(null, cljs.core.partial.call(null, cljs.core._EQ_, cljs.core.first.call(null, separator__$1)), cljs.core.seq.call(null, text));
    var cur_state = cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "found-token", "found-token", 113525576), false);
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, tokens)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.string.join.call(null, cljs.core.into.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "found-token", "found-token", 113525576)).cljs$core$IFn$_invoke$arity$1(cur_state)) ? cljs.core.into.call(null, out, separator__$1) : out, buf)), cljs.core.dissoc.call(null, cur_state, new cljs.core.Keyword(null, "found-token", "found-token", 113525576))], null);
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "found-token", "found-token", 113525576)).cljs$core$IFn$_invoke$arity$1(cur_state))) {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, tokens), separator__$1)) {
            var G__22338 = cljs.core.vec.call(null, cljs.core.concat.call(null, out, cljs.core.seq.call(null, open), cljs.core.truth_(escape_QMARK_) ? cljs.core.seq.call(null, markdown.transformers.escape_code.call(null, clojure.string.join.call(null, buf))) : buf, cljs.core.seq.call(null, close)));
            var G__22339 = cljs.core.PersistentVector.EMPTY;
            var G__22340 = cljs.core.rest.call(null, tokens);
            var G__22341 = cljs.core.assoc.call(null, cur_state, new cljs.core.Keyword(null, "found-token", "found-token", 113525576), false);
            out = G__22338;
            buf = G__22339;
            tokens = G__22340;
            cur_state = G__22341;
            continue;
          } else {
            var G__22342 = out;
            var G__22343 = cljs.core.into.call(null, buf, cljs.core.first.call(null, tokens));
            var G__22344 = cljs.core.rest.call(null, tokens);
            var G__22345 = cur_state;
            out = G__22342;
            buf = G__22343;
            tokens = G__22344;
            cur_state = G__22345;
            continue;
          }
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, tokens), separator__$1)) {
            var G__22346 = out;
            var G__22347 = buf;
            var G__22348 = cljs.core.rest.call(null, tokens);
            var G__22349 = cljs.core.assoc.call(null, cur_state, new cljs.core.Keyword(null, "found-token", "found-token", 113525576), true);
            out = G__22346;
            buf = G__22347;
            tokens = G__22348;
            cur_state = G__22349;
            continue;
          } else {
            var G__22350 = cljs.core.into.call(null, out, cljs.core.first.call(null, tokens));
            var G__22351 = buf;
            var G__22352 = cljs.core.rest.call(null, tokens);
            var G__22353 = cur_state;
            out = G__22350;
            buf = G__22351;
            tokens = G__22352;
            cur_state = G__22353;
            continue;
          }
        }
      }
      break;
    }
  }
};
markdown.transformers.strong = function markdown$transformers$strong(text, state) {
  return markdown.transformers.separator.call(null, false, text, "\x3cstrong\x3e", "\x3c/strong\x3e", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["*", "*"], null), state);
};
markdown.transformers.bold = function markdown$transformers$bold(text, state) {
  return markdown.transformers.separator.call(null, false, text, "\x3cb\x3e", "\x3c/b\x3e", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["_", "_"], null), state);
};
markdown.transformers.em = function markdown$transformers$em(text, state) {
  return markdown.transformers.separator.call(null, false, text, "\x3cem\x3e", "\x3c/em\x3e", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["*"], null), state);
};
markdown.transformers.italics = function markdown$transformers$italics(text, state) {
  return markdown.transformers.separator.call(null, false, text, "\x3ci\x3e", "\x3c/i\x3e", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["_"], null), state);
};
markdown.transformers.inline_code = function markdown$transformers$inline_code(text, state) {
  return markdown.transformers.separator.call(null, true, text, "\x3ccode\x3e", "\x3c/code\x3e", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["`"], null), state);
};
markdown.transformers.strikethrough = function markdown$transformers$strikethrough(text, state) {
  return markdown.transformers.separator.call(null, false, text, "\x3cdel\x3e", "\x3c/del\x3e", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["~", "~"], null), state);
};
markdown.transformers.superscript = function markdown$transformers$superscript(text, state) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(state))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    var tokens = cljs.core.partition_by.call(null, cljs.core.partial.call(null, cljs.core.contains_QMARK_, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [" ", null, "^", null], null), null)), text);
    var buf = cljs.core.PersistentVector.EMPTY;
    var remaining = tokens;
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, remaining)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.string.join.call(null, buf), state], null);
      } else {
        if (cljs.core._EQ_.call(null, cljs.core.first.call(null, remaining), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["^"], null))) {
          var G__22354 = cljs.core.into.call(null, buf, cljs.core.concat.call(null, cljs.core.seq.call(null, "\x3csup\x3e"), cljs.core.second.call(null, remaining), cljs.core.seq.call(null, "\x3c/sup\x3e")));
          var G__22355 = cljs.core.drop.call(null, 2, remaining);
          buf = G__22354;
          remaining = G__22355;
          continue;
        } else {
          var G__22356 = cljs.core.into.call(null, buf, cljs.core.first.call(null, remaining));
          var G__22357 = cljs.core.rest.call(null, remaining);
          buf = G__22356;
          remaining = G__22357;
          continue;
        }
      }
      break;
    }
  }
};
markdown.transformers.heading_text = function markdown$transformers$heading_text(text) {
  return clojure.string.trim.call(null, clojure.string.join.call(null, cljs.core.drop_while.call(null, function(p1__22358_SHARP_) {
    return cljs.core._EQ_.call(null, "#", p1__22358_SHARP_) || cljs.core._EQ_.call(null, " ", p1__22358_SHARP_);
  }, text)));
};
markdown.transformers.heading_level = function markdown$transformers$heading_level(text) {
  var num_hashes = cljs.core.count.call(null, cljs.core.filter.call(null, function(p1__22359_SHARP_) {
    return cljs.core.not_EQ_.call(null, " ", p1__22359_SHARP_);
  }, cljs.core.take_while.call(null, function(p1__22360_SHARP_) {
    return cljs.core._EQ_.call(null, "#", p1__22360_SHARP_) || cljs.core._EQ_.call(null, " ", p1__22360_SHARP_);
  }, cljs.core.seq.call(null, text))));
  if (num_hashes > 0) {
    return num_hashes;
  } else {
    return null;
  }
};
markdown.transformers.make_heading = function markdown$transformers$make_heading(text, heading_anchors) {
  var temp__4124__auto__ = markdown.transformers.heading_level.call(null, text);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var heading = temp__4124__auto__;
    var text__$1 = markdown.transformers.heading_text.call(null, text);
    return[cljs.core.str("\x3ch"), cljs.core.str(heading), cljs.core.str("\x3e"), cljs.core.str(cljs.core.truth_(heading_anchors) ? [cljs.core.str('\x3ca name\x3d"'), cljs.core.str(clojure.string.replace.call(null, clojure.string.lower_case.call(null, text__$1), " ", "\x26#95;")), cljs.core.str('"\x3e\x3c/a\x3e')].join("") : null), cljs.core.str(text__$1), cljs.core.str("\x3c/h"), cljs.core.str(heading), cljs.core.str("\x3e")].join("");
  } else {
    return null;
  }
};
markdown.transformers.heading = function markdown$transformers$heading(text, state) {
  if (cljs.core.truth_(function() {
    var or__4109__auto__ = (new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855)).cljs$core$IFn$_invoke$arity$1(state);
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return(new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(state);
    }
  }())) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    if (cljs.core.truth_(markdown.transformers.h1_QMARK_.call(null, markdown.transformers._STAR_next_line_STAR_))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3ch1\x3e"), cljs.core.str(text), cljs.core.str("\x3c/h1\x3e")].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "heading", "heading", -1312171873), true)], null);
    } else {
      if (cljs.core.truth_(markdown.transformers.h2_QMARK_.call(null, markdown.transformers._STAR_next_line_STAR_))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3ch2\x3e"), cljs.core.str(text), cljs.core.str("\x3c/h2\x3e")].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "heading", "heading", -1312171873), true)], null);
      } else {
        var temp__4124__auto__ = markdown.transformers.make_heading.call(null, text, (new cljs.core.Keyword(null, "heading-anchors", "heading-anchors", 1713527866)).cljs$core$IFn$_invoke$arity$1(state));
        if (cljs.core.truth_(temp__4124__auto__)) {
          var heading__$1 = temp__4124__auto__;
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [heading__$1, cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "heading", "heading", -1312171873), true)], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
        }
      }
    }
  }
};
markdown.transformers.br = function markdown$transformers$br(text, p__22361) {
  var map__22363 = p__22361;
  var map__22363__$1 = cljs.core.seq_QMARK_.call(null, map__22363) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22363) : map__22363;
  var state = map__22363__$1;
  var lists = cljs.core.get.call(null, map__22363__$1, new cljs.core.Keyword(null, "lists", "lists", -884730684));
  var code = cljs.core.get.call(null, map__22363__$1, new cljs.core.Keyword(null, "code", "code", 1586293142));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", " "], null), cljs.core.take_last.call(null, 2, text)) && cljs.core.not.call(null, function() {
    var or__4109__auto__ = code;
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return lists;
    }
  }()) ? [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.drop_last.call(null, 2, text))), cljs.core.str("\x3cbr /\x3e")].join("") : text, state], null);
};
markdown.transformers.autourl_transformer = function markdown$transformers$autourl_transformer(text, state) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_((new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(state)) ? text : clojure.string.replace.call(null, text, /<https?:\/\/[-A-Za-z0-9+&@#\/%?=~_()|!:,.;]*[-A-Za-z0-9+&@#\/%=~_()|]>/, function(p1__22364_SHARP_) {
    var url = cljs.core.subs.call(null, p1__22364_SHARP_, 1, cljs.core.count.call(null, p1__22364_SHARP_) - 1);
    return[cljs.core.str('\x3ca href\x3d"'), cljs.core.str(url), cljs.core.str('"\x3e'), cljs.core.str(url), cljs.core.str("\x3c/a\x3e")].join("");
  }), state], null);
};
markdown.transformers.autoemail_transformer = function markdown$transformers$autoemail_transformer(text, state) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(function() {
    var or__4109__auto__ = (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(state);
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return(new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855)).cljs$core$IFn$_invoke$arity$1(state);
    }
  }()) ? text : clojure.string.replace.call(null, text, /<[\w._%+-]+@[\w.-]+\.[\w]{2,4}>/, function(p1__22365_SHARP_) {
    var encoded = cljs.core.truth_((new cljs.core.Keyword(null, "clojurescript", "clojurescript", -299769403)).cljs$core$IFn$_invoke$arity$1(state)) ? cljs.core.subs.call(null, p1__22365_SHARP_, 1, cljs.core.count.call(null, p1__22365_SHARP_) - 1) : cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(c) {
      if (cljs.core.rand.call(null) > .5) {
        return markdown.transformers.formatter.call(null, "\x26#x%02x;", c | 0);
      } else {
        return c;
      }
    }, cljs.core.subs.call(null, p1__22365_SHARP_, 1, cljs.core.count.call(null, p1__22365_SHARP_) - 1)));
    return[cljs.core.str('\x3ca href\x3d"mailto:'), cljs.core.str(encoded), cljs.core.str('"\x3e'), cljs.core.str(encoded), cljs.core.str("\x3c/a\x3e")].join("");
  }), state], null);
};
markdown.transformers.paragraph_text = function markdown$transformers$paragraph_text(last_line_empty_QMARK_, text) {
  if (cljs.core.truth_(function() {
    var and__4097__auto__ = cljs.core.not.call(null, last_line_empty_QMARK_);
    if (and__4097__auto__) {
      return cljs.core.not_empty.call(null, text);
    } else {
      return and__4097__auto__;
    }
  }())) {
    return[cljs.core.str(" "), cljs.core.str(text)].join("");
  } else {
    return text;
  }
};
markdown.transformers.paragraph = function markdown$transformers$paragraph(text, p__22366) {
  var map__22368 = p__22366;
  var map__22368__$1 = cljs.core.seq_QMARK_.call(null, map__22368) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22368) : map__22368;
  var state = map__22368__$1;
  var last_line_empty_QMARK_ = cljs.core.get.call(null, map__22368__$1, new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527));
  var paragraph__$1 = cljs.core.get.call(null, map__22368__$1, new cljs.core.Keyword(null, "paragraph", "paragraph", 296707709));
  var blockquote = cljs.core.get.call(null, map__22368__$1, new cljs.core.Keyword(null, "blockquote", "blockquote", 372264190));
  var lists = cljs.core.get.call(null, map__22368__$1, new cljs.core.Keyword(null, "lists", "lists", -884730684));
  var code = cljs.core.get.call(null, map__22368__$1, new cljs.core.Keyword(null, "code", "code", 1586293142));
  var hr = cljs.core.get.call(null, map__22368__$1, new cljs.core.Keyword(null, "hr", "hr", 1377740067));
  var heading = cljs.core.get.call(null, map__22368__$1, new cljs.core.Keyword(null, "heading", "heading", -1312171873));
  var eof = cljs.core.get.call(null, map__22368__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  if (cljs.core.truth_(function() {
    var or__4109__auto__ = heading;
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      var or__4109__auto____$1 = hr;
      if (cljs.core.truth_(or__4109__auto____$1)) {
        return or__4109__auto____$1;
      } else {
        var or__4109__auto____$2 = code;
        if (cljs.core.truth_(or__4109__auto____$2)) {
          return or__4109__auto____$2;
        } else {
          var or__4109__auto____$3 = lists;
          if (cljs.core.truth_(or__4109__auto____$3)) {
            return or__4109__auto____$3;
          } else {
            return blockquote;
          }
        }
      }
    }
  }())) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    if (cljs.core.truth_(paragraph__$1)) {
      if (cljs.core.truth_(function() {
        var or__4109__auto__ = eof;
        if (cljs.core.truth_(or__4109__auto__)) {
          return or__4109__auto__;
        } else {
          return cljs.core.empty_QMARK_.call(null, clojure.string.trim.call(null, text));
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(markdown.transformers.paragraph_text.call(null, last_line_empty_QMARK_, text)), cljs.core.str("\x3c/p\x3e")].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "paragraph", "paragraph", 296707709), false)], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [markdown.transformers.paragraph_text.call(null, last_line_empty_QMARK_, text), state], null);
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__4097__auto__ = cljs.core.not.call(null, eof);
        if (and__4097__auto__) {
          return last_line_empty_QMARK_;
        } else {
          return and__4097__auto__;
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3cp\x3e"), cljs.core.str(text)].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "paragraph", "paragraph", 296707709), true, new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), false)], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
      }
    }
  }
};
markdown.transformers.code = function markdown$transformers$code(text, p__22369) {
  var map__22371 = p__22369;
  var map__22371__$1 = cljs.core.seq_QMARK_.call(null, map__22371) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22371) : map__22371;
  var state = map__22371__$1;
  var codeblock = cljs.core.get.call(null, map__22371__$1, new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855));
  var code__$1 = cljs.core.get.call(null, map__22371__$1, new cljs.core.Keyword(null, "code", "code", 1586293142));
  var lists = cljs.core.get.call(null, map__22371__$1, new cljs.core.Keyword(null, "lists", "lists", -884730684));
  var eof = cljs.core.get.call(null, map__22371__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  if (cljs.core.truth_(function() {
    var or__4109__auto__ = lists;
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return codeblock;
    }
  }())) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    if (cljs.core.truth_(code__$1)) {
      if (cljs.core.truth_(function() {
        var or__4109__auto__ = eof;
        if (cljs.core.truth_(or__4109__auto__)) {
          return or__4109__auto__;
        } else {
          return cljs.core.not_EQ_.call(null, "    ", clojure.string.join.call(null, cljs.core.take.call(null, 4, text)));
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\n\x3c/code\x3e\x3c/pre\x3e"), cljs.core.str(text)].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "code", "code", 1586293142), false, new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), false)], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\n"), cljs.core.str(markdown.transformers.escape_code.call(null, clojure.string.replace_first.call(null, text, /    /, "")))].join(""), state], null);
      }
    } else {
      if (cljs.core.empty_QMARK_.call(null, clojure.string.trim.call(null, text))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
      } else {
        var num_spaces = cljs.core.count.call(null, cljs.core.take_while.call(null, cljs.core.partial.call(null, cljs.core._EQ_, " "), text));
        if (num_spaces > 3) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3cpre\x3e\x3ccode\x3e"), cljs.core.str(markdown.transformers.escape_code.call(null, clojure.string.replace_first.call(null, text, /    /, "")))].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "code", "code", 1586293142), true)], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
        }
      }
    }
  }
};
markdown.transformers.codeblock = function markdown$transformers$codeblock(text, state) {
  var trimmed = clojure.string.trim.call(null, text);
  if (cljs.core.truth_(function() {
    var and__4097__auto__ = cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["`", "`", "`"], null), cljs.core.take.call(null, 3, trimmed));
    if (and__4097__auto__) {
      return(new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855)).cljs$core$IFn$_invoke$arity$1(state);
    } else {
      return and__4097__auto__;
    }
  }())) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3c/code\x3e\x3c/pre\x3e"), cljs.core.str(clojure.string.join.call(null, cljs.core.drop.call(null, 3, trimmed)))].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "code", "code", 1586293142), false, new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855), false, new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), false)], null)
    ;
  } else {
    if (cljs.core.truth_(function() {
      var and__4097__auto__ = cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["`", "`", "`"], null), cljs.core.take_last.call(null, 3, trimmed));
      if (and__4097__auto__) {
        return(new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855)).cljs$core$IFn$_invoke$arity$1(state);
      } else {
        return and__4097__auto__;
      }
    }())) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3c/code\x3e\x3c/pre\x3e"), cljs.core.str(clojure.string.join.call(null, cljs.core.drop_last.call(null, 3, trimmed)))].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "code", "code", 1586293142), false, new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855), false, new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), false)], 
      null);
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["`", "`", "`"], null), cljs.core.take.call(null, 3, trimmed))) {
        var vec__22373 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, " "), cljs.core.drop.call(null, 3, trimmed));
        var lang = cljs.core.nth.call(null, vec__22373, 0, null);
        var code = cljs.core.nth.call(null, vec__22373, 1, null);
        var s = cljs.core.apply.call(null, cljs.core.str, cljs.core.rest.call(null, code));
        var formatter = (new cljs.core.Keyword(null, "code-style", "code-style", -2144009586)).cljs$core$IFn$_invoke$arity$1(state);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3cpre\x3e\x3ccode"), cljs.core.str(cljs.core.truth_(cljs.core.not_empty.call(null, lang)) ? [cljs.core.str(" "), cljs.core.str(cljs.core.truth_(formatter) ? formatter.call(null, clojure.string.join.call(null, lang)) : [cljs.core.str('class\x3d"'), cljs.core.str(clojure.string.join.call(null, lang)), cljs.core.str('"')].join(""))].join("") : null), cljs.core.str("\x3e"), cljs.core.str(markdown.transformers.escape_code.call(null, 
        cljs.core.empty_QMARK_.call(null, s) ? s : [cljs.core.str(s), cljs.core.str("\n")].join("")))].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "code", "code", 1586293142), true, new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855), true)], null);
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855)).cljs$core$IFn$_invoke$arity$1(state))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(markdown.transformers.escape_code.call(null, text)), cljs.core.str("\n")].join(""), state], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
        }
      }
    }
  }
};
markdown.transformers.hr = function markdown$transformers$hr(text, state) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(state))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    if ((cljs.core.empty_QMARK_.call(null, cljs.core.drop_while.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [" ", null, "*", null], null), null), text)) || cljs.core.empty_QMARK_.call(null, cljs.core.drop_while.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [" ", null, "-", null], null), null), text)) || cljs.core.empty_QMARK_.call(null, cljs.core.drop_while.call(null, new cljs.core.PersistentHashSet(null, 
    new cljs.core.PersistentArrayMap(null, 2, [" ", null, "_", null], null), null), text))) && cljs.core.count.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [" ", null], null), null), text)) > 2) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3chr/\x3e")].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "hr", "hr", 1377740067), true)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
    }
  }
};
markdown.transformers.blockquote = function markdown$transformers$blockquote(text, p__22374) {
  var map__22376 = p__22374;
  var map__22376__$1 = cljs.core.seq_QMARK_.call(null, map__22376) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22376) : map__22376;
  var state = map__22376__$1;
  var lists = cljs.core.get.call(null, map__22376__$1, new cljs.core.Keyword(null, "lists", "lists", -884730684));
  var codeblock = cljs.core.get.call(null, map__22376__$1, new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855));
  var code = cljs.core.get.call(null, map__22376__$1, new cljs.core.Keyword(null, "code", "code", 1586293142));
  var eof = cljs.core.get.call(null, map__22376__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  var trimmed = clojure.string.trim.call(null, text);
  if (cljs.core.truth_(function() {
    var or__4109__auto__ = code;
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      var or__4109__auto____$1 = codeblock;
      if (cljs.core.truth_(or__4109__auto____$1)) {
        return or__4109__auto____$1;
      } else {
        return lists;
      }
    }
  }())) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "blockquote", "blockquote", 372264190)).cljs$core$IFn$_invoke$arity$1(state))) {
      if (cljs.core.truth_(function() {
        var or__4109__auto__ = eof;
        if (cljs.core.truth_(or__4109__auto__)) {
          return or__4109__auto__;
        } else {
          return cljs.core.empty_QMARK_.call(null, trimmed);
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\x3c/p\x3e\x3c/blockquote\x3e", cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "blockquote", "blockquote", 372264190), false)], null);
      } else {
        if (cljs.core._EQ_.call(null, "\x3e-", cljs.core.subs.call(null, trimmed, 0, 2))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3c/p\x3e\x3cfooter\x3e"), cljs.core.str(cljs.core.subs.call(null, text, 2)), cljs.core.str("\x3c/footer\x3e\x3cp\x3e")].join(""), state], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(text), cljs.core.str(" ")].join(""), state], null);
        }
      }
    } else {
      if (cljs.core._EQ_.call(null, "\x3e", cljs.core.first.call(null, text))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3cblockquote\x3e\x3cp\x3e"), cljs.core.str(clojure.string.join.call(null, cljs.core.rest.call(null, text))), cljs.core.str(" ")].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "blockquote", "blockquote", 372264190), true)], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
      }
    }
  }
};
markdown.transformers.href = function markdown$transformers$href(title, link) {
  return markdown.transformers.escape_link.call(null, cljs.core.seq.call(null, "\x3ca href\x3d'"), link, cljs.core.seq.call(null, "'\x3e"), title, cljs.core.seq.call(null, "\x3c/a\x3e"));
};
markdown.transformers.img = function() {
  var markdown$transformers$img__delegate = function(alt, url, p__22377) {
    var vec__22379 = p__22377;
    var title = cljs.core.nth.call(null, vec__22379, 0, null);
    return markdown.transformers.escape_link.call(null, cljs.core.seq.call(null, '\x3cimg src\x3d"'), url, cljs.core.seq.call(null, '" alt\x3d"'), alt, cljs.core.truth_(cljs.core.not_empty.call(null, title)) ? cljs.core.seq.call(null, cljs.core.apply.call(null, cljs.core.str, '" title\x3d', clojure.string.join.call(null, title), " /\x3e")) : cljs.core.seq.call(null, '" /\x3e'));
  };
  var markdown$transformers$img = function(alt, url, var_args) {
    var p__22377 = null;
    if (arguments.length > 2) {
      var G__22380__i = 0, G__22380__a = new Array(arguments.length - 2);
      while (G__22380__i < G__22380__a.length) {
        G__22380__a[G__22380__i] = arguments[G__22380__i + 2];
        ++G__22380__i;
      }
      p__22377 = new cljs.core.IndexedSeq(G__22380__a, 0);
    }
    return markdown$transformers$img__delegate.call(this, alt, url, p__22377);
  };
  markdown$transformers$img.cljs$lang$maxFixedArity = 2;
  markdown$transformers$img.cljs$lang$applyTo = function(arglist__22381) {
    var alt = cljs.core.first(arglist__22381);
    arglist__22381 = cljs.core.next(arglist__22381);
    var url = cljs.core.first(arglist__22381);
    var p__22377 = cljs.core.rest(arglist__22381);
    return markdown$transformers$img__delegate(alt, url, p__22377);
  };
  markdown$transformers$img.cljs$core$IFn$_invoke$arity$variadic = markdown$transformers$img__delegate;
  return markdown$transformers$img;
}();
markdown.transformers.handle_img_link = function markdown$transformers$handle_img_link(xs) {
  if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "!", "["], null), cljs.core.take.call(null, 3, xs))) {
    var xs__$1 = cljs.core.drop.call(null, 3, xs);
    var vec__22385 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, "]"), xs__$1);
    var alt = cljs.core.nth.call(null, vec__22385, 0, null);
    var xy = cljs.core.nth.call(null, vec__22385, 1, null);
    var vec__22386 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, ")"), cljs.core.drop.call(null, 2, xy));
    var url_title = cljs.core.nth.call(null, vec__22386, 0, null);
    var zy = cljs.core.nth.call(null, vec__22386, 1, null);
    var vec__22387 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, " "), url_title);
    var url = cljs.core.nth.call(null, vec__22387, 0, null);
    var title = cljs.core.nth.call(null, vec__22387, 1, null);
    return cljs.core.concat.call(null, "[", markdown.transformers.img.call(null, alt, url, cljs.core.not_empty.call(null, title)), cljs.core.rest.call(null, zy));
  } else {
    return xs;
  }
};
markdown.transformers.link = function markdown$transformers$link(text, p__22388) {
  var map__22395 = p__22388;
  var map__22395__$1 = cljs.core.seq_QMARK_.call(null, map__22395) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22395) : map__22395;
  var state = map__22395__$1;
  var codeblock = cljs.core.get.call(null, map__22395__$1, new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855));
  var code = cljs.core.get.call(null, map__22395__$1, new cljs.core.Keyword(null, "code", "code", 1586293142));
  if (cljs.core.truth_(function() {
    var or__4109__auto__ = code;
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return codeblock;
    }
  }())) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    var out = cljs.core.PersistentVector.EMPTY;
    var tokens = cljs.core.seq.call(null, text);
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, tokens)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.string.join.call(null, out), state], null);
      } else {
        var vec__22396 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, "["), tokens);
        var head = cljs.core.nth.call(null, vec__22396, 0, null);
        var xs = cljs.core.nth.call(null, vec__22396, 1, null);
        var xs__$1 = markdown.transformers.handle_img_link.call(null, xs);
        var vec__22397 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, "]"), xs__$1);
        var title = cljs.core.nth.call(null, vec__22397, 0, null);
        var ys = cljs.core.nth.call(null, vec__22397, 1, null);
        var vec__22398 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, "("), ys);
        var dud = cljs.core.nth.call(null, vec__22398, 0, null);
        var zs = cljs.core.nth.call(null, vec__22398, 1, null);
        var vec__22399 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, ")"), zs);
        var link__$1 = cljs.core.nth.call(null, vec__22399, 0, null);
        var tail = cljs.core.nth.call(null, vec__22399, 1, null);
        if (cljs.core.count.call(null, link__$1) < 2 || cljs.core.count.call(null, tail) < 1 || cljs.core.count.call(null, dud) > 1) {
          var G__22401 = cljs.core.concat.call(null, out, head, title, dud, link__$1);
          var G__22402 = tail;
          out = G__22401;
          tokens = G__22402;
          continue;
        } else {
          var G__22403 = cljs.core.into.call(null, out, cljs.core._EQ_.call(null, cljs.core.last.call(null, head), "!") ? function() {
            var alt = cljs.core.rest.call(null, title);
            var vec__22400 = cljs.core.split_with.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, " "), cljs.core.rest.call(null, link__$1));
            var url = cljs.core.nth.call(null, vec__22400, 0, null);
            var title__$1 = cljs.core.nth.call(null, vec__22400, 1, null);
            var title__$2 = clojure.string.join.call(null, cljs.core.rest.call(null, title__$1));
            return cljs.core.concat.call(null, cljs.core.butlast.call(null, head), markdown.transformers.img.call(null, alt, url, title__$2));
          }() : cljs.core.concat.call(null, head, markdown.transformers.href.call(null, cljs.core.rest.call(null, title), cljs.core.rest.call(null, link__$1))));
          var G__22404 = cljs.core.rest.call(null, tail);
          out = G__22403;
          tokens = G__22404;
          continue;
        }
      }
      break;
    }
  }
};
markdown.transformers.reference = function markdown$transformers$reference(text) {
  return cljs.core.re_find.call(null, /^\[[a-zA-Z0-9 ]+\]:/, text);
};
markdown.transformers.parse_reference = function markdown$transformers$parse_reference(reference, start) {
  return clojure.string.split.call(null, clojure.string.trim.call(null, cljs.core.subs.call(null, reference, start)), /\s+/, 2);
};
markdown.transformers.parse_reference_link = function markdown$transformers$parse_reference_link(line, references) {
  var trimmed = clojure.string.trim.call(null, line);
  var temp__4126__auto__ = markdown.transformers.reference.call(null, trimmed);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var link = temp__4126__auto__;
    return cljs.core.swap_BANG_.call(null, references, cljs.core.assoc, cljs.core.subs.call(null, link, 0, cljs.core.count.call(null, link) - 1), markdown.transformers.parse_reference.call(null, trimmed, cljs.core.count.call(null, link) + 1));
  } else {
    return null;
  }
};
markdown.transformers.replace_reference_link = function markdown$transformers$replace_reference_link(references, reference) {
  var vec__22407 = clojure.string.split.call(null, reference, /\]\s*/, 2);
  var title = cljs.core.nth.call(null, vec__22407, 0, null);
  var id = cljs.core.nth.call(null, vec__22407, 1, null);
  var vec__22408 = cljs.core.get.call(null, references, id);
  var link = cljs.core.nth.call(null, vec__22408, 0, null);
  var alt = cljs.core.nth.call(null, vec__22408, 1, null);
  return[cljs.core.str("\x3ca href\x3d'"), cljs.core.str(link), cljs.core.str("'"), cljs.core.str(cljs.core.truth_(alt) ? [cljs.core.str(" title\x3d'"), cljs.core.str(cljs.core.subs.call(null, alt, 1, cljs.core.count.call(null, alt) - 1)), cljs.core.str("'")].join("") : null), cljs.core.str("\x3e"), cljs.core.str(cljs.core.subs.call(null, title, 1)), cljs.core.str("\x3c/a\x3e")].join("");
};
markdown.transformers.reference_link = function markdown$transformers$reference_link(text, p__22409) {
  var map__22411 = p__22409;
  var map__22411__$1 = cljs.core.seq_QMARK_.call(null, map__22411) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22411) : map__22411;
  var state = map__22411__$1;
  var references = cljs.core.get.call(null, map__22411__$1, new cljs.core.Keyword(null, "references", "references", 882562509));
  var codeblock = cljs.core.get.call(null, map__22411__$1, new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855));
  var code = cljs.core.get.call(null, map__22411__$1, new cljs.core.Keyword(null, "code", "code", 1586293142));
  if (references == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
  } else {
    if (cljs.core.truth_(markdown.transformers.reference.call(null, clojure.string.trim.call(null, text)))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", state], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(function() {
        var or__4109__auto__ = code;
        if (cljs.core.truth_(or__4109__auto__)) {
          return or__4109__auto__;
        } else {
          return codeblock;
        }
      }()) ? text : clojure.string.replace.call(null, text, /\[[a-zA-Z0-9 ]+\]\s*\[[a-zA-Z0-9 ]+\]/, cljs.core.partial.call(null, markdown.transformers.replace_reference_link, references)), state], null);
    }
  }
};
markdown.transformers.close_lists = function markdown$transformers$close_lists(lists) {
  return clojure.string.join.call(null, function() {
    var iter__4863__auto__ = function markdown$transformers$close_lists_$_iter__22420(s__22421) {
      return new cljs.core.LazySeq(null, function() {
        var s__22421__$1 = s__22421;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__22421__$1);
          if (temp__4126__auto__) {
            var s__22421__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__22421__$2)) {
              var c__4861__auto__ = cljs.core.chunk_first.call(null, s__22421__$2);
              var size__4862__auto__ = cljs.core.count.call(null, c__4861__auto__);
              var b__22423 = cljs.core.chunk_buffer.call(null, size__4862__auto__);
              if (function() {
                var i__22422 = 0;
                while (true) {
                  if (i__22422 < size__4862__auto__) {
                    var vec__22426 = cljs.core._nth.call(null, c__4861__auto__, i__22422);
                    var list_type = cljs.core.nth.call(null, vec__22426, 0, null);
                    cljs.core.chunk_append.call(null, b__22423, [cljs.core.str("\x3c/li\x3e\x3c/"), cljs.core.str(cljs.core.name.call(null, list_type)), cljs.core.str("\x3e")].join(""));
                    var G__22428 = i__22422 + 1;
                    i__22422 = G__22428;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22423), markdown$transformers$close_lists_$_iter__22420.call(null, cljs.core.chunk_rest.call(null, s__22421__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22423), null);
              }
            } else {
              var vec__22427 = cljs.core.first.call(null, s__22421__$2);
              var list_type = cljs.core.nth.call(null, vec__22427, 0, null);
              return cljs.core.cons.call(null, [cljs.core.str("\x3c/li\x3e\x3c/"), cljs.core.str(cljs.core.name.call(null, list_type)), cljs.core.str("\x3e")].join(""), markdown$transformers$close_lists_$_iter__22420.call(null, cljs.core.rest.call(null, s__22421__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4863__auto__.call(null, lists);
  }());
};
markdown.transformers.add_row = function markdown$transformers$add_row(row_type, list_type, num_indents, indents, content, state) {
  if (cljs.core.truth_(list_type)) {
    if (num_indents < indents) {
      var lists_to_close = cljs.core.take_while.call(null, function(p1__22429_SHARP_) {
        return cljs.core.second.call(null, p1__22429_SHARP_) > num_indents;
      }, cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "lists", "lists", -884730684)).cljs$core$IFn$_invoke$arity$1(state)));
      var remaining_lists = cljs.core.vec.call(null, cljs.core.drop_last.call(null, cljs.core.count.call(null, lists_to_close), (new cljs.core.Keyword(null, "lists", "lists", -884730684)).cljs$core$IFn$_invoke$arity$1(state)));
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, cljs.core.str, markdown.transformers.close_lists.call(null, lists_to_close), "\x3c/li\x3e\x3cli\x3e", content), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "lists", "lists", -884730684), num_indents > cljs.core.second.call(null, cljs.core.last.call(null, remaining_lists)) ? cljs.core.conj.call(null, remaining_lists, new cljs.core.PersistentVector(null, 2, 5, 
      cljs.core.PersistentVector.EMPTY_NODE, [row_type, num_indents], null)) : remaining_lists)], null);
    } else {
      if (num_indents > indents) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3c"), cljs.core.str(cljs.core.name.call(null, row_type)), cljs.core.str("\x3e\x3cli\x3e"), cljs.core.str(content)].join(""), cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "lists", "lists", -884730684)], null), cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
        [row_type, num_indents], null))], null);
      } else {
        if (cljs.core._EQ_.call(null, num_indents, indents)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3c/li\x3e\x3cli\x3e"), cljs.core.str(content)].join(""), state], null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("\x3c"), cljs.core.str(cljs.core.name.call(null, row_type)), cljs.core.str("\x3e\x3cli\x3e"), cljs.core.str(content)].join(""), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "lists", "lists", -884730684), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [row_type, 
    num_indents], null)], null))], null);
  }
};
markdown.transformers.ul = function markdown$transformers$ul(text, state) {
  var vec__22431 = cljs.core.last.call(null, (new cljs.core.Keyword(null, "lists", "lists", -884730684)).cljs$core$IFn$_invoke$arity$1(state));
  var list_type = cljs.core.nth.call(null, vec__22431, 0, null);
  var indents = cljs.core.nth.call(null, vec__22431, 1, null);
  var num_indents = cljs.core.count.call(null, cljs.core.take_while.call(null, cljs.core.partial.call(null, cljs.core._EQ_, " "), text));
  var content = clojure.string.trim.call(null, markdown.transformers._STAR_substring_STAR_.call(null, text, num_indents + 1));
  return markdown.transformers.add_row.call(null, new cljs.core.Keyword(null, "ul", "ul", -1349521403), list_type, num_indents, indents, function() {
    var or__4109__auto__ = markdown.transformers.make_heading.call(null, content, false);
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return content;
    }
  }(), state);
};
markdown.transformers.ol = function markdown$transformers$ol(text, state) {
  var vec__22433 = cljs.core.last.call(null, (new cljs.core.Keyword(null, "lists", "lists", -884730684)).cljs$core$IFn$_invoke$arity$1(state));
  var list_type = cljs.core.nth.call(null, vec__22433, 0, null);
  var indents = cljs.core.nth.call(null, vec__22433, 1, null);
  var num_indents = cljs.core.count.call(null, cljs.core.take_while.call(null, cljs.core.partial.call(null, cljs.core._EQ_, " "), text));
  var content = clojure.string.trim.call(null, clojure.string.join.call(null, cljs.core.drop_while.call(null, cljs.core.partial.call(null, cljs.core.not_EQ_, " "), clojure.string.trim.call(null, text))));
  return markdown.transformers.add_row.call(null, new cljs.core.Keyword(null, "ol", "ol", 932524051), list_type, num_indents, indents, function() {
    var or__4109__auto__ = markdown.transformers.make_heading.call(null, content, false);
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return content;
    }
  }(), state);
};
markdown.transformers.li = function markdown$transformers$li(text, p__22434) {
  var map__22436 = p__22434;
  var map__22436__$1 = cljs.core.seq_QMARK_.call(null, map__22436) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22436) : map__22436;
  var state = map__22436__$1;
  var lists = cljs.core.get.call(null, map__22436__$1, new cljs.core.Keyword(null, "lists", "lists", -884730684));
  var eof = cljs.core.get.call(null, map__22436__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  var last_line_empty_QMARK_ = cljs.core.get.call(null, map__22436__$1, new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527));
  var codeblock = cljs.core.get.call(null, map__22436__$1, new cljs.core.Keyword(null, "codeblock", "codeblock", -851153855));
  var code = cljs.core.get.call(null, map__22436__$1, new cljs.core.Keyword(null, "code", "code", 1586293142));
  if (cljs.core.truth_(function() {
    var and__4097__auto__ = last_line_empty_QMARK_;
    if (cljs.core.truth_(and__4097__auto__)) {
      return clojure.string.blank_QMARK_.call(null, text);
    } else {
      return and__4097__auto__;
    }
  }())) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(markdown.transformers.close_lists.call(null, cljs.core.reverse.call(null, lists))), cljs.core.str(text)].join(""), cljs.core.assoc.call(null, cljs.core.dissoc.call(null, state, new cljs.core.Keyword(null, "lists", "lists", -884730684)), new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), false)], null);
  } else {
    if (cljs.core.truth_(function() {
      var or__4109__auto__ = code;
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return codeblock;
      }
    }())) {
      if (cljs.core.truth_(function() {
        var and__4097__auto__ = lists;
        if (cljs.core.truth_(and__4097__auto__)) {
          var or__4109__auto__ = last_line_empty_QMARK_;
          if (cljs.core.truth_(or__4109__auto__)) {
            return or__4109__auto__;
          } else {
            return eof;
          }
        } else {
          return and__4097__auto__;
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(markdown.transformers.close_lists.call(null, cljs.core.reverse.call(null, lists))), cljs.core.str(text)].join(""), cljs.core.assoc.call(null, cljs.core.dissoc.call(null, state, new cljs.core.Keyword(null, "lists", "lists", -884730684)), new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), false)], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__4097__auto__ = cljs.core.not.call(null, eof);
        if (and__4097__auto__) {
          var and__4097__auto____$1 = lists;
          if (cljs.core.truth_(and__4097__auto____$1)) {
            return clojure.string.blank_QMARK_.call(null, text);
          } else {
            return and__4097__auto____$1;
          }
        } else {
          return and__4097__auto__;
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), true)], null);
      } else {
        var indents = cljs.core.count.call(null, cljs.core.take_while.call(null, cljs.core.partial.call(null, cljs.core._EQ_, " "), text));
        var trimmed = clojure.string.trim.call(null, text);
        if (cljs.core.truth_(cljs.core.re_find.call(null, /^[\*\+-] /, trimmed))) {
          return markdown.transformers.ul.call(null, text, state);
        } else {
          if (cljs.core.truth_(cljs.core.re_find.call(null, /^[0-9]+\. /, trimmed))) {
            return markdown.transformers.ol.call(null, text, state);
          } else {
            if (indents > 0) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
            } else {
              if (cljs.core.truth_(function() {
                var and__4097__auto__ = function() {
                  var or__4109__auto__ = eof;
                  if (cljs.core.truth_(or__4109__auto__)) {
                    return or__4109__auto__;
                  } else {
                    return last_line_empty_QMARK_;
                  }
                }();
                if (cljs.core.truth_(and__4097__auto__)) {
                  return cljs.core.not_empty.call(null, lists);
                } else {
                  return and__4097__auto__;
                }
              }())) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [markdown.transformers.close_lists.call(null, cljs.core.reverse.call(null, lists)), cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "lists", "lists", -884730684), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "buf", "buf", -213913340), text)], null);
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [text, state], null);
              }
            }
          }
        }
      }
    }
  }
};
markdown.transformers.transformer_vector = new cljs.core.PersistentVector(null, 21, 5, cljs.core.PersistentVector.EMPTY_NODE, [markdown.transformers.empty_line, markdown.transformers.codeblock, markdown.transformers.code, markdown.transformers.escaped_chars, markdown.transformers.inline_code, markdown.transformers.autoemail_transformer, markdown.transformers.autourl_transformer, markdown.transformers.link, markdown.transformers.reference_link, markdown.transformers.hr, markdown.transformers.li, markdown.transformers.heading, 
markdown.transformers.italics, markdown.transformers.em, markdown.transformers.strong, markdown.transformers.bold, markdown.transformers.strikethrough, markdown.transformers.superscript, markdown.transformers.blockquote, markdown.transformers.paragraph, markdown.transformers.br], null);
goog.provide("markdown.core");
goog.require("cljs.core");
goog.require("markdown.transformers");
markdown.core.init_transformer = function markdown$core$init_transformer(p__22262) {
  var map__22268 = p__22262;
  var map__22268__$1 = cljs.core.seq_QMARK_.call(null, map__22268) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22268) : map__22268;
  var custom_transformers = cljs.core.get.call(null, map__22268__$1, new cljs.core.Keyword(null, "custom-transformers", "custom-transformers", 1440601790));
  var replacement_transformers = cljs.core.get.call(null, map__22268__$1, new cljs.core.Keyword(null, "replacement-transformers", "replacement-transformers", -2028552897));
  return function(map__22268, map__22268__$1, custom_transformers, replacement_transformers) {
    return function(html, line, next_line, state) {
      var _STAR_next_line_STAR_22269 = markdown.transformers._STAR_next_line_STAR_;
      markdown.transformers._STAR_next_line_STAR_ = next_line;
      try {
        var vec__22270 = cljs.core.reduce.call(null, function(_STAR_next_line_STAR_22269, map__22268, map__22268__$1, custom_transformers, replacement_transformers) {
          return function(p__22271, transformer) {
            var vec__22272 = p__22271;
            var text = cljs.core.nth.call(null, vec__22272, 0, null);
            var state__$1 = cljs.core.nth.call(null, vec__22272, 1, null);
            return transformer.call(null, text, state__$1);
          };
        }(_STAR_next_line_STAR_22269, map__22268, map__22268__$1, custom_transformers, replacement_transformers), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [line, state], null), function() {
          var or__4109__auto__ = replacement_transformers;
          if (cljs.core.truth_(or__4109__auto__)) {
            return or__4109__auto__;
          } else {
            return cljs.core.into.call(null, markdown.transformers.transformer_vector, custom_transformers);
          }
        }());
        var text = cljs.core.nth.call(null, vec__22270, 0, null);
        var new_state = cljs.core.nth.call(null, vec__22270, 1, null);
        html.append(text);
        return new_state;
      } finally {
        markdown.transformers._STAR_next_line_STAR_ = _STAR_next_line_STAR_22269;
      }
    };
  }(map__22268, map__22268__$1, custom_transformers, replacement_transformers);
};
markdown.core.format = function() {
  var markdown$core$format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args);
  };
  var markdown$core$format = function(fmt, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__22273__i = 0, G__22273__a = new Array(arguments.length - 1);
      while (G__22273__i < G__22273__a.length) {
        G__22273__a[G__22273__i] = arguments[G__22273__i + 1];
        ++G__22273__i;
      }
      args = new cljs.core.IndexedSeq(G__22273__a, 0);
    }
    return markdown$core$format__delegate.call(this, fmt, args);
  };
  markdown$core$format.cljs$lang$maxFixedArity = 1;
  markdown$core$format.cljs$lang$applyTo = function(arglist__22274) {
    var fmt = cljs.core.first(arglist__22274);
    var args = cljs.core.rest(arglist__22274);
    return markdown$core$format__delegate(fmt, args);
  };
  markdown$core$format.cljs$core$IFn$_invoke$arity$variadic = markdown$core$format__delegate;
  return markdown$core$format;
}();
markdown.core.parse_referenes = function markdown$core$parse_referenes(lines) {
  var references = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var seq__22279_22283 = cljs.core.seq.call(null, lines);
  var chunk__22280_22284 = null;
  var count__22281_22285 = 0;
  var i__22282_22286 = 0;
  while (true) {
    if (i__22282_22286 < count__22281_22285) {
      var line_22287 = cljs.core._nth.call(null, chunk__22280_22284, i__22282_22286);
      markdown.transformers.parse_reference_link.call(null, line_22287, references);
      var G__22288 = seq__22279_22283;
      var G__22289 = chunk__22280_22284;
      var G__22290 = count__22281_22285;
      var G__22291 = i__22282_22286 + 1;
      seq__22279_22283 = G__22288;
      chunk__22280_22284 = G__22289;
      count__22281_22285 = G__22290;
      i__22282_22286 = G__22291;
      continue;
    } else {
      var temp__4126__auto___22292 = cljs.core.seq.call(null, seq__22279_22283);
      if (temp__4126__auto___22292) {
        var seq__22279_22293__$1 = temp__4126__auto___22292;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__22279_22293__$1)) {
          var c__4894__auto___22294 = cljs.core.chunk_first.call(null, seq__22279_22293__$1);
          var G__22295 = cljs.core.chunk_rest.call(null, seq__22279_22293__$1);
          var G__22296 = c__4894__auto___22294;
          var G__22297 = cljs.core.count.call(null, c__4894__auto___22294);
          var G__22298 = 0;
          seq__22279_22283 = G__22295;
          chunk__22280_22284 = G__22296;
          count__22281_22285 = G__22297;
          i__22282_22286 = G__22298;
          continue;
        } else {
          var line_22299 = cljs.core.first.call(null, seq__22279_22293__$1);
          markdown.transformers.parse_reference_link.call(null, line_22299, references);
          var G__22300 = cljs.core.next.call(null, seq__22279_22293__$1);
          var G__22301 = null;
          var G__22302 = 0;
          var G__22303 = 0;
          seq__22279_22283 = G__22300;
          chunk__22280_22284 = G__22301;
          count__22281_22285 = G__22302;
          i__22282_22286 = G__22303;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.deref.call(null, references);
};
markdown.core.md__GT_html = function() {
  var markdown$core$md__GT_html__delegate = function(text, params) {
    var _STAR_substring_STAR_22310 = markdown.transformers._STAR_substring_STAR_;
    var formatter22311 = markdown.transformers.formatter;
    markdown.transformers._STAR_substring_STAR_ = function(_STAR_substring_STAR_22310, formatter22311) {
      return function(s, n) {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.drop.call(null, n, s));
      };
    }(_STAR_substring_STAR_22310, formatter22311);
    markdown.transformers.formatter = markdown.core.format;
    try {
      var params__$1 = cljs.core.truth_(params) ? cljs.core.apply.call(null, cljs.core.partial.call(null, cljs.core.assoc, cljs.core.PersistentArrayMap.EMPTY), params) : null;
      var lines = text.split("\n");
      var html = new goog.string.StringBuffer("");
      var references = cljs.core.truth_((new cljs.core.Keyword(null, "reference-links?", "reference-links?", -2003778981)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? markdown.core.parse_referenes.call(null, lines) : null;
      var transformer = markdown.core.init_transformer.call(null, params__$1);
      var G__22313_22316 = lines;
      var vec__22314_22317 = G__22313_22316;
      var line_22318 = cljs.core.nth.call(null, vec__22314_22317, 0, null);
      var more_22319 = cljs.core.nthnext.call(null, vec__22314_22317, 1);
      var state_22320 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "clojurescript", "clojurescript", -299769403), true, new cljs.core.Keyword(null, "references", "references", 882562509), references, new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), true], null), params__$1);
      var G__22313_22321__$1 = G__22313_22316;
      var state_22322__$1 = state_22320;
      while (true) {
        var vec__22315_22323 = G__22313_22321__$1;
        var line_22324__$1 = cljs.core.nth.call(null, vec__22315_22323, 0, null);
        var more_22325__$1 = cljs.core.nthnext.call(null, vec__22315_22323, 1);
        var state_22326__$2 = state_22322__$1;
        var state_22327__$3 = cljs.core.truth_((new cljs.core.Keyword(null, "buf", "buf", -213913340)).cljs$core$IFn$_invoke$arity$1(state_22326__$2)) ? transformer.call(null, html, (new cljs.core.Keyword(null, "buf", "buf", -213913340)).cljs$core$IFn$_invoke$arity$1(state_22326__$2), cljs.core.first.call(null, more_22325__$1), cljs.core.assoc.call(null, cljs.core.dissoc.call(null, state_22326__$2, new cljs.core.Keyword(null, "buf", "buf", -213913340), new cljs.core.Keyword(null, "lists", "lists", 
        -884730684)), new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), true)) : state_22326__$2;
        if (cljs.core.truth_(cljs.core.first.call(null, more_22325__$1))) {
          var G__22328 = more_22325__$1;
          var G__22329 = cljs.core.assoc.call(null, transformer.call(null, html, line_22324__$1, cljs.core.first.call(null, more_22325__$1), state_22327__$3), new cljs.core.Keyword(null, "last-line-empty?", "last-line-empty?", 1279111527), cljs.core.empty_QMARK_.call(null, line_22324__$1));
          G__22313_22321__$1 = G__22328;
          state_22322__$1 = G__22329;
          continue;
        } else {
          transformer.call(null, html, line_22324__$1, "", cljs.core.assoc.call(null, state_22327__$3, new cljs.core.Keyword(null, "eof", "eof", -489063237), true));
        }
        break;
      }
      return html.toString();
    } finally {
      markdown.transformers.formatter = formatter22311;
      markdown.transformers._STAR_substring_STAR_ = _STAR_substring_STAR_22310;
    }
  };
  var markdown$core$md__GT_html = function(text, var_args) {
    var params = null;
    if (arguments.length > 1) {
      var G__22330__i = 0, G__22330__a = new Array(arguments.length - 1);
      while (G__22330__i < G__22330__a.length) {
        G__22330__a[G__22330__i] = arguments[G__22330__i + 1];
        ++G__22330__i;
      }
      params = new cljs.core.IndexedSeq(G__22330__a, 0);
    }
    return markdown$core$md__GT_html__delegate.call(this, text, params);
  };
  markdown$core$md__GT_html.cljs$lang$maxFixedArity = 1;
  markdown$core$md__GT_html.cljs$lang$applyTo = function(arglist__22331) {
    var text = cljs.core.first(arglist__22331);
    var params = cljs.core.rest(arglist__22331);
    return markdown$core$md__GT_html__delegate(text, params);
  };
  markdown$core$md__GT_html.cljs$core$IFn$_invoke$arity$variadic = markdown$core$md__GT_html__delegate;
  return markdown$core$md__GT_html;
}();
markdown.core.mdToHtml = function() {
  var markdown$core$mdToHtml__delegate = function(params) {
    return cljs.core.apply.call(null, markdown.core.md__GT_html, params);
  };
  var markdown$core$mdToHtml = function(var_args) {
    var params = null;
    if (arguments.length > 0) {
      var G__22332__i = 0, G__22332__a = new Array(arguments.length - 0);
      while (G__22332__i < G__22332__a.length) {
        G__22332__a[G__22332__i] = arguments[G__22332__i + 0];
        ++G__22332__i;
      }
      params = new cljs.core.IndexedSeq(G__22332__a, 0);
    }
    return markdown$core$mdToHtml__delegate.call(this, params);
  };
  markdown$core$mdToHtml.cljs$lang$maxFixedArity = 0;
  markdown$core$mdToHtml.cljs$lang$applyTo = function(arglist__22333) {
    var params = cljs.core.seq(arglist__22333);
    return markdown$core$mdToHtml__delegate(params);
  };
  markdown$core$mdToHtml.cljs$core$IFn$_invoke$arity$variadic = markdown$core$mdToHtml__delegate;
  return markdown$core$mdToHtml;
}();
goog.exportSymbol("markdown.core.mdToHtml", markdown.core.mdToHtml);
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj16068 = {};
  return obj16068;
}();
cljs.core.async.impl.protocols.take_BANG_ = function cljs$core$async$impl$protocols$take_BANG_(port, fn1_handler) {
  if (function() {
    var and__4097__auto__ = port;
    if (and__4097__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4745__auto__ = port == null ? null : port;
    return function() {
      var or__4109__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj16070 = {};
  return obj16070;
}();
cljs.core.async.impl.protocols.put_BANG_ = function cljs$core$async$impl$protocols$put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__4097__auto__ = port;
    if (and__4097__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4745__auto__ = port == null ? null : port;
    return function() {
      var or__4109__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj16072 = {};
  return obj16072;
}();
cljs.core.async.impl.protocols.close_BANG_ = function cljs$core$async$impl$protocols$close_BANG_(chan) {
  if (function() {
    var and__4097__auto__ = chan;
    if (and__4097__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4745__auto__ = chan == null ? null : chan;
    return function() {
      var or__4109__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function cljs$core$async$impl$protocols$closed_QMARK_(chan) {
  if (function() {
    var and__4097__auto__ = chan;
    if (and__4097__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4745__auto__ = chan == null ? null : chan;
    return function() {
      var or__4109__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj16074 = {};
  return obj16074;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function cljs$core$async$impl$protocols$active_QMARK_(h) {
  if (function() {
    var and__4097__auto__ = h;
    if (and__4097__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4745__auto__ = h == null ? null : h;
    return function() {
      var or__4109__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function cljs$core$async$impl$protocols$commit(h) {
  if (function() {
    var and__4097__auto__ = h;
    if (and__4097__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4745__auto__ = h == null ? null : h;
    return function() {
      var or__4109__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj16076 = {};
  return obj16076;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function cljs$core$async$impl$protocols$full_QMARK_(b) {
  if (function() {
    var and__4097__auto__ = b;
    if (and__4097__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4745__auto__ = b == null ? null : b;
    return function() {
      var or__4109__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function cljs$core$async$impl$protocols$remove_BANG_(b) {
  if (function() {
    var and__4097__auto__ = b;
    if (and__4097__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4745__auto__ = b == null ? null : b;
    return function() {
      var or__4109__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function cljs$core$async$impl$protocols$add_BANG__STAR_(b, itm) {
  if (function() {
    var and__4097__auto__ = b;
    if (and__4097__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__4745__auto__ = b == null ? null : b;
    return function() {
      var or__4109__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function() {
  var cljs$core$async$impl$protocols$add_BANG_ = null;
  var cljs$core$async$impl$protocols$add_BANG___1 = function(b) {
    return b;
  };
  var cljs$core$async$impl$protocols$add_BANG___2 = function(b, itm) {
    if (!(itm == null)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
    }
    return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
  };
  cljs$core$async$impl$protocols$add_BANG_ = function(b, itm) {
    switch(arguments.length) {
      case 1:
        return cljs$core$async$impl$protocols$add_BANG___1.call(this, b);
      case 2:
        return cljs$core$async$impl$protocols$add_BANG___2.call(this, b, itm);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$impl$protocols$add_BANG_.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$impl$protocols$add_BANG___1;
  cljs$core$async$impl$protocols$add_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$impl$protocols$add_BANG___2;
  return cljs$core$async$impl$protocols$add_BANG_;
}();
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj16078 = {};
  return obj16078;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function cljs$core$async$impl$buffers$acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__16081 = cnt + 1;
      cnt = G__16081;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4994__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4994__auto__) {
      var v_16082 = this$.pop();
      if (keep_QMARK_.call(null, v_16082)) {
        this$.unshift(v_16082);
      } else {
      }
      var G__16083 = x + 1;
      x = G__16083;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function cljs$core$async$impl$buffers$__GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function cljs$core$async$impl$buffers$ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function cljs$core$async$impl$buffers$__GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function cljs$core$async$impl$buffers$fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function cljs$core$async$impl$buffers$__GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function cljs$core$async$impl$buffers$dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function cljs$core$async$impl$buffers$__GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function cljs$core$async$impl$buffers$sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.functions");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener) {
    Channel = function() {
      var iframe = document.createElement("iframe");
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (e.origin != origin && e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined") {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      head = head.next;
      var cb = head.cb;
      head.cb = null;
      cb();
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement("script")) {
    return function(cb) {
      var script = document.createElement("script");
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("goog.async.nextTick");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function cljs$core$async$impl$dispatch$process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_16086 = 0;
  while (true) {
    var m_16087 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_16087 == null) {
    } else {
      m_16087.call(null);
      if (count_16086 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__16088 = count_16086 + 1;
        count_16086 = G__16088;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function cljs$core$async$impl$dispatch$queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__4097__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__4097__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__4097__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function cljs$core$async$impl$dispatch$run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function cljs$core$async$impl$dispatch$queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function cljs$core$async$impl$channels$box(val) {
  if (typeof cljs.core.async.impl.channels.t16094 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t16094 = function(val, box, meta16095) {
      this.val = val;
      this.box = box;
      this.meta16095 = meta16095;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t16094.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t16094.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16096) {
      var self__ = this;
      var _16096__$1 = this;
      return self__.meta16095;
    };
    cljs.core.async.impl.channels.t16094.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16096, meta16095__$1) {
      var self__ = this;
      var _16096__$1 = this;
      return new cljs.core.async.impl.channels.t16094(self__.val, self__.box, meta16095__$1);
    };
    cljs.core.async.impl.channels.t16094.cljs$lang$type = true;
    cljs.core.async.impl.channels.t16094.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t16094";
    cljs.core.async.impl.channels.t16094.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
      return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async.impl.channels/t16094");
    };
    cljs.core.async.impl.channels.__GT_t16094 = function cljs$core$async$impl$channels$box_$___GT_t16094(val__$1, box__$1, meta16095) {
      return new cljs.core.async.impl.channels.t16094(val__$1, box__$1, meta16095);
    };
  }
  return new cljs.core.async.impl.channels.t16094(val, cljs$core$async$impl$channels$box, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function cljs$core$async$impl$channels$__GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function cljs$core$async$impl$channels$put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
  var obj16098 = {};
  return obj16098;
}();
cljs.core.async.impl.channels.abort = function cljs$core$async$impl$channels$abort(this$) {
  if (function() {
    var and__4097__auto__ = this$;
    if (and__4097__auto__) {
      return this$.cljs$core$async$impl$channels$MMC$abort$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__4745__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4109__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.impl.channels.abort["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__4097__auto__ = self__.buf;
      if (cljs.core.truth_(and__4097__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__4097__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_16099 = self__.takes.pop();
      if (taker_16099 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_16099)) {
          var take_cb_16100 = cljs.core.async.impl.protocols.commit.call(null, taker_16099);
          var val_16101 = cljs.core.truth_(function() {
            var and__4097__auto__ = self__.buf;
            if (cljs.core.truth_(and__4097__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__4097__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_16100, val_16101, taker_16099, this$__$1) {
            return function() {
              return take_cb_16100.call(null, val_16101);
            };
          }(take_cb_16100, val_16101, taker_16099, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_16102 = self__.puts.pop();
          if (putter_16102 == null) {
          } else {
            var put_handler_16103 = putter_16102.handler;
            var val_16104 = putter_16102.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_16103)) {
              var put_cb_16105 = cljs.core.async.impl.protocols.commit.call(null, put_handler_16103);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_16105, put_handler_16103, val_16104, putter_16102, _, retval, this$__$1) {
                return function() {
                  return put_cb_16105.call(null, true);
                };
              }(put_cb_16105, put_handler_16103, val_16104, putter_16102, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_16104))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__4097__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__4097__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__4097__auto__;
            }
          }())) {
            var has_val = function() {
              var and__4097__auto__ = self__.buf;
              if (cljs.core.truth_(and__4097__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__4097__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
            "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__4097__auto__ = self__.buf;
      if (cljs.core.truth_(and__4097__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__4097__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_16106 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_16106)) {
            var take_cb_16107 = cljs.core.async.impl.protocols.commit.call(null, taker_16106);
            var val_16108__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_16107, val_16108__$1, taker_16106, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_16107.call(null, val_16108__$1);
              };
            }(take_cb_16107, val_16108__$1, taker_16106, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_16109 = self__.puts.pop();
    if (putter_16109 == null) {
    } else {
      var put_handler_16110 = putter_16109.handler;
      var val_16111 = putter_16109.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_16110)) {
        var put_cb_16112 = cljs.core.async.impl.protocols.commit.call(null, put_handler_16110);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_16112, put_handler_16110, val_16111, putter_16109, this$__$1) {
          return function() {
            return put_cb_16112.call(null, true);
          };
        }(put_cb_16112, put_handler_16110, val_16111, putter_16109, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function cljs$core$async$impl$channels$__GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function cljs$core$async$impl$channels$ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function cljs$core$async$impl$channels$handle(buf, exh, t) {
  var else$ = function() {
    var or__4109__auto__ = exh;
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function() {
  var cljs$core$async$impl$channels$chan = null;
  var cljs$core$async$impl$channels$chan__1 = function(buf) {
    return cljs$core$async$impl$channels$chan.call(null, buf, null);
  };
  var cljs$core$async$impl$channels$chan__2 = function(buf, xform) {
    return cljs$core$async$impl$channels$chan.call(null, buf, xform, null);
  };
  var cljs$core$async$impl$channels$chan__3 = function(buf, xform, exh) {
    return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
      var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
      return function(add_BANG_) {
        return function() {
          var G__16117 = null;
          var G__16117__1 = function(buf__$1) {
            try {
              return add_BANG_.call(null, buf__$1);
            } catch (e16115) {
              var t = e16115;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          var G__16117__2 = function(buf__$1, val) {
            try {
              return add_BANG_.call(null, buf__$1, val);
            } catch (e16116) {
              var t = e16116;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          G__16117 = function(buf__$1, val) {
            switch(arguments.length) {
              case 1:
                return G__16117__1.call(this, buf__$1);
              case 2:
                return G__16117__2.call(this, buf__$1, val);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__16117.cljs$core$IFn$_invoke$arity$1 = G__16117__1;
          G__16117.cljs$core$IFn$_invoke$arity$2 = G__16117__2;
          return G__16117;
        }();
      }(add_BANG_);
    }());
  };
  cljs$core$async$impl$channels$chan = function(buf, xform, exh) {
    switch(arguments.length) {
      case 1:
        return cljs$core$async$impl$channels$chan__1.call(this, buf);
      case 2:
        return cljs$core$async$impl$channels$chan__2.call(this, buf, xform);
      case 3:
        return cljs$core$async$impl$channels$chan__3.call(this, buf, xform, exh);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$impl$channels$chan.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$impl$channels$chan__1;
  cljs$core$async$impl$channels$chan.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$impl$channels$chan__2;
  cljs$core$async$impl$channels$chan.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$impl$channels$chan__3;
  return cljs$core$async$impl$channels$chan;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function cljs$core$async$impl$ioc_helpers$aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function cljs$core$async$impl$ioc_helpers$aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function cljs$core$async$impl$ioc_helpers$finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function cljs$core$async$impl$ioc_helpers$fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t16026 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t16026 = function(f, fn_handler, meta16027) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta16027 = meta16027;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t16026.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t16026.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t16026.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t16026.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16028) {
      var self__ = this;
      var _16028__$1 = this;
      return self__.meta16027;
    };
    cljs.core.async.impl.ioc_helpers.t16026.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16028, meta16027__$1) {
      var self__ = this;
      var _16028__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t16026(self__.f, self__.fn_handler, meta16027__$1);
    };
    cljs.core.async.impl.ioc_helpers.t16026.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t16026.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t16026";
    cljs.core.async.impl.ioc_helpers.t16026.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
      return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async.impl.ioc-helpers/t16026");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t16026 = function cljs$core$async$impl$ioc_helpers$fn_handler_$___GT_t16026(f__$1, fn_handler__$1, meta16027) {
      return new cljs.core.async.impl.ioc_helpers.t16026(f__$1, fn_handler__$1, meta16027);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t16026(f, cljs$core$async$impl$ioc_helpers$fn_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function cljs$core$async$impl$ioc_helpers$run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function cljs$core$async$impl$ioc_helpers$run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e16030) {
    if (e16030 instanceof Object) {
      var ex = e16030;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e16030;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function cljs$core$async$impl$ioc_helpers$take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_16033_16035 = state;
    statearr_16033_16035[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_16033_16035[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_16034_16036 = state;
    statearr_16034_16036[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_16034_16036[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function cljs$core$async$impl$ioc_helpers$put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_16039_16041 = state;
    statearr_16039_16041[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_16039_16041[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_16040_16042 = state;
    statearr_16040_16042[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_16040_16042[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function cljs$core$async$impl$ioc_helpers$return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4704__auto__, k__4705__auto__) {
  var self__ = this;
  var this__4704__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4704__auto____$1, k__4705__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4706__auto__, k16044, else__4707__auto__) {
  var self__ = this;
  var this__4706__auto____$1 = this;
  var G__16046 = k16044 instanceof cljs.core.Keyword ? k16044.fqn : null;
  switch(G__16046) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k16044, else__4707__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4718__auto__, writer__4719__auto__, opts__4720__auto__) {
  var self__ = this;
  var this__4718__auto____$1 = this;
  var pr_pair__4721__auto__ = function(this__4718__auto____$1) {
    return function(keyval__4722__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4719__auto__, cljs.core.pr_writer, "", " ", "", opts__4720__auto__, keyval__4722__auto__);
    };
  }(this__4718__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4719__auto__, pr_pair__4721__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4720__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4702__auto__) {
  var self__ = this;
  var this__4702__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4698__auto__) {
  var self__ = this;
  var this__4698__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4708__auto__) {
  var self__ = this;
  var this__4708__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4699__auto__) {
  var self__ = this;
  var this__4699__auto____$1 = this;
  var h__4525__auto__ = self__.__hash;
  if (!(h__4525__auto__ == null)) {
    return h__4525__auto__;
  } else {
    var h__4525__auto____$1 = cljs.core.hash_imap.call(null, this__4699__auto____$1);
    self__.__hash = h__4525__auto____$1;
    return h__4525__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4700__auto__, other__4701__auto__) {
  var self__ = this;
  var this__4700__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4097__auto__ = other__4701__auto__;
    if (cljs.core.truth_(and__4097__auto__)) {
      return this__4700__auto____$1.constructor === other__4701__auto__.constructor && cljs.core.equiv_map.call(null, this__4700__auto____$1, other__4701__auto__);
    } else {
      return and__4097__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4713__auto__, k__4714__auto__) {
  var self__ = this;
  var this__4713__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4714__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4713__auto____$1), self__.__meta), k__4714__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4714__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4711__auto__, k__4712__auto__, G__16043) {
  var self__ = this;
  var this__4711__auto____$1 = this;
  var pred__16047 = cljs.core.keyword_identical_QMARK_;
  var expr__16048 = k__4712__auto__;
  if (cljs.core.truth_(pred__16047.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__16048))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__16043, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__16047.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__16048))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__16043, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__16047.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__16048))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__16043, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__16047.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__16048))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__16043, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__16047.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__16048))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__16043, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4712__auto__, G__16043), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4716__auto__) {
  var self__ = this;
  var this__4716__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4703__auto__, G__16043) {
  var self__ = this;
  var this__4703__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__16043, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4709__auto__, entry__4710__auto__) {
  var self__ = this;
  var this__4709__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4710__auto__)) {
    return cljs.core._assoc.call(null, this__4709__auto____$1, cljs.core._nth.call(null, entry__4710__auto__, 0), cljs.core._nth.call(null, entry__4710__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4709__auto____$1, entry__4710__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4738__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4738__auto__, writer__4739__auto__) {
  return cljs.core._write.call(null, writer__4739__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$__GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$map__GT_ExceptionFrame(G__16045) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__16045), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__16045), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__16045), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__16045), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__16045), null, cljs.core.dissoc.call(null, G__16045, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function cljs$core$async$impl$ioc_helpers$add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_16052 = state;
  statearr_16052[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_16052;
};
cljs.core.async.impl.ioc_helpers.process_exception = function cljs$core$async$impl$ioc_helpers$process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__4097__auto__ = exception;
      if (cljs.core.truth_(and__4097__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__4097__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__4097__auto__ = exception;
        if (cljs.core.truth_(and__4097__auto__)) {
          var and__4097__auto____$1 = catch_block;
          if (cljs.core.truth_(and__4097__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__4097__auto____$1;
          }
        } else {
          return and__4097__auto__;
        }
      }())) {
        var statearr_16058 = state;
        statearr_16058[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_16058[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_16058[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_16058[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_16058;
      } else {
        if (cljs.core.truth_(function() {
          var and__4097__auto__ = exception;
          if (cljs.core.truth_(and__4097__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__4097__auto__;
          }
        }())) {
          var statearr_16059_16063 = state;
          statearr_16059_16063[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__16064 = state;
          state = G__16064;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__4097__auto__ = exception;
            if (cljs.core.truth_(and__4097__auto__)) {
              var and__4097__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__4097__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__4097__auto____$1;
              }
            } else {
              return and__4097__auto__;
            }
          }())) {
            var statearr_16060 = state;
            statearr_16060[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_16060[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_16060;
          } else {
            if (cljs.core.truth_(function() {
              var and__4097__auto__ = cljs.core.not.call(null, exception);
              if (and__4097__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__4097__auto__;
              }
            }())) {
              var statearr_16061 = state;
              statearr_16061[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_16061[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_16061;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_16062 = state;
                statearr_16062[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_16062[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_16062;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var cljs$core$async$impl$timers$random_level = null;
  var cljs$core$async$impl$timers$random_level__0 = function() {
    return cljs$core$async$impl$timers$random_level.call(null, 0);
  };
  var cljs$core$async$impl$timers$random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__15997 = level + 1;
        level = G__15997;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  cljs$core$async$impl$timers$random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return cljs$core$async$impl$timers$random_level__0.call(this);
      case 1:
        return cljs$core$async$impl$timers$random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$impl$timers$random_level.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$impl$timers$random_level__0;
  cljs$core$async$impl$timers$random_level.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$impl$timers$random_level__1;
  return cljs$core$async$impl$timers$random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function cljs$core$async$impl$timers$__GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var cljs$core$async$impl$timers$skip_list_node = null;
  var cljs$core$async$impl$timers$skip_list_node__1 = function(level) {
    return cljs$core$async$impl$timers$skip_list_node.call(null, null, null, level);
  };
  var cljs$core$async$impl$timers$skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_15998 = 0;
    while (true) {
      if (i_15998 < arr.length) {
        arr[i_15998] = null;
        var G__15999 = i_15998 + 1;
        i_15998 = G__15999;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  cljs$core$async$impl$timers$skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return cljs$core$async$impl$timers$skip_list_node__1.call(this, k);
      case 3:
        return cljs$core$async$impl$timers$skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$impl$timers$skip_list_node.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$impl$timers$skip_list_node__1;
  cljs$core$async$impl$timers$skip_list_node.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$impl$timers$skip_list_node__3;
  return cljs$core$async$impl$timers$skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var cljs$core$async$impl$timers$least_greater_node = null;
  var cljs$core$async$impl$timers$least_greater_node__3 = function(x, k, level) {
    return cljs$core$async$impl$timers$least_greater_node.call(null, x, k, level, null);
  };
  var cljs$core$async$impl$timers$least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__16000 = x_SINGLEQUOTE_;
                x__$1 = G__16000;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__16001 = x__$1;
        var G__16002 = k;
        var G__16003 = level - 1;
        var G__16004 = update;
        x = G__16001;
        k = G__16002;
        level = G__16003;
        update = G__16004;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  cljs$core$async$impl$timers$least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return cljs$core$async$impl$timers$least_greater_node__3.call(this, x, k, level);
      case 4:
        return cljs$core$async$impl$timers$least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$impl$timers$least_greater_node.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$impl$timers$least_greater_node__3;
  cljs$core$async$impl$timers$least_greater_node.cljs$core$IFn$_invoke$arity$4 = cljs$core$async$impl$timers$least_greater_node__4;
  return cljs$core$async$impl$timers$least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function cljs$core$async$impl$timers$iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), cljs$core$async$impl$timers$iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_16005 = self__.level + 1;
      while (true) {
        if (i_16005 <= new_level + 1) {
          update[i_16005] = self__.header;
          var G__16006 = i_16005 + 1;
          i_16005 = G__16006;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_16007 = 0;
    while (true) {
      if (i_16007 <= self__.level) {
        var links_16008 = update[i_16007].forward;
        if (links_16008[i_16007] === x__$1) {
          links_16008[i_16007] = x__$1.forward[i_16007];
          var G__16009 = i_16007 + 1;
          i_16007 = G__16009;
          continue;
        } else {
          var G__16010 = i_16007 + 1;
          i_16007 = G__16010;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__16011 = x_SINGLEQUOTE_;
              x__$1 = G__16011;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__16012 = nx;
        var G__16013 = level__$1 - 1;
        x = G__16012;
        level__$1 = G__16013;
        continue;
      } else {
        var G__16014 = x;
        var G__16015 = level__$1 - 1;
        x = G__16014;
        level__$1 = G__16015;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__16016 = x_SINGLEQUOTE_;
              x__$1 = G__16016;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__16017 = nx;
        var G__16018 = level__$1 - 1;
        x = G__16017;
        level__$1 = G__16018;
        continue;
      } else {
        var G__16019 = x;
        var G__16020 = level__$1 - 1;
        x = G__16019;
        level__$1 = G__16020;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function cljs$core$async$impl$timers$__GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function cljs$core$async$impl$timers$skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function cljs$core$async$impl$timers$timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__4109__auto__ = cljs.core.truth_(function() {
    var and__4097__auto__ = me;
    if (cljs.core.truth_(and__4097__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__4097__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__4109__auto__)) {
    return or__4109__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__4109__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__4109__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function cljs$core$async$fn_handler(f) {
  if (typeof cljs.core.async.t12908 !== "undefined") {
  } else {
    cljs.core.async.t12908 = function(f, fn_handler, meta12909) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta12909 = meta12909;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t12908.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t12908.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t12908.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t12908.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12910) {
      var self__ = this;
      var _12910__$1 = this;
      return self__.meta12909;
    };
    cljs.core.async.t12908.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12910, meta12909__$1) {
      var self__ = this;
      var _12910__$1 = this;
      return new cljs.core.async.t12908(self__.f, self__.fn_handler, meta12909__$1);
    };
    cljs.core.async.t12908.cljs$lang$type = true;
    cljs.core.async.t12908.cljs$lang$ctorStr = "cljs.core.async/t12908";
    cljs.core.async.t12908.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
      return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async/t12908");
    };
    cljs.core.async.__GT_t12908 = function cljs$core$async$fn_handler_$___GT_t12908(f__$1, fn_handler__$1, meta12909) {
      return new cljs.core.async.t12908(f__$1, fn_handler__$1, meta12909);
    };
  }
  return new cljs.core.async.t12908(f, cljs$core$async$fn_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.buffer = function cljs$core$async$buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function cljs$core$async$dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function cljs$core$async$sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function cljs$core$async$unblocking_buffer_QMARK_(buff) {
  var G__12912 = buff;
  if (G__12912) {
    var bit__4783__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__4109__auto__ = bit__4783__auto__;
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return G__12912.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__12912.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__12912);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__12912);
  }
};
cljs.core.async.chan = function() {
  var cljs$core$async$chan = null;
  var cljs$core$async$chan__0 = function() {
    return cljs$core$async$chan.call(null, null);
  };
  var cljs$core$async$chan__1 = function(buf_or_n) {
    return cljs$core$async$chan.call(null, buf_or_n, null, null);
  };
  var cljs$core$async$chan__2 = function(buf_or_n, xform) {
    return cljs$core$async$chan.call(null, buf_or_n, xform, null);
  };
  var cljs$core$async$chan__3 = function(buf_or_n, xform, ex_handler) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    if (cljs.core.truth_(xform)) {
      if (cljs.core.truth_(buf_or_n__$1)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
      }
    } else {
    }
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
  };
  cljs$core$async$chan = function(buf_or_n, xform, ex_handler) {
    switch(arguments.length) {
      case 0:
        return cljs$core$async$chan__0.call(this);
      case 1:
        return cljs$core$async$chan__1.call(this, buf_or_n);
      case 2:
        return cljs$core$async$chan__2.call(this, buf_or_n, xform);
      case 3:
        return cljs$core$async$chan__3.call(this, buf_or_n, xform, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$chan.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$chan__0;
  cljs$core$async$chan.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$chan__1;
  cljs$core$async$chan.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$chan__2;
  cljs$core$async$chan.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$chan__3;
  return cljs$core$async$chan;
}();
cljs.core.async.timeout = function cljs$core$async$timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function cljs$core$async$_LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function() {
  var cljs$core$async$take_BANG_ = null;
  var cljs$core$async$take_BANG___2 = function(port, fn1) {
    return cljs$core$async$take_BANG_.call(null, port, fn1, true);
  };
  var cljs$core$async$take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_12913 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_12913);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_12913, ret) {
          return function() {
            return fn1.call(null, val_12913);
          };
        }(val_12913, ret));
      }
    } else {
    }
    return null;
  };
  cljs$core$async$take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return cljs$core$async$take_BANG___2.call(this, port, fn1);
      case 3:
        return cljs$core$async$take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$take_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$take_BANG___2;
  cljs$core$async$take_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$take_BANG___3;
  return cljs$core$async$take_BANG_;
}();
cljs.core.async.nop = function cljs$core$async$nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function cljs$core$async$_GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function() {
  var cljs$core$async$put_BANG_ = null;
  var cljs$core$async$put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var cljs$core$async$put_BANG___3 = function(port, val, fn1) {
    return cljs$core$async$put_BANG_.call(null, port, val, fn1, true);
  };
  var cljs$core$async$put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  cljs$core$async$put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return cljs$core$async$put_BANG___2.call(this, port, val);
      case 3:
        return cljs$core$async$put_BANG___3.call(this, port, val, fn1);
      case 4:
        return cljs$core$async$put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$put_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$put_BANG___2;
  cljs$core$async$put_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$put_BANG___3;
  cljs$core$async$put_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$async$put_BANG___4;
  return cljs$core$async$put_BANG_;
}();
cljs.core.async.close_BANG_ = function cljs$core$async$close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function cljs$core$async$random_array(n) {
  var a = new Array(n);
  var n__4994__auto___12914 = n;
  var x_12915 = 0;
  while (true) {
    if (x_12915 < n__4994__auto___12914) {
      a[x_12915] = 0;
      var G__12916 = x_12915 + 1;
      x_12915 = G__12916;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__12917 = i + 1;
      i = G__12917;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function cljs$core$async$alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t12921 !== "undefined") {
  } else {
    cljs.core.async.t12921 = function(flag, alt_flag, meta12922) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta12922 = meta12922;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t12921.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t12921.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t12921.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t12921.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_12923) {
        var self__ = this;
        var _12923__$1 = this;
        return self__.meta12922;
      };
    }(flag);
    cljs.core.async.t12921.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_12923, meta12922__$1) {
        var self__ = this;
        var _12923__$1 = this;
        return new cljs.core.async.t12921(self__.flag, self__.alt_flag, meta12922__$1);
      };
    }(flag);
    cljs.core.async.t12921.cljs$lang$type = true;
    cljs.core.async.t12921.cljs$lang$ctorStr = "cljs.core.async/t12921";
    cljs.core.async.t12921.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
        return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async/t12921");
      };
    }(flag);
    cljs.core.async.__GT_t12921 = function(flag) {
      return function cljs$core$async$alt_flag_$___GT_t12921(flag__$1, alt_flag__$1, meta12922) {
        return new cljs.core.async.t12921(flag__$1, alt_flag__$1, meta12922);
      };
    }(flag);
  }
  return new cljs.core.async.t12921(flag, cljs$core$async$alt_flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function cljs$core$async$alt_handler(flag, cb) {
  if (typeof cljs.core.async.t12927 !== "undefined") {
  } else {
    cljs.core.async.t12927 = function(cb, flag, alt_handler, meta12928) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta12928 = meta12928;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t12927.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t12927.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t12927.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t12927.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12929) {
      var self__ = this;
      var _12929__$1 = this;
      return self__.meta12928;
    };
    cljs.core.async.t12927.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12929, meta12928__$1) {
      var self__ = this;
      var _12929__$1 = this;
      return new cljs.core.async.t12927(self__.cb, self__.flag, self__.alt_handler, meta12928__$1);
    };
    cljs.core.async.t12927.cljs$lang$type = true;
    cljs.core.async.t12927.cljs$lang$ctorStr = "cljs.core.async/t12927";
    cljs.core.async.t12927.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
      return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async/t12927");
    };
    cljs.core.async.__GT_t12927 = function cljs$core$async$alt_handler_$___GT_t12927(cb__$1, flag__$1, alt_handler__$1, meta12928) {
      return new cljs.core.async.t12927(cb__$1, flag__$1, alt_handler__$1, meta12928);
    };
  }
  return new cljs.core.async.t12927(cb, flag, cljs$core$async$alt_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function cljs$core$async$do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__12930_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__12930_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__12931_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__12931_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__4109__auto__ = wport;
            if (cljs.core.truth_(or__4109__auto__)) {
              return or__4109__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__12932 = i + 1;
          i = G__12932;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__4109__auto__ = ret;
  if (cljs.core.truth_(or__4109__auto__)) {
    return or__4109__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__4097__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__4097__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__4097__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var cljs$core$async$alts_BANG___delegate = function(ports, p__12933) {
    var map__12935 = p__12933;
    var map__12935__$1 = cljs.core.seq_QMARK_.call(null, map__12935) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12935) : map__12935;
    var opts = map__12935__$1;
    throw new Error("alts! used not in (go ...) block");
  };
  var cljs$core$async$alts_BANG_ = function(ports, var_args) {
    var p__12933 = null;
    if (arguments.length > 1) {
      var G__12936__i = 0, G__12936__a = new Array(arguments.length - 1);
      while (G__12936__i < G__12936__a.length) {
        G__12936__a[G__12936__i] = arguments[G__12936__i + 1];
        ++G__12936__i;
      }
      p__12933 = new cljs.core.IndexedSeq(G__12936__a, 0);
    }
    return cljs$core$async$alts_BANG___delegate.call(this, ports, p__12933);
  };
  cljs$core$async$alts_BANG_.cljs$lang$maxFixedArity = 1;
  cljs$core$async$alts_BANG_.cljs$lang$applyTo = function(arglist__12937) {
    var ports = cljs.core.first(arglist__12937);
    var p__12933 = cljs.core.rest(arglist__12937);
    return cljs$core$async$alts_BANG___delegate(ports, p__12933);
  };
  cljs$core$async$alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$async$alts_BANG___delegate;
  return cljs$core$async$alts_BANG_;
}();
cljs.core.async.pipe = function() {
  var cljs$core$async$pipe = null;
  var cljs$core$async$pipe__2 = function(from, to) {
    return cljs$core$async$pipe.call(null, from, to, true);
  };
  var cljs$core$async$pipe__3 = function(from, to, close_QMARK_) {
    var c__6881__auto___13032 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto___13032) {
      return function() {
        var f__6882__auto__ = function() {
          var switch__6825__auto__ = function(c__6881__auto___13032) {
            return function(state_13008) {
              var state_val_13009 = state_13008[1];
              if (state_val_13009 === 7) {
                var inst_13004 = state_13008[2];
                var state_13008__$1 = state_13008;
                var statearr_13010_13033 = state_13008__$1;
                statearr_13010_13033[2] = inst_13004;
                statearr_13010_13033[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13009 === 1) {
                  var state_13008__$1 = state_13008;
                  var statearr_13011_13034 = state_13008__$1;
                  statearr_13011_13034[2] = null;
                  statearr_13011_13034[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13009 === 4) {
                    var inst_12987 = state_13008[7];
                    var inst_12987__$1 = state_13008[2];
                    var inst_12988 = inst_12987__$1 == null;
                    var state_13008__$1 = function() {
                      var statearr_13012 = state_13008;
                      statearr_13012[7] = inst_12987__$1;
                      return statearr_13012;
                    }();
                    if (cljs.core.truth_(inst_12988)) {
                      var statearr_13013_13035 = state_13008__$1;
                      statearr_13013_13035[1] = 5;
                    } else {
                      var statearr_13014_13036 = state_13008__$1;
                      statearr_13014_13036[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13009 === 13) {
                      var state_13008__$1 = state_13008;
                      var statearr_13015_13037 = state_13008__$1;
                      statearr_13015_13037[2] = null;
                      statearr_13015_13037[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13009 === 6) {
                        var inst_12987 = state_13008[7];
                        var state_13008__$1 = state_13008;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13008__$1, 11, to, inst_12987);
                      } else {
                        if (state_val_13009 === 3) {
                          var inst_13006 = state_13008[2];
                          var state_13008__$1 = state_13008;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13008__$1, inst_13006);
                        } else {
                          if (state_val_13009 === 12) {
                            var state_13008__$1 = state_13008;
                            var statearr_13016_13038 = state_13008__$1;
                            statearr_13016_13038[2] = null;
                            statearr_13016_13038[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13009 === 2) {
                              var state_13008__$1 = state_13008;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13008__$1, 4, from);
                            } else {
                              if (state_val_13009 === 11) {
                                var inst_12997 = state_13008[2];
                                var state_13008__$1 = state_13008;
                                if (cljs.core.truth_(inst_12997)) {
                                  var statearr_13017_13039 = state_13008__$1;
                                  statearr_13017_13039[1] = 12;
                                } else {
                                  var statearr_13018_13040 = state_13008__$1;
                                  statearr_13018_13040[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_13009 === 9) {
                                  var state_13008__$1 = state_13008;
                                  var statearr_13019_13041 = state_13008__$1;
                                  statearr_13019_13041[2] = null;
                                  statearr_13019_13041[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13009 === 5) {
                                    var state_13008__$1 = state_13008;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_13020_13042 = state_13008__$1;
                                      statearr_13020_13042[1] = 8;
                                    } else {
                                      var statearr_13021_13043 = state_13008__$1;
                                      statearr_13021_13043[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_13009 === 14) {
                                      var inst_13002 = state_13008[2];
                                      var state_13008__$1 = state_13008;
                                      var statearr_13022_13044 = state_13008__$1;
                                      statearr_13022_13044[2] = inst_13002;
                                      statearr_13022_13044[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_13009 === 10) {
                                        var inst_12994 = state_13008[2];
                                        var state_13008__$1 = state_13008;
                                        var statearr_13023_13045 = state_13008__$1;
                                        statearr_13023_13045[2] = inst_12994;
                                        statearr_13023_13045[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_13009 === 8) {
                                          var inst_12991 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_13008__$1 = state_13008;
                                          var statearr_13024_13046 = state_13008__$1;
                                          statearr_13024_13046[2] = inst_12991;
                                          statearr_13024_13046[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6881__auto___13032);
          return function(switch__6825__auto__, c__6881__auto___13032) {
            return function() {
              var cljs$core$async$pipe_$_state_machine__6826__auto__ = null;
              var cljs$core$async$pipe_$_state_machine__6826__auto____0 = function() {
                var statearr_13028 = [null, null, null, null, null, null, null, null];
                statearr_13028[0] = cljs$core$async$pipe_$_state_machine__6826__auto__;
                statearr_13028[1] = 1;
                return statearr_13028;
              };
              var cljs$core$async$pipe_$_state_machine__6826__auto____1 = function(state_13008) {
                while (true) {
                  var ret_value__6827__auto__ = function() {
                    try {
                      while (true) {
                        var result__6828__auto__ = switch__6825__auto__.call(null, state_13008);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6828__auto__;
                        }
                        break;
                      }
                    } catch (e13029) {
                      if (e13029 instanceof Object) {
                        var ex__6829__auto__ = e13029;
                        var statearr_13030_13047 = state_13008;
                        statearr_13030_13047[5] = ex__6829__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13008);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e13029;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__13048 = state_13008;
                    state_13008 = G__13048;
                    continue;
                  } else {
                    return ret_value__6827__auto__;
                  }
                  break;
                }
              };
              cljs$core$async$pipe_$_state_machine__6826__auto__ = function(state_13008) {
                switch(arguments.length) {
                  case 0:
                    return cljs$core$async$pipe_$_state_machine__6826__auto____0.call(this);
                  case 1:
                    return cljs$core$async$pipe_$_state_machine__6826__auto____1.call(this, state_13008);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              cljs$core$async$pipe_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipe_$_state_machine__6826__auto____0;
              cljs$core$async$pipe_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipe_$_state_machine__6826__auto____1;
              return cljs$core$async$pipe_$_state_machine__6826__auto__;
            }();
          }(switch__6825__auto__, c__6881__auto___13032);
        }();
        var state__6883__auto__ = function() {
          var statearr_13031 = f__6882__auto__.call(null);
          statearr_13031[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto___13032;
          return statearr_13031;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
      };
    }(c__6881__auto___13032));
    return to;
  };
  cljs$core$async$pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return cljs$core$async$pipe__2.call(this, from, to);
      case 3:
        return cljs$core$async$pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$pipe.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$pipe__2;
  cljs$core$async$pipe.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$pipe__3;
  return cljs$core$async$pipe;
}();
cljs.core.async.pipeline_STAR_ = function cljs$core$async$pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__13232) {
      var vec__13233 = p__13232;
      var v = cljs.core.nth.call(null, vec__13233, 0, null);
      var p = cljs.core.nth.call(null, vec__13233, 1, null);
      var job = vec__13233;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__6881__auto___13415 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto___13415, res, vec__13233, v, p, job, jobs, results) {
          return function() {
            var f__6882__auto__ = function() {
              var switch__6825__auto__ = function(c__6881__auto___13415, res, vec__13233, v, p, job, jobs, results) {
                return function(state_13238) {
                  var state_val_13239 = state_13238[1];
                  if (state_val_13239 === 2) {
                    var inst_13235 = state_13238[2];
                    var inst_13236 = cljs.core.async.close_BANG_.call(null, res);
                    var state_13238__$1 = function() {
                      var statearr_13240 = state_13238;
                      statearr_13240[7] = inst_13235;
                      return statearr_13240;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13238__$1, inst_13236);
                  } else {
                    if (state_val_13239 === 1) {
                      var state_13238__$1 = state_13238;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13238__$1, 2, res, v);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__6881__auto___13415, res, vec__13233, v, p, job, jobs, results);
              return function(switch__6825__auto__, c__6881__auto___13415, res, vec__13233, v, p, job, jobs, results) {
                return function() {
                  var cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__ = null;
                  var cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____0 = function() {
                    var statearr_13244 = [null, null, null, null, null, null, null, null];
                    statearr_13244[0] = cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__;
                    statearr_13244[1] = 1;
                    return statearr_13244;
                  };
                  var cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____1 = function(state_13238) {
                    while (true) {
                      var ret_value__6827__auto__ = function() {
                        try {
                          while (true) {
                            var result__6828__auto__ = switch__6825__auto__.call(null, state_13238);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__6828__auto__;
                            }
                            break;
                          }
                        } catch (e13245) {
                          if (e13245 instanceof Object) {
                            var ex__6829__auto__ = e13245;
                            var statearr_13246_13416 = state_13238;
                            statearr_13246_13416[5] = ex__6829__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13238);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e13245;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__13417 = state_13238;
                        state_13238 = G__13417;
                        continue;
                      } else {
                        return ret_value__6827__auto__;
                      }
                      break;
                    }
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__ = function(state_13238) {
                    switch(arguments.length) {
                      case 0:
                        return cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____0.call(this);
                      case 1:
                        return cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____1.call(this, state_13238);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____0;
                  cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____1;
                  return cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__;
                }();
              }(switch__6825__auto__, c__6881__auto___13415, res, vec__13233, v, p, job, jobs, results);
            }();
            var state__6883__auto__ = function() {
              var statearr_13247 = f__6882__auto__.call(null);
              statearr_13247[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto___13415;
              return statearr_13247;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
          };
        }(c__6881__auto___13415, res, vec__13233, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__13248) {
      var vec__13249 = p__13248;
      var v = cljs.core.nth.call(null, vec__13249, 0, null);
      var p = cljs.core.nth.call(null, vec__13249, 1, null);
      var job = vec__13249;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__4994__auto___13418 = n;
  var __13419 = 0;
  while (true) {
    if (__13419 < n__4994__auto___13418) {
      var G__13250_13420 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__13250_13420) {
        case "async":
          var c__6881__auto___13422 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__13419, c__6881__auto___13422, G__13250_13420, n__4994__auto___13418, jobs, results, process, async) {
            return function() {
              var f__6882__auto__ = function() {
                var switch__6825__auto__ = function(__13419, c__6881__auto___13422, G__13250_13420, n__4994__auto___13418, jobs, results, process, async) {
                  return function(state_13263) {
                    var state_val_13264 = state_13263[1];
                    if (state_val_13264 === 7) {
                      var inst_13259 = state_13263[2];
                      var state_13263__$1 = state_13263;
                      var statearr_13265_13423 = state_13263__$1;
                      statearr_13265_13423[2] = inst_13259;
                      statearr_13265_13423[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13264 === 6) {
                        var state_13263__$1 = state_13263;
                        var statearr_13266_13424 = state_13263__$1;
                        statearr_13266_13424[2] = null;
                        statearr_13266_13424[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13264 === 5) {
                          var state_13263__$1 = state_13263;
                          var statearr_13267_13425 = state_13263__$1;
                          statearr_13267_13425[2] = null;
                          statearr_13267_13425[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13264 === 4) {
                            var inst_13253 = state_13263[2];
                            var inst_13254 = async.call(null, inst_13253);
                            var state_13263__$1 = state_13263;
                            if (cljs.core.truth_(inst_13254)) {
                              var statearr_13268_13426 = state_13263__$1;
                              statearr_13268_13426[1] = 5;
                            } else {
                              var statearr_13269_13427 = state_13263__$1;
                              statearr_13269_13427[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13264 === 3) {
                              var inst_13261 = state_13263[2];
                              var state_13263__$1 = state_13263;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13263__$1, inst_13261);
                            } else {
                              if (state_val_13264 === 2) {
                                var state_13263__$1 = state_13263;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13263__$1, 4, jobs);
                              } else {
                                if (state_val_13264 === 1) {
                                  var state_13263__$1 = state_13263;
                                  var statearr_13270_13428 = state_13263__$1;
                                  statearr_13270_13428[2] = null;
                                  statearr_13270_13428[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__13419, c__6881__auto___13422, G__13250_13420, n__4994__auto___13418, jobs, results, process, async);
                return function(__13419, switch__6825__auto__, c__6881__auto___13422, G__13250_13420, n__4994__auto___13418, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____0 = function() {
                      var statearr_13274 = [null, null, null, null, null, null, null];
                      statearr_13274[0] = cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__;
                      statearr_13274[1] = 1;
                      return statearr_13274;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____1 = function(state_13263) {
                      while (true) {
                        var ret_value__6827__auto__ = function() {
                          try {
                            while (true) {
                              var result__6828__auto__ = switch__6825__auto__.call(null, state_13263);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6828__auto__;
                              }
                              break;
                            }
                          } catch (e13275) {
                            if (e13275 instanceof Object) {
                              var ex__6829__auto__ = e13275;
                              var statearr_13276_13429 = state_13263;
                              statearr_13276_13429[5] = ex__6829__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13263);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e13275;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__13430 = state_13263;
                          state_13263 = G__13430;
                          continue;
                        } else {
                          return ret_value__6827__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__ = function(state_13263) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____1.call(this, state_13263);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__;
                  }();
                }(__13419, switch__6825__auto__, c__6881__auto___13422, G__13250_13420, n__4994__auto___13418, jobs, results, process, async);
              }();
              var state__6883__auto__ = function() {
                var statearr_13277 = f__6882__auto__.call(null);
                statearr_13277[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto___13422;
                return statearr_13277;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
            };
          }(__13419, c__6881__auto___13422, G__13250_13420, n__4994__auto___13418, jobs, results, process, async));
          break;
        case "compute":
          var c__6881__auto___13431 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__13419, c__6881__auto___13431, G__13250_13420, n__4994__auto___13418, jobs, results, process, async) {
            return function() {
              var f__6882__auto__ = function() {
                var switch__6825__auto__ = function(__13419, c__6881__auto___13431, G__13250_13420, n__4994__auto___13418, jobs, results, process, async) {
                  return function(state_13290) {
                    var state_val_13291 = state_13290[1];
                    if (state_val_13291 === 7) {
                      var inst_13286 = state_13290[2];
                      var state_13290__$1 = state_13290;
                      var statearr_13292_13432 = state_13290__$1;
                      statearr_13292_13432[2] = inst_13286;
                      statearr_13292_13432[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13291 === 6) {
                        var state_13290__$1 = state_13290;
                        var statearr_13293_13433 = state_13290__$1;
                        statearr_13293_13433[2] = null;
                        statearr_13293_13433[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13291 === 5) {
                          var state_13290__$1 = state_13290;
                          var statearr_13294_13434 = state_13290__$1;
                          statearr_13294_13434[2] = null;
                          statearr_13294_13434[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13291 === 4) {
                            var inst_13280 = state_13290[2];
                            var inst_13281 = process.call(null, inst_13280);
                            var state_13290__$1 = state_13290;
                            if (cljs.core.truth_(inst_13281)) {
                              var statearr_13295_13435 = state_13290__$1;
                              statearr_13295_13435[1] = 5;
                            } else {
                              var statearr_13296_13436 = state_13290__$1;
                              statearr_13296_13436[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13291 === 3) {
                              var inst_13288 = state_13290[2];
                              var state_13290__$1 = state_13290;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13290__$1, inst_13288);
                            } else {
                              if (state_val_13291 === 2) {
                                var state_13290__$1 = state_13290;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13290__$1, 4, jobs);
                              } else {
                                if (state_val_13291 === 1) {
                                  var state_13290__$1 = state_13290;
                                  var statearr_13297_13437 = state_13290__$1;
                                  statearr_13297_13437[2] = null;
                                  statearr_13297_13437[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__13419, c__6881__auto___13431, G__13250_13420, n__4994__auto___13418, jobs, results, process, async);
                return function(__13419, switch__6825__auto__, c__6881__auto___13431, G__13250_13420, n__4994__auto___13418, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____0 = function() {
                      var statearr_13301 = [null, null, null, null, null, null, null];
                      statearr_13301[0] = cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__;
                      statearr_13301[1] = 1;
                      return statearr_13301;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____1 = function(state_13290) {
                      while (true) {
                        var ret_value__6827__auto__ = function() {
                          try {
                            while (true) {
                              var result__6828__auto__ = switch__6825__auto__.call(null, state_13290);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6828__auto__;
                              }
                              break;
                            }
                          } catch (e13302) {
                            if (e13302 instanceof Object) {
                              var ex__6829__auto__ = e13302;
                              var statearr_13303_13438 = state_13290;
                              statearr_13303_13438[5] = ex__6829__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13290);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e13302;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__13439 = state_13290;
                          state_13290 = G__13439;
                          continue;
                        } else {
                          return ret_value__6827__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__ = function(state_13290) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____1.call(this, state_13290);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__;
                  }();
                }(__13419, switch__6825__auto__, c__6881__auto___13431, G__13250_13420, n__4994__auto___13418, jobs, results, process, async);
              }();
              var state__6883__auto__ = function() {
                var statearr_13304 = f__6882__auto__.call(null);
                statearr_13304[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto___13431;
                return statearr_13304;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
            };
          }(__13419, c__6881__auto___13431, G__13250_13420, n__4994__auto___13418, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__13440 = __13419 + 1;
      __13419 = G__13440;
      continue;
    } else {
    }
    break;
  }
  var c__6881__auto___13441 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto___13441, jobs, results, process, async) {
    return function() {
      var f__6882__auto__ = function() {
        var switch__6825__auto__ = function(c__6881__auto___13441, jobs, results, process, async) {
          return function(state_13326) {
            var state_val_13327 = state_13326[1];
            if (state_val_13327 === 9) {
              var inst_13319 = state_13326[2];
              var state_13326__$1 = function() {
                var statearr_13328 = state_13326;
                statearr_13328[7] = inst_13319;
                return statearr_13328;
              }();
              var statearr_13329_13442 = state_13326__$1;
              statearr_13329_13442[2] = null;
              statearr_13329_13442[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_13327 === 8) {
                var inst_13312 = state_13326[8];
                var inst_13317 = state_13326[2];
                var state_13326__$1 = function() {
                  var statearr_13330 = state_13326;
                  statearr_13330[9] = inst_13317;
                  return statearr_13330;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13326__$1, 9, results, inst_13312);
              } else {
                if (state_val_13327 === 7) {
                  var inst_13322 = state_13326[2];
                  var state_13326__$1 = state_13326;
                  var statearr_13331_13443 = state_13326__$1;
                  statearr_13331_13443[2] = inst_13322;
                  statearr_13331_13443[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13327 === 6) {
                    var inst_13312 = state_13326[8];
                    var inst_13307 = state_13326[10];
                    var inst_13312__$1 = cljs.core.async.chan.call(null, 1);
                    var inst_13313 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_13314 = [inst_13307, inst_13312__$1];
                    var inst_13315 = new cljs.core.PersistentVector(null, 2, 5, inst_13313, inst_13314, null);
                    var state_13326__$1 = function() {
                      var statearr_13332 = state_13326;
                      statearr_13332[8] = inst_13312__$1;
                      return statearr_13332;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13326__$1, 8, jobs, inst_13315);
                  } else {
                    if (state_val_13327 === 5) {
                      var inst_13310 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_13326__$1 = state_13326;
                      var statearr_13333_13444 = state_13326__$1;
                      statearr_13333_13444[2] = inst_13310;
                      statearr_13333_13444[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13327 === 4) {
                        var inst_13307 = state_13326[10];
                        var inst_13307__$1 = state_13326[2];
                        var inst_13308 = inst_13307__$1 == null;
                        var state_13326__$1 = function() {
                          var statearr_13334 = state_13326;
                          statearr_13334[10] = inst_13307__$1;
                          return statearr_13334;
                        }();
                        if (cljs.core.truth_(inst_13308)) {
                          var statearr_13335_13445 = state_13326__$1;
                          statearr_13335_13445[1] = 5;
                        } else {
                          var statearr_13336_13446 = state_13326__$1;
                          statearr_13336_13446[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13327 === 3) {
                          var inst_13324 = state_13326[2];
                          var state_13326__$1 = state_13326;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13326__$1, inst_13324);
                        } else {
                          if (state_val_13327 === 2) {
                            var state_13326__$1 = state_13326;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13326__$1, 4, from);
                          } else {
                            if (state_val_13327 === 1) {
                              var state_13326__$1 = state_13326;
                              var statearr_13337_13447 = state_13326__$1;
                              statearr_13337_13447[2] = null;
                              statearr_13337_13447[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6881__auto___13441, jobs, results, process, async);
        return function(switch__6825__auto__, c__6881__auto___13441, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____0 = function() {
              var statearr_13341 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_13341[0] = cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__;
              statearr_13341[1] = 1;
              return statearr_13341;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____1 = function(state_13326) {
              while (true) {
                var ret_value__6827__auto__ = function() {
                  try {
                    while (true) {
                      var result__6828__auto__ = switch__6825__auto__.call(null, state_13326);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6828__auto__;
                      }
                      break;
                    }
                  } catch (e13342) {
                    if (e13342 instanceof Object) {
                      var ex__6829__auto__ = e13342;
                      var statearr_13343_13448 = state_13326;
                      statearr_13343_13448[5] = ex__6829__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13326);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e13342;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__13449 = state_13326;
                  state_13326 = G__13449;
                  continue;
                } else {
                  return ret_value__6827__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__ = function(state_13326) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____1.call(this, state_13326);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__;
          }();
        }(switch__6825__auto__, c__6881__auto___13441, jobs, results, process, async);
      }();
      var state__6883__auto__ = function() {
        var statearr_13344 = f__6882__auto__.call(null);
        statearr_13344[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto___13441;
        return statearr_13344;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
    };
  }(c__6881__auto___13441, jobs, results, process, async));
  var c__6881__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto__, jobs, results, process, async) {
    return function() {
      var f__6882__auto__ = function() {
        var switch__6825__auto__ = function(c__6881__auto__, jobs, results, process, async) {
          return function(state_13382) {
            var state_val_13383 = state_13382[1];
            if (state_val_13383 === 7) {
              var inst_13378 = state_13382[2];
              var state_13382__$1 = state_13382;
              var statearr_13384_13450 = state_13382__$1;
              statearr_13384_13450[2] = inst_13378;
              statearr_13384_13450[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_13383 === 20) {
                var state_13382__$1 = state_13382;
                var statearr_13385_13451 = state_13382__$1;
                statearr_13385_13451[2] = null;
                statearr_13385_13451[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13383 === 1) {
                  var state_13382__$1 = state_13382;
                  var statearr_13386_13452 = state_13382__$1;
                  statearr_13386_13452[2] = null;
                  statearr_13386_13452[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13383 === 4) {
                    var inst_13347 = state_13382[7];
                    var inst_13347__$1 = state_13382[2];
                    var inst_13348 = inst_13347__$1 == null;
                    var state_13382__$1 = function() {
                      var statearr_13387 = state_13382;
                      statearr_13387[7] = inst_13347__$1;
                      return statearr_13387;
                    }();
                    if (cljs.core.truth_(inst_13348)) {
                      var statearr_13388_13453 = state_13382__$1;
                      statearr_13388_13453[1] = 5;
                    } else {
                      var statearr_13389_13454 = state_13382__$1;
                      statearr_13389_13454[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13383 === 15) {
                      var inst_13360 = state_13382[8];
                      var state_13382__$1 = state_13382;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13382__$1, 18, to, inst_13360);
                    } else {
                      if (state_val_13383 === 21) {
                        var inst_13373 = state_13382[2];
                        var state_13382__$1 = state_13382;
                        var statearr_13390_13455 = state_13382__$1;
                        statearr_13390_13455[2] = inst_13373;
                        statearr_13390_13455[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13383 === 13) {
                          var inst_13375 = state_13382[2];
                          var state_13382__$1 = function() {
                            var statearr_13391 = state_13382;
                            statearr_13391[9] = inst_13375;
                            return statearr_13391;
                          }();
                          var statearr_13392_13456 = state_13382__$1;
                          statearr_13392_13456[2] = null;
                          statearr_13392_13456[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13383 === 6) {
                            var inst_13347 = state_13382[7];
                            var state_13382__$1 = state_13382;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13382__$1, 11, inst_13347);
                          } else {
                            if (state_val_13383 === 17) {
                              var inst_13368 = state_13382[2];
                              var state_13382__$1 = state_13382;
                              if (cljs.core.truth_(inst_13368)) {
                                var statearr_13393_13457 = state_13382__$1;
                                statearr_13393_13457[1] = 19;
                              } else {
                                var statearr_13394_13458 = state_13382__$1;
                                statearr_13394_13458[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_13383 === 3) {
                                var inst_13380 = state_13382[2];
                                var state_13382__$1 = state_13382;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13382__$1, inst_13380);
                              } else {
                                if (state_val_13383 === 12) {
                                  var inst_13357 = state_13382[10];
                                  var state_13382__$1 = state_13382;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13382__$1, 14, inst_13357);
                                } else {
                                  if (state_val_13383 === 2) {
                                    var state_13382__$1 = state_13382;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13382__$1, 4, results);
                                  } else {
                                    if (state_val_13383 === 19) {
                                      var state_13382__$1 = state_13382;
                                      var statearr_13395_13459 = state_13382__$1;
                                      statearr_13395_13459[2] = null;
                                      statearr_13395_13459[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_13383 === 11) {
                                        var inst_13357 = state_13382[2];
                                        var state_13382__$1 = function() {
                                          var statearr_13396 = state_13382;
                                          statearr_13396[10] = inst_13357;
                                          return statearr_13396;
                                        }();
                                        var statearr_13397_13460 = state_13382__$1;
                                        statearr_13397_13460[2] = null;
                                        statearr_13397_13460[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_13383 === 9) {
                                          var state_13382__$1 = state_13382;
                                          var statearr_13398_13461 = state_13382__$1;
                                          statearr_13398_13461[2] = null;
                                          statearr_13398_13461[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_13383 === 5) {
                                            var state_13382__$1 = state_13382;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_13399_13462 = state_13382__$1;
                                              statearr_13399_13462[1] = 8;
                                            } else {
                                              var statearr_13400_13463 = state_13382__$1;
                                              statearr_13400_13463[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_13383 === 14) {
                                              var inst_13362 = state_13382[11];
                                              var inst_13360 = state_13382[8];
                                              var inst_13360__$1 = state_13382[2];
                                              var inst_13361 = inst_13360__$1 == null;
                                              var inst_13362__$1 = cljs.core.not.call(null, inst_13361);
                                              var state_13382__$1 = function() {
                                                var statearr_13401 = state_13382;
                                                statearr_13401[11] = inst_13362__$1;
                                                statearr_13401[8] = inst_13360__$1;
                                                return statearr_13401;
                                              }();
                                              if (inst_13362__$1) {
                                                var statearr_13402_13464 = state_13382__$1;
                                                statearr_13402_13464[1] = 15;
                                              } else {
                                                var statearr_13403_13465 = state_13382__$1;
                                                statearr_13403_13465[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_13383 === 16) {
                                                var inst_13362 = state_13382[11];
                                                var state_13382__$1 = state_13382;
                                                var statearr_13404_13466 = state_13382__$1;
                                                statearr_13404_13466[2] = inst_13362;
                                                statearr_13404_13466[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_13383 === 10) {
                                                  var inst_13354 = state_13382[2];
                                                  var state_13382__$1 = state_13382;
                                                  var statearr_13405_13467 = state_13382__$1;
                                                  statearr_13405_13467[2] = inst_13354;
                                                  statearr_13405_13467[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_13383 === 18) {
                                                    var inst_13365 = state_13382[2];
                                                    var state_13382__$1 = state_13382;
                                                    var statearr_13406_13468 = state_13382__$1;
                                                    statearr_13406_13468[2] = inst_13365;
                                                    statearr_13406_13468[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_13383 === 8) {
                                                      var inst_13351 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_13382__$1 = state_13382;
                                                      var statearr_13407_13469 = state_13382__$1;
                                                      statearr_13407_13469[2] = inst_13351;
                                                      statearr_13407_13469[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6881__auto__, jobs, results, process, async);
        return function(switch__6825__auto__, c__6881__auto__, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____0 = function() {
              var statearr_13411 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_13411[0] = cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__;
              statearr_13411[1] = 1;
              return statearr_13411;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____1 = function(state_13382) {
              while (true) {
                var ret_value__6827__auto__ = function() {
                  try {
                    while (true) {
                      var result__6828__auto__ = switch__6825__auto__.call(null, state_13382);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6828__auto__;
                      }
                      break;
                    }
                  } catch (e13412) {
                    if (e13412 instanceof Object) {
                      var ex__6829__auto__ = e13412;
                      var statearr_13413_13470 = state_13382;
                      statearr_13413_13470[5] = ex__6829__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13382);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e13412;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__13471 = state_13382;
                  state_13382 = G__13471;
                  continue;
                } else {
                  return ret_value__6827__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__ = function(state_13382) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____1.call(this, state_13382);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__6826__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__6826__auto__;
          }();
        }(switch__6825__auto__, c__6881__auto__, jobs, results, process, async);
      }();
      var state__6883__auto__ = function() {
        var statearr_13414 = f__6882__auto__.call(null);
        statearr_13414[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto__;
        return statearr_13414;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
    };
  }(c__6881__auto__, jobs, results, process, async));
  return c__6881__auto__;
};
cljs.core.async.pipeline_async = function() {
  var cljs$core$async$pipeline_async = null;
  var cljs$core$async$pipeline_async__4 = function(n, to, af, from) {
    return cljs$core$async$pipeline_async.call(null, n, to, af, from, true);
  };
  var cljs$core$async$pipeline_async__5 = function(n, to, af, from, close_QMARK_) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
  };
  cljs$core$async$pipeline_async = function(n, to, af, from, close_QMARK_) {
    switch(arguments.length) {
      case 4:
        return cljs$core$async$pipeline_async__4.call(this, n, to, af, from);
      case 5:
        return cljs$core$async$pipeline_async__5.call(this, n, to, af, from, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$pipeline_async.cljs$core$IFn$_invoke$arity$4 = cljs$core$async$pipeline_async__4;
  cljs$core$async$pipeline_async.cljs$core$IFn$_invoke$arity$5 = cljs$core$async$pipeline_async__5;
  return cljs$core$async$pipeline_async;
}();
cljs.core.async.pipeline = function() {
  var cljs$core$async$pipeline = null;
  var cljs$core$async$pipeline__4 = function(n, to, xf, from) {
    return cljs$core$async$pipeline.call(null, n, to, xf, from, true);
  };
  var cljs$core$async$pipeline__5 = function(n, to, xf, from, close_QMARK_) {
    return cljs$core$async$pipeline.call(null, n, to, xf, from, close_QMARK_, null);
  };
  var cljs$core$async$pipeline__6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
  };
  cljs$core$async$pipeline = function(n, to, xf, from, close_QMARK_, ex_handler) {
    switch(arguments.length) {
      case 4:
        return cljs$core$async$pipeline__4.call(this, n, to, xf, from);
      case 5:
        return cljs$core$async$pipeline__5.call(this, n, to, xf, from, close_QMARK_);
      case 6:
        return cljs$core$async$pipeline__6.call(this, n, to, xf, from, close_QMARK_, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$pipeline.cljs$core$IFn$_invoke$arity$4 = cljs$core$async$pipeline__4;
  cljs$core$async$pipeline.cljs$core$IFn$_invoke$arity$5 = cljs$core$async$pipeline__5;
  cljs$core$async$pipeline.cljs$core$IFn$_invoke$arity$6 = cljs$core$async$pipeline__6;
  return cljs$core$async$pipeline;
}();
cljs.core.async.split = function() {
  var cljs$core$async$split = null;
  var cljs$core$async$split__2 = function(p, ch) {
    return cljs$core$async$split.call(null, p, ch, null, null);
  };
  var cljs$core$async$split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6881__auto___13572 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto___13572, tc, fc) {
      return function() {
        var f__6882__auto__ = function() {
          var switch__6825__auto__ = function(c__6881__auto___13572, tc, fc) {
            return function(state_13547) {
              var state_val_13548 = state_13547[1];
              if (state_val_13548 === 7) {
                var inst_13543 = state_13547[2];
                var state_13547__$1 = state_13547;
                var statearr_13549_13573 = state_13547__$1;
                statearr_13549_13573[2] = inst_13543;
                statearr_13549_13573[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13548 === 1) {
                  var state_13547__$1 = state_13547;
                  var statearr_13550_13574 = state_13547__$1;
                  statearr_13550_13574[2] = null;
                  statearr_13550_13574[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13548 === 4) {
                    var inst_13524 = state_13547[7];
                    var inst_13524__$1 = state_13547[2];
                    var inst_13525 = inst_13524__$1 == null;
                    var state_13547__$1 = function() {
                      var statearr_13551 = state_13547;
                      statearr_13551[7] = inst_13524__$1;
                      return statearr_13551;
                    }();
                    if (cljs.core.truth_(inst_13525)) {
                      var statearr_13552_13575 = state_13547__$1;
                      statearr_13552_13575[1] = 5;
                    } else {
                      var statearr_13553_13576 = state_13547__$1;
                      statearr_13553_13576[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13548 === 13) {
                      var state_13547__$1 = state_13547;
                      var statearr_13554_13577 = state_13547__$1;
                      statearr_13554_13577[2] = null;
                      statearr_13554_13577[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13548 === 6) {
                        var inst_13524 = state_13547[7];
                        var inst_13530 = p.call(null, inst_13524);
                        var state_13547__$1 = state_13547;
                        if (cljs.core.truth_(inst_13530)) {
                          var statearr_13555_13578 = state_13547__$1;
                          statearr_13555_13578[1] = 9;
                        } else {
                          var statearr_13556_13579 = state_13547__$1;
                          statearr_13556_13579[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13548 === 3) {
                          var inst_13545 = state_13547[2];
                          var state_13547__$1 = state_13547;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13547__$1, inst_13545);
                        } else {
                          if (state_val_13548 === 12) {
                            var state_13547__$1 = state_13547;
                            var statearr_13557_13580 = state_13547__$1;
                            statearr_13557_13580[2] = null;
                            statearr_13557_13580[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13548 === 2) {
                              var state_13547__$1 = state_13547;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13547__$1, 4, ch);
                            } else {
                              if (state_val_13548 === 11) {
                                var inst_13524 = state_13547[7];
                                var inst_13534 = state_13547[2];
                                var state_13547__$1 = state_13547;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13547__$1, 8, inst_13534, inst_13524);
                              } else {
                                if (state_val_13548 === 9) {
                                  var state_13547__$1 = state_13547;
                                  var statearr_13558_13581 = state_13547__$1;
                                  statearr_13558_13581[2] = tc;
                                  statearr_13558_13581[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13548 === 5) {
                                    var inst_13527 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_13528 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_13547__$1 = function() {
                                      var statearr_13559 = state_13547;
                                      statearr_13559[8] = inst_13527;
                                      return statearr_13559;
                                    }();
                                    var statearr_13560_13582 = state_13547__$1;
                                    statearr_13560_13582[2] = inst_13528;
                                    statearr_13560_13582[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_13548 === 14) {
                                      var inst_13541 = state_13547[2];
                                      var state_13547__$1 = state_13547;
                                      var statearr_13561_13583 = state_13547__$1;
                                      statearr_13561_13583[2] = inst_13541;
                                      statearr_13561_13583[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_13548 === 10) {
                                        var state_13547__$1 = state_13547;
                                        var statearr_13562_13584 = state_13547__$1;
                                        statearr_13562_13584[2] = fc;
                                        statearr_13562_13584[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_13548 === 8) {
                                          var inst_13536 = state_13547[2];
                                          var state_13547__$1 = state_13547;
                                          if (cljs.core.truth_(inst_13536)) {
                                            var statearr_13563_13585 = state_13547__$1;
                                            statearr_13563_13585[1] = 12;
                                          } else {
                                            var statearr_13564_13586 = state_13547__$1;
                                            statearr_13564_13586[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6881__auto___13572, tc, fc);
          return function(switch__6825__auto__, c__6881__auto___13572, tc, fc) {
            return function() {
              var cljs$core$async$split_$_state_machine__6826__auto__ = null;
              var cljs$core$async$split_$_state_machine__6826__auto____0 = function() {
                var statearr_13568 = [null, null, null, null, null, null, null, null, null];
                statearr_13568[0] = cljs$core$async$split_$_state_machine__6826__auto__;
                statearr_13568[1] = 1;
                return statearr_13568;
              };
              var cljs$core$async$split_$_state_machine__6826__auto____1 = function(state_13547) {
                while (true) {
                  var ret_value__6827__auto__ = function() {
                    try {
                      while (true) {
                        var result__6828__auto__ = switch__6825__auto__.call(null, state_13547);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6828__auto__;
                        }
                        break;
                      }
                    } catch (e13569) {
                      if (e13569 instanceof Object) {
                        var ex__6829__auto__ = e13569;
                        var statearr_13570_13587 = state_13547;
                        statearr_13570_13587[5] = ex__6829__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13547);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e13569;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__13588 = state_13547;
                    state_13547 = G__13588;
                    continue;
                  } else {
                    return ret_value__6827__auto__;
                  }
                  break;
                }
              };
              cljs$core$async$split_$_state_machine__6826__auto__ = function(state_13547) {
                switch(arguments.length) {
                  case 0:
                    return cljs$core$async$split_$_state_machine__6826__auto____0.call(this);
                  case 1:
                    return cljs$core$async$split_$_state_machine__6826__auto____1.call(this, state_13547);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              cljs$core$async$split_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$split_$_state_machine__6826__auto____0;
              cljs$core$async$split_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$split_$_state_machine__6826__auto____1;
              return cljs$core$async$split_$_state_machine__6826__auto__;
            }();
          }(switch__6825__auto__, c__6881__auto___13572, tc, fc);
        }();
        var state__6883__auto__ = function() {
          var statearr_13571 = f__6882__auto__.call(null);
          statearr_13571[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto___13572;
          return statearr_13571;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
      };
    }(c__6881__auto___13572, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  cljs$core$async$split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return cljs$core$async$split__2.call(this, p, ch);
      case 4:
        return cljs$core$async$split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$split.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$split__2;
  cljs$core$async$split.cljs$core$IFn$_invoke$arity$4 = cljs$core$async$split__4;
  return cljs$core$async$split;
}();
cljs.core.async.reduce = function cljs$core$async$reduce(f, init, ch) {
  var c__6881__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto__) {
    return function() {
      var f__6882__auto__ = function() {
        var switch__6825__auto__ = function(c__6881__auto__) {
          return function(state_13635) {
            var state_val_13636 = state_13635[1];
            if (state_val_13636 === 7) {
              var inst_13631 = state_13635[2];
              var state_13635__$1 = state_13635;
              var statearr_13637_13653 = state_13635__$1;
              statearr_13637_13653[2] = inst_13631;
              statearr_13637_13653[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_13636 === 6) {
                var inst_13621 = state_13635[7];
                var inst_13624 = state_13635[8];
                var inst_13628 = f.call(null, inst_13621, inst_13624);
                var inst_13621__$1 = inst_13628;
                var state_13635__$1 = function() {
                  var statearr_13638 = state_13635;
                  statearr_13638[7] = inst_13621__$1;
                  return statearr_13638;
                }();
                var statearr_13639_13654 = state_13635__$1;
                statearr_13639_13654[2] = null;
                statearr_13639_13654[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13636 === 5) {
                  var inst_13621 = state_13635[7];
                  var state_13635__$1 = state_13635;
                  var statearr_13640_13655 = state_13635__$1;
                  statearr_13640_13655[2] = inst_13621;
                  statearr_13640_13655[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13636 === 4) {
                    var inst_13624 = state_13635[8];
                    var inst_13624__$1 = state_13635[2];
                    var inst_13625 = inst_13624__$1 == null;
                    var state_13635__$1 = function() {
                      var statearr_13641 = state_13635;
                      statearr_13641[8] = inst_13624__$1;
                      return statearr_13641;
                    }();
                    if (cljs.core.truth_(inst_13625)) {
                      var statearr_13642_13656 = state_13635__$1;
                      statearr_13642_13656[1] = 5;
                    } else {
                      var statearr_13643_13657 = state_13635__$1;
                      statearr_13643_13657[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13636 === 3) {
                      var inst_13633 = state_13635[2];
                      var state_13635__$1 = state_13635;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13635__$1, inst_13633);
                    } else {
                      if (state_val_13636 === 2) {
                        var state_13635__$1 = state_13635;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13635__$1, 4, ch);
                      } else {
                        if (state_val_13636 === 1) {
                          var inst_13621 = init;
                          var state_13635__$1 = function() {
                            var statearr_13644 = state_13635;
                            statearr_13644[7] = inst_13621;
                            return statearr_13644;
                          }();
                          var statearr_13645_13658 = state_13635__$1;
                          statearr_13645_13658[2] = null;
                          statearr_13645_13658[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6881__auto__);
        return function(switch__6825__auto__, c__6881__auto__) {
          return function() {
            var cljs$core$async$reduce_$_state_machine__6826__auto__ = null;
            var cljs$core$async$reduce_$_state_machine__6826__auto____0 = function() {
              var statearr_13649 = [null, null, null, null, null, null, null, null, null];
              statearr_13649[0] = cljs$core$async$reduce_$_state_machine__6826__auto__;
              statearr_13649[1] = 1;
              return statearr_13649;
            };
            var cljs$core$async$reduce_$_state_machine__6826__auto____1 = function(state_13635) {
              while (true) {
                var ret_value__6827__auto__ = function() {
                  try {
                    while (true) {
                      var result__6828__auto__ = switch__6825__auto__.call(null, state_13635);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6828__auto__;
                      }
                      break;
                    }
                  } catch (e13650) {
                    if (e13650 instanceof Object) {
                      var ex__6829__auto__ = e13650;
                      var statearr_13651_13659 = state_13635;
                      statearr_13651_13659[5] = ex__6829__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13635);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e13650;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__13660 = state_13635;
                  state_13635 = G__13660;
                  continue;
                } else {
                  return ret_value__6827__auto__;
                }
                break;
              }
            };
            cljs$core$async$reduce_$_state_machine__6826__auto__ = function(state_13635) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$reduce_$_state_machine__6826__auto____0.call(this);
                case 1:
                  return cljs$core$async$reduce_$_state_machine__6826__auto____1.call(this, state_13635);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$reduce_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$reduce_$_state_machine__6826__auto____0;
            cljs$core$async$reduce_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$reduce_$_state_machine__6826__auto____1;
            return cljs$core$async$reduce_$_state_machine__6826__auto__;
          }();
        }(switch__6825__auto__, c__6881__auto__);
      }();
      var state__6883__auto__ = function() {
        var statearr_13652 = f__6882__auto__.call(null);
        statearr_13652[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto__;
        return statearr_13652;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
    };
  }(c__6881__auto__));
  return c__6881__auto__;
};
cljs.core.async.onto_chan = function() {
  var cljs$core$async$onto_chan = null;
  var cljs$core$async$onto_chan__2 = function(ch, coll) {
    return cljs$core$async$onto_chan.call(null, ch, coll, true);
  };
  var cljs$core$async$onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6881__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto__) {
      return function() {
        var f__6882__auto__ = function() {
          var switch__6825__auto__ = function(c__6881__auto__) {
            return function(state_13734) {
              var state_val_13735 = state_13734[1];
              if (state_val_13735 === 7) {
                var inst_13716 = state_13734[2];
                var state_13734__$1 = state_13734;
                var statearr_13736_13759 = state_13734__$1;
                statearr_13736_13759[2] = inst_13716;
                statearr_13736_13759[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13735 === 1) {
                  var inst_13710 = cljs.core.seq.call(null, coll);
                  var inst_13711 = inst_13710;
                  var state_13734__$1 = function() {
                    var statearr_13737 = state_13734;
                    statearr_13737[7] = inst_13711;
                    return statearr_13737;
                  }();
                  var statearr_13738_13760 = state_13734__$1;
                  statearr_13738_13760[2] = null;
                  statearr_13738_13760[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13735 === 4) {
                    var inst_13711 = state_13734[7];
                    var inst_13714 = cljs.core.first.call(null, inst_13711);
                    var state_13734__$1 = state_13734;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13734__$1, 7, ch, inst_13714);
                  } else {
                    if (state_val_13735 === 13) {
                      var inst_13728 = state_13734[2];
                      var state_13734__$1 = state_13734;
                      var statearr_13739_13761 = state_13734__$1;
                      statearr_13739_13761[2] = inst_13728;
                      statearr_13739_13761[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13735 === 6) {
                        var inst_13719 = state_13734[2];
                        var state_13734__$1 = state_13734;
                        if (cljs.core.truth_(inst_13719)) {
                          var statearr_13740_13762 = state_13734__$1;
                          statearr_13740_13762[1] = 8;
                        } else {
                          var statearr_13741_13763 = state_13734__$1;
                          statearr_13741_13763[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13735 === 3) {
                          var inst_13732 = state_13734[2];
                          var state_13734__$1 = state_13734;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13734__$1, inst_13732);
                        } else {
                          if (state_val_13735 === 12) {
                            var state_13734__$1 = state_13734;
                            var statearr_13742_13764 = state_13734__$1;
                            statearr_13742_13764[2] = null;
                            statearr_13742_13764[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13735 === 2) {
                              var inst_13711 = state_13734[7];
                              var state_13734__$1 = state_13734;
                              if (cljs.core.truth_(inst_13711)) {
                                var statearr_13743_13765 = state_13734__$1;
                                statearr_13743_13765[1] = 4;
                              } else {
                                var statearr_13744_13766 = state_13734__$1;
                                statearr_13744_13766[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_13735 === 11) {
                                var inst_13725 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_13734__$1 = state_13734;
                                var statearr_13745_13767 = state_13734__$1;
                                statearr_13745_13767[2] = inst_13725;
                                statearr_13745_13767[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_13735 === 9) {
                                  var state_13734__$1 = state_13734;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_13746_13768 = state_13734__$1;
                                    statearr_13746_13768[1] = 11;
                                  } else {
                                    var statearr_13747_13769 = state_13734__$1;
                                    statearr_13747_13769[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13735 === 5) {
                                    var inst_13711 = state_13734[7];
                                    var state_13734__$1 = state_13734;
                                    var statearr_13748_13770 = state_13734__$1;
                                    statearr_13748_13770[2] = inst_13711;
                                    statearr_13748_13770[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_13735 === 10) {
                                      var inst_13730 = state_13734[2];
                                      var state_13734__$1 = state_13734;
                                      var statearr_13749_13771 = state_13734__$1;
                                      statearr_13749_13771[2] = inst_13730;
                                      statearr_13749_13771[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_13735 === 8) {
                                        var inst_13711 = state_13734[7];
                                        var inst_13721 = cljs.core.next.call(null, inst_13711);
                                        var inst_13711__$1 = inst_13721;
                                        var state_13734__$1 = function() {
                                          var statearr_13750 = state_13734;
                                          statearr_13750[7] = inst_13711__$1;
                                          return statearr_13750;
                                        }();
                                        var statearr_13751_13772 = state_13734__$1;
                                        statearr_13751_13772[2] = null;
                                        statearr_13751_13772[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6881__auto__);
          return function(switch__6825__auto__, c__6881__auto__) {
            return function() {
              var cljs$core$async$onto_chan_$_state_machine__6826__auto__ = null;
              var cljs$core$async$onto_chan_$_state_machine__6826__auto____0 = function() {
                var statearr_13755 = [null, null, null, null, null, null, null, null];
                statearr_13755[0] = cljs$core$async$onto_chan_$_state_machine__6826__auto__;
                statearr_13755[1] = 1;
                return statearr_13755;
              };
              var cljs$core$async$onto_chan_$_state_machine__6826__auto____1 = function(state_13734) {
                while (true) {
                  var ret_value__6827__auto__ = function() {
                    try {
                      while (true) {
                        var result__6828__auto__ = switch__6825__auto__.call(null, state_13734);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6828__auto__;
                        }
                        break;
                      }
                    } catch (e13756) {
                      if (e13756 instanceof Object) {
                        var ex__6829__auto__ = e13756;
                        var statearr_13757_13773 = state_13734;
                        statearr_13757_13773[5] = ex__6829__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13734);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e13756;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__13774 = state_13734;
                    state_13734 = G__13774;
                    continue;
                  } else {
                    return ret_value__6827__auto__;
                  }
                  break;
                }
              };
              cljs$core$async$onto_chan_$_state_machine__6826__auto__ = function(state_13734) {
                switch(arguments.length) {
                  case 0:
                    return cljs$core$async$onto_chan_$_state_machine__6826__auto____0.call(this);
                  case 1:
                    return cljs$core$async$onto_chan_$_state_machine__6826__auto____1.call(this, state_13734);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              cljs$core$async$onto_chan_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$onto_chan_$_state_machine__6826__auto____0;
              cljs$core$async$onto_chan_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$onto_chan_$_state_machine__6826__auto____1;
              return cljs$core$async$onto_chan_$_state_machine__6826__auto__;
            }();
          }(switch__6825__auto__, c__6881__auto__);
        }();
        var state__6883__auto__ = function() {
          var statearr_13758 = f__6882__auto__.call(null);
          statearr_13758[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto__;
          return statearr_13758;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
      };
    }(c__6881__auto__));
    return c__6881__auto__;
  };
  cljs$core$async$onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return cljs$core$async$onto_chan__2.call(this, ch, coll);
      case 3:
        return cljs$core$async$onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$onto_chan.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$onto_chan__2;
  cljs$core$async$onto_chan.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$onto_chan__3;
  return cljs$core$async$onto_chan;
}();
cljs.core.async.to_chan = function cljs$core$async$to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj13776 = {};
  return obj13776;
}();
cljs.core.async.muxch_STAR_ = function cljs$core$async$muxch_STAR_(_) {
  if (function() {
    var and__4097__auto__ = _;
    if (and__4097__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4745__auto__ = _ == null ? null : _;
    return function() {
      var or__4109__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj13778 = {};
  return obj13778;
}();
cljs.core.async.tap_STAR_ = function cljs$core$async$tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__4097__auto__ = m;
    if (and__4097__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4745__auto__ = m == null ? null : m;
    return function() {
      var or__4109__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function cljs$core$async$untap_STAR_(m, ch) {
  if (function() {
    var and__4097__auto__ = m;
    if (and__4097__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4745__auto__ = m == null ? null : m;
    return function() {
      var or__4109__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function cljs$core$async$untap_all_STAR_(m) {
  if (function() {
    var and__4097__auto__ = m;
    if (and__4097__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4745__auto__ = m == null ? null : m;
    return function() {
      var or__4109__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function cljs$core$async$mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t14000 !== "undefined") {
    } else {
      cljs.core.async.t14000 = function(cs, ch, mult, meta14001) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta14001 = meta14001;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t14000.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t14000.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t14000.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t14000.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t14000.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t14000.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t14000.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_14002) {
          var self__ = this;
          var _14002__$1 = this;
          return self__.meta14001;
        };
      }(cs);
      cljs.core.async.t14000.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_14002, meta14001__$1) {
          var self__ = this;
          var _14002__$1 = this;
          return new cljs.core.async.t14000(self__.cs, self__.ch, self__.mult, meta14001__$1);
        };
      }(cs);
      cljs.core.async.t14000.cljs$lang$type = true;
      cljs.core.async.t14000.cljs$lang$ctorStr = "cljs.core.async/t14000";
      cljs.core.async.t14000.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
          return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async/t14000");
        };
      }(cs);
      cljs.core.async.__GT_t14000 = function(cs) {
        return function cljs$core$async$mult_$___GT_t14000(cs__$1, ch__$1, mult__$1, meta14001) {
          return new cljs.core.async.t14000(cs__$1, ch__$1, mult__$1, meta14001);
        };
      }(cs);
    }
    return new cljs.core.async.t14000(cs, ch, cljs$core$async$mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6881__auto___14221 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto___14221, cs, m, dchan, dctr, done) {
    return function() {
      var f__6882__auto__ = function() {
        var switch__6825__auto__ = function(c__6881__auto___14221, cs, m, dchan, dctr, done) {
          return function(state_14133) {
            var state_val_14134 = state_14133[1];
            if (state_val_14134 === 7) {
              var inst_14129 = state_14133[2];
              var state_14133__$1 = state_14133;
              var statearr_14135_14222 = state_14133__$1;
              statearr_14135_14222[2] = inst_14129;
              statearr_14135_14222[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14134 === 20) {
                var inst_14034 = state_14133[7];
                var inst_14044 = cljs.core.first.call(null, inst_14034);
                var inst_14045 = cljs.core.nth.call(null, inst_14044, 0, null);
                var inst_14046 = cljs.core.nth.call(null, inst_14044, 1, null);
                var state_14133__$1 = function() {
                  var statearr_14136 = state_14133;
                  statearr_14136[8] = inst_14045;
                  return statearr_14136;
                }();
                if (cljs.core.truth_(inst_14046)) {
                  var statearr_14137_14223 = state_14133__$1;
                  statearr_14137_14223[1] = 22;
                } else {
                  var statearr_14138_14224 = state_14133__$1;
                  statearr_14138_14224[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14134 === 27) {
                  var inst_14081 = state_14133[9];
                  var inst_14005 = state_14133[10];
                  var inst_14076 = state_14133[11];
                  var inst_14074 = state_14133[12];
                  var inst_14081__$1 = cljs.core._nth.call(null, inst_14074, inst_14076);
                  var inst_14082 = cljs.core.async.put_BANG_.call(null, inst_14081__$1, inst_14005, done);
                  var state_14133__$1 = function() {
                    var statearr_14139 = state_14133;
                    statearr_14139[9] = inst_14081__$1;
                    return statearr_14139;
                  }();
                  if (cljs.core.truth_(inst_14082)) {
                    var statearr_14140_14225 = state_14133__$1;
                    statearr_14140_14225[1] = 30;
                  } else {
                    var statearr_14141_14226 = state_14133__$1;
                    statearr_14141_14226[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14134 === 1) {
                    var state_14133__$1 = state_14133;
                    var statearr_14142_14227 = state_14133__$1;
                    statearr_14142_14227[2] = null;
                    statearr_14142_14227[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14134 === 24) {
                      var inst_14034 = state_14133[7];
                      var inst_14051 = state_14133[2];
                      var inst_14052 = cljs.core.next.call(null, inst_14034);
                      var inst_14014 = inst_14052;
                      var inst_14015 = null;
                      var inst_14016 = 0;
                      var inst_14017 = 0;
                      var state_14133__$1 = function() {
                        var statearr_14143 = state_14133;
                        statearr_14143[13] = inst_14014;
                        statearr_14143[14] = inst_14051;
                        statearr_14143[15] = inst_14015;
                        statearr_14143[16] = inst_14016;
                        statearr_14143[17] = inst_14017;
                        return statearr_14143;
                      }();
                      var statearr_14144_14228 = state_14133__$1;
                      statearr_14144_14228[2] = null;
                      statearr_14144_14228[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14134 === 39) {
                        var state_14133__$1 = state_14133;
                        var statearr_14148_14229 = state_14133__$1;
                        statearr_14148_14229[2] = null;
                        statearr_14148_14229[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_14134 === 4) {
                          var inst_14005 = state_14133[10];
                          var inst_14005__$1 = state_14133[2];
                          var inst_14006 = inst_14005__$1 == null;
                          var state_14133__$1 = function() {
                            var statearr_14149 = state_14133;
                            statearr_14149[10] = inst_14005__$1;
                            return statearr_14149;
                          }();
                          if (cljs.core.truth_(inst_14006)) {
                            var statearr_14150_14230 = state_14133__$1;
                            statearr_14150_14230[1] = 5;
                          } else {
                            var statearr_14151_14231 = state_14133__$1;
                            statearr_14151_14231[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14134 === 15) {
                            var inst_14014 = state_14133[13];
                            var inst_14015 = state_14133[15];
                            var inst_14016 = state_14133[16];
                            var inst_14017 = state_14133[17];
                            var inst_14030 = state_14133[2];
                            var inst_14031 = inst_14017 + 1;
                            var tmp14145 = inst_14014;
                            var tmp14146 = inst_14015;
                            var tmp14147 = inst_14016;
                            var inst_14014__$1 = tmp14145;
                            var inst_14015__$1 = tmp14146;
                            var inst_14016__$1 = tmp14147;
                            var inst_14017__$1 = inst_14031;
                            var state_14133__$1 = function() {
                              var statearr_14152 = state_14133;
                              statearr_14152[13] = inst_14014__$1;
                              statearr_14152[18] = inst_14030;
                              statearr_14152[15] = inst_14015__$1;
                              statearr_14152[16] = inst_14016__$1;
                              statearr_14152[17] = inst_14017__$1;
                              return statearr_14152;
                            }();
                            var statearr_14153_14232 = state_14133__$1;
                            statearr_14153_14232[2] = null;
                            statearr_14153_14232[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14134 === 21) {
                              var inst_14055 = state_14133[2];
                              var state_14133__$1 = state_14133;
                              var statearr_14157_14233 = state_14133__$1;
                              statearr_14157_14233[2] = inst_14055;
                              statearr_14157_14233[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14134 === 31) {
                                var inst_14081 = state_14133[9];
                                var inst_14085 = done.call(null, null);
                                var inst_14086 = cljs.core.async.untap_STAR_.call(null, m, inst_14081);
                                var state_14133__$1 = function() {
                                  var statearr_14158 = state_14133;
                                  statearr_14158[19] = inst_14085;
                                  return statearr_14158;
                                }();
                                var statearr_14159_14234 = state_14133__$1;
                                statearr_14159_14234[2] = inst_14086;
                                statearr_14159_14234[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14134 === 32) {
                                  var inst_14075 = state_14133[20];
                                  var inst_14076 = state_14133[11];
                                  var inst_14074 = state_14133[12];
                                  var inst_14073 = state_14133[21];
                                  var inst_14088 = state_14133[2];
                                  var inst_14089 = inst_14076 + 1;
                                  var tmp14154 = inst_14075;
                                  var tmp14155 = inst_14074;
                                  var tmp14156 = inst_14073;
                                  var inst_14073__$1 = tmp14156;
                                  var inst_14074__$1 = tmp14155;
                                  var inst_14075__$1 = tmp14154;
                                  var inst_14076__$1 = inst_14089;
                                  var state_14133__$1 = function() {
                                    var statearr_14160 = state_14133;
                                    statearr_14160[22] = inst_14088;
                                    statearr_14160[20] = inst_14075__$1;
                                    statearr_14160[11] = inst_14076__$1;
                                    statearr_14160[12] = inst_14074__$1;
                                    statearr_14160[21] = inst_14073__$1;
                                    return statearr_14160;
                                  }();
                                  var statearr_14161_14235 = state_14133__$1;
                                  statearr_14161_14235[2] = null;
                                  statearr_14161_14235[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14134 === 40) {
                                    var inst_14101 = state_14133[23];
                                    var inst_14105 = done.call(null, null);
                                    var inst_14106 = cljs.core.async.untap_STAR_.call(null, m, inst_14101);
                                    var state_14133__$1 = function() {
                                      var statearr_14162 = state_14133;
                                      statearr_14162[24] = inst_14105;
                                      return statearr_14162;
                                    }();
                                    var statearr_14163_14236 = state_14133__$1;
                                    statearr_14163_14236[2] = inst_14106;
                                    statearr_14163_14236[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14134 === 33) {
                                      var inst_14092 = state_14133[25];
                                      var inst_14094 = cljs.core.chunked_seq_QMARK_.call(null, inst_14092);
                                      var state_14133__$1 = state_14133;
                                      if (inst_14094) {
                                        var statearr_14164_14237 = state_14133__$1;
                                        statearr_14164_14237[1] = 36;
                                      } else {
                                        var statearr_14165_14238 = state_14133__$1;
                                        statearr_14165_14238[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_14134 === 13) {
                                        var inst_14024 = state_14133[26];
                                        var inst_14027 = cljs.core.async.close_BANG_.call(null, inst_14024);
                                        var state_14133__$1 = state_14133;
                                        var statearr_14166_14239 = state_14133__$1;
                                        statearr_14166_14239[2] = inst_14027;
                                        statearr_14166_14239[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_14134 === 22) {
                                          var inst_14045 = state_14133[8];
                                          var inst_14048 = cljs.core.async.close_BANG_.call(null, inst_14045);
                                          var state_14133__$1 = state_14133;
                                          var statearr_14167_14240 = state_14133__$1;
                                          statearr_14167_14240[2] = inst_14048;
                                          statearr_14167_14240[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_14134 === 36) {
                                            var inst_14092 = state_14133[25];
                                            var inst_14096 = cljs.core.chunk_first.call(null, inst_14092);
                                            var inst_14097 = cljs.core.chunk_rest.call(null, inst_14092);
                                            var inst_14098 = cljs.core.count.call(null, inst_14096);
                                            var inst_14073 = inst_14097;
                                            var inst_14074 = inst_14096;
                                            var inst_14075 = inst_14098;
                                            var inst_14076 = 0;
                                            var state_14133__$1 = function() {
                                              var statearr_14168 = state_14133;
                                              statearr_14168[20] = inst_14075;
                                              statearr_14168[11] = inst_14076;
                                              statearr_14168[12] = inst_14074;
                                              statearr_14168[21] = inst_14073;
                                              return statearr_14168;
                                            }();
                                            var statearr_14169_14241 = state_14133__$1;
                                            statearr_14169_14241[2] = null;
                                            statearr_14169_14241[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_14134 === 41) {
                                              var inst_14092 = state_14133[25];
                                              var inst_14108 = state_14133[2];
                                              var inst_14109 = cljs.core.next.call(null, inst_14092);
                                              var inst_14073 = inst_14109;
                                              var inst_14074 = null;
                                              var inst_14075 = 0;
                                              var inst_14076 = 0;
                                              var state_14133__$1 = function() {
                                                var statearr_14170 = state_14133;
                                                statearr_14170[20] = inst_14075;
                                                statearr_14170[11] = inst_14076;
                                                statearr_14170[12] = inst_14074;
                                                statearr_14170[21] = inst_14073;
                                                statearr_14170[27] = inst_14108;
                                                return statearr_14170;
                                              }();
                                              var statearr_14171_14242 = state_14133__$1;
                                              statearr_14171_14242[2] = null;
                                              statearr_14171_14242[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_14134 === 43) {
                                                var state_14133__$1 = state_14133;
                                                var statearr_14172_14243 = state_14133__$1;
                                                statearr_14172_14243[2] = null;
                                                statearr_14172_14243[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_14134 === 29) {
                                                  var inst_14117 = state_14133[2];
                                                  var state_14133__$1 = state_14133;
                                                  var statearr_14173_14244 = state_14133__$1;
                                                  statearr_14173_14244[2] = inst_14117;
                                                  statearr_14173_14244[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_14134 === 44) {
                                                    var inst_14126 = state_14133[2];
                                                    var state_14133__$1 = function() {
                                                      var statearr_14174 = state_14133;
                                                      statearr_14174[28] = inst_14126;
                                                      return statearr_14174;
                                                    }();
                                                    var statearr_14175_14245 = state_14133__$1;
                                                    statearr_14175_14245[2] = null;
                                                    statearr_14175_14245[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_14134 === 6) {
                                                      var inst_14065 = state_14133[29];
                                                      var inst_14064 = cljs.core.deref.call(null, cs);
                                                      var inst_14065__$1 = cljs.core.keys.call(null, inst_14064);
                                                      var inst_14066 = cljs.core.count.call(null, inst_14065__$1);
                                                      var inst_14067 = cljs.core.reset_BANG_.call(null, dctr, inst_14066);
                                                      var inst_14072 = cljs.core.seq.call(null, inst_14065__$1);
                                                      var inst_14073 = inst_14072;
                                                      var inst_14074 = null;
                                                      var inst_14075 = 0;
                                                      var inst_14076 = 0;
                                                      var state_14133__$1 = function() {
                                                        var statearr_14176 = state_14133;
                                                        statearr_14176[30] = inst_14067;
                                                        statearr_14176[20] = inst_14075;
                                                        statearr_14176[11] = inst_14076;
                                                        statearr_14176[29] = inst_14065__$1;
                                                        statearr_14176[12] = inst_14074;
                                                        statearr_14176[21] = inst_14073;
                                                        return statearr_14176;
                                                      }();
                                                      var statearr_14177_14246 = state_14133__$1;
                                                      statearr_14177_14246[2] = null;
                                                      statearr_14177_14246[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_14134 === 28) {
                                                        var inst_14092 = state_14133[25];
                                                        var inst_14073 = state_14133[21];
                                                        var inst_14092__$1 = cljs.core.seq.call(null, inst_14073);
                                                        var state_14133__$1 = function() {
                                                          var statearr_14178 = state_14133;
                                                          statearr_14178[25] = inst_14092__$1;
                                                          return statearr_14178;
                                                        }();
                                                        if (inst_14092__$1) {
                                                          var statearr_14179_14247 = state_14133__$1;
                                                          statearr_14179_14247[1] = 33;
                                                        } else {
                                                          var statearr_14180_14248 = state_14133__$1;
                                                          statearr_14180_14248[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_14134 === 25) {
                                                          var inst_14075 = state_14133[20];
                                                          var inst_14076 = state_14133[11];
                                                          var inst_14078 = inst_14076 < inst_14075;
                                                          var inst_14079 = inst_14078;
                                                          var state_14133__$1 = state_14133;
                                                          if (cljs.core.truth_(inst_14079)) {
                                                            var statearr_14181_14249 = state_14133__$1;
                                                            statearr_14181_14249[1] = 27;
                                                          } else {
                                                            var statearr_14182_14250 = state_14133__$1;
                                                            statearr_14182_14250[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_14134 === 34) {
                                                            var state_14133__$1 = state_14133;
                                                            var statearr_14183_14251 = state_14133__$1;
                                                            statearr_14183_14251[2] = null;
                                                            statearr_14183_14251[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_14134 === 17) {
                                                              var state_14133__$1 = state_14133;
                                                              var statearr_14184_14252 = state_14133__$1;
                                                              statearr_14184_14252[2] = null;
                                                              statearr_14184_14252[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_14134 === 3) {
                                                                var inst_14131 = state_14133[2];
                                                                var state_14133__$1 = state_14133;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14133__$1, inst_14131);
                                                              } else {
                                                                if (state_val_14134 === 12) {
                                                                  var inst_14060 = state_14133[2];
                                                                  var state_14133__$1 = state_14133;
                                                                  var statearr_14185_14253 = state_14133__$1;
                                                                  statearr_14185_14253[2] = inst_14060;
                                                                  statearr_14185_14253[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_14134 === 2) {
                                                                    var state_14133__$1 = state_14133;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14133__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_14134 === 23) {
                                                                      var state_14133__$1 = state_14133;
                                                                      var statearr_14186_14254 = state_14133__$1;
                                                                      statearr_14186_14254[2] = null;
                                                                      statearr_14186_14254[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_14134 === 35) {
                                                                        var inst_14115 = state_14133[2];
                                                                        var state_14133__$1 = state_14133;
                                                                        var statearr_14187_14255 = state_14133__$1;
                                                                        statearr_14187_14255[2] = inst_14115;
                                                                        statearr_14187_14255[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_14134 === 19) {
                                                                          var inst_14034 = state_14133[7];
                                                                          var inst_14038 = cljs.core.chunk_first.call(null, inst_14034);
                                                                          var inst_14039 = cljs.core.chunk_rest.call(null, inst_14034);
                                                                          var inst_14040 = cljs.core.count.call(null, inst_14038);
                                                                          var inst_14014 = inst_14039;
                                                                          var inst_14015 = inst_14038;
                                                                          var inst_14016 = inst_14040;
                                                                          var inst_14017 = 0;
                                                                          var state_14133__$1 = function() {
                                                                            var statearr_14188 = state_14133;
                                                                            statearr_14188[13] = inst_14014;
                                                                            statearr_14188[15] = inst_14015;
                                                                            statearr_14188[16] = inst_14016;
                                                                            statearr_14188[17] = inst_14017;
                                                                            return statearr_14188;
                                                                          }();
                                                                          var statearr_14189_14256 = state_14133__$1;
                                                                          statearr_14189_14256[2] = null;
                                                                          statearr_14189_14256[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_14134 === 11) {
                                                                            var inst_14014 = state_14133[13];
                                                                            var inst_14034 = state_14133[7];
                                                                            var inst_14034__$1 = cljs.core.seq.call(null, inst_14014);
                                                                            var state_14133__$1 = function() {
                                                                              var statearr_14190 = state_14133;
                                                                              statearr_14190[7] = inst_14034__$1;
                                                                              return statearr_14190;
                                                                            }();
                                                                            if (inst_14034__$1) {
                                                                              var statearr_14191_14257 = state_14133__$1;
                                                                              statearr_14191_14257[1] = 16;
                                                                            } else {
                                                                              var statearr_14192_14258 = state_14133__$1;
                                                                              statearr_14192_14258[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_14134 === 9) {
                                                                              var inst_14062 = state_14133[2];
                                                                              var state_14133__$1 = state_14133;
                                                                              var statearr_14193_14259 = state_14133__$1;
                                                                              statearr_14193_14259[2] = inst_14062;
                                                                              statearr_14193_14259[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_14134 === 5) {
                                                                                var inst_14012 = cljs.core.deref.call(null, cs);
                                                                                var inst_14013 = cljs.core.seq.call(null, inst_14012);
                                                                                var inst_14014 = inst_14013;
                                                                                var inst_14015 = null;
                                                                                var inst_14016 = 0;
                                                                                var inst_14017 = 0;
                                                                                var state_14133__$1 = function() {
                                                                                  var statearr_14194 = state_14133;
                                                                                  statearr_14194[13] = inst_14014;
                                                                                  statearr_14194[15] = inst_14015;
                                                                                  statearr_14194[16] = inst_14016;
                                                                                  statearr_14194[17] = inst_14017;
                                                                                  return statearr_14194;
                                                                                }();
                                                                                var statearr_14195_14260 = state_14133__$1;
                                                                                statearr_14195_14260[2] = null;
                                                                                statearr_14195_14260[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_14134 === 14) {
                                                                                  var state_14133__$1 = state_14133;
                                                                                  var statearr_14196_14261 = state_14133__$1;
                                                                                  statearr_14196_14261[2] = null;
                                                                                  statearr_14196_14261[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_14134 === 45) {
                                                                                    var inst_14123 = state_14133[2];
                                                                                    var state_14133__$1 = state_14133;
                                                                                    var statearr_14197_14262 = state_14133__$1;
                                                                                    statearr_14197_14262[2] = inst_14123;
                                                                                    statearr_14197_14262[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_14134 === 26) {
                                                                                      var inst_14065 = state_14133[29];
                                                                                      var inst_14119 = state_14133[2];
                                                                                      var inst_14120 = cljs.core.seq.call(null, inst_14065);
                                                                                      var state_14133__$1 = function() {
                                                                                        var statearr_14198 = state_14133;
                                                                                        statearr_14198[31] = inst_14119;
                                                                                        return statearr_14198;
                                                                                      }();
                                                                                      if (inst_14120) {
                                                                                        var statearr_14199_14263 = state_14133__$1;
                                                                                        statearr_14199_14263[1] = 42;
                                                                                      } else {
                                                                                        var statearr_14200_14264 = state_14133__$1;
                                                                                        statearr_14200_14264[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_14134 === 16) {
                                                                                        var inst_14034 = state_14133[7];
                                                                                        var inst_14036 = cljs.core.chunked_seq_QMARK_.call(null, inst_14034);
                                                                                        var state_14133__$1 = state_14133;
                                                                                        if (inst_14036) {
                                                                                          var statearr_14201_14265 = state_14133__$1;
                                                                                          statearr_14201_14265[1] = 19;
                                                                                        } else {
                                                                                          var statearr_14202_14266 = state_14133__$1;
                                                                                          statearr_14202_14266[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_14134 === 38) {
                                                                                          var inst_14112 = state_14133[2];
                                                                                          var state_14133__$1 = state_14133;
                                                                                          var statearr_14203_14267 = state_14133__$1;
                                                                                          statearr_14203_14267[2] = inst_14112;
                                                                                          statearr_14203_14267[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_14134 === 30) {
                                                                                            var state_14133__$1 = state_14133;
                                                                                            var statearr_14204_14268 = state_14133__$1;
                                                                                            statearr_14204_14268[2] = null;
                                                                                            statearr_14204_14268[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_14134 === 10) {
                                                                                              var inst_14015 = state_14133[15];
                                                                                              var inst_14017 = state_14133[17];
                                                                                              var inst_14023 = cljs.core._nth.call(null, inst_14015, inst_14017);
                                                                                              var inst_14024 = cljs.core.nth.call(null, inst_14023, 0, null);
                                                                                              var inst_14025 = cljs.core.nth.call(null, inst_14023, 1, null);
                                                                                              var state_14133__$1 = function() {
                                                                                                var statearr_14205 = state_14133;
                                                                                                statearr_14205[26] = inst_14024;
                                                                                                return statearr_14205;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_14025)) {
                                                                                                var statearr_14206_14269 = state_14133__$1;
                                                                                                statearr_14206_14269[1] = 13;
                                                                                              } else {
                                                                                                var statearr_14207_14270 = state_14133__$1;
                                                                                                statearr_14207_14270[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_14134 === 18) {
                                                                                                var inst_14058 = state_14133[2];
                                                                                                var state_14133__$1 = state_14133;
                                                                                                var statearr_14208_14271 = state_14133__$1;
                                                                                                statearr_14208_14271[2] = inst_14058;
                                                                                                statearr_14208_14271[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_14134 === 42) {
                                                                                                  var state_14133__$1 = state_14133;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14133__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_14134 === 37) {
                                                                                                    var inst_14101 = state_14133[23];
                                                                                                    var inst_14005 = state_14133[10];
                                                                                                    var inst_14092 = state_14133[25];
                                                                                                    var inst_14101__$1 = cljs.core.first.call(null, inst_14092);
                                                                                                    var inst_14102 = cljs.core.async.put_BANG_.call(null, inst_14101__$1, inst_14005, done);
                                                                                                    var state_14133__$1 = function() {
                                                                                                      var statearr_14209 = state_14133;
                                                                                                      statearr_14209[23] = inst_14101__$1;
                                                                                                      return statearr_14209;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_14102)) {
                                                                                                      var statearr_14210_14272 = state_14133__$1;
                                                                                                      statearr_14210_14272[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_14211_14273 = state_14133__$1;
                                                                                                      statearr_14211_14273[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_14134 === 8) {
                                                                                                      var inst_14016 = state_14133[16];
                                                                                                      var inst_14017 = state_14133[17];
                                                                                                      var inst_14019 = inst_14017 < inst_14016;
                                                                                                      var inst_14020 = inst_14019;
                                                                                                      var state_14133__$1 = state_14133;
                                                                                                      if (cljs.core.truth_(inst_14020)) {
                                                                                                        var statearr_14212_14274 = state_14133__$1;
                                                                                                        statearr_14212_14274[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_14213_14275 = state_14133__$1;
                                                                                                        statearr_14213_14275[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6881__auto___14221, cs, m, dchan, dctr, done);
        return function(switch__6825__auto__, c__6881__auto___14221, cs, m, dchan, dctr, done) {
          return function() {
            var cljs$core$async$mult_$_state_machine__6826__auto__ = null;
            var cljs$core$async$mult_$_state_machine__6826__auto____0 = function() {
              var statearr_14217 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_14217[0] = cljs$core$async$mult_$_state_machine__6826__auto__;
              statearr_14217[1] = 1;
              return statearr_14217;
            };
            var cljs$core$async$mult_$_state_machine__6826__auto____1 = function(state_14133) {
              while (true) {
                var ret_value__6827__auto__ = function() {
                  try {
                    while (true) {
                      var result__6828__auto__ = switch__6825__auto__.call(null, state_14133);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6828__auto__;
                      }
                      break;
                    }
                  } catch (e14218) {
                    if (e14218 instanceof Object) {
                      var ex__6829__auto__ = e14218;
                      var statearr_14219_14276 = state_14133;
                      statearr_14219_14276[5] = ex__6829__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14133);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14218;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__14277 = state_14133;
                  state_14133 = G__14277;
                  continue;
                } else {
                  return ret_value__6827__auto__;
                }
                break;
              }
            };
            cljs$core$async$mult_$_state_machine__6826__auto__ = function(state_14133) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mult_$_state_machine__6826__auto____0.call(this);
                case 1:
                  return cljs$core$async$mult_$_state_machine__6826__auto____1.call(this, state_14133);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mult_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mult_$_state_machine__6826__auto____0;
            cljs$core$async$mult_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mult_$_state_machine__6826__auto____1;
            return cljs$core$async$mult_$_state_machine__6826__auto__;
          }();
        }(switch__6825__auto__, c__6881__auto___14221, cs, m, dchan, dctr, done);
      }();
      var state__6883__auto__ = function() {
        var statearr_14220 = f__6882__auto__.call(null);
        statearr_14220[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto___14221;
        return statearr_14220;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
    };
  }(c__6881__auto___14221, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var cljs$core$async$tap = null;
  var cljs$core$async$tap__2 = function(mult, ch) {
    return cljs$core$async$tap.call(null, mult, ch, true);
  };
  var cljs$core$async$tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  cljs$core$async$tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return cljs$core$async$tap__2.call(this, mult, ch);
      case 3:
        return cljs$core$async$tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$tap.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$tap__2;
  cljs$core$async$tap.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$tap__3;
  return cljs$core$async$tap;
}();
cljs.core.async.untap = function cljs$core$async$untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function cljs$core$async$untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj14279 = {};
  return obj14279;
}();
cljs.core.async.admix_STAR_ = function cljs$core$async$admix_STAR_(m, ch) {
  if (function() {
    var and__4097__auto__ = m;
    if (and__4097__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4745__auto__ = m == null ? null : m;
    return function() {
      var or__4109__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function cljs$core$async$unmix_STAR_(m, ch) {
  if (function() {
    var and__4097__auto__ = m;
    if (and__4097__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4745__auto__ = m == null ? null : m;
    return function() {
      var or__4109__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function cljs$core$async$unmix_all_STAR_(m) {
  if (function() {
    var and__4097__auto__ = m;
    if (and__4097__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4745__auto__ = m == null ? null : m;
    return function() {
      var or__4109__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function cljs$core$async$toggle_STAR_(m, state_map) {
  if (function() {
    var and__4097__auto__ = m;
    if (and__4097__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4745__auto__ = m == null ? null : m;
    return function() {
      var or__4109__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function cljs$core$async$solo_mode_STAR_(m, mode) {
  if (function() {
    var and__4097__auto__ = m;
    if (and__4097__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4745__auto__ = m == null ? null : m;
    return function() {
      var or__4109__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.ioc_alts_BANG_ = function() {
  var cljs$core$async$ioc_alts_BANG___delegate = function(state, cont_block, ports, p__14280) {
    var map__14285 = p__14280;
    var map__14285__$1 = cljs.core.seq_QMARK_.call(null, map__14285) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14285) : map__14285;
    var opts = map__14285__$1;
    var statearr_14286_14289 = state;
    statearr_14286_14289[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__14285, map__14285__$1, opts) {
      return function(val) {
        var statearr_14287_14290 = state;
        statearr_14287_14290[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__14285, map__14285__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_14288_14291 = state;
      statearr_14288_14291[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var cljs$core$async$ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__14280 = null;
    if (arguments.length > 3) {
      var G__14292__i = 0, G__14292__a = new Array(arguments.length - 3);
      while (G__14292__i < G__14292__a.length) {
        G__14292__a[G__14292__i] = arguments[G__14292__i + 3];
        ++G__14292__i;
      }
      p__14280 = new cljs.core.IndexedSeq(G__14292__a, 0);
    }
    return cljs$core$async$ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__14280);
  };
  cljs$core$async$ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  cljs$core$async$ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__14293) {
    var state = cljs.core.first(arglist__14293);
    arglist__14293 = cljs.core.next(arglist__14293);
    var cont_block = cljs.core.first(arglist__14293);
    arglist__14293 = cljs.core.next(arglist__14293);
    var ports = cljs.core.first(arglist__14293);
    var p__14280 = cljs.core.rest(arglist__14293);
    return cljs$core$async$ioc_alts_BANG___delegate(state, cont_block, ports, p__14280);
  };
  cljs$core$async$ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$async$ioc_alts_BANG___delegate;
  return cljs$core$async$ioc_alts_BANG_;
}();
cljs.core.async.mix = function cljs$core$async$mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t14413 !== "undefined") {
    } else {
      cljs.core.async.t14413 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta14414) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta14414 = meta14414;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t14413.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t14413.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t14413.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t14413.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t14413.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t14413.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t14413.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t14413.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t14413.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_14415) {
          var self__ = this;
          var _14415__$1 = this;
          return self__.meta14414;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t14413.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_14415, meta14414__$1) {
          var self__ = this;
          var _14415__$1 = this;
          return new cljs.core.async.t14413(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta14414__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t14413.cljs$lang$type = true;
      cljs.core.async.t14413.cljs$lang$ctorStr = "cljs.core.async/t14413";
      cljs.core.async.t14413.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
          return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async/t14413");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t14413 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function cljs$core$async$mix_$___GT_t14413(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta14414) {
          return new cljs.core.async.t14413(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta14414);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t14413(change, cljs$core$async$mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__6881__auto___14532 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto___14532, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6882__auto__ = function() {
        var switch__6825__auto__ = function(c__6881__auto___14532, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_14485) {
            var state_val_14486 = state_14485[1];
            if (state_val_14486 === 7) {
              var inst_14429 = state_14485[7];
              var inst_14434 = cljs.core.apply.call(null, cljs.core.hash_map, inst_14429);
              var state_14485__$1 = state_14485;
              var statearr_14487_14533 = state_14485__$1;
              statearr_14487_14533[2] = inst_14434;
              statearr_14487_14533[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14486 === 20) {
                var inst_14444 = state_14485[8];
                var state_14485__$1 = state_14485;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14485__$1, 23, out, inst_14444);
              } else {
                if (state_val_14486 === 1) {
                  var inst_14419 = state_14485[9];
                  var inst_14419__$1 = calc_state.call(null);
                  var inst_14420 = cljs.core.seq_QMARK_.call(null, inst_14419__$1);
                  var state_14485__$1 = function() {
                    var statearr_14488 = state_14485;
                    statearr_14488[9] = inst_14419__$1;
                    return statearr_14488;
                  }();
                  if (inst_14420) {
                    var statearr_14489_14534 = state_14485__$1;
                    statearr_14489_14534[1] = 2;
                  } else {
                    var statearr_14490_14535 = state_14485__$1;
                    statearr_14490_14535[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14486 === 24) {
                    var inst_14437 = state_14485[10];
                    var inst_14429 = inst_14437;
                    var state_14485__$1 = function() {
                      var statearr_14491 = state_14485;
                      statearr_14491[7] = inst_14429;
                      return statearr_14491;
                    }();
                    var statearr_14492_14536 = state_14485__$1;
                    statearr_14492_14536[2] = null;
                    statearr_14492_14536[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14486 === 4) {
                      var inst_14419 = state_14485[9];
                      var inst_14425 = state_14485[2];
                      var inst_14426 = cljs.core.get.call(null, inst_14425, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_14427 = cljs.core.get.call(null, inst_14425, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_14428 = cljs.core.get.call(null, inst_14425, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_14429 = inst_14419;
                      var state_14485__$1 = function() {
                        var statearr_14493 = state_14485;
                        statearr_14493[11] = inst_14426;
                        statearr_14493[12] = inst_14427;
                        statearr_14493[7] = inst_14429;
                        statearr_14493[13] = inst_14428;
                        return statearr_14493;
                      }();
                      var statearr_14494_14537 = state_14485__$1;
                      statearr_14494_14537[2] = null;
                      statearr_14494_14537[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14486 === 15) {
                        var state_14485__$1 = state_14485;
                        var statearr_14495_14538 = state_14485__$1;
                        statearr_14495_14538[2] = null;
                        statearr_14495_14538[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_14486 === 21) {
                          var inst_14437 = state_14485[10];
                          var inst_14429 = inst_14437;
                          var state_14485__$1 = function() {
                            var statearr_14496 = state_14485;
                            statearr_14496[7] = inst_14429;
                            return statearr_14496;
                          }();
                          var statearr_14497_14539 = state_14485__$1;
                          statearr_14497_14539[2] = null;
                          statearr_14497_14539[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14486 === 13) {
                            var inst_14481 = state_14485[2];
                            var state_14485__$1 = state_14485;
                            var statearr_14498_14540 = state_14485__$1;
                            statearr_14498_14540[2] = inst_14481;
                            statearr_14498_14540[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14486 === 22) {
                              var inst_14479 = state_14485[2];
                              var state_14485__$1 = state_14485;
                              var statearr_14499_14541 = state_14485__$1;
                              statearr_14499_14541[2] = inst_14479;
                              statearr_14499_14541[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14486 === 6) {
                                var inst_14483 = state_14485[2];
                                var state_14485__$1 = state_14485;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14485__$1, inst_14483);
                              } else {
                                if (state_val_14486 === 25) {
                                  var state_14485__$1 = state_14485;
                                  var statearr_14500_14542 = state_14485__$1;
                                  statearr_14500_14542[2] = null;
                                  statearr_14500_14542[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14486 === 17) {
                                    var inst_14459 = state_14485[14];
                                    var state_14485__$1 = state_14485;
                                    var statearr_14501_14543 = state_14485__$1;
                                    statearr_14501_14543[2] = inst_14459;
                                    statearr_14501_14543[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14486 === 3) {
                                      var inst_14419 = state_14485[9];
                                      var state_14485__$1 = state_14485;
                                      var statearr_14502_14544 = state_14485__$1;
                                      statearr_14502_14544[2] = inst_14419;
                                      statearr_14502_14544[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_14486 === 12) {
                                        var inst_14459 = state_14485[14];
                                        var inst_14445 = state_14485[15];
                                        var inst_14440 = state_14485[16];
                                        var inst_14459__$1 = inst_14440.call(null, inst_14445);
                                        var state_14485__$1 = function() {
                                          var statearr_14503 = state_14485;
                                          statearr_14503[14] = inst_14459__$1;
                                          return statearr_14503;
                                        }();
                                        if (cljs.core.truth_(inst_14459__$1)) {
                                          var statearr_14504_14545 = state_14485__$1;
                                          statearr_14504_14545[1] = 17;
                                        } else {
                                          var statearr_14505_14546 = state_14485__$1;
                                          statearr_14505_14546[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_14486 === 2) {
                                          var inst_14419 = state_14485[9];
                                          var inst_14422 = cljs.core.apply.call(null, cljs.core.hash_map, inst_14419);
                                          var state_14485__$1 = state_14485;
                                          var statearr_14506_14547 = state_14485__$1;
                                          statearr_14506_14547[2] = inst_14422;
                                          statearr_14506_14547[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_14486 === 23) {
                                            var inst_14470 = state_14485[2];
                                            var state_14485__$1 = state_14485;
                                            if (cljs.core.truth_(inst_14470)) {
                                              var statearr_14507_14548 = state_14485__$1;
                                              statearr_14507_14548[1] = 24;
                                            } else {
                                              var statearr_14508_14549 = state_14485__$1;
                                              statearr_14508_14549[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_14486 === 19) {
                                              var inst_14467 = state_14485[2];
                                              var state_14485__$1 = state_14485;
                                              if (cljs.core.truth_(inst_14467)) {
                                                var statearr_14509_14550 = state_14485__$1;
                                                statearr_14509_14550[1] = 20;
                                              } else {
                                                var statearr_14510_14551 = state_14485__$1;
                                                statearr_14510_14551[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_14486 === 11) {
                                                var inst_14444 = state_14485[8];
                                                var inst_14450 = inst_14444 == null;
                                                var state_14485__$1 = state_14485;
                                                if (cljs.core.truth_(inst_14450)) {
                                                  var statearr_14511_14552 = state_14485__$1;
                                                  statearr_14511_14552[1] = 14;
                                                } else {
                                                  var statearr_14512_14553 = state_14485__$1;
                                                  statearr_14512_14553[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_14486 === 9) {
                                                  var inst_14437 = state_14485[10];
                                                  var inst_14437__$1 = state_14485[2];
                                                  var inst_14438 = cljs.core.get.call(null, inst_14437__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_14439 = cljs.core.get.call(null, inst_14437__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_14440 = cljs.core.get.call(null, inst_14437__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_14485__$1 = function() {
                                                    var statearr_14513 = state_14485;
                                                    statearr_14513[17] = inst_14439;
                                                    statearr_14513[10] = inst_14437__$1;
                                                    statearr_14513[16] = inst_14440;
                                                    return statearr_14513;
                                                  }();
                                                  return cljs.core.async.ioc_alts_BANG_.call(null, state_14485__$1, 10, inst_14438);
                                                } else {
                                                  if (state_val_14486 === 5) {
                                                    var inst_14429 = state_14485[7];
                                                    var inst_14432 = cljs.core.seq_QMARK_.call(null, inst_14429);
                                                    var state_14485__$1 = state_14485;
                                                    if (inst_14432) {
                                                      var statearr_14514_14554 = state_14485__$1;
                                                      statearr_14514_14554[1] = 7;
                                                    } else {
                                                      var statearr_14515_14555 = state_14485__$1;
                                                      statearr_14515_14555[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_14486 === 14) {
                                                      var inst_14445 = state_14485[15];
                                                      var inst_14452 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_14445);
                                                      var state_14485__$1 = state_14485;
                                                      var statearr_14516_14556 = state_14485__$1;
                                                      statearr_14516_14556[2] = inst_14452;
                                                      statearr_14516_14556[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_14486 === 26) {
                                                        var inst_14475 = state_14485[2];
                                                        var state_14485__$1 = state_14485;
                                                        var statearr_14517_14557 = state_14485__$1;
                                                        statearr_14517_14557[2] = inst_14475;
                                                        statearr_14517_14557[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_14486 === 16) {
                                                          var inst_14455 = state_14485[2];
                                                          var inst_14456 = calc_state.call(null);
                                                          var inst_14429 = inst_14456;
                                                          var state_14485__$1 = function() {
                                                            var statearr_14518 = state_14485;
                                                            statearr_14518[7] = inst_14429;
                                                            statearr_14518[18] = inst_14455;
                                                            return statearr_14518;
                                                          }();
                                                          var statearr_14519_14558 = state_14485__$1;
                                                          statearr_14519_14558[2] = null;
                                                          statearr_14519_14558[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_14486 === 10) {
                                                            var inst_14445 = state_14485[15];
                                                            var inst_14444 = state_14485[8];
                                                            var inst_14443 = state_14485[2];
                                                            var inst_14444__$1 = cljs.core.nth.call(null, inst_14443, 0, null);
                                                            var inst_14445__$1 = cljs.core.nth.call(null, inst_14443, 1, null);
                                                            var inst_14446 = inst_14444__$1 == null;
                                                            var inst_14447 = cljs.core._EQ_.call(null, inst_14445__$1, change);
                                                            var inst_14448 = inst_14446 || inst_14447;
                                                            var state_14485__$1 = function() {
                                                              var statearr_14520 = state_14485;
                                                              statearr_14520[15] = inst_14445__$1;
                                                              statearr_14520[8] = inst_14444__$1;
                                                              return statearr_14520;
                                                            }();
                                                            if (cljs.core.truth_(inst_14448)) {
                                                              var statearr_14521_14559 = state_14485__$1;
                                                              statearr_14521_14559[1] = 11;
                                                            } else {
                                                              var statearr_14522_14560 = state_14485__$1;
                                                              statearr_14522_14560[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_14486 === 18) {
                                                              var inst_14439 = state_14485[17];
                                                              var inst_14445 = state_14485[15];
                                                              var inst_14440 = state_14485[16];
                                                              var inst_14462 = cljs.core.empty_QMARK_.call(null, inst_14440);
                                                              var inst_14463 = inst_14439.call(null, inst_14445);
                                                              var inst_14464 = cljs.core.not.call(null, inst_14463);
                                                              var inst_14465 = inst_14462 && inst_14464;
                                                              var state_14485__$1 = state_14485;
                                                              var statearr_14523_14561 = state_14485__$1;
                                                              statearr_14523_14561[2] = inst_14465;
                                                              statearr_14523_14561[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_14486 === 8) {
                                                                var inst_14429 = state_14485[7];
                                                                var state_14485__$1 = state_14485;
                                                                var statearr_14524_14562 = state_14485__$1;
                                                                statearr_14524_14562[2] = inst_14429;
                                                                statearr_14524_14562[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6881__auto___14532, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6825__auto__, c__6881__auto___14532, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var cljs$core$async$mix_$_state_machine__6826__auto__ = null;
            var cljs$core$async$mix_$_state_machine__6826__auto____0 = function() {
              var statearr_14528 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_14528[0] = cljs$core$async$mix_$_state_machine__6826__auto__;
              statearr_14528[1] = 1;
              return statearr_14528;
            };
            var cljs$core$async$mix_$_state_machine__6826__auto____1 = function(state_14485) {
              while (true) {
                var ret_value__6827__auto__ = function() {
                  try {
                    while (true) {
                      var result__6828__auto__ = switch__6825__auto__.call(null, state_14485);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6828__auto__;
                      }
                      break;
                    }
                  } catch (e14529) {
                    if (e14529 instanceof Object) {
                      var ex__6829__auto__ = e14529;
                      var statearr_14530_14563 = state_14485;
                      statearr_14530_14563[5] = ex__6829__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14485);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14529;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__14564 = state_14485;
                  state_14485 = G__14564;
                  continue;
                } else {
                  return ret_value__6827__auto__;
                }
                break;
              }
            };
            cljs$core$async$mix_$_state_machine__6826__auto__ = function(state_14485) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mix_$_state_machine__6826__auto____0.call(this);
                case 1:
                  return cljs$core$async$mix_$_state_machine__6826__auto____1.call(this, state_14485);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mix_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mix_$_state_machine__6826__auto____0;
            cljs$core$async$mix_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mix_$_state_machine__6826__auto____1;
            return cljs$core$async$mix_$_state_machine__6826__auto__;
          }();
        }(switch__6825__auto__, c__6881__auto___14532, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6883__auto__ = function() {
        var statearr_14531 = f__6882__auto__.call(null);
        statearr_14531[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto___14532;
        return statearr_14531;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
    };
  }(c__6881__auto___14532, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function cljs$core$async$admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function cljs$core$async$unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function cljs$core$async$unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function cljs$core$async$toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function cljs$core$async$solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj14566 = {};
  return obj14566;
}();
cljs.core.async.sub_STAR_ = function cljs$core$async$sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__4097__auto__ = p;
    if (and__4097__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4745__auto__ = p == null ? null : p;
    return function() {
      var or__4109__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function cljs$core$async$unsub_STAR_(p, v, ch) {
  if (function() {
    var and__4097__auto__ = p;
    if (and__4097__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4745__auto__ = p == null ? null : p;
    return function() {
      var or__4109__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var cljs$core$async$unsub_all_STAR_ = null;
  var cljs$core$async$unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__4097__auto__ = p;
      if (and__4097__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4745__auto__ = p == null ? null : p;
      return function() {
        var or__4109__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4745__auto__)];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var cljs$core$async$unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__4097__auto__ = p;
      if (and__4097__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4745__auto__ = p == null ? null : p;
      return function() {
        var or__4109__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4745__auto__)];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  cljs$core$async$unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return cljs$core$async$unsub_all_STAR___1.call(this, p);
      case 2:
        return cljs$core$async$unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$unsub_all_STAR___1;
  cljs$core$async$unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$unsub_all_STAR___2;
  return cljs$core$async$unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var cljs$core$async$pub = null;
  var cljs$core$async$pub__2 = function(ch, topic_fn) {
    return cljs$core$async$pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var cljs$core$async$pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__4109__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__4109__auto__)) {
          return or__4109__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__4109__auto__, mults) {
            return function(p1__14567_SHARP_) {
              if (cljs.core.truth_(p1__14567_SHARP_.call(null, topic))) {
                return p1__14567_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__14567_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__4109__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t14690 !== "undefined") {
      } else {
        cljs.core.async.t14690 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta14691) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta14691 = meta14691;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t14690.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t14690.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t14690.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$1);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t14690.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t14690.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t14690.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t14690.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t14690.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_14692) {
            var self__ = this;
            var _14692__$1 = this;
            return self__.meta14691;
          };
        }(mults, ensure_mult);
        cljs.core.async.t14690.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_14692, meta14691__$1) {
            var self__ = this;
            var _14692__$1 = this;
            return new cljs.core.async.t14690(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta14691__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.t14690.cljs$lang$type = true;
        cljs.core.async.t14690.cljs$lang$ctorStr = "cljs.core.async/t14690";
        cljs.core.async.t14690.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
            return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async/t14690");
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t14690 = function(mults, ensure_mult) {
          return function cljs$core$async$pub_$___GT_t14690(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta14691) {
            return new cljs.core.async.t14690(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta14691);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t14690(ensure_mult, mults, buf_fn, topic_fn, ch, cljs$core$async$pub, cljs.core.PersistentArrayMap.EMPTY);
    }();
    var c__6881__auto___14812 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto___14812, mults, ensure_mult, p) {
      return function() {
        var f__6882__auto__ = function() {
          var switch__6825__auto__ = function(c__6881__auto___14812, mults, ensure_mult, p) {
            return function(state_14764) {
              var state_val_14765 = state_14764[1];
              if (state_val_14765 === 7) {
                var inst_14760 = state_14764[2];
                var state_14764__$1 = state_14764;
                var statearr_14766_14813 = state_14764__$1;
                statearr_14766_14813[2] = inst_14760;
                statearr_14766_14813[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14765 === 20) {
                  var state_14764__$1 = state_14764;
                  var statearr_14767_14814 = state_14764__$1;
                  statearr_14767_14814[2] = null;
                  statearr_14767_14814[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14765 === 1) {
                    var state_14764__$1 = state_14764;
                    var statearr_14768_14815 = state_14764__$1;
                    statearr_14768_14815[2] = null;
                    statearr_14768_14815[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14765 === 24) {
                      var inst_14743 = state_14764[7];
                      var inst_14752 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_14743);
                      var state_14764__$1 = state_14764;
                      var statearr_14769_14816 = state_14764__$1;
                      statearr_14769_14816[2] = inst_14752;
                      statearr_14769_14816[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14765 === 4) {
                        var inst_14695 = state_14764[8];
                        var inst_14695__$1 = state_14764[2];
                        var inst_14696 = inst_14695__$1 == null;
                        var state_14764__$1 = function() {
                          var statearr_14770 = state_14764;
                          statearr_14770[8] = inst_14695__$1;
                          return statearr_14770;
                        }();
                        if (cljs.core.truth_(inst_14696)) {
                          var statearr_14771_14817 = state_14764__$1;
                          statearr_14771_14817[1] = 5;
                        } else {
                          var statearr_14772_14818 = state_14764__$1;
                          statearr_14772_14818[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_14765 === 15) {
                          var inst_14737 = state_14764[2];
                          var state_14764__$1 = state_14764;
                          var statearr_14773_14819 = state_14764__$1;
                          statearr_14773_14819[2] = inst_14737;
                          statearr_14773_14819[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14765 === 21) {
                            var inst_14757 = state_14764[2];
                            var state_14764__$1 = function() {
                              var statearr_14774 = state_14764;
                              statearr_14774[9] = inst_14757;
                              return statearr_14774;
                            }();
                            var statearr_14775_14820 = state_14764__$1;
                            statearr_14775_14820[2] = null;
                            statearr_14775_14820[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14765 === 13) {
                              var inst_14719 = state_14764[10];
                              var inst_14721 = cljs.core.chunked_seq_QMARK_.call(null, inst_14719);
                              var state_14764__$1 = state_14764;
                              if (inst_14721) {
                                var statearr_14776_14821 = state_14764__$1;
                                statearr_14776_14821[1] = 16;
                              } else {
                                var statearr_14777_14822 = state_14764__$1;
                                statearr_14777_14822[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14765 === 22) {
                                var inst_14749 = state_14764[2];
                                var state_14764__$1 = state_14764;
                                if (cljs.core.truth_(inst_14749)) {
                                  var statearr_14778_14823 = state_14764__$1;
                                  statearr_14778_14823[1] = 23;
                                } else {
                                  var statearr_14779_14824 = state_14764__$1;
                                  statearr_14779_14824[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14765 === 6) {
                                  var inst_14695 = state_14764[8];
                                  var inst_14745 = state_14764[11];
                                  var inst_14743 = state_14764[7];
                                  var inst_14743__$1 = topic_fn.call(null, inst_14695);
                                  var inst_14744 = cljs.core.deref.call(null, mults);
                                  var inst_14745__$1 = cljs.core.get.call(null, inst_14744, inst_14743__$1);
                                  var state_14764__$1 = function() {
                                    var statearr_14780 = state_14764;
                                    statearr_14780[11] = inst_14745__$1;
                                    statearr_14780[7] = inst_14743__$1;
                                    return statearr_14780;
                                  }();
                                  if (cljs.core.truth_(inst_14745__$1)) {
                                    var statearr_14781_14825 = state_14764__$1;
                                    statearr_14781_14825[1] = 19;
                                  } else {
                                    var statearr_14782_14826 = state_14764__$1;
                                    statearr_14782_14826[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14765 === 25) {
                                    var inst_14754 = state_14764[2];
                                    var state_14764__$1 = state_14764;
                                    var statearr_14783_14827 = state_14764__$1;
                                    statearr_14783_14827[2] = inst_14754;
                                    statearr_14783_14827[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14765 === 17) {
                                      var inst_14719 = state_14764[10];
                                      var inst_14728 = cljs.core.first.call(null, inst_14719);
                                      var inst_14729 = cljs.core.async.muxch_STAR_.call(null, inst_14728);
                                      var inst_14730 = cljs.core.async.close_BANG_.call(null, inst_14729);
                                      var inst_14731 = cljs.core.next.call(null, inst_14719);
                                      var inst_14705 = inst_14731;
                                      var inst_14706 = null;
                                      var inst_14707 = 0;
                                      var inst_14708 = 0;
                                      var state_14764__$1 = function() {
                                        var statearr_14784 = state_14764;
                                        statearr_14784[12] = inst_14707;
                                        statearr_14784[13] = inst_14730;
                                        statearr_14784[14] = inst_14706;
                                        statearr_14784[15] = inst_14705;
                                        statearr_14784[16] = inst_14708;
                                        return statearr_14784;
                                      }();
                                      var statearr_14785_14828 = state_14764__$1;
                                      statearr_14785_14828[2] = null;
                                      statearr_14785_14828[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_14765 === 3) {
                                        var inst_14762 = state_14764[2];
                                        var state_14764__$1 = state_14764;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14764__$1, inst_14762);
                                      } else {
                                        if (state_val_14765 === 12) {
                                          var inst_14739 = state_14764[2];
                                          var state_14764__$1 = state_14764;
                                          var statearr_14786_14829 = state_14764__$1;
                                          statearr_14786_14829[2] = inst_14739;
                                          statearr_14786_14829[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_14765 === 2) {
                                            var state_14764__$1 = state_14764;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14764__$1, 4, ch);
                                          } else {
                                            if (state_val_14765 === 23) {
                                              var state_14764__$1 = state_14764;
                                              var statearr_14787_14830 = state_14764__$1;
                                              statearr_14787_14830[2] = null;
                                              statearr_14787_14830[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_14765 === 19) {
                                                var inst_14695 = state_14764[8];
                                                var inst_14745 = state_14764[11];
                                                var inst_14747 = cljs.core.async.muxch_STAR_.call(null, inst_14745);
                                                var state_14764__$1 = state_14764;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14764__$1, 22, inst_14747, inst_14695);
                                              } else {
                                                if (state_val_14765 === 11) {
                                                  var inst_14705 = state_14764[15];
                                                  var inst_14719 = state_14764[10];
                                                  var inst_14719__$1 = cljs.core.seq.call(null, inst_14705);
                                                  var state_14764__$1 = function() {
                                                    var statearr_14788 = state_14764;
                                                    statearr_14788[10] = inst_14719__$1;
                                                    return statearr_14788;
                                                  }();
                                                  if (inst_14719__$1) {
                                                    var statearr_14789_14831 = state_14764__$1;
                                                    statearr_14789_14831[1] = 13;
                                                  } else {
                                                    var statearr_14790_14832 = state_14764__$1;
                                                    statearr_14790_14832[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_14765 === 9) {
                                                    var inst_14741 = state_14764[2];
                                                    var state_14764__$1 = state_14764;
                                                    var statearr_14791_14833 = state_14764__$1;
                                                    statearr_14791_14833[2] = inst_14741;
                                                    statearr_14791_14833[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_14765 === 5) {
                                                      var inst_14702 = cljs.core.deref.call(null, mults);
                                                      var inst_14703 = cljs.core.vals.call(null, inst_14702);
                                                      var inst_14704 = cljs.core.seq.call(null, inst_14703);
                                                      var inst_14705 = inst_14704;
                                                      var inst_14706 = null;
                                                      var inst_14707 = 0;
                                                      var inst_14708 = 0;
                                                      var state_14764__$1 = function() {
                                                        var statearr_14792 = state_14764;
                                                        statearr_14792[12] = inst_14707;
                                                        statearr_14792[14] = inst_14706;
                                                        statearr_14792[15] = inst_14705;
                                                        statearr_14792[16] = inst_14708;
                                                        return statearr_14792;
                                                      }();
                                                      var statearr_14793_14834 = state_14764__$1;
                                                      statearr_14793_14834[2] = null;
                                                      statearr_14793_14834[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_14765 === 14) {
                                                        var state_14764__$1 = state_14764;
                                                        var statearr_14797_14835 = state_14764__$1;
                                                        statearr_14797_14835[2] = null;
                                                        statearr_14797_14835[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_14765 === 16) {
                                                          var inst_14719 = state_14764[10];
                                                          var inst_14723 = cljs.core.chunk_first.call(null, inst_14719);
                                                          var inst_14724 = cljs.core.chunk_rest.call(null, inst_14719);
                                                          var inst_14725 = cljs.core.count.call(null, inst_14723);
                                                          var inst_14705 = inst_14724;
                                                          var inst_14706 = inst_14723;
                                                          var inst_14707 = inst_14725;
                                                          var inst_14708 = 0;
                                                          var state_14764__$1 = function() {
                                                            var statearr_14798 = state_14764;
                                                            statearr_14798[12] = inst_14707;
                                                            statearr_14798[14] = inst_14706;
                                                            statearr_14798[15] = inst_14705;
                                                            statearr_14798[16] = inst_14708;
                                                            return statearr_14798;
                                                          }();
                                                          var statearr_14799_14836 = state_14764__$1;
                                                          statearr_14799_14836[2] = null;
                                                          statearr_14799_14836[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_14765 === 10) {
                                                            var inst_14707 = state_14764[12];
                                                            var inst_14706 = state_14764[14];
                                                            var inst_14705 = state_14764[15];
                                                            var inst_14708 = state_14764[16];
                                                            var inst_14713 = cljs.core._nth.call(null, inst_14706, inst_14708);
                                                            var inst_14714 = cljs.core.async.muxch_STAR_.call(null, inst_14713);
                                                            var inst_14715 = cljs.core.async.close_BANG_.call(null, inst_14714);
                                                            var inst_14716 = inst_14708 + 1;
                                                            var tmp14794 = inst_14707;
                                                            var tmp14795 = inst_14706;
                                                            var tmp14796 = inst_14705;
                                                            var inst_14705__$1 = tmp14796;
                                                            var inst_14706__$1 = tmp14795;
                                                            var inst_14707__$1 = tmp14794;
                                                            var inst_14708__$1 = inst_14716;
                                                            var state_14764__$1 = function() {
                                                              var statearr_14800 = state_14764;
                                                              statearr_14800[12] = inst_14707__$1;
                                                              statearr_14800[14] = inst_14706__$1;
                                                              statearr_14800[17] = inst_14715;
                                                              statearr_14800[15] = inst_14705__$1;
                                                              statearr_14800[16] = inst_14708__$1;
                                                              return statearr_14800;
                                                            }();
                                                            var statearr_14801_14837 = state_14764__$1;
                                                            statearr_14801_14837[2] = null;
                                                            statearr_14801_14837[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_14765 === 18) {
                                                              var inst_14734 = state_14764[2];
                                                              var state_14764__$1 = state_14764;
                                                              var statearr_14802_14838 = state_14764__$1;
                                                              statearr_14802_14838[2] = inst_14734;
                                                              statearr_14802_14838[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_14765 === 8) {
                                                                var inst_14707 = state_14764[12];
                                                                var inst_14708 = state_14764[16];
                                                                var inst_14710 = inst_14708 < inst_14707;
                                                                var inst_14711 = inst_14710;
                                                                var state_14764__$1 = state_14764;
                                                                if (cljs.core.truth_(inst_14711)) {
                                                                  var statearr_14803_14839 = state_14764__$1;
                                                                  statearr_14803_14839[1] = 10;
                                                                } else {
                                                                  var statearr_14804_14840 = state_14764__$1;
                                                                  statearr_14804_14840[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6881__auto___14812, mults, ensure_mult, p);
          return function(switch__6825__auto__, c__6881__auto___14812, mults, ensure_mult, p) {
            return function() {
              var cljs$core$async$pub_$_state_machine__6826__auto__ = null;
              var cljs$core$async$pub_$_state_machine__6826__auto____0 = function() {
                var statearr_14808 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_14808[0] = cljs$core$async$pub_$_state_machine__6826__auto__;
                statearr_14808[1] = 1;
                return statearr_14808;
              };
              var cljs$core$async$pub_$_state_machine__6826__auto____1 = function(state_14764) {
                while (true) {
                  var ret_value__6827__auto__ = function() {
                    try {
                      while (true) {
                        var result__6828__auto__ = switch__6825__auto__.call(null, state_14764);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6828__auto__;
                        }
                        break;
                      }
                    } catch (e14809) {
                      if (e14809 instanceof Object) {
                        var ex__6829__auto__ = e14809;
                        var statearr_14810_14841 = state_14764;
                        statearr_14810_14841[5] = ex__6829__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14764);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e14809;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__14842 = state_14764;
                    state_14764 = G__14842;
                    continue;
                  } else {
                    return ret_value__6827__auto__;
                  }
                  break;
                }
              };
              cljs$core$async$pub_$_state_machine__6826__auto__ = function(state_14764) {
                switch(arguments.length) {
                  case 0:
                    return cljs$core$async$pub_$_state_machine__6826__auto____0.call(this);
                  case 1:
                    return cljs$core$async$pub_$_state_machine__6826__auto____1.call(this, state_14764);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              cljs$core$async$pub_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pub_$_state_machine__6826__auto____0;
              cljs$core$async$pub_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pub_$_state_machine__6826__auto____1;
              return cljs$core$async$pub_$_state_machine__6826__auto__;
            }();
          }(switch__6825__auto__, c__6881__auto___14812, mults, ensure_mult, p);
        }();
        var state__6883__auto__ = function() {
          var statearr_14811 = f__6882__auto__.call(null);
          statearr_14811[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto___14812;
          return statearr_14811;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
      };
    }(c__6881__auto___14812, mults, ensure_mult, p));
    return p;
  };
  cljs$core$async$pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return cljs$core$async$pub__2.call(this, ch, topic_fn);
      case 3:
        return cljs$core$async$pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$pub.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$pub__2;
  cljs$core$async$pub.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$pub__3;
  return cljs$core$async$pub;
}();
cljs.core.async.sub = function() {
  var cljs$core$async$sub = null;
  var cljs$core$async$sub__3 = function(p, topic, ch) {
    return cljs$core$async$sub.call(null, p, topic, ch, true);
  };
  var cljs$core$async$sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  cljs$core$async$sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return cljs$core$async$sub__3.call(this, p, topic, ch);
      case 4:
        return cljs$core$async$sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$sub.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$sub__3;
  cljs$core$async$sub.cljs$core$IFn$_invoke$arity$4 = cljs$core$async$sub__4;
  return cljs$core$async$sub;
}();
cljs.core.async.unsub = function cljs$core$async$unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var cljs$core$async$unsub_all = null;
  var cljs$core$async$unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var cljs$core$async$unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  cljs$core$async$unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return cljs$core$async$unsub_all__1.call(this, p);
      case 2:
        return cljs$core$async$unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$unsub_all.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$unsub_all__1;
  cljs$core$async$unsub_all.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$unsub_all__2;
  return cljs$core$async$unsub_all;
}();
cljs.core.async.map = function() {
  var cljs$core$async$map = null;
  var cljs$core$async$map__2 = function(f, chs) {
    return cljs$core$async$map.call(null, f, chs, null);
  };
  var cljs$core$async$map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6881__auto___14979 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto___14979, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6882__auto__ = function() {
          var switch__6825__auto__ = function(c__6881__auto___14979, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_14949) {
              var state_val_14950 = state_14949[1];
              if (state_val_14950 === 7) {
                var state_14949__$1 = state_14949;
                var statearr_14951_14980 = state_14949__$1;
                statearr_14951_14980[2] = null;
                statearr_14951_14980[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14950 === 1) {
                  var state_14949__$1 = state_14949;
                  var statearr_14952_14981 = state_14949__$1;
                  statearr_14952_14981[2] = null;
                  statearr_14952_14981[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14950 === 4) {
                    var inst_14913 = state_14949[7];
                    var inst_14915 = inst_14913 < cnt;
                    var state_14949__$1 = state_14949;
                    if (cljs.core.truth_(inst_14915)) {
                      var statearr_14953_14982 = state_14949__$1;
                      statearr_14953_14982[1] = 6;
                    } else {
                      var statearr_14954_14983 = state_14949__$1;
                      statearr_14954_14983[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14950 === 15) {
                      var inst_14945 = state_14949[2];
                      var state_14949__$1 = state_14949;
                      var statearr_14955_14984 = state_14949__$1;
                      statearr_14955_14984[2] = inst_14945;
                      statearr_14955_14984[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14950 === 13) {
                        var inst_14938 = cljs.core.async.close_BANG_.call(null, out);
                        var state_14949__$1 = state_14949;
                        var statearr_14956_14985 = state_14949__$1;
                        statearr_14956_14985[2] = inst_14938;
                        statearr_14956_14985[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_14950 === 6) {
                          var state_14949__$1 = state_14949;
                          var statearr_14957_14986 = state_14949__$1;
                          statearr_14957_14986[2] = null;
                          statearr_14957_14986[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14950 === 3) {
                            var inst_14947 = state_14949[2];
                            var state_14949__$1 = state_14949;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14949__$1, inst_14947);
                          } else {
                            if (state_val_14950 === 12) {
                              var inst_14935 = state_14949[8];
                              var inst_14935__$1 = state_14949[2];
                              var inst_14936 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_14935__$1);
                              var state_14949__$1 = function() {
                                var statearr_14958 = state_14949;
                                statearr_14958[8] = inst_14935__$1;
                                return statearr_14958;
                              }();
                              if (cljs.core.truth_(inst_14936)) {
                                var statearr_14959_14987 = state_14949__$1;
                                statearr_14959_14987[1] = 13;
                              } else {
                                var statearr_14960_14988 = state_14949__$1;
                                statearr_14960_14988[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14950 === 2) {
                                var inst_14912 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_14913 = 0;
                                var state_14949__$1 = function() {
                                  var statearr_14961 = state_14949;
                                  statearr_14961[7] = inst_14913;
                                  statearr_14961[9] = inst_14912;
                                  return statearr_14961;
                                }();
                                var statearr_14962_14989 = state_14949__$1;
                                statearr_14962_14989[2] = null;
                                statearr_14962_14989[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14950 === 11) {
                                  var inst_14913 = state_14949[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_14949, 10, Object, null, 9);
                                  var inst_14922 = chs__$1.call(null, inst_14913);
                                  var inst_14923 = done.call(null, inst_14913);
                                  var inst_14924 = cljs.core.async.take_BANG_.call(null, inst_14922, inst_14923);
                                  var state_14949__$1 = state_14949;
                                  var statearr_14963_14990 = state_14949__$1;
                                  statearr_14963_14990[2] = inst_14924;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14949__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14950 === 9) {
                                    var inst_14913 = state_14949[7];
                                    var inst_14926 = state_14949[2];
                                    var inst_14927 = inst_14913 + 1;
                                    var inst_14913__$1 = inst_14927;
                                    var state_14949__$1 = function() {
                                      var statearr_14964 = state_14949;
                                      statearr_14964[7] = inst_14913__$1;
                                      statearr_14964[10] = inst_14926;
                                      return statearr_14964;
                                    }();
                                    var statearr_14965_14991 = state_14949__$1;
                                    statearr_14965_14991[2] = null;
                                    statearr_14965_14991[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14950 === 5) {
                                      var inst_14933 = state_14949[2];
                                      var state_14949__$1 = function() {
                                        var statearr_14966 = state_14949;
                                        statearr_14966[11] = inst_14933;
                                        return statearr_14966;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14949__$1, 12, dchan);
                                    } else {
                                      if (state_val_14950 === 14) {
                                        var inst_14935 = state_14949[8];
                                        var inst_14940 = cljs.core.apply.call(null, f, inst_14935);
                                        var state_14949__$1 = state_14949;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14949__$1, 16, out, inst_14940);
                                      } else {
                                        if (state_val_14950 === 16) {
                                          var inst_14942 = state_14949[2];
                                          var state_14949__$1 = function() {
                                            var statearr_14967 = state_14949;
                                            statearr_14967[12] = inst_14942;
                                            return statearr_14967;
                                          }();
                                          var statearr_14968_14992 = state_14949__$1;
                                          statearr_14968_14992[2] = null;
                                          statearr_14968_14992[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_14950 === 10) {
                                            var inst_14917 = state_14949[2];
                                            var inst_14918 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_14949__$1 = function() {
                                              var statearr_14969 = state_14949;
                                              statearr_14969[13] = inst_14917;
                                              return statearr_14969;
                                            }();
                                            var statearr_14970_14993 = state_14949__$1;
                                            statearr_14970_14993[2] = inst_14918;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14949__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_14950 === 8) {
                                              var inst_14931 = state_14949[2];
                                              var state_14949__$1 = state_14949;
                                              var statearr_14971_14994 = state_14949__$1;
                                              statearr_14971_14994[2] = inst_14931;
                                              statearr_14971_14994[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6881__auto___14979, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6825__auto__, c__6881__auto___14979, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var cljs$core$async$map_$_state_machine__6826__auto__ = null;
              var cljs$core$async$map_$_state_machine__6826__auto____0 = function() {
                var statearr_14975 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_14975[0] = cljs$core$async$map_$_state_machine__6826__auto__;
                statearr_14975[1] = 1;
                return statearr_14975;
              };
              var cljs$core$async$map_$_state_machine__6826__auto____1 = function(state_14949) {
                while (true) {
                  var ret_value__6827__auto__ = function() {
                    try {
                      while (true) {
                        var result__6828__auto__ = switch__6825__auto__.call(null, state_14949);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6828__auto__;
                        }
                        break;
                      }
                    } catch (e14976) {
                      if (e14976 instanceof Object) {
                        var ex__6829__auto__ = e14976;
                        var statearr_14977_14995 = state_14949;
                        statearr_14977_14995[5] = ex__6829__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14949);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e14976;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__14996 = state_14949;
                    state_14949 = G__14996;
                    continue;
                  } else {
                    return ret_value__6827__auto__;
                  }
                  break;
                }
              };
              cljs$core$async$map_$_state_machine__6826__auto__ = function(state_14949) {
                switch(arguments.length) {
                  case 0:
                    return cljs$core$async$map_$_state_machine__6826__auto____0.call(this);
                  case 1:
                    return cljs$core$async$map_$_state_machine__6826__auto____1.call(this, state_14949);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              cljs$core$async$map_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$map_$_state_machine__6826__auto____0;
              cljs$core$async$map_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$map_$_state_machine__6826__auto____1;
              return cljs$core$async$map_$_state_machine__6826__auto__;
            }();
          }(switch__6825__auto__, c__6881__auto___14979, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6883__auto__ = function() {
          var statearr_14978 = f__6882__auto__.call(null);
          statearr_14978[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto___14979;
          return statearr_14978;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
      };
    }(c__6881__auto___14979, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  cljs$core$async$map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return cljs$core$async$map__2.call(this, f, chs);
      case 3:
        return cljs$core$async$map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$map.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$map__2;
  cljs$core$async$map.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$map__3;
  return cljs$core$async$map;
}();
cljs.core.async.merge = function() {
  var cljs$core$async$merge = null;
  var cljs$core$async$merge__1 = function(chs) {
    return cljs$core$async$merge.call(null, chs, null);
  };
  var cljs$core$async$merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6881__auto___15104 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto___15104, out) {
      return function() {
        var f__6882__auto__ = function() {
          var switch__6825__auto__ = function(c__6881__auto___15104, out) {
            return function(state_15080) {
              var state_val_15081 = state_15080[1];
              if (state_val_15081 === 7) {
                var inst_15060 = state_15080[7];
                var inst_15059 = state_15080[8];
                var inst_15059__$1 = state_15080[2];
                var inst_15060__$1 = cljs.core.nth.call(null, inst_15059__$1, 0, null);
                var inst_15061 = cljs.core.nth.call(null, inst_15059__$1, 1, null);
                var inst_15062 = inst_15060__$1 == null;
                var state_15080__$1 = function() {
                  var statearr_15082 = state_15080;
                  statearr_15082[7] = inst_15060__$1;
                  statearr_15082[9] = inst_15061;
                  statearr_15082[8] = inst_15059__$1;
                  return statearr_15082;
                }();
                if (cljs.core.truth_(inst_15062)) {
                  var statearr_15083_15105 = state_15080__$1;
                  statearr_15083_15105[1] = 8;
                } else {
                  var statearr_15084_15106 = state_15080__$1;
                  statearr_15084_15106[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15081 === 1) {
                  var inst_15051 = cljs.core.vec.call(null, chs);
                  var inst_15052 = inst_15051;
                  var state_15080__$1 = function() {
                    var statearr_15085 = state_15080;
                    statearr_15085[10] = inst_15052;
                    return statearr_15085;
                  }();
                  var statearr_15086_15107 = state_15080__$1;
                  statearr_15086_15107[2] = null;
                  statearr_15086_15107[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15081 === 4) {
                    var inst_15052 = state_15080[10];
                    var state_15080__$1 = state_15080;
                    return cljs.core.async.ioc_alts_BANG_.call(null, state_15080__$1, 7, inst_15052);
                  } else {
                    if (state_val_15081 === 6) {
                      var inst_15076 = state_15080[2];
                      var state_15080__$1 = state_15080;
                      var statearr_15087_15108 = state_15080__$1;
                      statearr_15087_15108[2] = inst_15076;
                      statearr_15087_15108[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15081 === 3) {
                        var inst_15078 = state_15080[2];
                        var state_15080__$1 = state_15080;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15080__$1, inst_15078);
                      } else {
                        if (state_val_15081 === 2) {
                          var inst_15052 = state_15080[10];
                          var inst_15054 = cljs.core.count.call(null, inst_15052);
                          var inst_15055 = inst_15054 > 0;
                          var state_15080__$1 = state_15080;
                          if (cljs.core.truth_(inst_15055)) {
                            var statearr_15089_15109 = state_15080__$1;
                            statearr_15089_15109[1] = 4;
                          } else {
                            var statearr_15090_15110 = state_15080__$1;
                            statearr_15090_15110[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15081 === 11) {
                            var inst_15052 = state_15080[10];
                            var inst_15069 = state_15080[2];
                            var tmp15088 = inst_15052;
                            var inst_15052__$1 = tmp15088;
                            var state_15080__$1 = function() {
                              var statearr_15091 = state_15080;
                              statearr_15091[11] = inst_15069;
                              statearr_15091[10] = inst_15052__$1;
                              return statearr_15091;
                            }();
                            var statearr_15092_15111 = state_15080__$1;
                            statearr_15092_15111[2] = null;
                            statearr_15092_15111[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_15081 === 9) {
                              var inst_15060 = state_15080[7];
                              var state_15080__$1 = state_15080;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15080__$1, 11, out, inst_15060);
                            } else {
                              if (state_val_15081 === 5) {
                                var inst_15074 = cljs.core.async.close_BANG_.call(null, out);
                                var state_15080__$1 = state_15080;
                                var statearr_15093_15112 = state_15080__$1;
                                statearr_15093_15112[2] = inst_15074;
                                statearr_15093_15112[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_15081 === 10) {
                                  var inst_15072 = state_15080[2];
                                  var state_15080__$1 = state_15080;
                                  var statearr_15094_15113 = state_15080__$1;
                                  statearr_15094_15113[2] = inst_15072;
                                  statearr_15094_15113[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15081 === 8) {
                                    var inst_15060 = state_15080[7];
                                    var inst_15061 = state_15080[9];
                                    var inst_15059 = state_15080[8];
                                    var inst_15052 = state_15080[10];
                                    var inst_15064 = function() {
                                      var c = inst_15061;
                                      var v = inst_15060;
                                      var vec__15057 = inst_15059;
                                      var cs = inst_15052;
                                      return function(c, v, vec__15057, cs, inst_15060, inst_15061, inst_15059, inst_15052, state_val_15081, c__6881__auto___15104, out) {
                                        return function(p1__14997_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__14997_SHARP_);
                                        };
                                      }(c, v, vec__15057, cs, inst_15060, inst_15061, inst_15059, inst_15052, state_val_15081, c__6881__auto___15104, out);
                                    }();
                                    var inst_15065 = cljs.core.filterv.call(null, inst_15064, inst_15052);
                                    var inst_15052__$1 = inst_15065;
                                    var state_15080__$1 = function() {
                                      var statearr_15095 = state_15080;
                                      statearr_15095[10] = inst_15052__$1;
                                      return statearr_15095;
                                    }();
                                    var statearr_15096_15114 = state_15080__$1;
                                    statearr_15096_15114[2] = null;
                                    statearr_15096_15114[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6881__auto___15104, out);
          return function(switch__6825__auto__, c__6881__auto___15104, out) {
            return function() {
              var cljs$core$async$merge_$_state_machine__6826__auto__ = null;
              var cljs$core$async$merge_$_state_machine__6826__auto____0 = function() {
                var statearr_15100 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_15100[0] = cljs$core$async$merge_$_state_machine__6826__auto__;
                statearr_15100[1] = 1;
                return statearr_15100;
              };
              var cljs$core$async$merge_$_state_machine__6826__auto____1 = function(state_15080) {
                while (true) {
                  var ret_value__6827__auto__ = function() {
                    try {
                      while (true) {
                        var result__6828__auto__ = switch__6825__auto__.call(null, state_15080);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6828__auto__;
                        }
                        break;
                      }
                    } catch (e15101) {
                      if (e15101 instanceof Object) {
                        var ex__6829__auto__ = e15101;
                        var statearr_15102_15115 = state_15080;
                        statearr_15102_15115[5] = ex__6829__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15080);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e15101;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__15116 = state_15080;
                    state_15080 = G__15116;
                    continue;
                  } else {
                    return ret_value__6827__auto__;
                  }
                  break;
                }
              };
              cljs$core$async$merge_$_state_machine__6826__auto__ = function(state_15080) {
                switch(arguments.length) {
                  case 0:
                    return cljs$core$async$merge_$_state_machine__6826__auto____0.call(this);
                  case 1:
                    return cljs$core$async$merge_$_state_machine__6826__auto____1.call(this, state_15080);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              cljs$core$async$merge_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$merge_$_state_machine__6826__auto____0;
              cljs$core$async$merge_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$merge_$_state_machine__6826__auto____1;
              return cljs$core$async$merge_$_state_machine__6826__auto__;
            }();
          }(switch__6825__auto__, c__6881__auto___15104, out);
        }();
        var state__6883__auto__ = function() {
          var statearr_15103 = f__6882__auto__.call(null);
          statearr_15103[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto___15104;
          return statearr_15103;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
      };
    }(c__6881__auto___15104, out));
    return out;
  };
  cljs$core$async$merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return cljs$core$async$merge__1.call(this, chs);
      case 2:
        return cljs$core$async$merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$merge.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$merge__1;
  cljs$core$async$merge.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$merge__2;
  return cljs$core$async$merge;
}();
cljs.core.async.into = function cljs$core$async$into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var cljs$core$async$take = null;
  var cljs$core$async$take__2 = function(n, ch) {
    return cljs$core$async$take.call(null, n, ch, null);
  };
  var cljs$core$async$take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6881__auto___15209 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto___15209, out) {
      return function() {
        var f__6882__auto__ = function() {
          var switch__6825__auto__ = function(c__6881__auto___15209, out) {
            return function(state_15186) {
              var state_val_15187 = state_15186[1];
              if (state_val_15187 === 7) {
                var inst_15168 = state_15186[7];
                var inst_15168__$1 = state_15186[2];
                var inst_15169 = inst_15168__$1 == null;
                var inst_15170 = cljs.core.not.call(null, inst_15169);
                var state_15186__$1 = function() {
                  var statearr_15188 = state_15186;
                  statearr_15188[7] = inst_15168__$1;
                  return statearr_15188;
                }();
                if (inst_15170) {
                  var statearr_15189_15210 = state_15186__$1;
                  statearr_15189_15210[1] = 8;
                } else {
                  var statearr_15190_15211 = state_15186__$1;
                  statearr_15190_15211[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15187 === 1) {
                  var inst_15163 = 0;
                  var state_15186__$1 = function() {
                    var statearr_15191 = state_15186;
                    statearr_15191[8] = inst_15163;
                    return statearr_15191;
                  }();
                  var statearr_15192_15212 = state_15186__$1;
                  statearr_15192_15212[2] = null;
                  statearr_15192_15212[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15187 === 4) {
                    var state_15186__$1 = state_15186;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15186__$1, 7, ch);
                  } else {
                    if (state_val_15187 === 6) {
                      var inst_15181 = state_15186[2];
                      var state_15186__$1 = state_15186;
                      var statearr_15193_15213 = state_15186__$1;
                      statearr_15193_15213[2] = inst_15181;
                      statearr_15193_15213[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15187 === 3) {
                        var inst_15183 = state_15186[2];
                        var inst_15184 = cljs.core.async.close_BANG_.call(null, out);
                        var state_15186__$1 = function() {
                          var statearr_15194 = state_15186;
                          statearr_15194[9] = inst_15183;
                          return statearr_15194;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15186__$1, inst_15184);
                      } else {
                        if (state_val_15187 === 2) {
                          var inst_15163 = state_15186[8];
                          var inst_15165 = inst_15163 < n;
                          var state_15186__$1 = state_15186;
                          if (cljs.core.truth_(inst_15165)) {
                            var statearr_15195_15214 = state_15186__$1;
                            statearr_15195_15214[1] = 4;
                          } else {
                            var statearr_15196_15215 = state_15186__$1;
                            statearr_15196_15215[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15187 === 11) {
                            var inst_15163 = state_15186[8];
                            var inst_15173 = state_15186[2];
                            var inst_15174 = inst_15163 + 1;
                            var inst_15163__$1 = inst_15174;
                            var state_15186__$1 = function() {
                              var statearr_15197 = state_15186;
                              statearr_15197[10] = inst_15173;
                              statearr_15197[8] = inst_15163__$1;
                              return statearr_15197;
                            }();
                            var statearr_15198_15216 = state_15186__$1;
                            statearr_15198_15216[2] = null;
                            statearr_15198_15216[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_15187 === 9) {
                              var state_15186__$1 = state_15186;
                              var statearr_15199_15217 = state_15186__$1;
                              statearr_15199_15217[2] = null;
                              statearr_15199_15217[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_15187 === 5) {
                                var state_15186__$1 = state_15186;
                                var statearr_15200_15218 = state_15186__$1;
                                statearr_15200_15218[2] = null;
                                statearr_15200_15218[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_15187 === 10) {
                                  var inst_15178 = state_15186[2];
                                  var state_15186__$1 = state_15186;
                                  var statearr_15201_15219 = state_15186__$1;
                                  statearr_15201_15219[2] = inst_15178;
                                  statearr_15201_15219[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15187 === 8) {
                                    var inst_15168 = state_15186[7];
                                    var state_15186__$1 = state_15186;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15186__$1, 11, out, inst_15168);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6881__auto___15209, out);
          return function(switch__6825__auto__, c__6881__auto___15209, out) {
            return function() {
              var cljs$core$async$take_$_state_machine__6826__auto__ = null;
              var cljs$core$async$take_$_state_machine__6826__auto____0 = function() {
                var statearr_15205 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_15205[0] = cljs$core$async$take_$_state_machine__6826__auto__;
                statearr_15205[1] = 1;
                return statearr_15205;
              };
              var cljs$core$async$take_$_state_machine__6826__auto____1 = function(state_15186) {
                while (true) {
                  var ret_value__6827__auto__ = function() {
                    try {
                      while (true) {
                        var result__6828__auto__ = switch__6825__auto__.call(null, state_15186);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6828__auto__;
                        }
                        break;
                      }
                    } catch (e15206) {
                      if (e15206 instanceof Object) {
                        var ex__6829__auto__ = e15206;
                        var statearr_15207_15220 = state_15186;
                        statearr_15207_15220[5] = ex__6829__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15186);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e15206;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__15221 = state_15186;
                    state_15186 = G__15221;
                    continue;
                  } else {
                    return ret_value__6827__auto__;
                  }
                  break;
                }
              };
              cljs$core$async$take_$_state_machine__6826__auto__ = function(state_15186) {
                switch(arguments.length) {
                  case 0:
                    return cljs$core$async$take_$_state_machine__6826__auto____0.call(this);
                  case 1:
                    return cljs$core$async$take_$_state_machine__6826__auto____1.call(this, state_15186);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              cljs$core$async$take_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$take_$_state_machine__6826__auto____0;
              cljs$core$async$take_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$take_$_state_machine__6826__auto____1;
              return cljs$core$async$take_$_state_machine__6826__auto__;
            }();
          }(switch__6825__auto__, c__6881__auto___15209, out);
        }();
        var state__6883__auto__ = function() {
          var statearr_15208 = f__6882__auto__.call(null);
          statearr_15208[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto___15209;
          return statearr_15208;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
      };
    }(c__6881__auto___15209, out));
    return out;
  };
  cljs$core$async$take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return cljs$core$async$take__2.call(this, n, ch);
      case 3:
        return cljs$core$async$take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$take.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$take__2;
  cljs$core$async$take.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$take__3;
  return cljs$core$async$take;
}();
cljs.core.async.map_LT_ = function cljs$core$async$map_LT_(f, ch) {
  if (typeof cljs.core.async.t15229 !== "undefined") {
  } else {
    cljs.core.async.t15229 = function(ch, f, map_LT_, meta15230) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta15230 = meta15230;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t15229.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t15229.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t15229.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t15229.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t15232 !== "undefined") {
        } else {
          cljs.core.async.t15232 = function(fn1, _, meta15230, map_LT_, f, ch, meta15233) {
            this.fn1 = fn1;
            this._ = _;
            this.meta15230 = meta15230;
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta15233 = meta15233;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t15232.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t15232.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t15232.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__15222_SHARP_) {
                  return f1.call(null, p1__15222_SHARP_ == null ? null : self__.f.call(null, p1__15222_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t15232.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_15234) {
              var self__ = this;
              var _15234__$1 = this;
              return self__.meta15233;
            };
          }(___$1);
          cljs.core.async.t15232.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_15234, meta15233__$1) {
              var self__ = this;
              var _15234__$1 = this;
              return new cljs.core.async.t15232(self__.fn1, self__._, self__.meta15230, self__.map_LT_, self__.f, self__.ch, meta15233__$1);
            };
          }(___$1);
          cljs.core.async.t15232.cljs$lang$type = true;
          cljs.core.async.t15232.cljs$lang$ctorStr = "cljs.core.async/t15232";
          cljs.core.async.t15232.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
              return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async/t15232");
            };
          }(___$1);
          cljs.core.async.__GT_t15232 = function(___$1) {
            return function cljs$core$async$map_LT__$___GT_t15232(fn1__$1, ___$2, meta15230__$1, map_LT___$1, f__$1, ch__$1, meta15233) {
              return new cljs.core.async.t15232(fn1__$1, ___$2, meta15230__$1, map_LT___$1, f__$1, ch__$1, meta15233);
            };
          }(___$1);
        }
        return new cljs.core.async.t15232(fn1, ___$1, self__.meta15230, self__.map_LT_, self__.f, self__.ch, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__4097__auto__ = ret;
        if (cljs.core.truth_(and__4097__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__4097__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t15229.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t15229.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t15229.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t15229.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15231) {
      var self__ = this;
      var _15231__$1 = this;
      return self__.meta15230;
    };
    cljs.core.async.t15229.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15231, meta15230__$1) {
      var self__ = this;
      var _15231__$1 = this;
      return new cljs.core.async.t15229(self__.ch, self__.f, self__.map_LT_, meta15230__$1);
    };
    cljs.core.async.t15229.cljs$lang$type = true;
    cljs.core.async.t15229.cljs$lang$ctorStr = "cljs.core.async/t15229";
    cljs.core.async.t15229.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
      return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async/t15229");
    };
    cljs.core.async.__GT_t15229 = function cljs$core$async$map_LT__$___GT_t15229(ch__$1, f__$1, map_LT___$1, meta15230) {
      return new cljs.core.async.t15229(ch__$1, f__$1, map_LT___$1, meta15230);
    };
  }
  return new cljs.core.async.t15229(ch, f, cljs$core$async$map_LT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function cljs$core$async$map_GT_(f, ch) {
  if (typeof cljs.core.async.t15238 !== "undefined") {
  } else {
    cljs.core.async.t15238 = function(ch, f, map_GT_, meta15239) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta15239 = meta15239;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t15238.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t15238.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t15238.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t15238.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t15238.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t15238.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t15238.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15240) {
      var self__ = this;
      var _15240__$1 = this;
      return self__.meta15239;
    };
    cljs.core.async.t15238.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15240, meta15239__$1) {
      var self__ = this;
      var _15240__$1 = this;
      return new cljs.core.async.t15238(self__.ch, self__.f, self__.map_GT_, meta15239__$1);
    };
    cljs.core.async.t15238.cljs$lang$type = true;
    cljs.core.async.t15238.cljs$lang$ctorStr = "cljs.core.async/t15238";
    cljs.core.async.t15238.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
      return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async/t15238");
    };
    cljs.core.async.__GT_t15238 = function cljs$core$async$map_GT__$___GT_t15238(ch__$1, f__$1, map_GT___$1, meta15239) {
      return new cljs.core.async.t15238(ch__$1, f__$1, map_GT___$1, meta15239);
    };
  }
  return new cljs.core.async.t15238(ch, f, cljs$core$async$map_GT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function cljs$core$async$filter_GT_(p, ch) {
  if (typeof cljs.core.async.t15244 !== "undefined") {
  } else {
    cljs.core.async.t15244 = function(ch, p, filter_GT_, meta15245) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta15245 = meta15245;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t15244.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t15244.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t15244.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t15244.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t15244.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t15244.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t15244.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t15244.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15246) {
      var self__ = this;
      var _15246__$1 = this;
      return self__.meta15245;
    };
    cljs.core.async.t15244.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15246, meta15245__$1) {
      var self__ = this;
      var _15246__$1 = this;
      return new cljs.core.async.t15244(self__.ch, self__.p, self__.filter_GT_, meta15245__$1);
    };
    cljs.core.async.t15244.cljs$lang$type = true;
    cljs.core.async.t15244.cljs$lang$ctorStr = "cljs.core.async/t15244";
    cljs.core.async.t15244.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
      return cljs.core._write.call(null, writer__4689__auto__, "cljs.core.async/t15244");
    };
    cljs.core.async.__GT_t15244 = function cljs$core$async$filter_GT__$___GT_t15244(ch__$1, p__$1, filter_GT___$1, meta15245) {
      return new cljs.core.async.t15244(ch__$1, p__$1, filter_GT___$1, meta15245);
    };
  }
  return new cljs.core.async.t15244(ch, p, cljs$core$async$filter_GT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function cljs$core$async$remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var cljs$core$async$filter_LT_ = null;
  var cljs$core$async$filter_LT___2 = function(p, ch) {
    return cljs$core$async$filter_LT_.call(null, p, ch, null);
  };
  var cljs$core$async$filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6881__auto___15329 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto___15329, out) {
      return function() {
        var f__6882__auto__ = function() {
          var switch__6825__auto__ = function(c__6881__auto___15329, out) {
            return function(state_15308) {
              var state_val_15309 = state_15308[1];
              if (state_val_15309 === 7) {
                var inst_15304 = state_15308[2];
                var state_15308__$1 = state_15308;
                var statearr_15310_15330 = state_15308__$1;
                statearr_15310_15330[2] = inst_15304;
                statearr_15310_15330[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15309 === 1) {
                  var state_15308__$1 = state_15308;
                  var statearr_15311_15331 = state_15308__$1;
                  statearr_15311_15331[2] = null;
                  statearr_15311_15331[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15309 === 4) {
                    var inst_15290 = state_15308[7];
                    var inst_15290__$1 = state_15308[2];
                    var inst_15291 = inst_15290__$1 == null;
                    var state_15308__$1 = function() {
                      var statearr_15312 = state_15308;
                      statearr_15312[7] = inst_15290__$1;
                      return statearr_15312;
                    }();
                    if (cljs.core.truth_(inst_15291)) {
                      var statearr_15313_15332 = state_15308__$1;
                      statearr_15313_15332[1] = 5;
                    } else {
                      var statearr_15314_15333 = state_15308__$1;
                      statearr_15314_15333[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15309 === 6) {
                      var inst_15290 = state_15308[7];
                      var inst_15295 = p.call(null, inst_15290);
                      var state_15308__$1 = state_15308;
                      if (cljs.core.truth_(inst_15295)) {
                        var statearr_15315_15334 = state_15308__$1;
                        statearr_15315_15334[1] = 8;
                      } else {
                        var statearr_15316_15335 = state_15308__$1;
                        statearr_15316_15335[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15309 === 3) {
                        var inst_15306 = state_15308[2];
                        var state_15308__$1 = state_15308;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15308__$1, inst_15306);
                      } else {
                        if (state_val_15309 === 2) {
                          var state_15308__$1 = state_15308;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15308__$1, 4, ch);
                        } else {
                          if (state_val_15309 === 11) {
                            var inst_15298 = state_15308[2];
                            var state_15308__$1 = state_15308;
                            var statearr_15317_15336 = state_15308__$1;
                            statearr_15317_15336[2] = inst_15298;
                            statearr_15317_15336[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_15309 === 9) {
                              var state_15308__$1 = state_15308;
                              var statearr_15318_15337 = state_15308__$1;
                              statearr_15318_15337[2] = null;
                              statearr_15318_15337[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_15309 === 5) {
                                var inst_15293 = cljs.core.async.close_BANG_.call(null, out);
                                var state_15308__$1 = state_15308;
                                var statearr_15319_15338 = state_15308__$1;
                                statearr_15319_15338[2] = inst_15293;
                                statearr_15319_15338[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_15309 === 10) {
                                  var inst_15301 = state_15308[2];
                                  var state_15308__$1 = function() {
                                    var statearr_15320 = state_15308;
                                    statearr_15320[8] = inst_15301;
                                    return statearr_15320;
                                  }();
                                  var statearr_15321_15339 = state_15308__$1;
                                  statearr_15321_15339[2] = null;
                                  statearr_15321_15339[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15309 === 8) {
                                    var inst_15290 = state_15308[7];
                                    var state_15308__$1 = state_15308;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15308__$1, 11, out, inst_15290);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6881__auto___15329, out);
          return function(switch__6825__auto__, c__6881__auto___15329, out) {
            return function() {
              var cljs$core$async$filter_LT__$_state_machine__6826__auto__ = null;
              var cljs$core$async$filter_LT__$_state_machine__6826__auto____0 = function() {
                var statearr_15325 = [null, null, null, null, null, null, null, null, null];
                statearr_15325[0] = cljs$core$async$filter_LT__$_state_machine__6826__auto__;
                statearr_15325[1] = 1;
                return statearr_15325;
              };
              var cljs$core$async$filter_LT__$_state_machine__6826__auto____1 = function(state_15308) {
                while (true) {
                  var ret_value__6827__auto__ = function() {
                    try {
                      while (true) {
                        var result__6828__auto__ = switch__6825__auto__.call(null, state_15308);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6828__auto__;
                        }
                        break;
                      }
                    } catch (e15326) {
                      if (e15326 instanceof Object) {
                        var ex__6829__auto__ = e15326;
                        var statearr_15327_15340 = state_15308;
                        statearr_15327_15340[5] = ex__6829__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15308);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e15326;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__15341 = state_15308;
                    state_15308 = G__15341;
                    continue;
                  } else {
                    return ret_value__6827__auto__;
                  }
                  break;
                }
              };
              cljs$core$async$filter_LT__$_state_machine__6826__auto__ = function(state_15308) {
                switch(arguments.length) {
                  case 0:
                    return cljs$core$async$filter_LT__$_state_machine__6826__auto____0.call(this);
                  case 1:
                    return cljs$core$async$filter_LT__$_state_machine__6826__auto____1.call(this, state_15308);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              cljs$core$async$filter_LT__$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$filter_LT__$_state_machine__6826__auto____0;
              cljs$core$async$filter_LT__$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$filter_LT__$_state_machine__6826__auto____1;
              return cljs$core$async$filter_LT__$_state_machine__6826__auto__;
            }();
          }(switch__6825__auto__, c__6881__auto___15329, out);
        }();
        var state__6883__auto__ = function() {
          var statearr_15328 = f__6882__auto__.call(null);
          statearr_15328[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto___15329;
          return statearr_15328;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
      };
    }(c__6881__auto___15329, out));
    return out;
  };
  cljs$core$async$filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return cljs$core$async$filter_LT___2.call(this, p, ch);
      case 3:
        return cljs$core$async$filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$filter_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$filter_LT___2;
  cljs$core$async$filter_LT_.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$filter_LT___3;
  return cljs$core$async$filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var cljs$core$async$remove_LT_ = null;
  var cljs$core$async$remove_LT___2 = function(p, ch) {
    return cljs$core$async$remove_LT_.call(null, p, ch, null);
  };
  var cljs$core$async$remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  cljs$core$async$remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return cljs$core$async$remove_LT___2.call(this, p, ch);
      case 3:
        return cljs$core$async$remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$remove_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$remove_LT___2;
  cljs$core$async$remove_LT_.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$remove_LT___3;
  return cljs$core$async$remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function cljs$core$async$mapcat_STAR_(f, in$, out) {
  var c__6881__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto__) {
    return function() {
      var f__6882__auto__ = function() {
        var switch__6825__auto__ = function(c__6881__auto__) {
          return function(state_15507) {
            var state_val_15508 = state_15507[1];
            if (state_val_15508 === 7) {
              var inst_15503 = state_15507[2];
              var state_15507__$1 = state_15507;
              var statearr_15509_15550 = state_15507__$1;
              statearr_15509_15550[2] = inst_15503;
              statearr_15509_15550[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_15508 === 20) {
                var inst_15473 = state_15507[7];
                var inst_15484 = state_15507[2];
                var inst_15485 = cljs.core.next.call(null, inst_15473);
                var inst_15459 = inst_15485;
                var inst_15460 = null;
                var inst_15461 = 0;
                var inst_15462 = 0;
                var state_15507__$1 = function() {
                  var statearr_15510 = state_15507;
                  statearr_15510[8] = inst_15484;
                  statearr_15510[9] = inst_15460;
                  statearr_15510[10] = inst_15461;
                  statearr_15510[11] = inst_15459;
                  statearr_15510[12] = inst_15462;
                  return statearr_15510;
                }();
                var statearr_15511_15551 = state_15507__$1;
                statearr_15511_15551[2] = null;
                statearr_15511_15551[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15508 === 1) {
                  var state_15507__$1 = state_15507;
                  var statearr_15512_15552 = state_15507__$1;
                  statearr_15512_15552[2] = null;
                  statearr_15512_15552[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15508 === 4) {
                    var inst_15448 = state_15507[13];
                    var inst_15448__$1 = state_15507[2];
                    var inst_15449 = inst_15448__$1 == null;
                    var state_15507__$1 = function() {
                      var statearr_15513 = state_15507;
                      statearr_15513[13] = inst_15448__$1;
                      return statearr_15513;
                    }();
                    if (cljs.core.truth_(inst_15449)) {
                      var statearr_15514_15553 = state_15507__$1;
                      statearr_15514_15553[1] = 5;
                    } else {
                      var statearr_15515_15554 = state_15507__$1;
                      statearr_15515_15554[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15508 === 15) {
                      var state_15507__$1 = state_15507;
                      var statearr_15519_15555 = state_15507__$1;
                      statearr_15519_15555[2] = null;
                      statearr_15519_15555[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15508 === 21) {
                        var state_15507__$1 = state_15507;
                        var statearr_15520_15556 = state_15507__$1;
                        statearr_15520_15556[2] = null;
                        statearr_15520_15556[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_15508 === 13) {
                          var inst_15460 = state_15507[9];
                          var inst_15461 = state_15507[10];
                          var inst_15459 = state_15507[11];
                          var inst_15462 = state_15507[12];
                          var inst_15469 = state_15507[2];
                          var inst_15470 = inst_15462 + 1;
                          var tmp15516 = inst_15460;
                          var tmp15517 = inst_15461;
                          var tmp15518 = inst_15459;
                          var inst_15459__$1 = tmp15518;
                          var inst_15460__$1 = tmp15516;
                          var inst_15461__$1 = tmp15517;
                          var inst_15462__$1 = inst_15470;
                          var state_15507__$1 = function() {
                            var statearr_15521 = state_15507;
                            statearr_15521[9] = inst_15460__$1;
                            statearr_15521[10] = inst_15461__$1;
                            statearr_15521[11] = inst_15459__$1;
                            statearr_15521[12] = inst_15462__$1;
                            statearr_15521[14] = inst_15469;
                            return statearr_15521;
                          }();
                          var statearr_15522_15557 = state_15507__$1;
                          statearr_15522_15557[2] = null;
                          statearr_15522_15557[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15508 === 22) {
                            var state_15507__$1 = state_15507;
                            var statearr_15523_15558 = state_15507__$1;
                            statearr_15523_15558[2] = null;
                            statearr_15523_15558[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_15508 === 6) {
                              var inst_15448 = state_15507[13];
                              var inst_15457 = f.call(null, inst_15448);
                              var inst_15458 = cljs.core.seq.call(null, inst_15457);
                              var inst_15459 = inst_15458;
                              var inst_15460 = null;
                              var inst_15461 = 0;
                              var inst_15462 = 0;
                              var state_15507__$1 = function() {
                                var statearr_15524 = state_15507;
                                statearr_15524[9] = inst_15460;
                                statearr_15524[10] = inst_15461;
                                statearr_15524[11] = inst_15459;
                                statearr_15524[12] = inst_15462;
                                return statearr_15524;
                              }();
                              var statearr_15525_15559 = state_15507__$1;
                              statearr_15525_15559[2] = null;
                              statearr_15525_15559[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_15508 === 17) {
                                var inst_15473 = state_15507[7];
                                var inst_15477 = cljs.core.chunk_first.call(null, inst_15473);
                                var inst_15478 = cljs.core.chunk_rest.call(null, inst_15473);
                                var inst_15479 = cljs.core.count.call(null, inst_15477);
                                var inst_15459 = inst_15478;
                                var inst_15460 = inst_15477;
                                var inst_15461 = inst_15479;
                                var inst_15462 = 0;
                                var state_15507__$1 = function() {
                                  var statearr_15526 = state_15507;
                                  statearr_15526[9] = inst_15460;
                                  statearr_15526[10] = inst_15461;
                                  statearr_15526[11] = inst_15459;
                                  statearr_15526[12] = inst_15462;
                                  return statearr_15526;
                                }();
                                var statearr_15527_15560 = state_15507__$1;
                                statearr_15527_15560[2] = null;
                                statearr_15527_15560[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_15508 === 3) {
                                  var inst_15505 = state_15507[2];
                                  var state_15507__$1 = state_15507;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15507__$1, inst_15505);
                                } else {
                                  if (state_val_15508 === 12) {
                                    var inst_15493 = state_15507[2];
                                    var state_15507__$1 = state_15507;
                                    var statearr_15528_15561 = state_15507__$1;
                                    statearr_15528_15561[2] = inst_15493;
                                    statearr_15528_15561[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_15508 === 2) {
                                      var state_15507__$1 = state_15507;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15507__$1, 4, in$);
                                    } else {
                                      if (state_val_15508 === 23) {
                                        var inst_15501 = state_15507[2];
                                        var state_15507__$1 = state_15507;
                                        var statearr_15529_15562 = state_15507__$1;
                                        statearr_15529_15562[2] = inst_15501;
                                        statearr_15529_15562[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_15508 === 19) {
                                          var inst_15488 = state_15507[2];
                                          var state_15507__$1 = state_15507;
                                          var statearr_15530_15563 = state_15507__$1;
                                          statearr_15530_15563[2] = inst_15488;
                                          statearr_15530_15563[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_15508 === 11) {
                                            var inst_15473 = state_15507[7];
                                            var inst_15459 = state_15507[11];
                                            var inst_15473__$1 = cljs.core.seq.call(null, inst_15459);
                                            var state_15507__$1 = function() {
                                              var statearr_15531 = state_15507;
                                              statearr_15531[7] = inst_15473__$1;
                                              return statearr_15531;
                                            }();
                                            if (inst_15473__$1) {
                                              var statearr_15532_15564 = state_15507__$1;
                                              statearr_15532_15564[1] = 14;
                                            } else {
                                              var statearr_15533_15565 = state_15507__$1;
                                              statearr_15533_15565[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_15508 === 9) {
                                              var inst_15495 = state_15507[2];
                                              var inst_15496 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_15507__$1 = function() {
                                                var statearr_15534 = state_15507;
                                                statearr_15534[15] = inst_15495;
                                                return statearr_15534;
                                              }();
                                              if (cljs.core.truth_(inst_15496)) {
                                                var statearr_15535_15566 = state_15507__$1;
                                                statearr_15535_15566[1] = 21;
                                              } else {
                                                var statearr_15536_15567 = state_15507__$1;
                                                statearr_15536_15567[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_15508 === 5) {
                                                var inst_15451 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_15507__$1 = state_15507;
                                                var statearr_15537_15568 = state_15507__$1;
                                                statearr_15537_15568[2] = inst_15451;
                                                statearr_15537_15568[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_15508 === 14) {
                                                  var inst_15473 = state_15507[7];
                                                  var inst_15475 = cljs.core.chunked_seq_QMARK_.call(null, inst_15473);
                                                  var state_15507__$1 = state_15507;
                                                  if (inst_15475) {
                                                    var statearr_15538_15569 = state_15507__$1;
                                                    statearr_15538_15569[1] = 17;
                                                  } else {
                                                    var statearr_15539_15570 = state_15507__$1;
                                                    statearr_15539_15570[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_15508 === 16) {
                                                    var inst_15491 = state_15507[2];
                                                    var state_15507__$1 = state_15507;
                                                    var statearr_15540_15571 = state_15507__$1;
                                                    statearr_15540_15571[2] = inst_15491;
                                                    statearr_15540_15571[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_15508 === 10) {
                                                      var inst_15460 = state_15507[9];
                                                      var inst_15462 = state_15507[12];
                                                      var inst_15467 = cljs.core._nth.call(null, inst_15460, inst_15462);
                                                      var state_15507__$1 = state_15507;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15507__$1, 13, out, inst_15467);
                                                    } else {
                                                      if (state_val_15508 === 18) {
                                                        var inst_15473 = state_15507[7];
                                                        var inst_15482 = cljs.core.first.call(null, inst_15473);
                                                        var state_15507__$1 = state_15507;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15507__$1, 20, out, inst_15482);
                                                      } else {
                                                        if (state_val_15508 === 8) {
                                                          var inst_15461 = state_15507[10];
                                                          var inst_15462 = state_15507[12];
                                                          var inst_15464 = inst_15462 < inst_15461;
                                                          var inst_15465 = inst_15464;
                                                          var state_15507__$1 = state_15507;
                                                          if (cljs.core.truth_(inst_15465)) {
                                                            var statearr_15541_15572 = state_15507__$1;
                                                            statearr_15541_15572[1] = 10;
                                                          } else {
                                                            var statearr_15542_15573 = state_15507__$1;
                                                            statearr_15542_15573[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6881__auto__);
        return function(switch__6825__auto__, c__6881__auto__) {
          return function() {
            var cljs$core$async$mapcat_STAR__$_state_machine__6826__auto__ = null;
            var cljs$core$async$mapcat_STAR__$_state_machine__6826__auto____0 = function() {
              var statearr_15546 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_15546[0] = cljs$core$async$mapcat_STAR__$_state_machine__6826__auto__;
              statearr_15546[1] = 1;
              return statearr_15546;
            };
            var cljs$core$async$mapcat_STAR__$_state_machine__6826__auto____1 = function(state_15507) {
              while (true) {
                var ret_value__6827__auto__ = function() {
                  try {
                    while (true) {
                      var result__6828__auto__ = switch__6825__auto__.call(null, state_15507);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6828__auto__;
                      }
                      break;
                    }
                  } catch (e15547) {
                    if (e15547 instanceof Object) {
                      var ex__6829__auto__ = e15547;
                      var statearr_15548_15574 = state_15507;
                      statearr_15548_15574[5] = ex__6829__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15507);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e15547;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__15575 = state_15507;
                  state_15507 = G__15575;
                  continue;
                } else {
                  return ret_value__6827__auto__;
                }
                break;
              }
            };
            cljs$core$async$mapcat_STAR__$_state_machine__6826__auto__ = function(state_15507) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mapcat_STAR__$_state_machine__6826__auto____0.call(this);
                case 1:
                  return cljs$core$async$mapcat_STAR__$_state_machine__6826__auto____1.call(this, state_15507);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mapcat_STAR__$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mapcat_STAR__$_state_machine__6826__auto____0;
            cljs$core$async$mapcat_STAR__$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mapcat_STAR__$_state_machine__6826__auto____1;
            return cljs$core$async$mapcat_STAR__$_state_machine__6826__auto__;
          }();
        }(switch__6825__auto__, c__6881__auto__);
      }();
      var state__6883__auto__ = function() {
        var statearr_15549 = f__6882__auto__.call(null);
        statearr_15549[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto__;
        return statearr_15549;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
    };
  }(c__6881__auto__));
  return c__6881__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var cljs$core$async$mapcat_LT_ = null;
  var cljs$core$async$mapcat_LT___2 = function(f, in$) {
    return cljs$core$async$mapcat_LT_.call(null, f, in$, null);
  };
  var cljs$core$async$mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  cljs$core$async$mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return cljs$core$async$mapcat_LT___2.call(this, f, in$);
      case 3:
        return cljs$core$async$mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$mapcat_LT___2;
  cljs$core$async$mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$mapcat_LT___3;
  return cljs$core$async$mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var cljs$core$async$mapcat_GT_ = null;
  var cljs$core$async$mapcat_GT___2 = function(f, out) {
    return cljs$core$async$mapcat_GT_.call(null, f, out, null);
  };
  var cljs$core$async$mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  cljs$core$async$mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return cljs$core$async$mapcat_GT___2.call(this, f, out);
      case 3:
        return cljs$core$async$mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$mapcat_GT___2;
  cljs$core$async$mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$mapcat_GT___3;
  return cljs$core$async$mapcat_GT_;
}();
cljs.core.async.unique = function() {
  var cljs$core$async$unique = null;
  var cljs$core$async$unique__1 = function(ch) {
    return cljs$core$async$unique.call(null, ch, null);
  };
  var cljs$core$async$unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6881__auto___15672 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto___15672, out) {
      return function() {
        var f__6882__auto__ = function() {
          var switch__6825__auto__ = function(c__6881__auto___15672, out) {
            return function(state_15647) {
              var state_val_15648 = state_15647[1];
              if (state_val_15648 === 7) {
                var inst_15642 = state_15647[2];
                var state_15647__$1 = state_15647;
                var statearr_15649_15673 = state_15647__$1;
                statearr_15649_15673[2] = inst_15642;
                statearr_15649_15673[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15648 === 1) {
                  var inst_15624 = null;
                  var state_15647__$1 = function() {
                    var statearr_15650 = state_15647;
                    statearr_15650[7] = inst_15624;
                    return statearr_15650;
                  }();
                  var statearr_15651_15674 = state_15647__$1;
                  statearr_15651_15674[2] = null;
                  statearr_15651_15674[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15648 === 4) {
                    var inst_15627 = state_15647[8];
                    var inst_15627__$1 = state_15647[2];
                    var inst_15628 = inst_15627__$1 == null;
                    var inst_15629 = cljs.core.not.call(null, inst_15628);
                    var state_15647__$1 = function() {
                      var statearr_15652 = state_15647;
                      statearr_15652[8] = inst_15627__$1;
                      return statearr_15652;
                    }();
                    if (inst_15629) {
                      var statearr_15653_15675 = state_15647__$1;
                      statearr_15653_15675[1] = 5;
                    } else {
                      var statearr_15654_15676 = state_15647__$1;
                      statearr_15654_15676[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15648 === 6) {
                      var state_15647__$1 = state_15647;
                      var statearr_15655_15677 = state_15647__$1;
                      statearr_15655_15677[2] = null;
                      statearr_15655_15677[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15648 === 3) {
                        var inst_15644 = state_15647[2];
                        var inst_15645 = cljs.core.async.close_BANG_.call(null, out);
                        var state_15647__$1 = function() {
                          var statearr_15656 = state_15647;
                          statearr_15656[9] = inst_15644;
                          return statearr_15656;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15647__$1, inst_15645);
                      } else {
                        if (state_val_15648 === 2) {
                          var state_15647__$1 = state_15647;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15647__$1, 4, ch);
                        } else {
                          if (state_val_15648 === 11) {
                            var inst_15627 = state_15647[8];
                            var inst_15636 = state_15647[2];
                            var inst_15624 = inst_15627;
                            var state_15647__$1 = function() {
                              var statearr_15657 = state_15647;
                              statearr_15657[7] = inst_15624;
                              statearr_15657[10] = inst_15636;
                              return statearr_15657;
                            }();
                            var statearr_15658_15678 = state_15647__$1;
                            statearr_15658_15678[2] = null;
                            statearr_15658_15678[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_15648 === 9) {
                              var inst_15627 = state_15647[8];
                              var state_15647__$1 = state_15647;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15647__$1, 11, out, inst_15627);
                            } else {
                              if (state_val_15648 === 5) {
                                var inst_15624 = state_15647[7];
                                var inst_15627 = state_15647[8];
                                var inst_15631 = cljs.core._EQ_.call(null, inst_15627, inst_15624);
                                var state_15647__$1 = state_15647;
                                if (inst_15631) {
                                  var statearr_15660_15679 = state_15647__$1;
                                  statearr_15660_15679[1] = 8;
                                } else {
                                  var statearr_15661_15680 = state_15647__$1;
                                  statearr_15661_15680[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_15648 === 10) {
                                  var inst_15639 = state_15647[2];
                                  var state_15647__$1 = state_15647;
                                  var statearr_15662_15681 = state_15647__$1;
                                  statearr_15662_15681[2] = inst_15639;
                                  statearr_15662_15681[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15648 === 8) {
                                    var inst_15624 = state_15647[7];
                                    var tmp15659 = inst_15624;
                                    var inst_15624__$1 = tmp15659;
                                    var state_15647__$1 = function() {
                                      var statearr_15663 = state_15647;
                                      statearr_15663[7] = inst_15624__$1;
                                      return statearr_15663;
                                    }();
                                    var statearr_15664_15682 = state_15647__$1;
                                    statearr_15664_15682[2] = null;
                                    statearr_15664_15682[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6881__auto___15672, out);
          return function(switch__6825__auto__, c__6881__auto___15672, out) {
            return function() {
              var cljs$core$async$unique_$_state_machine__6826__auto__ = null;
              var cljs$core$async$unique_$_state_machine__6826__auto____0 = function() {
                var statearr_15668 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_15668[0] = cljs$core$async$unique_$_state_machine__6826__auto__;
                statearr_15668[1] = 1;
                return statearr_15668;
              };
              var cljs$core$async$unique_$_state_machine__6826__auto____1 = function(state_15647) {
                while (true) {
                  var ret_value__6827__auto__ = function() {
                    try {
                      while (true) {
                        var result__6828__auto__ = switch__6825__auto__.call(null, state_15647);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6828__auto__;
                        }
                        break;
                      }
                    } catch (e15669) {
                      if (e15669 instanceof Object) {
                        var ex__6829__auto__ = e15669;
                        var statearr_15670_15683 = state_15647;
                        statearr_15670_15683[5] = ex__6829__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15647);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e15669;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__15684 = state_15647;
                    state_15647 = G__15684;
                    continue;
                  } else {
                    return ret_value__6827__auto__;
                  }
                  break;
                }
              };
              cljs$core$async$unique_$_state_machine__6826__auto__ = function(state_15647) {
                switch(arguments.length) {
                  case 0:
                    return cljs$core$async$unique_$_state_machine__6826__auto____0.call(this);
                  case 1:
                    return cljs$core$async$unique_$_state_machine__6826__auto____1.call(this, state_15647);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              cljs$core$async$unique_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$unique_$_state_machine__6826__auto____0;
              cljs$core$async$unique_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$unique_$_state_machine__6826__auto____1;
              return cljs$core$async$unique_$_state_machine__6826__auto__;
            }();
          }(switch__6825__auto__, c__6881__auto___15672, out);
        }();
        var state__6883__auto__ = function() {
          var statearr_15671 = f__6882__auto__.call(null);
          statearr_15671[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto___15672;
          return statearr_15671;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
      };
    }(c__6881__auto___15672, out));
    return out;
  };
  cljs$core$async$unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return cljs$core$async$unique__1.call(this, ch);
      case 2:
        return cljs$core$async$unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$unique.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$unique__1;
  cljs$core$async$unique.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$unique__2;
  return cljs$core$async$unique;
}();
cljs.core.async.partition = function() {
  var cljs$core$async$partition = null;
  var cljs$core$async$partition__2 = function(n, ch) {
    return cljs$core$async$partition.call(null, n, ch, null);
  };
  var cljs$core$async$partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6881__auto___15819 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto___15819, out) {
      return function() {
        var f__6882__auto__ = function() {
          var switch__6825__auto__ = function(c__6881__auto___15819, out) {
            return function(state_15789) {
              var state_val_15790 = state_15789[1];
              if (state_val_15790 === 7) {
                var inst_15785 = state_15789[2];
                var state_15789__$1 = state_15789;
                var statearr_15791_15820 = state_15789__$1;
                statearr_15791_15820[2] = inst_15785;
                statearr_15791_15820[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15790 === 1) {
                  var inst_15752 = new Array(n);
                  var inst_15753 = inst_15752;
                  var inst_15754 = 0;
                  var state_15789__$1 = function() {
                    var statearr_15792 = state_15789;
                    statearr_15792[7] = inst_15753;
                    statearr_15792[8] = inst_15754;
                    return statearr_15792;
                  }();
                  var statearr_15793_15821 = state_15789__$1;
                  statearr_15793_15821[2] = null;
                  statearr_15793_15821[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15790 === 4) {
                    var inst_15757 = state_15789[9];
                    var inst_15757__$1 = state_15789[2];
                    var inst_15758 = inst_15757__$1 == null;
                    var inst_15759 = cljs.core.not.call(null, inst_15758);
                    var state_15789__$1 = function() {
                      var statearr_15794 = state_15789;
                      statearr_15794[9] = inst_15757__$1;
                      return statearr_15794;
                    }();
                    if (inst_15759) {
                      var statearr_15795_15822 = state_15789__$1;
                      statearr_15795_15822[1] = 5;
                    } else {
                      var statearr_15796_15823 = state_15789__$1;
                      statearr_15796_15823[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15790 === 15) {
                      var inst_15779 = state_15789[2];
                      var state_15789__$1 = state_15789;
                      var statearr_15797_15824 = state_15789__$1;
                      statearr_15797_15824[2] = inst_15779;
                      statearr_15797_15824[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15790 === 13) {
                        var state_15789__$1 = state_15789;
                        var statearr_15798_15825 = state_15789__$1;
                        statearr_15798_15825[2] = null;
                        statearr_15798_15825[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_15790 === 6) {
                          var inst_15754 = state_15789[8];
                          var inst_15775 = inst_15754 > 0;
                          var state_15789__$1 = state_15789;
                          if (cljs.core.truth_(inst_15775)) {
                            var statearr_15799_15826 = state_15789__$1;
                            statearr_15799_15826[1] = 12;
                          } else {
                            var statearr_15800_15827 = state_15789__$1;
                            statearr_15800_15827[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15790 === 3) {
                            var inst_15787 = state_15789[2];
                            var state_15789__$1 = state_15789;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15789__$1, inst_15787);
                          } else {
                            if (state_val_15790 === 12) {
                              var inst_15753 = state_15789[7];
                              var inst_15777 = cljs.core.vec.call(null, inst_15753);
                              var state_15789__$1 = state_15789;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15789__$1, 15, out, inst_15777);
                            } else {
                              if (state_val_15790 === 2) {
                                var state_15789__$1 = state_15789;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15789__$1, 4, ch);
                              } else {
                                if (state_val_15790 === 11) {
                                  var inst_15769 = state_15789[2];
                                  var inst_15770 = new Array(n);
                                  var inst_15753 = inst_15770;
                                  var inst_15754 = 0;
                                  var state_15789__$1 = function() {
                                    var statearr_15801 = state_15789;
                                    statearr_15801[7] = inst_15753;
                                    statearr_15801[8] = inst_15754;
                                    statearr_15801[10] = inst_15769;
                                    return statearr_15801;
                                  }();
                                  var statearr_15802_15828 = state_15789__$1;
                                  statearr_15802_15828[2] = null;
                                  statearr_15802_15828[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15790 === 9) {
                                    var inst_15753 = state_15789[7];
                                    var inst_15767 = cljs.core.vec.call(null, inst_15753);
                                    var state_15789__$1 = state_15789;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15789__$1, 11, out, inst_15767);
                                  } else {
                                    if (state_val_15790 === 5) {
                                      var inst_15753 = state_15789[7];
                                      var inst_15757 = state_15789[9];
                                      var inst_15754 = state_15789[8];
                                      var inst_15762 = state_15789[11];
                                      var inst_15761 = inst_15753[inst_15754] = inst_15757;
                                      var inst_15762__$1 = inst_15754 + 1;
                                      var inst_15763 = inst_15762__$1 < n;
                                      var state_15789__$1 = function() {
                                        var statearr_15803 = state_15789;
                                        statearr_15803[12] = inst_15761;
                                        statearr_15803[11] = inst_15762__$1;
                                        return statearr_15803;
                                      }();
                                      if (cljs.core.truth_(inst_15763)) {
                                        var statearr_15804_15829 = state_15789__$1;
                                        statearr_15804_15829[1] = 8;
                                      } else {
                                        var statearr_15805_15830 = state_15789__$1;
                                        statearr_15805_15830[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_15790 === 14) {
                                        var inst_15782 = state_15789[2];
                                        var inst_15783 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_15789__$1 = function() {
                                          var statearr_15807 = state_15789;
                                          statearr_15807[13] = inst_15782;
                                          return statearr_15807;
                                        }();
                                        var statearr_15808_15831 = state_15789__$1;
                                        statearr_15808_15831[2] = inst_15783;
                                        statearr_15808_15831[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_15790 === 10) {
                                          var inst_15773 = state_15789[2];
                                          var state_15789__$1 = state_15789;
                                          var statearr_15809_15832 = state_15789__$1;
                                          statearr_15809_15832[2] = inst_15773;
                                          statearr_15809_15832[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_15790 === 8) {
                                            var inst_15753 = state_15789[7];
                                            var inst_15762 = state_15789[11];
                                            var tmp15806 = inst_15753;
                                            var inst_15753__$1 = tmp15806;
                                            var inst_15754 = inst_15762;
                                            var state_15789__$1 = function() {
                                              var statearr_15810 = state_15789;
                                              statearr_15810[7] = inst_15753__$1;
                                              statearr_15810[8] = inst_15754;
                                              return statearr_15810;
                                            }();
                                            var statearr_15811_15833 = state_15789__$1;
                                            statearr_15811_15833[2] = null;
                                            statearr_15811_15833[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6881__auto___15819, out);
          return function(switch__6825__auto__, c__6881__auto___15819, out) {
            return function() {
              var cljs$core$async$partition_$_state_machine__6826__auto__ = null;
              var cljs$core$async$partition_$_state_machine__6826__auto____0 = function() {
                var statearr_15815 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_15815[0] = cljs$core$async$partition_$_state_machine__6826__auto__;
                statearr_15815[1] = 1;
                return statearr_15815;
              };
              var cljs$core$async$partition_$_state_machine__6826__auto____1 = function(state_15789) {
                while (true) {
                  var ret_value__6827__auto__ = function() {
                    try {
                      while (true) {
                        var result__6828__auto__ = switch__6825__auto__.call(null, state_15789);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6828__auto__;
                        }
                        break;
                      }
                    } catch (e15816) {
                      if (e15816 instanceof Object) {
                        var ex__6829__auto__ = e15816;
                        var statearr_15817_15834 = state_15789;
                        statearr_15817_15834[5] = ex__6829__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15789);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e15816;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__15835 = state_15789;
                    state_15789 = G__15835;
                    continue;
                  } else {
                    return ret_value__6827__auto__;
                  }
                  break;
                }
              };
              cljs$core$async$partition_$_state_machine__6826__auto__ = function(state_15789) {
                switch(arguments.length) {
                  case 0:
                    return cljs$core$async$partition_$_state_machine__6826__auto____0.call(this);
                  case 1:
                    return cljs$core$async$partition_$_state_machine__6826__auto____1.call(this, state_15789);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              cljs$core$async$partition_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$partition_$_state_machine__6826__auto____0;
              cljs$core$async$partition_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$partition_$_state_machine__6826__auto____1;
              return cljs$core$async$partition_$_state_machine__6826__auto__;
            }();
          }(switch__6825__auto__, c__6881__auto___15819, out);
        }();
        var state__6883__auto__ = function() {
          var statearr_15818 = f__6882__auto__.call(null);
          statearr_15818[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto___15819;
          return statearr_15818;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
      };
    }(c__6881__auto___15819, out));
    return out;
  };
  cljs$core$async$partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return cljs$core$async$partition__2.call(this, n, ch);
      case 3:
        return cljs$core$async$partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$partition.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$partition__2;
  cljs$core$async$partition.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$partition__3;
  return cljs$core$async$partition;
}();
cljs.core.async.partition_by = function() {
  var cljs$core$async$partition_by = null;
  var cljs$core$async$partition_by__2 = function(f, ch) {
    return cljs$core$async$partition_by.call(null, f, ch, null);
  };
  var cljs$core$async$partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6881__auto___15978 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto___15978, out) {
      return function() {
        var f__6882__auto__ = function() {
          var switch__6825__auto__ = function(c__6881__auto___15978, out) {
            return function(state_15948) {
              var state_val_15949 = state_15948[1];
              if (state_val_15949 === 7) {
                var inst_15944 = state_15948[2];
                var state_15948__$1 = state_15948;
                var statearr_15950_15979 = state_15948__$1;
                statearr_15950_15979[2] = inst_15944;
                statearr_15950_15979[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15949 === 1) {
                  var inst_15907 = [];
                  var inst_15908 = inst_15907;
                  var inst_15909 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_15948__$1 = function() {
                    var statearr_15951 = state_15948;
                    statearr_15951[7] = inst_15909;
                    statearr_15951[8] = inst_15908;
                    return statearr_15951;
                  }();
                  var statearr_15952_15980 = state_15948__$1;
                  statearr_15952_15980[2] = null;
                  statearr_15952_15980[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15949 === 4) {
                    var inst_15912 = state_15948[9];
                    var inst_15912__$1 = state_15948[2];
                    var inst_15913 = inst_15912__$1 == null;
                    var inst_15914 = cljs.core.not.call(null, inst_15913);
                    var state_15948__$1 = function() {
                      var statearr_15953 = state_15948;
                      statearr_15953[9] = inst_15912__$1;
                      return statearr_15953;
                    }();
                    if (inst_15914) {
                      var statearr_15954_15981 = state_15948__$1;
                      statearr_15954_15981[1] = 5;
                    } else {
                      var statearr_15955_15982 = state_15948__$1;
                      statearr_15955_15982[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15949 === 15) {
                      var inst_15938 = state_15948[2];
                      var state_15948__$1 = state_15948;
                      var statearr_15956_15983 = state_15948__$1;
                      statearr_15956_15983[2] = inst_15938;
                      statearr_15956_15983[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15949 === 13) {
                        var state_15948__$1 = state_15948;
                        var statearr_15957_15984 = state_15948__$1;
                        statearr_15957_15984[2] = null;
                        statearr_15957_15984[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_15949 === 6) {
                          var inst_15908 = state_15948[8];
                          var inst_15933 = inst_15908.length;
                          var inst_15934 = inst_15933 > 0;
                          var state_15948__$1 = state_15948;
                          if (cljs.core.truth_(inst_15934)) {
                            var statearr_15958_15985 = state_15948__$1;
                            statearr_15958_15985[1] = 12;
                          } else {
                            var statearr_15959_15986 = state_15948__$1;
                            statearr_15959_15986[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15949 === 3) {
                            var inst_15946 = state_15948[2];
                            var state_15948__$1 = state_15948;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15948__$1, inst_15946);
                          } else {
                            if (state_val_15949 === 12) {
                              var inst_15908 = state_15948[8];
                              var inst_15936 = cljs.core.vec.call(null, inst_15908);
                              var state_15948__$1 = state_15948;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15948__$1, 15, out, inst_15936);
                            } else {
                              if (state_val_15949 === 2) {
                                var state_15948__$1 = state_15948;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15948__$1, 4, ch);
                              } else {
                                if (state_val_15949 === 11) {
                                  var inst_15916 = state_15948[10];
                                  var inst_15912 = state_15948[9];
                                  var inst_15926 = state_15948[2];
                                  var inst_15927 = [];
                                  var inst_15928 = inst_15927.push(inst_15912);
                                  var inst_15908 = inst_15927;
                                  var inst_15909 = inst_15916;
                                  var state_15948__$1 = function() {
                                    var statearr_15960 = state_15948;
                                    statearr_15960[7] = inst_15909;
                                    statearr_15960[11] = inst_15928;
                                    statearr_15960[8] = inst_15908;
                                    statearr_15960[12] = inst_15926;
                                    return statearr_15960;
                                  }();
                                  var statearr_15961_15987 = state_15948__$1;
                                  statearr_15961_15987[2] = null;
                                  statearr_15961_15987[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15949 === 9) {
                                    var inst_15908 = state_15948[8];
                                    var inst_15924 = cljs.core.vec.call(null, inst_15908);
                                    var state_15948__$1 = state_15948;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15948__$1, 11, out, inst_15924);
                                  } else {
                                    if (state_val_15949 === 5) {
                                      var inst_15916 = state_15948[10];
                                      var inst_15909 = state_15948[7];
                                      var inst_15912 = state_15948[9];
                                      var inst_15916__$1 = f.call(null, inst_15912);
                                      var inst_15917 = cljs.core._EQ_.call(null, inst_15916__$1, inst_15909);
                                      var inst_15918 = cljs.core.keyword_identical_QMARK_.call(null, inst_15909, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_15919 = inst_15917 || inst_15918;
                                      var state_15948__$1 = function() {
                                        var statearr_15962 = state_15948;
                                        statearr_15962[10] = inst_15916__$1;
                                        return statearr_15962;
                                      }();
                                      if (cljs.core.truth_(inst_15919)) {
                                        var statearr_15963_15988 = state_15948__$1;
                                        statearr_15963_15988[1] = 8;
                                      } else {
                                        var statearr_15964_15989 = state_15948__$1;
                                        statearr_15964_15989[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_15949 === 14) {
                                        var inst_15941 = state_15948[2];
                                        var inst_15942 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_15948__$1 = function() {
                                          var statearr_15966 = state_15948;
                                          statearr_15966[13] = inst_15941;
                                          return statearr_15966;
                                        }();
                                        var statearr_15967_15990 = state_15948__$1;
                                        statearr_15967_15990[2] = inst_15942;
                                        statearr_15967_15990[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_15949 === 10) {
                                          var inst_15931 = state_15948[2];
                                          var state_15948__$1 = state_15948;
                                          var statearr_15968_15991 = state_15948__$1;
                                          statearr_15968_15991[2] = inst_15931;
                                          statearr_15968_15991[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_15949 === 8) {
                                            var inst_15916 = state_15948[10];
                                            var inst_15912 = state_15948[9];
                                            var inst_15908 = state_15948[8];
                                            var inst_15921 = inst_15908.push(inst_15912);
                                            var tmp15965 = inst_15908;
                                            var inst_15908__$1 = tmp15965;
                                            var inst_15909 = inst_15916;
                                            var state_15948__$1 = function() {
                                              var statearr_15969 = state_15948;
                                              statearr_15969[7] = inst_15909;
                                              statearr_15969[8] = inst_15908__$1;
                                              statearr_15969[14] = inst_15921;
                                              return statearr_15969;
                                            }();
                                            var statearr_15970_15992 = state_15948__$1;
                                            statearr_15970_15992[2] = null;
                                            statearr_15970_15992[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6881__auto___15978, out);
          return function(switch__6825__auto__, c__6881__auto___15978, out) {
            return function() {
              var cljs$core$async$partition_by_$_state_machine__6826__auto__ = null;
              var cljs$core$async$partition_by_$_state_machine__6826__auto____0 = function() {
                var statearr_15974 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_15974[0] = cljs$core$async$partition_by_$_state_machine__6826__auto__;
                statearr_15974[1] = 1;
                return statearr_15974;
              };
              var cljs$core$async$partition_by_$_state_machine__6826__auto____1 = function(state_15948) {
                while (true) {
                  var ret_value__6827__auto__ = function() {
                    try {
                      while (true) {
                        var result__6828__auto__ = switch__6825__auto__.call(null, state_15948);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6828__auto__;
                        }
                        break;
                      }
                    } catch (e15975) {
                      if (e15975 instanceof Object) {
                        var ex__6829__auto__ = e15975;
                        var statearr_15976_15993 = state_15948;
                        statearr_15976_15993[5] = ex__6829__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15948);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e15975;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__15994 = state_15948;
                    state_15948 = G__15994;
                    continue;
                  } else {
                    return ret_value__6827__auto__;
                  }
                  break;
                }
              };
              cljs$core$async$partition_by_$_state_machine__6826__auto__ = function(state_15948) {
                switch(arguments.length) {
                  case 0:
                    return cljs$core$async$partition_by_$_state_machine__6826__auto____0.call(this);
                  case 1:
                    return cljs$core$async$partition_by_$_state_machine__6826__auto____1.call(this, state_15948);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              cljs$core$async$partition_by_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$partition_by_$_state_machine__6826__auto____0;
              cljs$core$async$partition_by_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$partition_by_$_state_machine__6826__auto____1;
              return cljs$core$async$partition_by_$_state_machine__6826__auto__;
            }();
          }(switch__6825__auto__, c__6881__auto___15978, out);
        }();
        var state__6883__auto__ = function() {
          var statearr_15977 = f__6882__auto__.call(null);
          statearr_15977[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto___15978;
          return statearr_15977;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
      };
    }(c__6881__auto___15978, out));
    return out;
  };
  cljs$core$async$partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return cljs$core$async$partition_by__2.call(this, f, ch);
      case 3:
        return cljs$core$async$partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$async$partition_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$async$partition_by__2;
  cljs$core$async$partition_by.cljs$core$IFn$_invoke$arity$3 = cljs$core$async$partition_by__3;
  return cljs$core$async$partition_by;
}();
goog.provide("centipair.core.style");
goog.require("cljs.core");
centipair.core.style.input_container_control = "pure-controls";
centipair.core.style.input_container_control_class_error = "pure-controls validation-error";
centipair.core.style.input_container_class = "pure-control-group";
centipair.core.style.input_container_class_error = "pure-control-group validation-error";
centipair.core.style.disabled_primary_button_class = "pure-button pure-button-primary pure-button-disabled";
centipair.core.style.primary_button_class = "pure-button pure-button-primary";
centipair.core.style.bootstrap_input_container_class = "form-group";
centipair.core.style.bootstrap_input_container_class_error = "form-group has-error";
centipair.core.style.bootstrap_form_horizontal = "form-horizontal";
centipair.core.style.boostrap_input_class = "form-control";
centipair.core.style.bootstrap_primary_button_class = "btn btn-primary";
goog.provide("centipair.core.components.editor");
goog.require("cljs.core");
goog.require("centipair.core.utilities.dom");
goog.require("centipair.core.style");
goog.require("cljs.core.async");
goog.require("markdown.core");
centipair.core.components.editor.markdown_html_channel = cljs.core.async.chan.call(null);
centipair.core.components.editor.markdown_html_preview = function centipair$core$components$editor$markdown_html_preview(field) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), (new cljs.core.Keyword(null, "html", "html", -998796897)).cljs$core$IFn$_invoke$arity$1(field)], null);
};
centipair.core.components.editor.update_markdown_value = function centipair$core$components$editor$update_markdown_value(field, value) {
  cljs.core.reset_BANG_.call(null, field, cljs.core.assoc.call(null, cljs.core.deref.call(null, field), new cljs.core.Keyword(null, "value", "value", 305978217), value));
  return cljs.core.async.put_BANG_.call(null, centipair.core.components.editor.markdown_html_channel, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [field, value], null));
};
centipair.core.components.editor.generate_preview = function centipair$core$components$editor$generate_preview(field_value_group) {
  var field = cljs.core.first.call(null, field_value_group);
  var value = cljs.core.second.call(null, field_value_group);
  cljs.core.reset_BANG_.call(null, field, cljs.core.assoc.call(null, cljs.core.deref.call(null, field), new cljs.core.Keyword(null, "html", "html", -998796897), markdown.core.md__GT_html.call(null, safe_tags_regex(value))));
  return centipair.core.utilities.dom.innerHtml.call(null, "markdown-preview", (new cljs.core.Keyword(null, "html", "html", -998796897)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)));
};
centipair.core.components.editor.markdown_editor = function centipair$core$components$editor$markdown_editor(field) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "nav nav-tabs"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "li", "li", 723558921), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "active", new cljs.core.Keyword(null, "role", "role", -736691072), "presentation"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "href", "href", -793805698), "#md-editor", new cljs.core.Keyword(null, "aria-controls", 
  "aria-controls", -1872379154), "md-editor", new cljs.core.Keyword(null, "role", "role", -736691072), "tab", new cljs.core.Keyword(null, "data-toggle", "data-toggle", 436966687), "tab"], null), "Editor"], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "", new cljs.core.Keyword(null, "role", "role", 
  -736691072), "presentation"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "href", "href", -793805698), "#md-preview", new cljs.core.Keyword(null, "aria-controls", "aria-controls", -1872379154), "md-preview", new cljs.core.Keyword(null, "role", "role", -736691072), "tab", new cljs.core.Keyword(null, "data-toggle", "data-toggle", 
  436966687), "tab"], null), "Preview"], null)], null)], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "tab-content"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 
  3, [new cljs.core.Keyword(null, "class", "class", -2030961996), "tab-pane active", new cljs.core.Keyword(null, "role", "role", -736691072), "tab-panel", new cljs.core.Keyword(null, "id", "id", -1388402092), "md-editor"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), (new cljs.core.Keyword(null, "class-name", 
  "class-name", 945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? centipair.core.style.bootstrap_input_container_class : (new cljs.core.Keyword(null, "class-name", "class-name", 945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("container-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field)))].join("")], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "for", "for", -1323786319), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "class", "class", -2030961996), "control-label", new cljs.core.Keyword(null, "key", 
  "key", -1516042587), [cljs.core.str("label-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), new cljs.core.PersistentArrayMap(null, 
  8, [new cljs.core.Keyword(null, "class", "class", -2030961996), "form-control", new cljs.core.Keyword(null, "type", "type", 1174270348), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), 
  (new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? "" : (new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "rows", "rows", 850049680), "25", new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field)), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), function(p1__12060_SHARP_) {
    return centipair.core.components.editor.update_markdown_value.call(null, field, p1__12060_SHARP_.target.value);
  }, new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "message-label", new cljs.core.Keyword(null, "key", "key", 
  -1516042587), [cljs.core.str("message-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? "" : (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null)], null)], null), new cljs.core.PersistentVector(null, 
  3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "class", "class", -2030961996), "tab-pane", new cljs.core.Keyword(null, "role", "role", -736691072), "tab-panel", new cljs.core.Keyword(null, "id", "id", -1388402092), "md-preview"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), 
  new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "panel panel-default"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "markdown-preview", new cljs.core.Keyword(null, "class", "class", -2030961996), "panel-body"], null)], null)], null)], null)], null)], 
  null);
};
centipair.core.components.editor.init_markdown_channel = function centipair$core$components$editor$init_markdown_channel() {
  var c__6881__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto__) {
    return function() {
      var f__6882__auto__ = function() {
        var switch__6825__auto__ = function(c__6881__auto__) {
          return function(state_12101) {
            var state_val_12102 = state_12101[1];
            if (state_val_12102 === 7) {
              var inst_12092 = state_12101[2];
              var inst_12093 = centipair.core.components.editor.generate_preview.call(null, inst_12092);
              var state_12101__$1 = function() {
                var statearr_12103 = state_12101;
                statearr_12103[7] = inst_12093;
                return statearr_12103;
              }();
              var statearr_12104_12117 = state_12101__$1;
              statearr_12104_12117[2] = null;
              statearr_12104_12117[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12102 === 6) {
                var inst_12097 = state_12101[2];
                var state_12101__$1 = state_12101;
                var statearr_12105_12118 = state_12101__$1;
                statearr_12105_12118[2] = inst_12097;
                statearr_12105_12118[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12102 === 5) {
                  var state_12101__$1 = state_12101;
                  var statearr_12106_12119 = state_12101__$1;
                  statearr_12106_12119[2] = null;
                  statearr_12106_12119[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12102 === 4) {
                    var state_12101__$1 = state_12101;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12101__$1, 7, centipair.core.components.editor.markdown_html_channel);
                  } else {
                    if (state_val_12102 === 3) {
                      var inst_12099 = state_12101[2];
                      var state_12101__$1 = state_12101;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12101__$1, inst_12099);
                    } else {
                      if (state_val_12102 === 2) {
                        var state_12101__$1 = state_12101;
                        var statearr_12107_12120 = state_12101__$1;
                        statearr_12107_12120[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12102 === 1) {
                          var state_12101__$1 = state_12101;
                          var statearr_12109_12121 = state_12101__$1;
                          statearr_12109_12121[2] = null;
                          statearr_12109_12121[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6881__auto__);
        return function(switch__6825__auto__, c__6881__auto__) {
          return function() {
            var centipair$core$components$editor$init_markdown_channel_$_state_machine__6826__auto__ = null;
            var centipair$core$components$editor$init_markdown_channel_$_state_machine__6826__auto____0 = function() {
              var statearr_12113 = [null, null, null, null, null, null, null, null];
              statearr_12113[0] = centipair$core$components$editor$init_markdown_channel_$_state_machine__6826__auto__;
              statearr_12113[1] = 1;
              return statearr_12113;
            };
            var centipair$core$components$editor$init_markdown_channel_$_state_machine__6826__auto____1 = function(state_12101) {
              while (true) {
                var ret_value__6827__auto__ = function() {
                  try {
                    while (true) {
                      var result__6828__auto__ = switch__6825__auto__.call(null, state_12101);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6828__auto__;
                      }
                      break;
                    }
                  } catch (e12114) {
                    if (e12114 instanceof Object) {
                      var ex__6829__auto__ = e12114;
                      var statearr_12115_12122 = state_12101;
                      statearr_12115_12122[5] = ex__6829__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12101);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12114;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12123 = state_12101;
                  state_12101 = G__12123;
                  continue;
                } else {
                  return ret_value__6827__auto__;
                }
                break;
              }
            };
            centipair$core$components$editor$init_markdown_channel_$_state_machine__6826__auto__ = function(state_12101) {
              switch(arguments.length) {
                case 0:
                  return centipair$core$components$editor$init_markdown_channel_$_state_machine__6826__auto____0.call(this);
                case 1:
                  return centipair$core$components$editor$init_markdown_channel_$_state_machine__6826__auto____1.call(this, state_12101);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            centipair$core$components$editor$init_markdown_channel_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = centipair$core$components$editor$init_markdown_channel_$_state_machine__6826__auto____0;
            centipair$core$components$editor$init_markdown_channel_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = centipair$core$components$editor$init_markdown_channel_$_state_machine__6826__auto____1;
            return centipair$core$components$editor$init_markdown_channel_$_state_machine__6826__auto__;
          }();
        }(switch__6825__auto__, c__6881__auto__);
      }();
      var state__6883__auto__ = function() {
        var statearr_12116 = f__6882__auto__.call(null);
        statearr_12116[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto__;
        return statearr_12116;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
    };
  }(c__6881__auto__));
  return c__6881__auto__;
};
goog.provide("reagent.interop");
goog.require("cljs.core");
goog.provide("reagent.debug");
goog.require("cljs.core");
goog.provide("reagent.impl.util");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("reagent.interop");
goog.require("reagent.debug");
reagent.impl.util.is_client = typeof window !== "undefined" && !(window["document"] == null);
reagent.impl.util.extract_props = function reagent$impl$util$extract_props(v) {
  var p = cljs.core.nth.call(null, v, 1, null);
  if (cljs.core.map_QMARK_.call(null, p)) {
    return p;
  } else {
    return null;
  }
};
reagent.impl.util.extract_children = function reagent$impl$util$extract_children(v) {
  var p = cljs.core.nth.call(null, v, 1, null);
  var first_child = p == null || cljs.core.map_QMARK_.call(null, p) ? 2 : 1;
  if (cljs.core.count.call(null, v) > first_child) {
    return cljs.core.subvec.call(null, v, first_child);
  } else {
    return null;
  }
};
reagent.impl.util.get_argv = function reagent$impl$util$get_argv(c) {
  return c["props"]["argv"];
};
reagent.impl.util.get_props = function reagent$impl$util$get_props(c) {
  return reagent.impl.util.extract_props.call(null, c["props"]["argv"]);
};
reagent.impl.util.get_children = function reagent$impl$util$get_children(c) {
  return reagent.impl.util.extract_children.call(null, c["props"]["argv"]);
};
reagent.impl.util.reagent_component_QMARK_ = function reagent$impl$util$reagent_component_QMARK_(c) {
  return!(c["props"]["argv"] == null);
};
reagent.impl.util.cached_react_class = function reagent$impl$util$cached_react_class(c) {
  return c["cljsReactClass"];
};
reagent.impl.util.cache_react_class = function reagent$impl$util$cache_react_class(c, constructor) {
  return c["cljsReactClass"] = constructor;
};
reagent.impl.util.memoize_1 = function reagent$impl$util$memoize_1(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function(arg) {
      var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), arg);
      if (!(v == null)) {
        return v;
      } else {
        var ret = f.call(null, arg);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, arg, ret);
        return ret;
      }
    };
  }(mem);
};
reagent.impl.util.dont_camel_case = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["aria", null, "data", null], null), null);
reagent.impl.util.capitalize = function reagent$impl$util$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(cljs.core.subs.call(null, s, 1))].join("");
  }
};
reagent.impl.util.dash_to_camel = function reagent$impl$util$dash_to_camel(dashed) {
  if (typeof dashed === "string") {
    return dashed;
  } else {
    var name_str = cljs.core.name.call(null, dashed);
    var vec__12763 = clojure.string.split.call(null, name_str, /-/);
    var start = cljs.core.nth.call(null, vec__12763, 0, null);
    var parts = cljs.core.nthnext.call(null, vec__12763, 1);
    if (cljs.core.truth_(reagent.impl.util.dont_camel_case.call(null, start))) {
      return name_str;
    } else {
      return cljs.core.apply.call(null, cljs.core.str, start, cljs.core.map.call(null, reagent.impl.util.capitalize, parts));
    }
  }
};
reagent.impl.util.partial_ifn = function(f, args, p) {
  this.f = f;
  this.args = args;
  this.p = p;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 6291457;
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f, self__.args], null));
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._EQ_.call(null, self__.f, other.f) && cljs.core._EQ_.call(null, self__.args, other.args);
};
reagent.impl.util.partial_ifn.prototype.call = function() {
  var G__12765__delegate = function(self__, a) {
    var self____$1 = this;
    var _ = self____$1;
    var or__4109__auto___12766 = self__.p;
    if (cljs.core.truth_(or__4109__auto___12766)) {
    } else {
      self__.p = cljs.core.apply.call(null, cljs.core.partial, self__.f, self__.args);
    }
    return cljs.core.apply.call(null, self__.p, a);
  };
  var G__12765 = function(self__, var_args) {
    var self__ = this;
    var a = null;
    if (arguments.length > 1) {
      var G__12767__i = 0, G__12767__a = new Array(arguments.length - 1);
      while (G__12767__i < G__12767__a.length) {
        G__12767__a[G__12767__i] = arguments[G__12767__i + 1];
        ++G__12767__i;
      }
      a = new cljs.core.IndexedSeq(G__12767__a, 0);
    }
    return G__12765__delegate.call(this, self__, a);
  };
  G__12765.cljs$lang$maxFixedArity = 1;
  G__12765.cljs$lang$applyTo = function(arglist__12768) {
    var self__ = cljs.core.first(arglist__12768);
    var a = cljs.core.rest(arglist__12768);
    return G__12765__delegate(self__, a);
  };
  G__12765.cljs$core$IFn$_invoke$arity$variadic = G__12765__delegate;
  return G__12765;
}();
reagent.impl.util.partial_ifn.prototype.apply = function(self__, args12764) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args12764)));
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
  var G__12769__delegate = function(a) {
    var _ = this;
    var or__4109__auto___12770 = self__.p;
    if (cljs.core.truth_(or__4109__auto___12770)) {
    } else {
      self__.p = cljs.core.apply.call(null, cljs.core.partial, self__.f, self__.args);
    }
    return cljs.core.apply.call(null, self__.p, a);
  };
  var G__12769 = function(var_args) {
    var self__ = this;
    var a = null;
    if (arguments.length > 0) {
      var G__12771__i = 0, G__12771__a = new Array(arguments.length - 0);
      while (G__12771__i < G__12771__a.length) {
        G__12771__a[G__12771__i] = arguments[G__12771__i + 0];
        ++G__12771__i;
      }
      a = new cljs.core.IndexedSeq(G__12771__a, 0);
    }
    return G__12769__delegate.call(this, a);
  };
  G__12769.cljs$lang$maxFixedArity = 0;
  G__12769.cljs$lang$applyTo = function(arglist__12772) {
    var a = cljs.core.seq(arglist__12772);
    return G__12769__delegate(a);
  };
  G__12769.cljs$core$IFn$_invoke$arity$variadic = G__12769__delegate;
  return G__12769;
}();
reagent.impl.util.partial_ifn.cljs$lang$type = true;
reagent.impl.util.partial_ifn.cljs$lang$ctorStr = "reagent.impl.util/partial-ifn";
reagent.impl.util.partial_ifn.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "reagent.impl.util/partial-ifn");
};
reagent.impl.util.__GT_partial_ifn = function reagent$impl$util$__GT_partial_ifn(f, args, p) {
  return new reagent.impl.util.partial_ifn(f, args, p);
};
reagent.impl.util.merge_class = function reagent$impl$util$merge_class(p1, p2) {
  var class$ = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(p1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var c1 = temp__4126__auto__;
      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(p2);
      if (cljs.core.truth_(temp__4126__auto____$1)) {
        var c2 = temp__4126__auto____$1;
        return[cljs.core.str(c1), cljs.core.str(" "), cljs.core.str(c2)].join("");
      } else {
        return null;
      }
    } else {
      return null;
    }
  }();
  if (class$ == null) {
    return p2;
  } else {
    return cljs.core.assoc.call(null, p2, new cljs.core.Keyword(null, "class", "class", -2030961996), class$);
  }
};
reagent.impl.util.merge_style = function reagent$impl$util$merge_style(p1, p2) {
  var style = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(p1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var s1 = temp__4126__auto__;
      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(p2);
      if (cljs.core.truth_(temp__4126__auto____$1)) {
        var s2 = temp__4126__auto____$1;
        return cljs.core.merge.call(null, s1, s2);
      } else {
        return null;
      }
    } else {
      return null;
    }
  }();
  if (style == null) {
    return p2;
  } else {
    return cljs.core.assoc.call(null, p2, new cljs.core.Keyword(null, "style", "style", -496642736), style);
  }
};
reagent.impl.util.merge_props = function reagent$impl$util$merge_props(p1, p2) {
  if (p1 == null) {
    return p2;
  } else {
    if (cljs.core.map_QMARK_.call(null, p1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "p1", "p1", 703771573, null))))].join(""));
    }
    return reagent.impl.util.merge_style.call(null, p1, reagent.impl.util.merge_class.call(null, p1, cljs.core.merge.call(null, p1, p2)));
  }
};
reagent.impl.util._STAR_always_update_STAR_ = false;
if (typeof reagent.impl.util.roots !== "undefined") {
} else {
  reagent.impl.util.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
}
reagent.impl.util.clear_container = function reagent$impl$util$clear_container(node) {
  try {
    return React["unmountComponentAtNode"](node);
  } catch (e12774) {
    if (e12774 instanceof Object) {
      var e = e12774;
      if (typeof console !== "undefined") {
        console.warn([cljs.core.str("Warning: "), cljs.core.str("Error unmounting:")].join(""));
      } else {
      }
      if (typeof console !== "undefined") {
        return console.log(e);
      } else {
        return null;
      }
    } else {
      throw e12774;
    }
  }
};
reagent.impl.util.render_component = function reagent$impl$util$render_component(comp, container, callback) {
  try {
    var _STAR_always_update_STAR_12779 = reagent.impl.util._STAR_always_update_STAR_;
    reagent.impl.util._STAR_always_update_STAR_ = true;
    try {
      return React["render"](comp.call(null), container, function(_STAR_always_update_STAR_12779) {
        return function() {
          var _STAR_always_update_STAR_12780 = reagent.impl.util._STAR_always_update_STAR_;
          reagent.impl.util._STAR_always_update_STAR_ = false;
          try {
            cljs.core.swap_BANG_.call(null, reagent.impl.util.roots, cljs.core.assoc, container, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [comp, container], null));
            if (cljs.core.some_QMARK_.call(null, callback)) {
              return callback.call(null);
            } else {
              return null;
            }
          } finally {
            reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR_12780;
          }
        };
      }(_STAR_always_update_STAR_12779));
    } finally {
      reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR_12779;
    }
  } catch (e12778) {
    if (e12778 instanceof Object) {
      var e = e12778;
      reagent.impl.util.clear_container.call(null, container);
      throw e;
    } else {
      throw e12778;
    }
  }
};
reagent.impl.util.re_render_component = function reagent$impl$util$re_render_component(comp, container) {
  return reagent.impl.util.render_component.call(null, comp, container, null);
};
reagent.impl.util.unmount_component_at_node = function reagent$impl$util$unmount_component_at_node(container) {
  cljs.core.swap_BANG_.call(null, reagent.impl.util.roots, cljs.core.dissoc, container);
  return React["unmountComponentAtNode"](container);
};
reagent.impl.util.force_update_all = function reagent$impl$util$force_update_all() {
  var seq__12785_12789 = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.deref.call(null, reagent.impl.util.roots)));
  var chunk__12786_12790 = null;
  var count__12787_12791 = 0;
  var i__12788_12792 = 0;
  while (true) {
    if (i__12788_12792 < count__12787_12791) {
      var v_12793 = cljs.core._nth.call(null, chunk__12786_12790, i__12788_12792);
      cljs.core.apply.call(null, reagent.impl.util.re_render_component, v_12793);
      var G__12794 = seq__12785_12789;
      var G__12795 = chunk__12786_12790;
      var G__12796 = count__12787_12791;
      var G__12797 = i__12788_12792 + 1;
      seq__12785_12789 = G__12794;
      chunk__12786_12790 = G__12795;
      count__12787_12791 = G__12796;
      i__12788_12792 = G__12797;
      continue;
    } else {
      var temp__4126__auto___12798 = cljs.core.seq.call(null, seq__12785_12789);
      if (temp__4126__auto___12798) {
        var seq__12785_12799__$1 = temp__4126__auto___12798;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__12785_12799__$1)) {
          var c__4894__auto___12800 = cljs.core.chunk_first.call(null, seq__12785_12799__$1);
          var G__12801 = cljs.core.chunk_rest.call(null, seq__12785_12799__$1);
          var G__12802 = c__4894__auto___12800;
          var G__12803 = cljs.core.count.call(null, c__4894__auto___12800);
          var G__12804 = 0;
          seq__12785_12789 = G__12801;
          chunk__12786_12790 = G__12802;
          count__12787_12791 = G__12803;
          i__12788_12792 = G__12804;
          continue;
        } else {
          var v_12805 = cljs.core.first.call(null, seq__12785_12799__$1);
          cljs.core.apply.call(null, reagent.impl.util.re_render_component, v_12805);
          var G__12806 = cljs.core.next.call(null, seq__12785_12799__$1);
          var G__12807 = null;
          var G__12808 = 0;
          var G__12809 = 0;
          seq__12785_12789 = G__12806;
          chunk__12786_12790 = G__12807;
          count__12787_12791 = G__12808;
          i__12788_12792 = G__12809;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return "Updated";
};
goog.provide("reagent.ratom");
goog.require("cljs.core");
goog.require("reagent.impl.util");
if (typeof reagent.ratom.debug !== "undefined") {
} else {
  reagent.ratom.debug = false;
}
if (typeof reagent.ratom._running !== "undefined") {
} else {
  reagent.ratom._running = cljs.core.atom.call(null, 0);
}
reagent.ratom.running = function reagent$ratom$running() {
  return cljs.core.deref.call(null, reagent.ratom._running);
};
reagent.ratom.capture_derefed = function reagent$ratom$capture_derefed(f, obj) {
  obj.cljsCaptured = null;
  var _STAR_ratom_context_STAR_12643 = reagent.ratom._STAR_ratom_context_STAR_;
  reagent.ratom._STAR_ratom_context_STAR_ = obj;
  try {
    return f.call(null);
  } finally {
    reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR_12643;
  }
};
reagent.ratom.captured = function reagent$ratom$captured(obj) {
  var c = obj.cljsCaptured;
  obj.cljsCaptured = null;
  return c;
};
reagent.ratom.notify_deref_watcher_BANG_ = function reagent$ratom$notify_deref_watcher_BANG_(derefable) {
  var obj = reagent.ratom._STAR_ratom_context_STAR_;
  if (obj == null) {
    return null;
  } else {
    var captured = obj.cljsCaptured;
    return obj.cljsCaptured = cljs.core.conj.call(null, captured == null ? cljs.core.PersistentHashSet.EMPTY : captured, derefable);
  }
};
reagent.ratom.IReactiveAtom = function() {
  var obj12645 = {};
  return obj12645;
}();
reagent.ratom.RAtom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = true;
reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(a, new_value) {
  var self__ = this;
  var a__$1 = this;
  if (self__.validator == null) {
  } else {
    if (cljs.core.truth_(self__.validator.call(null, new_value))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null))))].join(""));
    }
  }
  var old_value = self__.state;
  self__.state = new_value;
  if (self__.watches == null) {
  } else {
    cljs.core._notify_watches.call(null, a__$1, old_value, new_value);
  }
  return new_value;
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x, y));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f, self__.state, x, y, more));
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.reduce_kv.call(null, function(this$__$1) {
    return function(_, key, f) {
      f.call(null, key, this$__$1, oldval, newval);
      return null;
    };
  }(this$__$1), null, self__.watches);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  reagent.ratom.notify_deref_watcher_BANG_.call(null, this$__$1);
  return self__.state;
};
reagent.ratom.RAtom.cljs$lang$type = true;
reagent.ratom.RAtom.cljs$lang$ctorStr = "reagent.ratom/RAtom";
reagent.ratom.RAtom.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "reagent.ratom/RAtom");
};
reagent.ratom.__GT_RAtom = function reagent$ratom$__GT_RAtom(state, meta, validator, watches) {
  return new reagent.ratom.RAtom(state, meta, validator, watches);
};
reagent.ratom.atom = function() {
  var reagent$ratom$atom = null;
  var reagent$ratom$atom__1 = function(x) {
    return new reagent.ratom.RAtom(x, null, null, null);
  };
  var reagent$ratom$atom__2 = function() {
    var G__12649__delegate = function(x, p__12646) {
      var map__12648 = p__12646;
      var map__12648__$1 = cljs.core.seq_QMARK_.call(null, map__12648) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12648) : map__12648;
      var validator = cljs.core.get.call(null, map__12648__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__12648__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new reagent.ratom.RAtom(x, meta, validator, null);
    };
    var G__12649 = function(x, var_args) {
      var p__12646 = null;
      if (arguments.length > 1) {
        var G__12650__i = 0, G__12650__a = new Array(arguments.length - 1);
        while (G__12650__i < G__12650__a.length) {
          G__12650__a[G__12650__i] = arguments[G__12650__i + 1];
          ++G__12650__i;
        }
        p__12646 = new cljs.core.IndexedSeq(G__12650__a, 0);
      }
      return G__12649__delegate.call(this, x, p__12646);
    };
    G__12649.cljs$lang$maxFixedArity = 1;
    G__12649.cljs$lang$applyTo = function(arglist__12651) {
      var x = cljs.core.first(arglist__12651);
      var p__12646 = cljs.core.rest(arglist__12651);
      return G__12649__delegate(x, p__12646);
    };
    G__12649.cljs$core$IFn$_invoke$arity$variadic = G__12649__delegate;
    return G__12649;
  }();
  reagent$ratom$atom = function(x, var_args) {
    var p__12646 = var_args;
    switch(arguments.length) {
      case 1:
        return reagent$ratom$atom__1.call(this, x);
      default:
        var G__12652 = null;
        if (arguments.length > 1) {
          var G__12653__i = 0, G__12653__a = new Array(arguments.length - 1);
          while (G__12653__i < G__12653__a.length) {
            G__12653__a[G__12653__i] = arguments[G__12653__i + 1];
            ++G__12653__i;
          }
          G__12652 = new cljs.core.IndexedSeq(G__12653__a, 0);
        }
        return reagent$ratom$atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12652);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reagent$ratom$atom.cljs$lang$maxFixedArity = 1;
  reagent$ratom$atom.cljs$lang$applyTo = reagent$ratom$atom__2.cljs$lang$applyTo;
  reagent$ratom$atom.cljs$core$IFn$_invoke$arity$1 = reagent$ratom$atom__1;
  reagent$ratom$atom.cljs$core$IFn$_invoke$arity$variadic = reagent$ratom$atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return reagent$ratom$atom;
}();
reagent.ratom.RCursor = function(ratom, path, reaction) {
  this.ratom = ratom;
  this.path = path;
  this.reaction = reaction;
  this.cljs$lang$protocol_mask$partition0$ = 2153807872;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.RCursor.prototype._reaction = function() {
  var self__ = this;
  var this$ = this;
  if (self__.reaction == null) {
    return self__.reaction = function() {
      var G__12660 = self__.ratom;
      if (G__12660) {
        var bit__4783__auto__ = G__12660.cljs$lang$protocol_mask$partition0$ & 32768;
        if (bit__4783__auto__ || G__12660.cljs$core$IDeref$) {
          return true;
        } else {
          if (!G__12660.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__12660);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__12660);
      }
    }() ? reagent.ratom.make_reaction.call(null, function(this$) {
      return function() {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.ratom), self__.path);
      };
    }(this$), new cljs.core.Keyword(null, "on-set", "on-set", -140953470), cljs.core._EQ_.call(null, self__.path, cljs.core.PersistentVector.EMPTY) ? function(this$) {
      return function(p1__12655_SHARP_, p2__12654_SHARP_) {
        return cljs.core.reset_BANG_.call(null, self__.ratom, p2__12654_SHARP_);
      };
    }(this$) : function(this$) {
      return function(p1__12657_SHARP_, p2__12656_SHARP_) {
        return cljs.core.swap_BANG_.call(null, self__.ratom, cljs.core.assoc_in, self__.path, p2__12656_SHARP_);
      };
    }(this$)) : reagent.ratom.make_reaction.call(null, function(this$) {
      return function() {
        return self__.ratom.call(null, self__.path);
      };
    }(this$), new cljs.core.Keyword(null, "on-set", "on-set", -140953470), function(this$) {
      return function(p1__12659_SHARP_, p2__12658_SHARP_) {
        return self__.ratom.call(null, self__.path, p2__12658_SHARP_);
      };
    }(this$));
  } else {
    return self__.reaction;
  }
};
reagent.ratom.RCursor.prototype._peek = function() {
  var self__ = this;
  var this$ = this;
  var _STAR_ratom_context_STAR_12661 = reagent.ratom._STAR_ratom_context_STAR_;
  reagent.ratom._STAR_ratom_context_STAR_ = null;
  try {
    return cljs.core._deref.call(null, this$._reaction());
  } finally {
    reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR_12661;
  }
};
reagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = true;
reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, [cljs.core.str("#\x3cCursor: "), cljs.core.str(self__.path), cljs.core.str(" ")].join(""));
  cljs.core.pr_writer.call(null, a__$1._peek(), writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom, self__.path], null));
};
reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return other instanceof reagent.ratom.RCursor && cljs.core._EQ_.call(null, self__.path, other.path) && cljs.core._EQ_.call(null, self__.ratom, other.ratom);
};
reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(this$, new_value) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._reset_BANG_.call(null, this$__$1._reaction(), new_value);
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._swap_BANG_.call(null, a__$1._reaction(), f);
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._swap_BANG_.call(null, a__$1._reaction(), f, x);
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._swap_BANG_.call(null, a__$1._reaction(), f, x, y);
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._swap_BANG_.call(null, a__$1._reaction(), f, x, y, more);
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._notify_watches.call(null, this$__$1._reaction(), oldval, newval);
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._add_watch.call(null, this$__$1._reaction(), key, f);
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._remove_watch.call(null, this$__$1._reaction(), key);
};
reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._deref.call(null, this$__$1._reaction());
};
reagent.ratom.RCursor.cljs$lang$type = true;
reagent.ratom.RCursor.cljs$lang$ctorStr = "reagent.ratom/RCursor";
reagent.ratom.RCursor.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "reagent.ratom/RCursor");
};
reagent.ratom.__GT_RCursor = function reagent$ratom$__GT_RCursor(ratom, path, reaction) {
  return new reagent.ratom.RCursor(ratom, path, reaction);
};
reagent.ratom.cursor = function reagent$ratom$cursor(src, path) {
  if (function() {
    var G__12666 = path;
    if (G__12666) {
      var bit__4783__auto__ = G__12666.cljs$lang$protocol_mask$partition0$ & 32768;
      if (bit__4783__auto__ || G__12666.cljs$core$IDeref$) {
        return true;
      } else {
        if (!G__12666.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__12666);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__12666);
    }
  }()) {
    if (typeof console !== "undefined") {
      console.warn([cljs.core.str("Warning: "), cljs.core.str("Calling cursor with an atom as the second arg is "), cljs.core.str("deprecated, in (cursor "), cljs.core.str(src), cljs.core.str(" "), cljs.core.str(cljs.core.pr_str.call(null, path)), cljs.core.str(")")].join(""));
    } else {
    }
    if (function() {
      var G__12667 = path;
      if (G__12667) {
        var bit__4783__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__4109__auto__ = bit__4783__auto__;
          if (cljs.core.truth_(or__4109__auto__)) {
            return or__4109__auto__;
          } else {
            return G__12667.reagent$ratom$IReactiveAtom$;
          }
        }())) {
          return true;
        } else {
          if (!G__12667.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, reagent.ratom.IReactiveAtom, G__12667);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, reagent.ratom.IReactiveAtom, G__12667);
      }
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("src must be a reactive atom, not "), cljs.core.str(cljs.core.pr_str.call(null, path))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IReactiveAtom", "IReactiveAtom", -991158427, null), new cljs.core.Symbol(null, "path", "path", 1452340359, null))))].join(""));
    }
    return new reagent.ratom.RCursor(path, src, null);
  } else {
    if (function() {
      var or__4109__auto__ = function() {
        var G__12669 = src;
        if (G__12669) {
          var bit__4783__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__4109__auto__ = bit__4783__auto__;
            if (cljs.core.truth_(or__4109__auto__)) {
              return or__4109__auto__;
            } else {
              return G__12669.reagent$ratom$IReactiveAtom$;
            }
          }())) {
            return true;
          } else {
            if (!G__12669.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, reagent.ratom.IReactiveAtom, G__12669);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, reagent.ratom.IReactiveAtom, G__12669);
        }
      }();
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        return cljs.core.ifn_QMARK_.call(null, src) && !cljs.core.vector_QMARK_.call(null, src);
      }
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("src must be a reactive atom or a function, not "), cljs.core.str(cljs.core.pr_str.call(null, src))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IReactiveAtom", "IReactiveAtom", -991158427, null), 
      new cljs.core.Symbol(null, "src", "src", -10544524, null)), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "src", "src", -10544524, null)), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null), new cljs.core.Symbol(null, "src", "src", -10544524, null)))))))].join(""));
    }
    return new reagent.ratom.RCursor(src, path, null);
  }
};
reagent.ratom.IDisposable = function() {
  var obj12671 = {};
  return obj12671;
}();
reagent.ratom.dispose_BANG_ = function reagent$ratom$dispose_BANG_(this$) {
  if (function() {
    var and__4097__auto__ = this$;
    if (and__4097__auto__) {
      return this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);
  } else {
    var x__4745__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4109__auto__ = reagent.ratom.dispose_BANG_[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = reagent.ratom.dispose_BANG_["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisposable.dispose!", this$);
        }
      }
    }().call(null, this$);
  }
};
reagent.ratom.IRunnable = function() {
  var obj12673 = {};
  return obj12673;
}();
reagent.ratom.run = function reagent$ratom$run(this$) {
  if (function() {
    var and__4097__auto__ = this$;
    if (and__4097__auto__) {
      return this$.reagent$ratom$IRunnable$run$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return this$.reagent$ratom$IRunnable$run$arity$1(this$);
  } else {
    var x__4745__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4109__auto__ = reagent.ratom.run[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = reagent.ratom.run["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRunnable.run", this$);
        }
      }
    }().call(null, this$);
  }
};
reagent.ratom.IComputedImpl = function() {
  var obj12675 = {};
  return obj12675;
}();
reagent.ratom._update_watching = function reagent$ratom$_update_watching(this$, derefed) {
  if (function() {
    var and__4097__auto__ = this$;
    if (and__4097__auto__) {
      return this$.reagent$ratom$IComputedImpl$_update_watching$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return this$.reagent$ratom$IComputedImpl$_update_watching$arity$2(this$, derefed);
  } else {
    var x__4745__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4109__auto__ = reagent.ratom._update_watching[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = reagent.ratom._update_watching["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComputedImpl.-update-watching", this$);
        }
      }
    }().call(null, this$, derefed);
  }
};
reagent.ratom._handle_change = function reagent$ratom$_handle_change(k, sender, oldval, newval) {
  if (function() {
    var and__4097__auto__ = k;
    if (and__4097__auto__) {
      return k.reagent$ratom$IComputedImpl$_handle_change$arity$4;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return k.reagent$ratom$IComputedImpl$_handle_change$arity$4(k, sender, oldval, newval);
  } else {
    var x__4745__auto__ = k == null ? null : k;
    return function() {
      var or__4109__auto__ = reagent.ratom._handle_change[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = reagent.ratom._handle_change["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComputedImpl.-handle-change", k);
        }
      }
    }().call(null, k, sender, oldval, newval);
  }
};
reagent.ratom._peek_at = function reagent$ratom$_peek_at(this$) {
  if (function() {
    var and__4097__auto__ = this$;
    if (and__4097__auto__) {
      return this$.reagent$ratom$IComputedImpl$_peek_at$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return this$.reagent$ratom$IComputedImpl$_peek_at$arity$1(this$);
  } else {
    var x__4745__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4109__auto__ = reagent.ratom._peek_at[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = reagent.ratom._peek_at["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComputedImpl.-peek-at", this$);
        }
      }
    }().call(null, this$);
  }
};
reagent.ratom.Reaction = function(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose) {
  this.f = f;
  this.state = state;
  this.dirty_QMARK_ = dirty_QMARK_;
  this.active_QMARK_ = active_QMARK_;
  this.watching = watching;
  this.watches = watches;
  this.auto_run = auto_run;
  this.on_set = on_set;
  this.on_dispose = on_dispose;
  this.cljs$lang$protocol_mask$partition0$ = 2153807872;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$_handle_change$arity$4 = function(this$, sender, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4097__auto__ = self__.active_QMARK_;
    if (cljs.core.truth_(and__4097__auto__)) {
      return cljs.core.not.call(null, self__.dirty_QMARK_) && !(oldval === newval);
    } else {
      return and__4097__auto__;
    }
  }())) {
    self__.dirty_QMARK_ = true;
    return function() {
      var or__4109__auto__ = self__.auto_run;
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return reagent.ratom.run;
      }
    }().call(null, this$__$1);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$_update_watching$arity$2 = function(this$, derefed) {
  var self__ = this;
  var this$__$1 = this;
  var seq__12676_12689 = cljs.core.seq.call(null, derefed);
  var chunk__12677_12690 = null;
  var count__12678_12691 = 0;
  var i__12679_12692 = 0;
  while (true) {
    if (i__12679_12692 < count__12678_12691) {
      var w_12693 = cljs.core._nth.call(null, chunk__12677_12690, i__12679_12692);
      if (cljs.core.contains_QMARK_.call(null, self__.watching, w_12693)) {
      } else {
        cljs.core.add_watch.call(null, w_12693, this$__$1, reagent.ratom._handle_change);
      }
      var G__12694 = seq__12676_12689;
      var G__12695 = chunk__12677_12690;
      var G__12696 = count__12678_12691;
      var G__12697 = i__12679_12692 + 1;
      seq__12676_12689 = G__12694;
      chunk__12677_12690 = G__12695;
      count__12678_12691 = G__12696;
      i__12679_12692 = G__12697;
      continue;
    } else {
      var temp__4126__auto___12698 = cljs.core.seq.call(null, seq__12676_12689);
      if (temp__4126__auto___12698) {
        var seq__12676_12699__$1 = temp__4126__auto___12698;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__12676_12699__$1)) {
          var c__4894__auto___12700 = cljs.core.chunk_first.call(null, seq__12676_12699__$1);
          var G__12701 = cljs.core.chunk_rest.call(null, seq__12676_12699__$1);
          var G__12702 = c__4894__auto___12700;
          var G__12703 = cljs.core.count.call(null, c__4894__auto___12700);
          var G__12704 = 0;
          seq__12676_12689 = G__12701;
          chunk__12677_12690 = G__12702;
          count__12678_12691 = G__12703;
          i__12679_12692 = G__12704;
          continue;
        } else {
          var w_12705 = cljs.core.first.call(null, seq__12676_12699__$1);
          if (cljs.core.contains_QMARK_.call(null, self__.watching, w_12705)) {
          } else {
            cljs.core.add_watch.call(null, w_12705, this$__$1, reagent.ratom._handle_change);
          }
          var G__12706 = cljs.core.next.call(null, seq__12676_12699__$1);
          var G__12707 = null;
          var G__12708 = 0;
          var G__12709 = 0;
          seq__12676_12689 = G__12706;
          chunk__12677_12690 = G__12707;
          count__12678_12691 = G__12708;
          i__12679_12692 = G__12709;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__12680_12710 = cljs.core.seq.call(null, self__.watching);
  var chunk__12681_12711 = null;
  var count__12682_12712 = 0;
  var i__12683_12713 = 0;
  while (true) {
    if (i__12683_12713 < count__12682_12712) {
      var w_12714 = cljs.core._nth.call(null, chunk__12681_12711, i__12683_12713);
      if (cljs.core.contains_QMARK_.call(null, derefed, w_12714)) {
      } else {
        cljs.core.remove_watch.call(null, w_12714, this$__$1);
      }
      var G__12715 = seq__12680_12710;
      var G__12716 = chunk__12681_12711;
      var G__12717 = count__12682_12712;
      var G__12718 = i__12683_12713 + 1;
      seq__12680_12710 = G__12715;
      chunk__12681_12711 = G__12716;
      count__12682_12712 = G__12717;
      i__12683_12713 = G__12718;
      continue;
    } else {
      var temp__4126__auto___12719 = cljs.core.seq.call(null, seq__12680_12710);
      if (temp__4126__auto___12719) {
        var seq__12680_12720__$1 = temp__4126__auto___12719;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__12680_12720__$1)) {
          var c__4894__auto___12721 = cljs.core.chunk_first.call(null, seq__12680_12720__$1);
          var G__12722 = cljs.core.chunk_rest.call(null, seq__12680_12720__$1);
          var G__12723 = c__4894__auto___12721;
          var G__12724 = cljs.core.count.call(null, c__4894__auto___12721);
          var G__12725 = 0;
          seq__12680_12710 = G__12722;
          chunk__12681_12711 = G__12723;
          count__12682_12712 = G__12724;
          i__12683_12713 = G__12725;
          continue;
        } else {
          var w_12726 = cljs.core.first.call(null, seq__12680_12720__$1);
          if (cljs.core.contains_QMARK_.call(null, derefed, w_12726)) {
          } else {
            cljs.core.remove_watch.call(null, w_12726, this$__$1);
          }
          var G__12727 = cljs.core.next.call(null, seq__12680_12720__$1);
          var G__12728 = null;
          var G__12729 = 0;
          var G__12730 = 0;
          seq__12680_12710 = G__12727;
          chunk__12681_12711 = G__12728;
          count__12682_12712 = G__12729;
          i__12683_12713 = G__12730;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return self__.watching = derefed;
};
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$_peek_at$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, self__.dirty_QMARK_)) {
    return self__.state;
  } else {
    var _STAR_ratom_context_STAR_12684 = reagent.ratom._STAR_ratom_context_STAR_;
    reagent.ratom._STAR_ratom_context_STAR_ = null;
    try {
      return cljs.core._deref.call(null, this$__$1);
    } finally {
      reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR_12684;
    }
  }
};
reagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = true;
reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core._write.call(null, writer, [cljs.core.str("#\x3cReaction "), cljs.core.str(cljs.core.hash.call(null, this$__$1)), cljs.core.str(": ")].join(""));
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var seq__12685_12731 = cljs.core.seq.call(null, self__.watching);
  var chunk__12686_12732 = null;
  var count__12687_12733 = 0;
  var i__12688_12734 = 0;
  while (true) {
    if (i__12688_12734 < count__12687_12733) {
      var w_12735 = cljs.core._nth.call(null, chunk__12686_12732, i__12688_12734);
      cljs.core.remove_watch.call(null, w_12735, this$__$1);
      var G__12736 = seq__12685_12731;
      var G__12737 = chunk__12686_12732;
      var G__12738 = count__12687_12733;
      var G__12739 = i__12688_12734 + 1;
      seq__12685_12731 = G__12736;
      chunk__12686_12732 = G__12737;
      count__12687_12733 = G__12738;
      i__12688_12734 = G__12739;
      continue;
    } else {
      var temp__4126__auto___12740 = cljs.core.seq.call(null, seq__12685_12731);
      if (temp__4126__auto___12740) {
        var seq__12685_12741__$1 = temp__4126__auto___12740;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__12685_12741__$1)) {
          var c__4894__auto___12742 = cljs.core.chunk_first.call(null, seq__12685_12741__$1);
          var G__12743 = cljs.core.chunk_rest.call(null, seq__12685_12741__$1);
          var G__12744 = c__4894__auto___12742;
          var G__12745 = cljs.core.count.call(null, c__4894__auto___12742);
          var G__12746 = 0;
          seq__12685_12731 = G__12743;
          chunk__12686_12732 = G__12744;
          count__12687_12733 = G__12745;
          i__12688_12734 = G__12746;
          continue;
        } else {
          var w_12747 = cljs.core.first.call(null, seq__12685_12741__$1);
          cljs.core.remove_watch.call(null, w_12747, this$__$1);
          var G__12748 = cljs.core.next.call(null, seq__12685_12741__$1);
          var G__12749 = null;
          var G__12750 = 0;
          var G__12751 = 0;
          seq__12685_12731 = G__12748;
          chunk__12686_12732 = G__12749;
          count__12687_12733 = G__12750;
          i__12688_12734 = G__12751;
          continue;
        }
      } else {
      }
    }
    break;
  }
  self__.watching = null;
  self__.state = null;
  self__.dirty_QMARK_ = true;
  if (cljs.core.truth_(self__.active_QMARK_)) {
    if (cljs.core.truth_(reagent.ratom.debug)) {
      cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.dec);
    } else {
    }
    self__.active_QMARK_ = false;
  } else {
  }
  if (cljs.core.truth_(self__.on_dispose)) {
    return self__.on_dispose.call(null);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(a, newval) {
  var self__ = this;
  var a__$1 = this;
  var oldval = self__.state;
  self__.state = newval;
  if (cljs.core.truth_(self__.on_set)) {
    self__.dirty_QMARK_ = true;
    self__.on_set.call(null, oldval, newval);
  } else {
  }
  cljs.core._notify_watches.call(null, a__$1, oldval, newval);
  return newval;
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f__$1) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, reagent.ratom._peek_at.call(null, a__$1)));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f__$1, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, reagent.ratom._peek_at.call(null, a__$1), x));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f__$1, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, reagent.ratom._peek_at.call(null, a__$1), x, y));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f__$1, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f__$1, reagent.ratom._peek_at.call(null, a__$1), x, y, more));
};
reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var oldstate = self__.state;
  var res = reagent.ratom.capture_derefed.call(null, self__.f, this$__$1);
  var derefed = reagent.ratom.captured.call(null, this$__$1);
  if (cljs.core.not_EQ_.call(null, derefed, self__.watching)) {
    reagent.ratom._update_watching.call(null, this$__$1, derefed);
  } else {
  }
  if (cljs.core.truth_(self__.active_QMARK_)) {
  } else {
    if (cljs.core.truth_(reagent.ratom.debug)) {
      cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.inc);
    } else {
    }
    self__.active_QMARK_ = true;
  }
  self__.dirty_QMARK_ = false;
  self__.state = res;
  cljs.core._notify_watches.call(null, this$__$1, oldstate, self__.state);
  return res;
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.reduce_kv.call(null, function(this$__$1) {
    return function(_, key, f__$1) {
      f__$1.call(null, key, this$__$1, oldval, newval);
      return null;
    };
  }(this$__$1), null, self__.watches);
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, k, wf) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.assoc.call(null, self__.watches, k, wf);
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  self__.watches = cljs.core.dissoc.call(null, self__.watches, k);
  if (cljs.core.empty_QMARK_.call(null, self__.watches) && cljs.core.not.call(null, self__.auto_run)) {
    return reagent.ratom.dispose_BANG_.call(null, this$__$1);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(function() {
    var or__4109__auto__ = self__.auto_run;
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return cljs.core.some_QMARK_.call(null, reagent.ratom._STAR_ratom_context_STAR_);
    }
  }())) {
    reagent.ratom.notify_deref_watcher_BANG_.call(null, this$__$1);
    if (cljs.core.truth_(self__.dirty_QMARK_)) {
      return reagent.ratom.run.call(null, this$__$1);
    } else {
      return self__.state;
    }
  } else {
    if (cljs.core.truth_(self__.dirty_QMARK_)) {
      var oldstate_12752 = self__.state;
      self__.state = self__.f.call(null);
      if (oldstate_12752 === self__.state) {
      } else {
        cljs.core._notify_watches.call(null, this$__$1, oldstate_12752, self__.state);
      }
    } else {
    }
    return self__.state;
  }
};
reagent.ratom.Reaction.cljs$lang$type = true;
reagent.ratom.Reaction.cljs$lang$ctorStr = "reagent.ratom/Reaction";
reagent.ratom.Reaction.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "reagent.ratom/Reaction");
};
reagent.ratom.__GT_Reaction = function reagent$ratom$__GT_Reaction(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose) {
  return new reagent.ratom.Reaction(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose);
};
reagent.ratom.make_reaction = function() {
  var reagent$ratom$make_reaction__delegate = function(f, p__12753) {
    var map__12755 = p__12753;
    var map__12755__$1 = cljs.core.seq_QMARK_.call(null, map__12755) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12755) : map__12755;
    var derefed = cljs.core.get.call(null, map__12755__$1, new cljs.core.Keyword(null, "derefed", "derefed", 590684583));
    var on_dispose = cljs.core.get.call(null, map__12755__$1, new cljs.core.Keyword(null, "on-dispose", "on-dispose", 2105306360));
    var on_set = cljs.core.get.call(null, map__12755__$1, new cljs.core.Keyword(null, "on-set", "on-set", -140953470));
    var auto_run = cljs.core.get.call(null, map__12755__$1, new cljs.core.Keyword(null, "auto-run", "auto-run", 1958400437));
    var runner = cljs.core._EQ_.call(null, auto_run, true) ? reagent.ratom.run : auto_run;
    var active = !(derefed == null);
    var dirty = !active;
    var reaction = new reagent.ratom.Reaction(f, null, dirty, active, null, null, runner, on_set, on_dispose);
    if (derefed == null) {
    } else {
      if (cljs.core.truth_(reagent.ratom.debug)) {
        cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.inc);
      } else {
      }
      reagent.ratom._update_watching.call(null, reaction, derefed);
    }
    return reaction;
  };
  var reagent$ratom$make_reaction = function(f, var_args) {
    var p__12753 = null;
    if (arguments.length > 1) {
      var G__12756__i = 0, G__12756__a = new Array(arguments.length - 1);
      while (G__12756__i < G__12756__a.length) {
        G__12756__a[G__12756__i] = arguments[G__12756__i + 1];
        ++G__12756__i;
      }
      p__12753 = new cljs.core.IndexedSeq(G__12756__a, 0);
    }
    return reagent$ratom$make_reaction__delegate.call(this, f, p__12753);
  };
  reagent$ratom$make_reaction.cljs$lang$maxFixedArity = 1;
  reagent$ratom$make_reaction.cljs$lang$applyTo = function(arglist__12757) {
    var f = cljs.core.first(arglist__12757);
    var p__12753 = cljs.core.rest(arglist__12757);
    return reagent$ratom$make_reaction__delegate(f, p__12753);
  };
  reagent$ratom$make_reaction.cljs$core$IFn$_invoke$arity$variadic = reagent$ratom$make_reaction__delegate;
  return reagent$ratom$make_reaction;
}();
reagent.ratom.Wrapper = function(state, callback, changed, watches) {
  this.state = state;
  this.callback = callback;
  this.changed = changed;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2149613568;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  cljs.core._write.call(null, writer, "#\x3cwrap: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.reduce_kv.call(null, function(this$__$1) {
    return function(_, key, f) {
      f.call(null, key, this$__$1, oldval, newval);
      return null;
    };
  }(this$__$1), null, self__.watches);
};
reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
reagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof reagent.ratom.Wrapper && cljs.core.not.call(null, self__.changed) && cljs.core.not.call(null, other.changed) && cljs.core._EQ_.call(null, self__.state, other.state) && cljs.core._EQ_.call(null, self__.callback, other.callback);
};
reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state));
};
reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x));
};
reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x, y));
};
reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f, self__.state, x, y, more));
};
reagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(this$, newval) {
  var self__ = this;
  var this$__$1 = this;
  var oldval = self__.state;
  self__.changed = true;
  self__.state = newval;
  if (self__.watches == null) {
  } else {
    cljs.core._notify_watches.call(null, this$__$1, oldval, newval);
  }
  self__.callback.call(null, newval);
  return newval;
};
reagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4097__auto__ = self__.changed;
    if (cljs.core.truth_(and__4097__auto__)) {
      return cljs.core.some_QMARK_.call(null, reagent.ratom._STAR_ratom_context_STAR_);
    } else {
      return and__4097__auto__;
    }
  }())) {
    if (typeof console !== "undefined") {
      console.warn([cljs.core.str("Warning: "), cljs.core.str("derefing stale wrap: "), cljs.core.str(cljs.core.pr_str.call(null, this$__$1))].join(""));
    } else {
    }
  } else {
  }
  return self__.state;
};
reagent.ratom.Wrapper.cljs$lang$type = true;
reagent.ratom.Wrapper.cljs$lang$ctorStr = "reagent.ratom/Wrapper";
reagent.ratom.Wrapper.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "reagent.ratom/Wrapper");
};
reagent.ratom.__GT_Wrapper = function reagent$ratom$__GT_Wrapper(state, callback, changed, watches) {
  return new reagent.ratom.Wrapper(state, callback, changed, watches);
};
reagent.ratom.make_wrapper = function reagent$ratom$make_wrapper(value, callback_fn, args) {
  return new reagent.ratom.Wrapper(value, new reagent.impl.util.partial_ifn(callback_fn, args, null), false, null);
};
goog.provide("reagent.impl.batching");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("reagent.impl.util");
goog.require("reagent.ratom");
goog.require("reagent.interop");
goog.require("reagent.debug");
if (typeof reagent.impl.batching.mount_count !== "undefined") {
} else {
  reagent.impl.batching.mount_count = 0;
}
reagent.impl.batching.next_mount_count = function reagent$impl$batching$next_mount_count() {
  return reagent.impl.batching.mount_count = reagent.impl.batching.mount_count + 1;
};
reagent.impl.batching.fake_raf = function reagent$impl$batching$fake_raf(f) {
  return setTimeout(f, 16);
};
reagent.impl.batching.next_tick = cljs.core.not.call(null, reagent.impl.util.is_client) ? reagent.impl.batching.fake_raf : function() {
  var w = window;
  var or__4109__auto__ = w["requestAnimationFrame"];
  if (cljs.core.truth_(or__4109__auto__)) {
    return or__4109__auto__;
  } else {
    var or__4109__auto____$1 = w["webkitRequestAnimationFrame"];
    if (cljs.core.truth_(or__4109__auto____$1)) {
      return or__4109__auto____$1;
    } else {
      var or__4109__auto____$2 = w["mozRequestAnimationFrame"];
      if (cljs.core.truth_(or__4109__auto____$2)) {
        return or__4109__auto____$2;
      } else {
        var or__4109__auto____$3 = w["msRequestAnimationFrame"];
        if (cljs.core.truth_(or__4109__auto____$3)) {
          return or__4109__auto____$3;
        } else {
          return reagent.impl.batching.fake_raf;
        }
      }
    }
  }
}();
reagent.impl.batching.compare_mount_order = function reagent$impl$batching$compare_mount_order(c1, c2) {
  return c1["cljsMountOrder"] - c2["cljsMountOrder"];
};
reagent.impl.batching.run_queue = function reagent$impl$batching$run_queue(a) {
  a.sort(reagent.impl.batching.compare_mount_order);
  var n__4994__auto__ = a.length;
  var i = 0;
  while (true) {
    if (i < n__4994__auto__) {
      var c_12597 = a[i];
      if (cljs.core.truth_(c_12597["cljsIsDirty"])) {
        c_12597["forceUpdate"]();
      } else {
      }
      var G__12598 = i + 1;
      i = G__12598;
      continue;
    } else {
      return null;
    }
    break;
  }
};
reagent.impl.batching.run_funs = function reagent$impl$batching$run_funs(a) {
  var n__4994__auto__ = a.length;
  var i = 0;
  while (true) {
    if (i < n__4994__auto__) {
      a[i].call(null);
      var G__12599 = i + 1;
      i = G__12599;
      continue;
    } else {
      return null;
    }
    break;
  }
};
reagent.impl.batching.RenderQueue = function(queue, scheduled_QMARK_, after_render) {
  this.queue = queue;
  this.scheduled_QMARK_ = scheduled_QMARK_;
  this.after_render = after_render;
};
reagent.impl.batching.RenderQueue.prototype.queue_render = function(c) {
  var self__ = this;
  var this$ = this;
  self__.queue.push(c);
  return this$.schedule();
};
reagent.impl.batching.RenderQueue.prototype.add_after_render = function(f) {
  var self__ = this;
  var _ = this;
  return self__.after_render.push(f);
};
reagent.impl.batching.RenderQueue.prototype.schedule = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.truth_(self__.scheduled_QMARK_)) {
    return null;
  } else {
    self__.scheduled_QMARK_ = true;
    return reagent.impl.batching.next_tick.call(null, function(this$) {
      return function() {
        return this$.run_queue();
      };
    }(this$));
  }
};
reagent.impl.batching.RenderQueue.prototype.run_queue = function() {
  var self__ = this;
  var _ = this;
  var q = self__.queue;
  var aq = self__.after_render;
  self__.queue = [];
  self__.after_render = [];
  self__.scheduled_QMARK_ = false;
  reagent.impl.batching.run_queue.call(null, q);
  return reagent.impl.batching.run_funs.call(null, aq);
};
reagent.impl.batching.RenderQueue.cljs$lang$type = true;
reagent.impl.batching.RenderQueue.cljs$lang$ctorStr = "reagent.impl.batching/RenderQueue";
reagent.impl.batching.RenderQueue.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "reagent.impl.batching/RenderQueue");
};
reagent.impl.batching.__GT_RenderQueue = function reagent$impl$batching$__GT_RenderQueue(queue, scheduled_QMARK_, after_render) {
  return new reagent.impl.batching.RenderQueue(queue, scheduled_QMARK_, after_render);
};
reagent.impl.batching.render_queue = new reagent.impl.batching.RenderQueue([], false, []);
reagent.impl.batching.flush = function reagent$impl$batching$flush() {
  return reagent.impl.batching.render_queue.run_queue();
};
reagent.impl.batching.queue_render = function reagent$impl$batching$queue_render(c) {
  c["cljsIsDirty"] = true;
  return reagent.impl.batching.render_queue.queue_render(c);
};
reagent.impl.batching.mark_rendered = function reagent$impl$batching$mark_rendered(c) {
  return c["cljsIsDirty"] = false;
};
reagent.impl.batching.do_after_flush = function reagent$impl$batching$do_after_flush(f) {
  return reagent.impl.batching.render_queue.add_after_render(f);
};
reagent.impl.batching.do_later = function reagent$impl$batching$do_later(f) {
  reagent.impl.batching.do_after_flush.call(null, f);
  return reagent.impl.batching.render_queue.schedule();
};
reagent.impl.batching.is_reagent_component = function reagent$impl$batching$is_reagent_component(c) {
  var G__12601 = c;
  var G__12601__$1 = G__12601 == null ? null : G__12601["props"];
  var G__12601__$2 = G__12601__$1 == null ? null : G__12601__$1["argv"];
  return G__12601__$2;
};
reagent.impl.batching.run_reactively = function reagent$impl$batching$run_reactively(c, run) {
  if (cljs.core.truth_(reagent.impl.batching.is_reagent_component.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "is-reagent-component", "is-reagent-component", -1856228005, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  reagent.impl.batching.mark_rendered.call(null, c);
  var rat = c["cljsRatom"];
  if (rat == null) {
    var res = reagent.ratom.capture_derefed.call(null, run, c);
    var derefed = reagent.ratom.captured.call(null, c);
    if (!(derefed == null)) {
      c["cljsRatom"] = reagent.ratom.make_reaction.call(null, run, new cljs.core.Keyword(null, "auto-run", "auto-run", 1958400437), function(res, derefed, rat) {
        return function() {
          return reagent.impl.batching.queue_render.call(null, c);
        };
      }(res, derefed, rat), new cljs.core.Keyword(null, "derefed", "derefed", 590684583), derefed);
    } else {
    }
    return res;
  } else {
    return reagent.ratom.run.call(null, rat);
  }
};
reagent.impl.batching.dispose = function reagent$impl$batching$dispose(c) {
  var G__12603_12604 = c["cljsRatom"];
  var G__12603_12605__$1 = G__12603_12604 == null ? null : reagent.ratom.dispose_BANG_.call(null, G__12603_12604);
  return reagent.impl.batching.mark_rendered.call(null, c);
};
goog.provide("reagent.impl.component");
goog.require("cljs.core");
goog.require("reagent.debug");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("reagent.impl.batching");
goog.require("reagent.impl.util");
reagent.impl.component.state_atom = function reagent$impl$component$state_atom(this$) {
  var sa = this$["cljsState"];
  if (!(sa == null)) {
    return sa;
  } else {
    return this$["cljsState"] = reagent.ratom.atom.call(null, null);
  }
};
reagent.impl.component.as_element = function reagent$impl$component$as_element(x) {
  return reagent.impl.template.as_element(x);
};
reagent.impl.component.do_render = function reagent$impl$component$do_render(c) {
  var _STAR_current_component_STAR_12560 = reagent.impl.component._STAR_current_component_STAR_;
  reagent.impl.component._STAR_current_component_STAR_ = c;
  try {
    var f = c["cljsRender"];
    var _ = cljs.core.ifn_QMARK_.call(null, f) ? null : function() {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }();
    var p = c["props"];
    var res = c["reagentRender"] == null ? f.call(null, c) : function() {
      var argv = p["argv"];
      var n = cljs.core.count.call(null, argv);
      var G__12561 = n;
      switch(G__12561) {
        case 1:
          return f.call(null);
          break;
        case 2:
          return f.call(null, cljs.core.nth.call(null, argv, 1));
          break;
        case 3:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2));
          break;
        case 4:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2), cljs.core.nth.call(null, argv, 3));
          break;
        case 5:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2), cljs.core.nth.call(null, argv, 3), cljs.core.nth.call(null, argv, 4));
          break;
        default:
          return cljs.core.apply.call(null, f, cljs.core.subvec.call(null, argv, 1));
      }
    }();
    if (cljs.core.vector_QMARK_.call(null, res)) {
      return reagent.impl.component.as_element.call(null, res);
    } else {
      if (cljs.core.ifn_QMARK_.call(null, res)) {
        c["cljsRender"] = res;
        return reagent$impl$component$do_render.call(null, c);
      } else {
        return res;
      }
    }
  } finally {
    reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR_12560;
  }
};
reagent.impl.component.static_fns = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "render", "render", -1408033454), function() {
  var c = this;
  if (cljs.core.not.call(null, reagent.impl.component._STAR_non_reactive_STAR_)) {
    return reagent.impl.batching.run_reactively.call(null, c, function(c) {
      return function() {
        return reagent.impl.component.do_render.call(null, c);
      };
    }(c));
  } else {
    return reagent.impl.component.do_render.call(null, c);
  }
}], null);
reagent.impl.component.custom_wrapper = function reagent$impl$component$custom_wrapper(key, f) {
  var G__12564 = key instanceof cljs.core.Keyword ? key.fqn : null;
  switch(G__12564) {
    case "componentWillUnmount":
      return function(G__12564) {
        return function() {
          var c = this;
          reagent.impl.batching.dispose.call(null, c);
          if (f == null) {
            return null;
          } else {
            return f.call(null, c);
          }
        };
      }(G__12564);
      break;
    case "componentWillMount":
      return function(G__12564) {
        return function() {
          var c = this;
          c["cljsMountOrder"] = reagent.impl.batching.next_mount_count.call(null);
          if (f == null) {
            return null;
          } else {
            return f.call(null, c);
          }
        };
      }(G__12564);
      break;
    case "componentDidUpdate":
      return function(G__12564) {
        return function(oldprops) {
          var c = this;
          return f.call(null, c, oldprops["argv"]);
        };
      }(G__12564);
      break;
    case "componentWillUpdate":
      return function(G__12564) {
        return function(nextprops) {
          var c = this;
          return f.call(null, c, nextprops["argv"]);
        };
      }(G__12564);
      break;
    case "shouldComponentUpdate":
      return function(G__12564) {
        return function(nextprops, nextstate) {
          var or__4109__auto__ = reagent.impl.util._STAR_always_update_STAR_;
          if (cljs.core.truth_(or__4109__auto__)) {
            return or__4109__auto__;
          } else {
            var c = this;
            var old_argv = c["props"]["argv"];
            var new_argv = nextprops["argv"];
            if (f == null) {
              return old_argv == null || new_argv == null || cljs.core.not_EQ_.call(null, old_argv, new_argv);
            } else {
              return f.call(null, c, old_argv, new_argv);
            }
          }
        };
      }(G__12564);
      break;
    case "componentWillReceiveProps":
      return function(G__12564) {
        return function(props) {
          var c = this;
          return f.call(null, c, props["argv"]);
        };
      }(G__12564);
      break;
    case "getInitialState":
      return function(G__12564) {
        return function() {
          var c = this;
          return cljs.core.reset_BANG_.call(null, reagent.impl.component.state_atom.call(null, c), f.call(null, c));
        };
      }(G__12564);
      break;
    case "getDefaultProps":
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("getDefaultProps not supported yet"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));break;
    default:
      return null;
  }
};
reagent.impl.component.default_wrapper = function reagent$impl$component$default_wrapper(f) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
    return function() {
      var G__12566__delegate = function(args) {
        var c = this;
        return cljs.core.apply.call(null, f, c, args);
      };
      var G__12566 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__12567__i = 0, G__12567__a = new Array(arguments.length - 0);
          while (G__12567__i < G__12567__a.length) {
            G__12567__a[G__12567__i] = arguments[G__12567__i + 0];
            ++G__12567__i;
          }
          args = new cljs.core.IndexedSeq(G__12567__a, 0);
        }
        return G__12566__delegate.call(this, args);
      };
      G__12566.cljs$lang$maxFixedArity = 0;
      G__12566.cljs$lang$applyTo = function(arglist__12568) {
        var args = cljs.core.seq(arglist__12568);
        return G__12566__delegate(args);
      };
      G__12566.cljs$core$IFn$_invoke$arity$variadic = G__12566__delegate;
      return G__12566;
    }();
  } else {
    return f;
  }
};
reagent.impl.component.dont_wrap = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "cljsRender", "cljsRender", 247449928), null, new cljs.core.Keyword(null, "reagentRender", "reagentRender", -358306383), null, new cljs.core.Keyword(null, "render", "render", -1408033454), null, new cljs.core.Keyword(null, "cljsName", "cljsName", 999824949), null], null), null);
reagent.impl.component.dont_bind = function reagent$impl$component$dont_bind(f) {
  if (cljs.core.fn_QMARK_.call(null, f)) {
    var G__12570 = f;
    G__12570["__reactDontBind"] = true;
    return G__12570;
  } else {
    return f;
  }
};
reagent.impl.component.get_wrapper = function reagent$impl$component$get_wrapper(key, f, name) {
  if (cljs.core.truth_(reagent.impl.component.dont_wrap.call(null, key))) {
    return reagent.impl.component.dont_bind.call(null, f);
  } else {
    var wrap = reagent.impl.component.custom_wrapper.call(null, key, f);
    if (cljs.core.truth_(function() {
      var and__4097__auto__ = wrap;
      if (cljs.core.truth_(and__4097__auto__)) {
        return f;
      } else {
        return and__4097__auto__;
      }
    }())) {
      if (cljs.core.ifn_QMARK_.call(null, f)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Expected function in "), cljs.core.str(name), cljs.core.str(key), cljs.core.str(" but got "), cljs.core.str(f)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
      }
    } else {
    }
    var or__4109__auto__ = wrap;
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return reagent.impl.component.default_wrapper.call(null, f);
    }
  }
};
reagent.impl.component.obligatory = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), null, new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619), null, new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), null], null);
reagent.impl.component.dash_to_camel = reagent.impl.util.memoize_1.call(null, reagent.impl.util.dash_to_camel);
reagent.impl.component.camelify_map_keys = function reagent$impl$component$camelify_map_keys(fun_map) {
  return cljs.core.reduce_kv.call(null, function(m, k, v) {
    return cljs.core.assoc.call(null, m, cljs.core.keyword.call(null, reagent.impl.component.dash_to_camel.call(null, k)), v);
  }, cljs.core.PersistentArrayMap.EMPTY, fun_map);
};
reagent.impl.component.add_obligatory = function reagent$impl$component$add_obligatory(fun_map) {
  return cljs.core.merge.call(null, reagent.impl.component.obligatory, fun_map);
};
reagent.impl.component.add_render = function reagent$impl$component$add_render(fun_map, render_f, name) {
  var fm = cljs.core.assoc.call(null, fun_map, new cljs.core.Keyword(null, "cljsRender", "cljsRender", 247449928), render_f, new cljs.core.Keyword(null, "render", "render", -1408033454), (new cljs.core.Keyword(null, "render", "render", -1408033454)).cljs$core$IFn$_invoke$arity$1(reagent.impl.component.static_fns));
  return cljs.core.assoc.call(null, fm, new cljs.core.Keyword(null, "cljsName", "cljsName", 999824949), function(fm) {
    return function() {
      return name;
    };
  }(fm));
};
reagent.impl.component.fun_name = function reagent$impl$component$fun_name(f) {
  var or__4109__auto__ = function() {
    var and__4097__auto__ = cljs.core.fn_QMARK_.call(null, f);
    if (and__4097__auto__) {
      var or__4109__auto__ = f["displayName"];
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return f["name"];
      }
    } else {
      return and__4097__auto__;
    }
  }();
  if (cljs.core.truth_(or__4109__auto__)) {
    return or__4109__auto__;
  } else {
    var or__4109__auto____$1 = function() {
      var and__4097__auto__ = function() {
        var G__12578 = f;
        if (G__12578) {
          var bit__4776__auto__ = G__12578.cljs$lang$protocol_mask$partition1$ & 4096;
          if (bit__4776__auto__ || G__12578.cljs$core$INamed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }();
      if (and__4097__auto__) {
        return cljs.core.name.call(null, f);
      } else {
        return and__4097__auto__;
      }
    }();
    if (cljs.core.truth_(or__4109__auto____$1)) {
      return or__4109__auto____$1;
    } else {
      var m = cljs.core.meta.call(null, f);
      if (cljs.core.map_QMARK_.call(null, m)) {
        return(new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(m);
      } else {
        return null;
      }
    }
  }
};
reagent.impl.component.wrap_funs = function reagent$impl$component$wrap_funs(fmap) {
  var fun_map = function() {
    var temp__4128__auto__ = (new cljs.core.Keyword(null, "componentFunction", "componentFunction", 825866104)).cljs$core$IFn$_invoke$arity$1(fmap);
    if (temp__4128__auto__ == null) {
      return fmap;
    } else {
      var cf = temp__4128__auto__;
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, fmap, new cljs.core.Keyword(null, "reagentRender", "reagentRender", -358306383), cf), new cljs.core.Keyword(null, "componentFunction", "componentFunction", 825866104));
    }
  }();
  var render_fun = function() {
    var or__4109__auto__ = (new cljs.core.Keyword(null, "reagentRender", "reagentRender", -358306383)).cljs$core$IFn$_invoke$arity$1(fun_map);
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return(new cljs.core.Keyword(null, "render", "render", -1408033454)).cljs$core$IFn$_invoke$arity$1(fun_map);
    }
  }();
  var _ = cljs.core.ifn_QMARK_.call(null, render_fun) ? null : function() {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Render must be a function, not "), cljs.core.str(cljs.core.pr_str.call(null, render_fun))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "render-fun", "render-fun", -1209513086, null))))].join(""));
  }();
  var name = [cljs.core.str(function() {
    var or__4109__auto__ = (new cljs.core.Keyword(null, "displayName", "displayName", -809144601)).cljs$core$IFn$_invoke$arity$1(fun_map);
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return reagent.impl.component.fun_name.call(null, render_fun);
    }
  }())].join("");
  var name_SINGLEQUOTE_ = cljs.core.empty_QMARK_.call(null, name) ? [cljs.core.str(cljs.core.gensym.call(null, "reagent"))].join("") : name;
  var fmap__$1 = reagent.impl.component.add_render.call(null, cljs.core.assoc.call(null, fun_map, new cljs.core.Keyword(null, "displayName", "displayName", -809144601), name_SINGLEQUOTE_), render_fun, name_SINGLEQUOTE_);
  return cljs.core.reduce_kv.call(null, function(fun_map, render_fun, _, name, name_SINGLEQUOTE_, fmap__$1) {
    return function(m, k, v) {
      return cljs.core.assoc.call(null, m, k, reagent.impl.component.get_wrapper.call(null, k, v, name_SINGLEQUOTE_));
    };
  }(fun_map, render_fun, _, name, name_SINGLEQUOTE_, fmap__$1), cljs.core.PersistentArrayMap.EMPTY, fmap__$1);
};
reagent.impl.component.map_to_js = function reagent$impl$component$map_to_js(m) {
  return cljs.core.reduce_kv.call(null, function(o, k, v) {
    var G__12580 = o;
    G__12580[cljs.core.name.call(null, k)] = v;
    return G__12580;
  }, {}, m);
};
reagent.impl.component.cljsify = function reagent$impl$component$cljsify(body) {
  return reagent.impl.component.map_to_js.call(null, reagent.impl.component.wrap_funs.call(null, reagent.impl.component.add_obligatory.call(null, reagent.impl.component.camelify_map_keys.call(null, body))));
};
reagent.impl.component.create_class = function reagent$impl$component$create_class(body) {
  if (cljs.core.map_QMARK_.call(null, body)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "body", "body", -408674142, null))))].join(""));
  }
  var spec = reagent.impl.component.cljsify.call(null, body);
  var res = React["createClass"](spec);
  var f = function(spec, res) {
    return function() {
      var G__12581__delegate = function(args) {
        return reagent.impl.component.as_element.call(null, cljs.core.apply.call(null, cljs.core.vector, res, args));
      };
      var G__12581 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__12582__i = 0, G__12582__a = new Array(arguments.length - 0);
          while (G__12582__i < G__12582__a.length) {
            G__12582__a[G__12582__i] = arguments[G__12582__i + 0];
            ++G__12582__i;
          }
          args = new cljs.core.IndexedSeq(G__12582__a, 0);
        }
        return G__12581__delegate.call(this, args);
      };
      G__12581.cljs$lang$maxFixedArity = 0;
      G__12581.cljs$lang$applyTo = function(arglist__12583) {
        var args = cljs.core.seq(arglist__12583);
        return G__12581__delegate(args);
      };
      G__12581.cljs$core$IFn$_invoke$arity$variadic = G__12581__delegate;
      return G__12581;
    }();
  }(spec, res);
  reagent.impl.util.cache_react_class.call(null, f, res);
  reagent.impl.util.cache_react_class.call(null, res, res);
  return f;
};
reagent.impl.component.comp_name = function reagent$impl$component$comp_name() {
  var n = function() {
    var G__12585 = reagent.impl.component._STAR_current_component_STAR_;
    var G__12585__$1 = G__12585 == null ? null : G__12585["cljsName"]();
    return G__12585__$1;
  }();
  if (!cljs.core.empty_QMARK_.call(null, n)) {
    return[cljs.core.str(" (in "), cljs.core.str(n), cljs.core.str(")")].join("");
  } else {
    return "";
  }
};
reagent.impl.component.shallow_obj_to_map = function reagent$impl$component$shallow_obj_to_map(o) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4863__auto__ = function reagent$impl$component$shallow_obj_to_map_$_iter__12590(s__12591) {
      return new cljs.core.LazySeq(null, function() {
        var s__12591__$1 = s__12591;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__12591__$1);
          if (temp__4126__auto__) {
            var s__12591__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__12591__$2)) {
              var c__4861__auto__ = cljs.core.chunk_first.call(null, s__12591__$2);
              var size__4862__auto__ = cljs.core.count.call(null, c__4861__auto__);
              var b__12593 = cljs.core.chunk_buffer.call(null, size__4862__auto__);
              if (function() {
                var i__12592 = 0;
                while (true) {
                  if (i__12592 < size__4862__auto__) {
                    var k = cljs.core._nth.call(null, c__4861__auto__, i__12592);
                    cljs.core.chunk_append.call(null, b__12593, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), o[k]], null));
                    var G__12594 = i__12592 + 1;
                    i__12592 = G__12594;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12593), reagent$impl$component$shallow_obj_to_map_$_iter__12590.call(null, cljs.core.chunk_rest.call(null, s__12591__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12593), null);
              }
            } else {
              var k = cljs.core.first.call(null, s__12591__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), o[k]], null), reagent$impl$component$shallow_obj_to_map_$_iter__12590.call(null, cljs.core.rest.call(null, s__12591__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4863__auto__.call(null, cljs.core.js_keys.call(null, o));
  }());
};
reagent.impl.component.elem_counter = 0;
reagent.impl.component.reactify_component = function reagent$impl$component$reactify_component(comp) {
  return React["createClass"]({"render":function() {
    var this$ = this;
    return reagent.impl.component.as_element.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [comp, cljs.core.assoc.call(null, reagent.impl.component.shallow_obj_to_map.call(null, this$["props"]), new cljs.core.Keyword(null, "-elem-count", "-elem-count", 663797079), reagent.impl.component.elem_counter = reagent.impl.component.elem_counter + 1)], null));
  }, "displayName":"react-wrapper"});
};
goog.provide("reagent.impl.template");
goog.require("cljs.core");
goog.require("reagent.impl.util");
goog.require("reagent.impl.component");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("reagent.impl.batching");
goog.require("clojure.string");
goog.require("reagent.debug");
reagent.impl.template.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
reagent.impl.template.NativeWrapper = function(comp) {
  this.comp = comp;
};
reagent.impl.template.NativeWrapper.cljs$lang$type = true;
reagent.impl.template.NativeWrapper.cljs$lang$ctorStr = "reagent.impl.template/NativeWrapper";
reagent.impl.template.NativeWrapper.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "reagent.impl.template/NativeWrapper");
};
reagent.impl.template.__GT_NativeWrapper = function reagent$impl$template$__GT_NativeWrapper(comp) {
  return new reagent.impl.template.NativeWrapper(comp);
};
reagent.impl.template.named_QMARK_ = function reagent$impl$template$named_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol;
};
reagent.impl.template.hiccup_tag_QMARK_ = function reagent$impl$template$hiccup_tag_QMARK_(x) {
  return reagent.impl.template.named_QMARK_.call(null, x) || typeof x === "string";
};
reagent.impl.template.valid_tag_QMARK_ = function reagent$impl$template$valid_tag_QMARK_(x) {
  return reagent.impl.template.hiccup_tag_QMARK_.call(null, x) || cljs.core.ifn_QMARK_.call(null, x) || x instanceof reagent.impl.template.NativeWrapper;
};
reagent.impl.template.prop_name_cache = {"charset":"charSet", "for":"htmlFor", "class":"className"};
reagent.impl.template.obj_get = function reagent$impl$template$obj_get(o, k) {
  if (cljs.core.truth_(o.hasOwnProperty(k))) {
    return o[k];
  } else {
    return null;
  }
};
reagent.impl.template.cached_prop_name = function reagent$impl$template$cached_prop_name(k) {
  if (reagent.impl.template.named_QMARK_.call(null, k)) {
    var temp__4128__auto__ = reagent.impl.template.obj_get.call(null, reagent.impl.template.prop_name_cache, cljs.core.name.call(null, k));
    if (temp__4128__auto__ == null) {
      return reagent.impl.template.prop_name_cache[cljs.core.name.call(null, k)] = reagent.impl.util.dash_to_camel.call(null, k);
    } else {
      var k_SINGLEQUOTE_ = temp__4128__auto__;
      return k_SINGLEQUOTE_;
    }
  } else {
    return k;
  }
};
reagent.impl.template.convert_prop_value = function reagent$impl$template$convert_prop_value(x) {
  if (typeof x === "string" || typeof x === "number" || cljs.core.fn_QMARK_.call(null, x)) {
    return x;
  } else {
    if (reagent.impl.template.named_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x);
    } else {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.reduce_kv.call(null, function(o, k, v) {
          var G__12609 = o;
          G__12609[reagent.impl.template.cached_prop_name.call(null, k)] = reagent$impl$template$convert_prop_value.call(null, v);
          return G__12609;
        }, {}, x);
      } else {
        if (cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.clj__GT_js.call(null, x);
        } else {
          if (cljs.core.ifn_QMARK_.call(null, x)) {
            return function() {
              var G__12610__delegate = function(args) {
                return cljs.core.apply.call(null, x, args);
              };
              var G__12610 = function(var_args) {
                var args = null;
                if (arguments.length > 0) {
                  var G__12611__i = 0, G__12611__a = new Array(arguments.length - 0);
                  while (G__12611__i < G__12611__a.length) {
                    G__12611__a[G__12611__i] = arguments[G__12611__i + 0];
                    ++G__12611__i;
                  }
                  args = new cljs.core.IndexedSeq(G__12611__a, 0);
                }
                return G__12610__delegate.call(this, args);
              };
              G__12610.cljs$lang$maxFixedArity = 0;
              G__12610.cljs$lang$applyTo = function(arglist__12612) {
                var args = cljs.core.seq(arglist__12612);
                return G__12610__delegate(args);
              };
              G__12610.cljs$core$IFn$_invoke$arity$variadic = G__12610__delegate;
              return G__12610;
            }();
          } else {
            return cljs.core.clj__GT_js.call(null, x);
          }
        }
      }
    }
  }
};
reagent.impl.template.set_id_class = function reagent$impl$template$set_id_class(props, id, class$) {
  var p = props == null ? {} : props;
  if (cljs.core.some_QMARK_.call(null, id) && p["id"] == null) {
    p["id"] = id;
  } else {
  }
  if (cljs.core.some_QMARK_.call(null, class$)) {
    var old_12613 = p["className"];
    p["className"] = cljs.core.some_QMARK_.call(null, old_12613) ? [cljs.core.str(class$), cljs.core.str(" "), cljs.core.str(old_12613)].join("") : class$;
  } else {
  }
  return p;
};
reagent.impl.template.convert_props = function reagent$impl$template$convert_props(props, id_class) {
  var id = id_class["id"];
  var class$ = id_class["className"];
  var no_id_class = id == null && class$ == null;
  if (no_id_class && cljs.core.empty_QMARK_.call(null, props)) {
    return null;
  } else {
    var objprops = reagent.impl.template.convert_prop_value.call(null, props);
    if (no_id_class) {
      return objprops;
    } else {
      return reagent.impl.template.set_id_class.call(null, objprops, id, class$);
    }
  }
};
reagent.impl.template.input_unmount = function reagent$impl$template$input_unmount(this$) {
  return this$["cljsInputValue"] = null;
};
reagent.impl.template.input_set_value = function reagent$impl$template$input_set_value(this$) {
  var temp__4130__auto__ = this$["cljsInputValue"];
  if (temp__4130__auto__ == null) {
    return null;
  } else {
    var value = temp__4130__auto__;
    this$["cljsInputDirty"] = false;
    var node = this$["getDOMNode"]();
    if (cljs.core.not_EQ_.call(null, value, node["value"])) {
      return node["value"] = value;
    } else {
      return null;
    }
  }
};
reagent.impl.template.input_handle_change = function reagent$impl$template$input_handle_change(this$, on_change, e) {
  var res = on_change.call(null, e);
  if (cljs.core.truth_(this$["cljsInputDirty"])) {
  } else {
    this$["cljsInputDirty"] = true;
    reagent.impl.batching.do_later.call(null, function(res) {
      return function() {
        return reagent.impl.template.input_set_value.call(null, this$);
      };
    }(res));
  }
  return res;
};
reagent.impl.template.input_render_setup = function reagent$impl$template$input_render_setup(this$, jsprops) {
  if (cljs.core.truth_(function() {
    var and__4097__auto__ = jsprops["hasOwnProperty"]("onChange");
    if (cljs.core.truth_(and__4097__auto__)) {
      return jsprops["hasOwnProperty"]("value");
    } else {
      return and__4097__auto__;
    }
  }())) {
    var v = jsprops["value"];
    var value = v == null ? "" : v;
    var on_change = jsprops["onChange"];
    this$["cljsInputValue"] = value;
    delete jsprops["value"];
    var G__12616 = jsprops;
    G__12616["defaultValue"] = value;
    G__12616["onChange"] = function(G__12616, v, value, on_change) {
      return function(p1__12614_SHARP_) {
        return reagent.impl.template.input_handle_change.call(null, this$, on_change, p1__12614_SHARP_);
      };
    }(G__12616, v, value, on_change);
    return G__12616;
  } else {
    return this$["cljsInputValue"] = null;
  }
};
reagent.impl.template.input_component_QMARK_ = function reagent$impl$template$input_component_QMARK_(x) {
  return x === "input" || x === "textarea";
};
reagent.impl.template.reagent_input_class = null;
reagent.impl.template.input_spec = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "display-name", "display-name", 694513143), "ReagentInput", new cljs.core.Keyword(null, "component-did-update", "component-did-update", -1468549173), reagent.impl.template.input_set_value, new cljs.core.Keyword(null, "component-will-unmount", "component-will-unmount", -2058314698), reagent.impl.template.input_unmount, new cljs.core.Keyword(null, "reagent-render", "reagent-render", -985383853), 
function(argv, comp, jsprops, first_child) {
  var this$ = reagent.impl.component._STAR_current_component_STAR_;
  reagent.impl.template.input_render_setup.call(null, this$, jsprops);
  return reagent.impl.template.make_element.call(null, argv, comp, jsprops, first_child);
}], null);
reagent.impl.template.reagent_input = function reagent$impl$template$reagent_input(argv, comp, jsprops, first_child) {
  if (reagent.impl.template.reagent_input_class == null) {
    reagent.impl.template.reagent_input_class = reagent.impl.component.create_class.call(null, reagent.impl.template.input_spec);
  } else {
  }
  return reagent.impl.template.reagent_input_class.call(null, argv, comp, jsprops, first_child);
};
reagent.impl.template.parse_tag = function reagent$impl$template$parse_tag(hiccup_tag) {
  var vec__12618 = cljs.core.next.call(null, cljs.core.re_matches.call(null, reagent.impl.template.re_tag, cljs.core.name.call(null, hiccup_tag)));
  var tag = cljs.core.nth.call(null, vec__12618, 0, null);
  var id = cljs.core.nth.call(null, vec__12618, 1, null);
  var class$ = cljs.core.nth.call(null, vec__12618, 2, null);
  var class_SINGLEQUOTE_ = cljs.core.truth_(class$) ? clojure.string.replace.call(null, class$, /\./, " ") : null;
  if (cljs.core.truth_(tag)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid tag: '"), cljs.core.str(hiccup_tag), cljs.core.str("'"), cljs.core.str(reagent.impl.component.comp_name.call(null))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "tag", "tag", 350170304, null)))].join(""));
  }
  return{"className":class_SINGLEQUOTE_, "id":id, "name":tag};
};
reagent.impl.template.fn_to_class = function reagent$impl$template$fn_to_class(f) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Expected a function, not "), cljs.core.str(cljs.core.pr_str.call(null, f))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  if (!!(cljs.core.fn_QMARK_.call(null, f) && cljs.core.some_QMARK_.call(null, f["type"])) && typeof console !== "undefined") {
    console.warn([cljs.core.str("Warning: "), cljs.core.str("Using native React classes directly in Hiccup forms "), cljs.core.str("is not supported. Use create-element or "), cljs.core.str("adapt-react-class instead: "), cljs.core.str(f["type"]), cljs.core.str(reagent.impl.component.comp_name.call(null))].join(""));
  } else {
  }
  var spec = cljs.core.meta.call(null, f);
  var withrender = cljs.core.assoc.call(null, spec, new cljs.core.Keyword(null, "reagent-render", "reagent-render", -985383853), f);
  var res = reagent.impl.component.create_class.call(null, withrender);
  var wrapf = reagent.impl.util.cached_react_class.call(null, res);
  reagent.impl.util.cache_react_class.call(null, f, wrapf);
  return wrapf;
};
reagent.impl.template.as_class = function reagent$impl$template$as_class(tag) {
  var temp__4128__auto__ = reagent.impl.util.cached_react_class.call(null, tag);
  if (temp__4128__auto__ == null) {
    return reagent.impl.template.fn_to_class.call(null, tag);
  } else {
    var cached_class = temp__4128__auto__;
    return cached_class;
  }
};
reagent.impl.template.get_key = function reagent$impl$template$get_key(x) {
  if (cljs.core.map_QMARK_.call(null, x)) {
    return cljs.core.get.call(null, x, new cljs.core.Keyword(null, "key", "key", -1516042587));
  } else {
    return null;
  }
};
reagent.impl.template.key_from_vec = function reagent$impl$template$key_from_vec(v) {
  var temp__4128__auto__ = function() {
    var G__12620 = cljs.core.meta.call(null, v);
    var G__12620__$1 = G__12620 == null ? null : reagent.impl.template.get_key.call(null, G__12620);
    return G__12620__$1;
  }();
  if (temp__4128__auto__ == null) {
    return reagent.impl.template.get_key.call(null, cljs.core.nth.call(null, v, 1, null));
  } else {
    var k = temp__4128__auto__;
    return k;
  }
};
reagent.impl.template.reag_element = function reagent$impl$template$reag_element(tag, v) {
  var c = reagent.impl.template.as_class.call(null, tag);
  var jsprops = {"argv":v};
  var G__12622_12623 = v;
  var G__12622_12624__$1 = G__12622_12623 == null ? null : reagent.impl.template.key_from_vec.call(null, G__12622_12623);
  var G__12622_12625__$2 = G__12622_12624__$1 == null ? null : jsprops["key"] = G__12622_12624__$1;
  return React["createElement"](c, jsprops);
};
reagent.impl.template.adapt_react_class = function reagent$impl$template$adapt_react_class(c) {
  return new reagent.impl.template.NativeWrapper({"class":null, "id":null, "name":c});
};
reagent.impl.template.tag_name_cache = {};
reagent.impl.template.cached_parse = function reagent$impl$template$cached_parse(x) {
  if (reagent.impl.template.hiccup_tag_QMARK_.call(null, x)) {
    var temp__4128__auto__ = reagent.impl.template.obj_get.call(null, reagent.impl.template.tag_name_cache, cljs.core.name.call(null, x));
    if (temp__4128__auto__ == null) {
      return reagent.impl.template.tag_name_cache[cljs.core.name.call(null, x)] = reagent.impl.template.parse_tag.call(null, x);
    } else {
      var s = temp__4128__auto__;
      return s;
    }
  } else {
    if (x instanceof reagent.impl.template.NativeWrapper) {
      return x.comp;
    } else {
      return null;
    }
  }
};
reagent.impl.template.native_element = function reagent$impl$template$native_element(tag, argv) {
  var temp__4126__auto__ = reagent.impl.template.cached_parse.call(null, tag);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var parsed = temp__4126__auto__;
    var comp = parsed["name"];
    var props = cljs.core.nth.call(null, argv, 1, null);
    var hasprops = props == null || cljs.core.map_QMARK_.call(null, props);
    var jsprops = reagent.impl.template.convert_props.call(null, hasprops ? props : null, parsed);
    var first_child = hasprops ? 2 : 1;
    if (reagent.impl.template.input_component_QMARK_.call(null, comp)) {
      return reagent.impl.template.as_element.call(null, cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [reagent.impl.template.reagent_input, argv, comp, jsprops, first_child], null), cljs.core.meta.call(null, argv)));
    } else {
      var p = function() {
        var temp__4128__auto__ = function() {
          var G__12628 = cljs.core.meta.call(null, argv);
          var G__12628__$1 = G__12628 == null ? null : reagent.impl.template.get_key.call(null, G__12628);
          return G__12628__$1;
        }();
        if (temp__4128__auto__ == null) {
          return jsprops;
        } else {
          var key = temp__4128__auto__;
          var G__12629 = jsprops == null ? {} : jsprops;
          G__12629["key"] = key;
          return G__12629;
        }
      }();
      return reagent.impl.template.make_element.call(null, argv, comp, p, first_child);
    }
  } else {
    return null;
  }
};
reagent.impl.template.vec_to_elem = function reagent$impl$template$vec_to_elem(v) {
  if (cljs.core.count.call(null, v) > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Hiccup form should not be empty: "), cljs.core.str(cljs.core.pr_str.call(null, v)), cljs.core.str(reagent.impl.component.comp_name.call(null))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "v", "v", 1661996586, 
    null)))))].join(""));
  }
  var tag = cljs.core.nth.call(null, v, 0);
  if (reagent.impl.template.valid_tag_QMARK_.call(null, tag)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid Hiccup form: "), cljs.core.str(cljs.core.pr_str.call(null, v)), cljs.core.str(reagent.impl.component.comp_name.call(null))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid-tag?", "valid-tag?", 1243064160, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))))].join(""));
  }
  var temp__4128__auto__ = reagent.impl.template.native_element.call(null, tag, v);
  if (temp__4128__auto__ == null) {
    return reagent.impl.template.reag_element.call(null, tag, v);
  } else {
    var ne = temp__4128__auto__;
    return ne;
  }
};
reagent.impl.template.as_element = function reagent$impl$template$as_element(x) {
  if (typeof x === "string") {
    return x;
  } else {
    if (cljs.core.vector_QMARK_.call(null, x)) {
      return reagent.impl.template.vec_to_elem.call(null, x);
    } else {
      if (cljs.core.seq_QMARK_.call(null, x)) {
        return reagent.impl.template.expand_seq_check.call(null, x);
      } else {
        return x;
      }
    }
  }
};
reagent.impl.template.expand_seq = function reagent$impl$template$expand_seq(s) {
  var a = cljs.core.into_array.call(null, s);
  var n__4994__auto___12630 = a.length;
  var i_12631 = 0;
  while (true) {
    if (i_12631 < n__4994__auto___12630) {
      a[i_12631] = reagent.impl.template.as_element.call(null, a[i_12631]);
      var G__12632 = i_12631 + 1;
      i_12631 = G__12632;
      continue;
    } else {
    }
    break;
  }
  return a;
};
reagent.impl.template.expand_seq_dev = function reagent$impl$template$expand_seq_dev(s, o) {
  var a = cljs.core.into_array.call(null, s);
  var n__4994__auto___12633 = a.length;
  var i_12634 = 0;
  while (true) {
    if (i_12634 < n__4994__auto___12633) {
      var val_12635 = a[i_12634];
      if (cljs.core.vector_QMARK_.call(null, val_12635) && reagent.impl.template.key_from_vec.call(null, val_12635) == null) {
        o["no-key"] = true;
      } else {
      }
      a[i_12634] = reagent.impl.template.as_element.call(null, val_12635);
      var G__12636 = i_12634 + 1;
      i_12634 = G__12636;
      continue;
    } else {
    }
    break;
  }
  return a;
};
reagent.impl.template.expand_seq_check = function reagent$impl$template$expand_seq_check(x) {
  var ctx = {};
  var res = reagent.ratom._STAR_ratom_context_STAR_ == null ? reagent.impl.template.expand_seq_dev.call(null, x, ctx) : reagent.ratom.capture_derefed.call(null, function(ctx) {
    return function() {
      return reagent.impl.template.expand_seq_dev.call(null, x, ctx);
    };
  }(ctx), ctx);
  if (cljs.core.truth_(reagent.ratom.captured.call(null, ctx))) {
    if (typeof console !== "undefined") {
      console.warn([cljs.core.str("Warning: "), cljs.core.str("Reactive deref not supported in lazy seq, "), cljs.core.str("it should be wrapped in doall"), cljs.core.str(reagent.impl.component.comp_name.call(null)), cljs.core.str(". Value:\n"), cljs.core.str(cljs.core.pr_str.call(null, x))].join(""));
    } else {
    }
  } else {
  }
  if (cljs.core.truth_(ctx["no-key"])) {
    if (typeof console !== "undefined") {
      console.warn([cljs.core.str("Warning: "), cljs.core.str("Every element in a seq should have a unique "), cljs.core.str(":key"), cljs.core.str(reagent.impl.component.comp_name.call(null)), cljs.core.str(". Value: "), cljs.core.str(cljs.core.pr_str.call(null, x))].join(""));
    } else {
    }
  } else {
  }
  return res;
};
reagent.impl.template.make_element = function reagent$impl$template$make_element(argv, comp, jsprops, first_child) {
  var G__12638 = cljs.core.count.call(null, argv) - first_child;
  switch(G__12638) {
    case 0:
      return React["createElement"](comp, jsprops);
      break;
    case 1:
      return React["createElement"](comp, jsprops, reagent.impl.template.as_element.call(null, cljs.core.nth.call(null, argv, first_child)));
      break;
    default:
      return React["createElement"].apply(null, cljs.core.reduce_kv.call(null, function(G__12638) {
        return function(a, k, v) {
          if (k >= first_child) {
            a.push(reagent.impl.template.as_element.call(null, v));
          } else {
          }
          return a;
        };
      }(G__12638), [comp, jsprops], argv));
  }
};
goog.provide("reagent.core");
goog.require("cljs.core");
goog.require("reagent.impl.util");
goog.require("reagent.impl.component");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("reagent.impl.template");
goog.require("reagent.impl.batching");
goog.require("reagent.debug");
reagent.core.is_client = reagent.impl.util.is_client;
reagent.core.create_element = function() {
  var reagent$core$create_element = null;
  var reagent$core$create_element__1 = function(type) {
    return reagent$core$create_element.call(null, type, null);
  };
  var reagent$core$create_element__2 = function(type, props) {
    if (!cljs.core.map_QMARK_.call(null, props)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
    }
    return React.createElement(type, props);
  };
  var reagent$core$create_element__3 = function(type, props, child) {
    if (!cljs.core.map_QMARK_.call(null, props)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
    }
    return React.createElement(type, props, child);
  };
  var reagent$core$create_element__4 = function() {
    var G__12536__delegate = function(type, props, child, children) {
      if (!cljs.core.map_QMARK_.call(null, props)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
      }
      return cljs.core.apply.call(null, React.createElement, type, props, child, children);
    };
    var G__12536 = function(type, props, child, var_args) {
      var children = null;
      if (arguments.length > 3) {
        var G__12537__i = 0, G__12537__a = new Array(arguments.length - 3);
        while (G__12537__i < G__12537__a.length) {
          G__12537__a[G__12537__i] = arguments[G__12537__i + 3];
          ++G__12537__i;
        }
        children = new cljs.core.IndexedSeq(G__12537__a, 0);
      }
      return G__12536__delegate.call(this, type, props, child, children);
    };
    G__12536.cljs$lang$maxFixedArity = 3;
    G__12536.cljs$lang$applyTo = function(arglist__12538) {
      var type = cljs.core.first(arglist__12538);
      arglist__12538 = cljs.core.next(arglist__12538);
      var props = cljs.core.first(arglist__12538);
      arglist__12538 = cljs.core.next(arglist__12538);
      var child = cljs.core.first(arglist__12538);
      var children = cljs.core.rest(arglist__12538);
      return G__12536__delegate(type, props, child, children);
    };
    G__12536.cljs$core$IFn$_invoke$arity$variadic = G__12536__delegate;
    return G__12536;
  }();
  reagent$core$create_element = function(type, props, child, var_args) {
    var children = var_args;
    switch(arguments.length) {
      case 1:
        return reagent$core$create_element__1.call(this, type);
      case 2:
        return reagent$core$create_element__2.call(this, type, props);
      case 3:
        return reagent$core$create_element__3.call(this, type, props, child);
      default:
        var G__12539 = null;
        if (arguments.length > 3) {
          var G__12540__i = 0, G__12540__a = new Array(arguments.length - 3);
          while (G__12540__i < G__12540__a.length) {
            G__12540__a[G__12540__i] = arguments[G__12540__i + 3];
            ++G__12540__i;
          }
          G__12539 = new cljs.core.IndexedSeq(G__12540__a, 0);
        }
        return reagent$core$create_element__4.cljs$core$IFn$_invoke$arity$variadic(type, props, child, G__12539);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reagent$core$create_element.cljs$lang$maxFixedArity = 3;
  reagent$core$create_element.cljs$lang$applyTo = reagent$core$create_element__4.cljs$lang$applyTo;
  reagent$core$create_element.cljs$core$IFn$_invoke$arity$1 = reagent$core$create_element__1;
  reagent$core$create_element.cljs$core$IFn$_invoke$arity$2 = reagent$core$create_element__2;
  reagent$core$create_element.cljs$core$IFn$_invoke$arity$3 = reagent$core$create_element__3;
  reagent$core$create_element.cljs$core$IFn$_invoke$arity$variadic = reagent$core$create_element__4.cljs$core$IFn$_invoke$arity$variadic;
  return reagent$core$create_element;
}();
reagent.core.as_element = function reagent$core$as_element(form) {
  return reagent.impl.template.as_element.call(null, form);
};
reagent.core.adapt_react_class = function reagent$core$adapt_react_class(c) {
  return reagent.impl.template.adapt_react_class.call(null, c);
};
reagent.core.reactify_component = function reagent$core$reactify_component(c) {
  return reagent.impl.component.reactify_component.call(null, c);
};
reagent.core.render = function() {
  var reagent$core$render = null;
  var reagent$core$render__2 = function(comp, container) {
    return reagent$core$render.call(null, comp, container, null);
  };
  var reagent$core$render__3 = function(comp, container, callback) {
    var f = function() {
      return reagent.core.as_element.call(null, cljs.core.fn_QMARK_.call(null, comp) ? comp.call(null) : comp);
    };
    return reagent.impl.util.render_component.call(null, f, container, callback);
  };
  reagent$core$render = function(comp, container, callback) {
    switch(arguments.length) {
      case 2:
        return reagent$core$render__2.call(this, comp, container);
      case 3:
        return reagent$core$render__3.call(this, comp, container, callback);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reagent$core$render.cljs$core$IFn$_invoke$arity$2 = reagent$core$render__2;
  reagent$core$render.cljs$core$IFn$_invoke$arity$3 = reagent$core$render__3;
  return reagent$core$render;
}();
reagent.core.unmount_component_at_node = function reagent$core$unmount_component_at_node(container) {
  return reagent.impl.util.unmount_component_at_node.call(null, container);
};
reagent.core.render_to_string = function reagent$core$render_to_string(component) {
  var _STAR_non_reactive_STAR_12542 = reagent.impl.component._STAR_non_reactive_STAR_;
  reagent.impl.component._STAR_non_reactive_STAR_ = true;
  try {
    return React["renderToString"](reagent.core.as_element.call(null, component));
  } finally {
    reagent.impl.component._STAR_non_reactive_STAR_ = _STAR_non_reactive_STAR_12542;
  }
};
reagent.core.as_component = reagent.core.as_element;
reagent.core.render_component = reagent.core.render;
reagent.core.render_component_to_string = reagent.core.render_to_string;
reagent.core.render_to_static_markup = function reagent$core$render_to_static_markup(component) {
  var _STAR_non_reactive_STAR_12544 = reagent.impl.component._STAR_non_reactive_STAR_;
  reagent.impl.component._STAR_non_reactive_STAR_ = true;
  try {
    return React["renderToStaticMarkup"](reagent.core.as_element.call(null, component));
  } finally {
    reagent.impl.component._STAR_non_reactive_STAR_ = _STAR_non_reactive_STAR_12544;
  }
};
reagent.core.force_update_all = function reagent$core$force_update_all() {
  return reagent.impl.util.force_update_all.call(null);
};
goog.exportSymbol("reagent.core.force_update_all", reagent.core.force_update_all);
reagent.core.create_class = function reagent$core$create_class(spec) {
  return reagent.impl.component.create_class.call(null, spec);
};
reagent.core.current_component = function reagent$core$current_component() {
  return reagent.impl.component._STAR_current_component_STAR_;
};
reagent.core.state_atom = function reagent$core$state_atom(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.component.state_atom.call(null, this$);
};
reagent.core.state = function reagent$core$state(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return cljs.core.deref.call(null, reagent.core.state_atom.call(null, this$));
};
reagent.core.replace_state = function reagent$core$replace_state(this$, new_state) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  if (new_state == null || cljs.core.map_QMARK_.call(null, new_state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)))))].join(""));
  }
  return cljs.core.reset_BANG_.call(null, reagent.core.state_atom.call(null, this$), new_state);
};
reagent.core.set_state = function reagent$core$set_state(this$, new_state) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  if (new_state == null || cljs.core.map_QMARK_.call(null, new_state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)))))].join(""));
  }
  return cljs.core.swap_BANG_.call(null, reagent.core.state_atom.call(null, this$), cljs.core.merge, new_state);
};
reagent.core.props = function reagent$core$props(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_props.call(null, this$);
};
reagent.core.children = function reagent$core$children(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_children.call(null, this$);
};
reagent.core.argv = function reagent$core$argv(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_argv.call(null, this$);
};
reagent.core.dom_node = function reagent$core$dom_node(this$) {
  return this$["getDOMNode"]();
};
reagent.core.merge_props = function reagent$core$merge_props(defaults, props) {
  return reagent.impl.util.merge_props.call(null, defaults, props);
};
reagent.core.flush = function reagent$core$flush() {
  return reagent.impl.batching.flush.call(null);
};
reagent.core.atom = function() {
  var reagent$core$atom = null;
  var reagent$core$atom__1 = function(x) {
    return reagent.ratom.atom.call(null, x);
  };
  var reagent$core$atom__2 = function() {
    var G__12545__delegate = function(x, rest) {
      return cljs.core.apply.call(null, reagent.ratom.atom, x, rest);
    };
    var G__12545 = function(x, var_args) {
      var rest = null;
      if (arguments.length > 1) {
        var G__12546__i = 0, G__12546__a = new Array(arguments.length - 1);
        while (G__12546__i < G__12546__a.length) {
          G__12546__a[G__12546__i] = arguments[G__12546__i + 1];
          ++G__12546__i;
        }
        rest = new cljs.core.IndexedSeq(G__12546__a, 0);
      }
      return G__12545__delegate.call(this, x, rest);
    };
    G__12545.cljs$lang$maxFixedArity = 1;
    G__12545.cljs$lang$applyTo = function(arglist__12547) {
      var x = cljs.core.first(arglist__12547);
      var rest = cljs.core.rest(arglist__12547);
      return G__12545__delegate(x, rest);
    };
    G__12545.cljs$core$IFn$_invoke$arity$variadic = G__12545__delegate;
    return G__12545;
  }();
  reagent$core$atom = function(x, var_args) {
    var rest = var_args;
    switch(arguments.length) {
      case 1:
        return reagent$core$atom__1.call(this, x);
      default:
        var G__12548 = null;
        if (arguments.length > 1) {
          var G__12549__i = 0, G__12549__a = new Array(arguments.length - 1);
          while (G__12549__i < G__12549__a.length) {
            G__12549__a[G__12549__i] = arguments[G__12549__i + 1];
            ++G__12549__i;
          }
          G__12548 = new cljs.core.IndexedSeq(G__12549__a, 0);
        }
        return reagent$core$atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12548);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reagent$core$atom.cljs$lang$maxFixedArity = 1;
  reagent$core$atom.cljs$lang$applyTo = reagent$core$atom__2.cljs$lang$applyTo;
  reagent$core$atom.cljs$core$IFn$_invoke$arity$1 = reagent$core$atom__1;
  reagent$core$atom.cljs$core$IFn$_invoke$arity$variadic = reagent$core$atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return reagent$core$atom;
}();
reagent.core.wrap = function() {
  var reagent$core$wrap__delegate = function(value, reset_fn, args) {
    if (cljs.core.ifn_QMARK_.call(null, reset_fn)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "reset-fn", "reset-fn", 949643977, null))))].join(""));
    }
    return reagent.ratom.make_wrapper.call(null, value, reset_fn, args);
  };
  var reagent$core$wrap = function(value, reset_fn, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__12550__i = 0, G__12550__a = new Array(arguments.length - 2);
      while (G__12550__i < G__12550__a.length) {
        G__12550__a[G__12550__i] = arguments[G__12550__i + 2];
        ++G__12550__i;
      }
      args = new cljs.core.IndexedSeq(G__12550__a, 0);
    }
    return reagent$core$wrap__delegate.call(this, value, reset_fn, args);
  };
  reagent$core$wrap.cljs$lang$maxFixedArity = 2;
  reagent$core$wrap.cljs$lang$applyTo = function(arglist__12551) {
    var value = cljs.core.first(arglist__12551);
    arglist__12551 = cljs.core.next(arglist__12551);
    var reset_fn = cljs.core.first(arglist__12551);
    var args = cljs.core.rest(arglist__12551);
    return reagent$core$wrap__delegate(value, reset_fn, args);
  };
  reagent$core$wrap.cljs$core$IFn$_invoke$arity$variadic = reagent$core$wrap__delegate;
  return reagent$core$wrap;
}();
reagent.core.cursor = function reagent$core$cursor(src, path) {
  return reagent.ratom.cursor.call(null, src, path);
};
reagent.core.next_tick = function reagent$core$next_tick(f) {
  return reagent.impl.batching.next_tick.call(null, f);
};
reagent.core.partial = function() {
  var reagent$core$partial__delegate = function(f, args) {
    return new reagent.impl.util.partial_ifn(f, args, null);
  };
  var reagent$core$partial = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__12552__i = 0, G__12552__a = new Array(arguments.length - 1);
      while (G__12552__i < G__12552__a.length) {
        G__12552__a[G__12552__i] = arguments[G__12552__i + 1];
        ++G__12552__i;
      }
      args = new cljs.core.IndexedSeq(G__12552__a, 0);
    }
    return reagent$core$partial__delegate.call(this, f, args);
  };
  reagent$core$partial.cljs$lang$maxFixedArity = 1;
  reagent$core$partial.cljs$lang$applyTo = function(arglist__12553) {
    var f = cljs.core.first(arglist__12553);
    var args = cljs.core.rest(arglist__12553);
    return reagent$core$partial__delegate(f, args);
  };
  reagent$core$partial.cljs$core$IFn$_invoke$arity$variadic = reagent$core$partial__delegate;
  return reagent$core$partial;
}();
goog.provide("centipair.core.components.input");
goog.require("cljs.core");
goog.require("centipair.core.components.editor");
goog.require("centipair.core.utilities.validators");
goog.require("centipair.core.style");
goog.require("reagent.core");
centipair.core.components.input.update_value = function centipair$core$components$input$update_value(field, value) {
  return cljs.core.reset_BANG_.call(null, field, cljs.core.assoc.call(null, cljs.core.deref.call(null, field), new cljs.core.Keyword(null, "value", "value", 305978217), value));
};
centipair.core.components.input.update_image_spec = function centipair$core$components$input$update_image_spec(key, field, value) {
  var dim = key.call(null, cljs.core.deref.call(null, field));
  var new_dim = cljs.core.assoc.call(null, dim, new cljs.core.Keyword(null, "value", "value", 305978217), value);
  return cljs.core.reset_BANG_.call(null, field, cljs.core.assoc.call(null, cljs.core.deref.call(null, field), key, new_dim));
};
centipair.core.components.input.update_image_spec_check = function centipair$core$components$input$update_image_spec_check(field, checked_QMARK_) {
  var crop = (new cljs.core.Keyword(null, "crop", "crop", 793731643)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field));
  if (cljs.core.truth_(checked_QMARK_)) {
    return cljs.core.reset_BANG_.call(null, field, cljs.core.assoc.call(null, cljs.core.deref.call(null, field), new cljs.core.Keyword(null, "crop", "crop", 793731643), cljs.core.assoc.call(null, crop, new cljs.core.Keyword(null, "checked", "checked", -50955819), "checked")));
  } else {
    return cljs.core.reset_BANG_.call(null, field, cljs.core.assoc.call(null, cljs.core.deref.call(null, field), new cljs.core.Keyword(null, "crop", "crop", 793731643), cljs.core.assoc.call(null, crop, new cljs.core.Keyword(null, "checked", "checked", -50955819), "")));
  }
};
centipair.core.components.input.update_check = function centipair$core$components$input$update_check(field, checked_QMARK_) {
  if (cljs.core.truth_(checked_QMARK_)) {
    return cljs.core.reset_BANG_.call(null, field, cljs.core.assoc.call(null, cljs.core.deref.call(null, field), new cljs.core.Keyword(null, "checked", "checked", -50955819), "checked"));
  } else {
    return cljs.core.reset_BANG_.call(null, field, cljs.core.assoc.call(null, cljs.core.deref.call(null, field), new cljs.core.Keyword(null, "checked", "checked", -50955819), ""));
  }
};
centipair.core.components.input.reset_image_spec = function centipair$core$components$input$reset_image_spec(field) {
  centipair.core.components.input.update_image_spec.call(null, new cljs.core.Keyword(null, "width", "width", -384071477), field, "");
  centipair.core.components.input.update_image_spec.call(null, new cljs.core.Keyword(null, "height", "height", 1025178622), field, "");
  return centipair.core.components.input.update_image_spec_check.call(null, field, false);
};
centipair.core.components.input.update_radio = function centipair$core$components$input$update_radio(field, value) {
  return cljs.core.swap_BANG_.call(null, field, cljs.core.assoc, new cljs.core.Keyword(null, "value", "value", 305978217), value);
};
centipair.core.components.input.text = function centipair$core$components$input$text(field) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), (new cljs.core.Keyword(null, "class-name", "class-name", 945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? centipair.core.style.bootstrap_input_container_class : (new cljs.core.Keyword(null, "class-name", "class-name", 
  945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("container-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 
  3, [new cljs.core.Keyword(null, "for", "for", -1323786319), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-2 control-label", new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("label-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), 
  (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), (new cljs.core.Keyword(null, "size", "size", 1098693007)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == 
  null ? "col-sm-6" : [cljs.core.str("col-sm-"), cljs.core.str((new cljs.core.Keyword(null, "size", "size", 1098693007)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join(""), new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("divider-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "class", "class", -2030961996), "form-control", new cljs.core.Keyword(null, "type", "type", 1174270348), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field)), new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), (new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? "" : (new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field)), new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), function(p1__11984_SHARP_) {
    return centipair.core.components.input.update_value.call(null, field, p1__11984_SHARP_.target.value);
  }], null)], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-4 message-label", new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("message-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field)))].join("")], null), (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? "" : (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null)], null);
};
centipair.core.components.input.textarea = function centipair$core$components$input$textarea(field) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), (new cljs.core.Keyword(null, "class-name", "class-name", 945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? centipair.core.style.bootstrap_input_container_class : (new cljs.core.Keyword(null, "class-name", "class-name", 
  945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("container-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 
  3, [new cljs.core.Keyword(null, "for", "for", -1323786319), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-2 control-label", new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("label-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), 
  (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-6", new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("divider-"), cljs.core.str((new cljs.core.Keyword(null, 
  "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "class", "class", -2030961996), "form-control", new cljs.core.Keyword(null, "type", "type", 1174270348), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field)), new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), (new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? "" : (new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field)), new cljs.core.Keyword(null, "rows", "rows", 850049680), "5", new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), function(p1__11985_SHARP_) {
    return centipair.core.components.input.update_value.call(null, field, p1__11985_SHARP_.target.value);
  }, new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null)], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-4 message-label", new cljs.core.Keyword(null, 
  "key", "key", -1516042587), [cljs.core.str("message-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? "" : (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null)], null);
};
centipair.core.components.input.hidden = function centipair$core$components$input$hidden(field) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), "hidden", new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, 
  "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null)], null);
};
centipair.core.components.input.make_valid_image_spec = function centipair$core$components$input$make_valid_image_spec(field) {
  cljs.core.swap_BANG_.call(null, field, cljs.core.assoc, new cljs.core.Keyword(null, "message", "message", -406056002), "", new cljs.core.Keyword(null, "class-name", "class-name", 945142584), centipair.core.style.bootstrap_input_container_class);
  var width_dim_11986 = (new cljs.core.Keyword(null, "width", "width", -384071477)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field));
  var height_dim_11987 = (new cljs.core.Keyword(null, "height", "height", 1025178622)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field));
  cljs.core.swap_BANG_.call(null, field, cljs.core.assoc, new cljs.core.Keyword(null, "width", "width", -384071477), cljs.core.assoc.call(null, width_dim_11986, new cljs.core.Keyword(null, "message", "message", -406056002), ""));
  cljs.core.swap_BANG_.call(null, field, cljs.core.assoc, new cljs.core.Keyword(null, "height", "height", 1025178622), cljs.core.assoc.call(null, height_dim_11987, new cljs.core.Keyword(null, "message", "message", -406056002), ""));
  return true;
};
centipair.core.components.input.make_valid = function centipair$core$components$input$make_valid(field) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), "image-spec")) {
    centipair.core.components.input.make_valid_image_spec.call(null, field);
  } else {
    cljs.core.swap_BANG_.call(null, field, cljs.core.assoc, new cljs.core.Keyword(null, "message", "message", -406056002), "", new cljs.core.Keyword(null, "class-name", "class-name", 945142584), centipair.core.style.bootstrap_input_container_class);
  }
  return true;
};
centipair.core.components.input.valid_field_QMARK_ = function centipair$core$components$input$valid_field_QMARK_(field) {
  if ((new cljs.core.Keyword(null, "validator", "validator", -1966190681)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null) {
    centipair.core.components.input.make_valid.call(null, field);
    return true;
  } else {
    var result = (new cljs.core.Keyword(null, "validator", "validator", -1966190681)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)).call(null, cljs.core.deref.call(null, field));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "valid", "valid", 155614240)).cljs$core$IFn$_invoke$arity$1(result))) {
      return centipair.core.components.input.make_valid.call(null, field);
    } else {
      cljs.core.swap_BANG_.call(null, field, cljs.core.assoc, new cljs.core.Keyword(null, "message", "message", -406056002), (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(result), new cljs.core.Keyword(null, "class-name", "class-name", 945142584), centipair.core.style.bootstrap_input_container_class_error);
      return false;
    }
  }
};
centipair.core.components.input.image_spec_error = function centipair$core$components$input$image_spec_error(errors, field, key, key_id) {
  if (!(key_id.call(null, errors) == null)) {
    var dim = key.call(null, cljs.core.deref.call(null, field));
    cljs.core.swap_BANG_.call(null, field, cljs.core.assoc, key, cljs.core.assoc.call(null, dim, new cljs.core.Keyword(null, "message", "message", -406056002), cljs.core.first.call(null, key_id.call(null, errors))));
    return cljs.core.swap_BANG_.call(null, field, cljs.core.assoc, new cljs.core.Keyword(null, "class-name", "class-name", 945142584), centipair.core.style.bootstrap_input_container_class_error);
  } else {
    return cljs.core.swap_BANG_.call(null, field, cljs.core.assoc, new cljs.core.Keyword(null, "class-name", "class-name", 945142584), centipair.core.style.bootstrap_input_container_class);
  }
};
centipair.core.components.input.append_image_spec_error = function centipair$core$components$input$append_image_spec_error(errors, field) {
  var width_key = cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "width", "width", -384071477)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))));
  var height_key = cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "height", "height", 1025178622)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))));
  var crop_key = cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "crop", "crop", 793731643)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))));
  centipair.core.components.input.image_spec_error.call(null, errors, field, new cljs.core.Keyword(null, "width", "width", -384071477), width_key);
  return centipair.core.components.input.image_spec_error.call(null, errors, field, new cljs.core.Keyword(null, "height", "height", 1025178622), height_key);
};
centipair.core.components.input.append_error = function centipair$core$components$input$append_error(errors, field) {
  if (cljs.core._EQ_.call(null, "image-spec", (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))) {
    return centipair.core.components.input.append_image_spec_error.call(null, errors, field);
  } else {
    var key = cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)));
    if (!(key.call(null, errors) == null)) {
      return cljs.core.swap_BANG_.call(null, field, cljs.core.assoc, new cljs.core.Keyword(null, "message", "message", -406056002), cljs.core.first.call(null, key.call(null, errors)), new cljs.core.Keyword(null, "class-name", "class-name", 945142584), centipair.core.style.bootstrap_input_container_class_error);
    } else {
      return null;
    }
  }
};
centipair.core.components.input.valid_form_QMARK_ = function centipair$core$components$input$valid_form_QMARK_(form_fields) {
  return cljs.core.apply.call(null, cljs.core._EQ_, true, cljs.core.doall.call(null, cljs.core.map.call(null, centipair.core.components.input.valid_field_QMARK_, form_fields)));
};
centipair.core.components.input.perform_action = function centipair$core$components$input$perform_action(form, action, form_fields) {
  if (cljs.core.truth_(centipair.core.components.input.valid_form_QMARK_.call(null, form_fields))) {
    cljs.core.swap_BANG_.call(null, form, cljs.core.assoc, new cljs.core.Keyword(null, "message", "message", -406056002), "");
    return action.call(null);
  } else {
    return cljs.core.swap_BANG_.call(null, form, cljs.core.assoc, new cljs.core.Keyword(null, "message", "message", -406056002), "Form error!");
  }
};
centipair.core.components.input.button = function centipair$core$components$input$button(form, form_fields, action_button) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), centipair.core.style.bootstrap_input_container_class], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "class", "class", -2030961996), "col-sm-offset-2 col-sm-6"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "class", "class", -2030961996), centipair.core.style.bootstrap_primary_button_class, new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function() {
    return centipair.core.components.input.perform_action.call(null, form, (new cljs.core.Keyword(null, "on-click", "on-click", 1632826543)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, action_button)), form_fields);
  }, new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), "", new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, action_button))], null), (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, action_button))], null)], null)], null);
};
centipair.core.components.input.plain_button = function centipair$core$components$input$plain_button(form, form_fields, action_button) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), centipair.core.style.bootstrap_input_container_class], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
  "class", "class", -2030961996), centipair.core.style.bootstrap_primary_button_class, new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function() {
    return centipair.core.components.input.perform_action.call(null, form, (new cljs.core.Keyword(null, "on-click", "on-click", 1632826543)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, action_button)), form_fields);
  }, new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), "", new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, action_button))], null), (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, action_button))], null)], null);
};
centipair.core.components.input.checkbox = function centipair$core$components$input$checkbox(field) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), (new cljs.core.Keyword(null, "class-name", "class-name", 945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? centipair.core.style.bootstrap_input_container_class : (new cljs.core.Keyword(null, "class-name", "class-name", 
  945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("container-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 
  3, [new cljs.core.Keyword(null, "for", "for", -1323786319), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-2 control-label", new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("label-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), 
  (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-6", new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("divider-"), cljs.core.str((new cljs.core.Keyword(null, 
  "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "checkbox", new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("checkbox-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", 
  -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("container-label-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field)))].join("")], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "type", "type", 1174270348), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field)), new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), function(p1__11988_SHARP_) {
    return centipair.core.components.input.update_check.call(null, field, p1__11988_SHARP_.target.checked);
  }, new cljs.core.Keyword(null, "checked", "checked", -50955819), (new cljs.core.Keyword(null, "checked", "checked", -50955819)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("key-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null)], null), [cljs.core.str(" "), cljs.core.str((new cljs.core.Keyword(null, 
  "description", "description", -1428560544)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null)], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-4 message-label"], null), (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field)) == null ? "" : (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null)], null);
};
centipair.core.components.input.plain_checkbox = function centipair$core$components$input$plain_checkbox(field) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "checkbox"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), function(p1__11989_SHARP_) {
    return centipair.core.components.input.update_check.call(null, field, p1__11989_SHARP_.target.checked);
  }, new cljs.core.Keyword(null, "checked", "checked", -50955819), (new cljs.core.Keyword(null, "checked", "checked", -50955819)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("key-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null)], null), [cljs.core.str(" "), cljs.core.str((new cljs.core.Keyword(null, 
  "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null)], null);
};
centipair.core.components.input.select_option = function centipair$core$components$input$select_option(select_value, option) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(option), new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(option)], 
  null), (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(option)], null);
};
centipair.core.components.input.select = function centipair$core$components$input$select(field) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), (new cljs.core.Keyword(null, "class-name", "class-name", 945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? centipair.core.style.bootstrap_input_container_class : (new cljs.core.Keyword(null, "class-name", "class-name", 
  945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "for", "for", -1323786319), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "class", "class", -2030961996), 
  "col-sm-2 control-label"], null), (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-6"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "class", "class", -2030961996), "form-control", new cljs.core.Keyword(null, "type", "type", 1174270348), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field)), new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), function(p1__11990_SHARP_) {
    return centipair.core.components.input.update_value.call(null, field, p1__11990_SHARP_.target.value);
  }, new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null), cljs.core.doall.call(null, cljs.core.map.call(null, cljs.core.partial.call(null, centipair.core.components.input.select_option, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))), (new cljs.core.Keyword(null, "options", "options", 
  99638489)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))))], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-4 message-label"], null), (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == 
  null ? "" : (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null)], null);
};
centipair.core.components.input.radio_option = function centipair$core$components$input$radio_option(field, option) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "radio", new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("radio-container-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(option))].join("")], null), new cljs.core.PersistentVector(null, 
  4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("radio-label-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(option))].join("")], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), 
  new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "type", "type", 1174270348), "radio", new cljs.core.Keyword(null, "name", "name", 1843675177), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(option), new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(option), new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "value", 
  "value", 305978217)).cljs$core$IFn$_invoke$arity$1(option), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), function(p1__11991_SHARP_) {
    return centipair.core.components.input.update_radio.call(null, field, p1__11991_SHARP_.target.value);
  }, new cljs.core.Keyword(null, "checked", "checked", -50955819), cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(option), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))) ? "checked" : "", new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(option)], null)], null), [cljs.core.str(" "), 
  cljs.core.str((new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(option))].join("")], null)], null);
};
centipair.core.components.input.radio = function centipair$core$components$input$radio(field) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), (new cljs.core.Keyword(null, "class-name", "class-name", 945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? centipair.core.style.bootstrap_input_container_class : (new cljs.core.Keyword(null, "class-name", "class-name", 
  945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("container-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 
  3, [new cljs.core.Keyword(null, "for", "for", -1323786319), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-2 control-label", new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("label-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), 
  (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-6", new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("divider-"), cljs.core.str((new cljs.core.Keyword(null, 
  "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), cljs.core.doall.call(null, cljs.core.map.call(null, cljs.core.partial.call(null, centipair.core.components.input.radio_option, field), (new cljs.core.Keyword(null, "options", "options", 99638489)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))))], null)], null);
};
centipair.core.components.input.subheading = function centipair$core$components$input$subheading(field) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "class", "class", -2030961996), centipair.core.style.bootstrap_input_container_class, new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, 
  "key", "key", -1516042587), [cljs.core.str("subheading-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h4", "h4", 2004862993), (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null), !((new cljs.core.Keyword(null, 
  "description", "description", -1428560544)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), (new cljs.core.Keyword(null, "description", "description", -1428560544)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null) : null], null);
};
centipair.core.components.input.image_spec = function centipair$core$components$input$image_spec(field) {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), (new cljs.core.Keyword(null, "class-name", "class-name", 945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? centipair.core.style.bootstrap_input_container_class : (new cljs.core.Keyword(null, "class-name", "class-name", 
  945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "for", "for", -1323786319), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "class", "class", -2030961996), 
  "col-sm-2 control-label"], null), (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-1"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "control-label"], null), "Width"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "class", "class", -2030961996), "form-control", new cljs.core.Keyword(null, "type", 
  "type", 1174270348), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1("text"), new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "width", "width", -384071477)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))), new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), (new cljs.core.Keyword(null, "placeholder", 
  "placeholder", -104873083)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "width", "width", -384071477)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))) == null ? "" : (new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "width", "width", -384071477)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))), new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, 
  "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "width", "width", -384071477)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), function(p1__11992_SHARP_) {
    return centipair.core.components.input.update_image_spec.call(null, new cljs.core.Keyword(null, "width", "width", -384071477), field, p1__11992_SHARP_.target.value);
  }], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "control-label"], null), (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "width", "width", -384071477)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field)))], null)], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-1"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "class", "class", -2030961996), "control-label"], null), "Height"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "class", "class", -2030961996), "form-control", new cljs.core.Keyword(null, "type", "type", 1174270348), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1("text"), new cljs.core.Keyword(null, 
  "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "height", "height", 1025178622)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))), new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), (new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "height", "height", 1025178622)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field))) == null ? "" : (new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "height", "height", 1025178622)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))), new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "height", "height", 1025178622)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field))), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), function(p1__11993_SHARP_) {
    return centipair.core.components.input.update_image_spec.call(null, new cljs.core.Keyword(null, "height", "height", 1025178622), field, p1__11993_SHARP_.target.value);
  }], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "control-label"], null), (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "height", "height", 1025178622)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field)))], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-2"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", 
  "class", -2030961996), "checkbox"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, 
  "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "crop", "crop", 793731643)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))), new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "crop", "crop", 793731643)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))), new cljs.core.Keyword(null, "on-change", "on-change", 
  -732046149), function(p1__11994_SHARP_) {
    return centipair.core.components.input.update_image_spec_check.call(null, field, p1__11994_SHARP_.target.checked);
  }, new cljs.core.Keyword(null, "checked", "checked", -50955819), (new cljs.core.Keyword(null, "checked", "checked", -50955819)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "crop", "crop", 793731643)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))], null)], null), [cljs.core.str(" "), cljs.core.str((new cljs.core.Keyword(null, "description", "description", -1428560544)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "crop", "crop", 793731643)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field))))].join("")], null)], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-4 message-label"], null), (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? "" : (new cljs.core.Keyword(null, "message", 
  "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null)], null);
};
centipair.core.components.input.input_field = function centipair$core$components$input$input_field(field) {
  var G__11996 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field));
  switch(G__11996) {
    case "text":
      return centipair.core.components.input.text.call(null, field);
      break;
    case "email":
      return centipair.core.components.input.text.call(null, field);
      break;
    case "textarea":
      return centipair.core.components.input.textarea.call(null, field);
      break;
    case "password":
      return centipair.core.components.input.text.call(null, field);
      break;
    case "checkbox":
      return centipair.core.components.input.checkbox.call(null, field);
      break;
    case "select":
      return centipair.core.components.input.select.call(null, field);
      break;
    case "radio":
      return centipair.core.components.input.radio.call(null, field);
      break;
    case "hidden":
      return centipair.core.components.input.hidden.call(null, field);
      break;
    case "subheading":
      return centipair.core.components.input.subheading.call(null, field);
      break;
    case "image-spec":
      return centipair.core.components.input.image_spec.call(null, field);
      break;
    default:
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join(""));;
  }
};
centipair.core.components.input.form_aligned = function centipair$core$components$input$form_aligned(form, form_fields, action_button) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "form-horizontal"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "legend", "legend", -1027192245), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "h3", "h3", 2067611163), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, form))], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "form-error"], null), (new cljs.core.Keyword(null, "message", "message", 
  -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, form))], null)], null), cljs.core.doall.call(null, cljs.core.map.call(null, centipair.core.components.input.input_field, form_fields)), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "pure-controls"], null), centipair.core.components.input.button.call(null, 
  form, form_fields, action_button)], null)], null);
};
centipair.core.components.input.plain_text = function centipair$core$components$input$plain_text(field) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), (new cljs.core.Keyword(null, "class-name", "class-name", 945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? centipair.core.style.bootstrap_input_container_class : (new cljs.core.Keyword(null, "class-name", "class-name", 
  945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("container-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 
  3, [new cljs.core.Keyword(null, "for", "for", -1323786319), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "class", "class", -2030961996), "control-label", new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("label-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), (new cljs.core.Keyword(null, 
  "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "class", "class", -2030961996), "form-control", new cljs.core.Keyword(null, "type", "type", 1174270348), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field)), new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), (new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field)) == null ? "" : (new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), function(p1__11998_SHARP_) {
    return centipair.core.components.input.update_value.call(null, field, p1__11998_SHARP_.target.value);
  }], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "message-label", new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("message-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], 
  null), (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? "" : (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null)], null);
};
centipair.core.components.input.plain_textarea = function centipair$core$components$input$plain_textarea(field) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), (new cljs.core.Keyword(null, "class-name", "class-name", 945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? centipair.core.style.bootstrap_input_container_class : (new cljs.core.Keyword(null, "class-name", "class-name", 
  945142584)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("container-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 
  3, [new cljs.core.Keyword(null, "for", "for", -1323786319), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "class", "class", -2030961996), "control-label", new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str("label-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), (new cljs.core.Keyword(null, 
  "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "class", "class", -2030961996), "form-control", new cljs.core.Keyword(null, "type", "type", 1174270348), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field)), new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), (new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? "" : (new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  field)), new cljs.core.Keyword(null, "rows", "rows", 850049680), "5", new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), function(p1__11999_SHARP_) {
    return centipair.core.components.input.update_value.call(null, field, p1__11999_SHARP_.target.value);
  }, new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "message-label", new cljs.core.Keyword(null, "key", "key", 
  -1516042587), [cljs.core.str("message-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join("")], null), (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null ? "" : (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field))], null)], null);
};
centipair.core.components.input.plain_input_field = function centipair$core$components$input$plain_input_field(field) {
  var G__12001 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field));
  switch(G__12001) {
    case "text":
      return centipair.core.components.input.plain_text.call(null, field);
      break;
    case "email":
      return centipair.core.components.input.plain_text.call(null, field);
      break;
    case "textarea":
      return centipair.core.components.input.plain_textarea.call(null, field);
      break;
    case "password":
      return centipair.core.components.input.plain_text.call(null, field);
      break;
    case "subheading":
      return centipair.core.components.input.subheading.call(null, field);
      break;
    case "markdown":
      return centipair.core.components.editor.markdown_editor.call(null, field);
      break;
    case "checkbox":
      return centipair.core.components.input.plain_checkbox.call(null, field);
      break;
    default:
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join(""));;
  }
};
centipair.core.components.input.form_plain = function centipair$core$components$input$form_plain(form, form_fields, action_button) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "legend", "legend", -1027192245), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h3", "h3", 2067611163), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  form))], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "form-error"], null), (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, form))], null)], null), cljs.core.doall.call(null, cljs.core.map.call(null, centipair.core.components.input.plain_input_field, 
  form_fields)), centipair.core.components.input.plain_button.call(null, form, form_fields, action_button)], null);
};
centipair.core.components.input.reset_text_field = function centipair$core$components$input$reset_text_field(field) {
  if ((new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)) == null) {
    return centipair.core.components.input.update_value.call(null, field, "");
  } else {
    return centipair.core.components.input.update_value.call(null, field, (new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)));
  }
};
centipair.core.components.input.reset_input = function centipair$core$components$input$reset_input(field) {
  var G__12004 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field));
  switch(G__12004) {
    case "text":
      return centipair.core.components.input.reset_text_field.call(null, field);
      break;
    case "email":
      return centipair.core.components.input.update_value.call(null, field, "");
      break;
    case "textarea":
      return centipair.core.components.input.update_value.call(null, field, "");
      break;
    case "password":
      return centipair.core.components.input.update_value.call(null, field, "");
      break;
    case "checkbox":
      return centipair.core.components.input.update_check.call(null, field, false);
      break;
    case "select":
      return centipair.core.components.input.update_value.call(null, field, "");
      break;
    case "radio":
      return centipair.core.components.input.update_radio.call(null, field, "");
      break;
    case "hidden":
      return centipair.core.components.input.update_value.call(null, field, null);
      break;
    case "image-spec":
      return centipair.core.components.input.reset_image_spec.call(null, field);
      break;
    case "markdown":
      return centipair.core.components.input.update_value.call(null, field, "");
      break;
    default:
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)))].join(""));;
  }
};
centipair.core.components.input.reset_inputs = function centipair$core$components$input$reset_inputs(fields) {
  var seq__12010 = cljs.core.seq.call(null, fields);
  var chunk__12011 = null;
  var count__12012 = 0;
  var i__12013 = 0;
  while (true) {
    if (i__12013 < count__12012) {
      var field = cljs.core._nth.call(null, chunk__12011, i__12013);
      centipair.core.components.input.reset_input.call(null, field);
      var G__12014 = seq__12010;
      var G__12015 = chunk__12011;
      var G__12016 = count__12012;
      var G__12017 = i__12013 + 1;
      seq__12010 = G__12014;
      chunk__12011 = G__12015;
      count__12012 = G__12016;
      i__12013 = G__12017;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__12010);
      if (temp__4126__auto__) {
        var seq__12010__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__12010__$1)) {
          var c__4894__auto__ = cljs.core.chunk_first.call(null, seq__12010__$1);
          var G__12018 = cljs.core.chunk_rest.call(null, seq__12010__$1);
          var G__12019 = c__4894__auto__;
          var G__12020 = cljs.core.count.call(null, c__4894__auto__);
          var G__12021 = 0;
          seq__12010 = G__12018;
          chunk__12011 = G__12019;
          count__12012 = G__12020;
          i__12013 = G__12021;
          continue;
        } else {
          var field = cljs.core.first.call(null, seq__12010__$1);
          centipair.core.components.input.reset_input.call(null, field);
          var G__12022 = cljs.core.next.call(null, seq__12010__$1);
          var G__12023 = null;
          var G__12024 = 0;
          var G__12025 = 0;
          seq__12010 = G__12022;
          chunk__12011 = G__12023;
          count__12012 = G__12024;
          i__12013 = G__12025;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
centipair.core.components.input.clear_error = function centipair$core$components$input$clear_error(field) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(field), "form")) {
    return cljs.core.swap_BANG_.call(null, field, cljs.core.assoc, new cljs.core.Keyword(null, "message", "message", -406056002), "");
  } else {
    return cljs.core.swap_BANG_.call(null, field, cljs.core.assoc, new cljs.core.Keyword(null, "message", "message", -406056002), "", new cljs.core.Keyword(null, "class-name", "class-name", 945142584), centipair.core.style.bootstrap_input_container_class);
  }
};
centipair.core.components.input.clear_form_errors = function centipair$core$components$input$clear_form_errors(fields) {
  var seq__12030 = cljs.core.seq.call(null, fields);
  var chunk__12031 = null;
  var count__12032 = 0;
  var i__12033 = 0;
  while (true) {
    if (i__12033 < count__12032) {
      var field = cljs.core._nth.call(null, chunk__12031, i__12033);
      centipair.core.components.input.clear_error.call(null, field);
      var G__12034 = seq__12030;
      var G__12035 = chunk__12031;
      var G__12036 = count__12032;
      var G__12037 = i__12033 + 1;
      seq__12030 = G__12034;
      chunk__12031 = G__12035;
      count__12032 = G__12036;
      i__12033 = G__12037;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__12030);
      if (temp__4126__auto__) {
        var seq__12030__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__12030__$1)) {
          var c__4894__auto__ = cljs.core.chunk_first.call(null, seq__12030__$1);
          var G__12038 = cljs.core.chunk_rest.call(null, seq__12030__$1);
          var G__12039 = c__4894__auto__;
          var G__12040 = cljs.core.count.call(null, c__4894__auto__);
          var G__12041 = 0;
          seq__12030 = G__12038;
          chunk__12031 = G__12039;
          count__12032 = G__12040;
          i__12033 = G__12041;
          continue;
        } else {
          var field = cljs.core.first.call(null, seq__12030__$1);
          centipair.core.components.input.clear_error.call(null, field);
          var G__12042 = cljs.core.next.call(null, seq__12030__$1);
          var G__12043 = null;
          var G__12044 = 0;
          var G__12045 = 0;
          seq__12030 = G__12042;
          chunk__12031 = G__12043;
          count__12032 = G__12044;
          i__12033 = G__12045;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", 
SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", 
ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), 
ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", 
MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", 
COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", 
DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return-1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = (key);
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.removeAllNativeListeners = function() {
  goog.events.listenerCountEstimate_ = 0;
  return 0;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return[];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return!!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = 1;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, true, evt);
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, false, evt);
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.object");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_scope) {
  goog.Disposable.call(this);
  this.handler_ = opt_scope;
  this.keys_ = {};
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture) {
  return this.listen_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenWithScope = function(src, type, fn, capture, scope) {
  return this.listen_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listen_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (!goog.isArray(type)) {
    if (type) {
      goog.events.EventHandler.typeArray_[0] = type.toString();
    }
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0;i < type.length;i++) {
    var listenerObj = goog.events.listen(src, type[i], opt_fn || this.handleEvent, opt_capture || false, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture) {
  return this.listenOnce_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenOnceWithScope = function(src, type, fn, capture, scope) {
  return this.listenOnce_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listenOnce_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.listenOnce_(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listenerObj = goog.events.listenOnce(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt) {
  return this.listenWithWrapper_(src, wrapper, listener, opt_capt);
};
goog.events.EventHandler.prototype.listenWithWrapperAndScope = function(src, wrapper, listener, capture, scope) {
  return this.listenWithWrapper_(src, wrapper, listener, capture, scope);
};
goog.events.EventHandler.prototype.listenWithWrapper_ = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.listen(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  var count = 0;
  for (var key in this.keys_) {
    if (Object.prototype.hasOwnProperty.call(this.keys_, key)) {
      count++;
    }
  }
  return count;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listener = goog.events.getListener(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (listener) {
      goog.events.unlistenByKey(listener);
      delete this.keys_[listener.key];
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.unlisten(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.object.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_ = {};
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0;i < listenerArray.length;++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || (e);
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = e.currentTarget = target;
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = .8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.provide("goog.json");
goog.provide("goog.json.Replacer");
goog.provide("goog.json.Reviver");
goog.provide("goog.json.Serializer");
goog.define("goog.json.USE_NATIVE_JSON", false);
goog.json.isValid = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  var o = String(s);
  if (goog.json.isValid(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["stringify"]) : function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serializeInternal(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray((object), sb);
        break;
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.define("goog.debug.LOGGING_ENABLED", goog.DEBUG);
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line, opt_col, opt_error) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line, opt_col, opt_error);
    }
    logFunc({message:message, fileName:url, line:line, col:opt_col, error:opt_error});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var str = [];
  var helper = function(obj, space, parentSeen) {
    var nestspace = space + "  ";
    var seen = new goog.structs.Set(parentSeen);
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (seen.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  seen.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace, seen);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "", new goog.structs.Set);
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available";
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href;
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || !err.lineNumber || !err.fileName || !err.stack || !err.message || !err.name) {
    return{"message":err.message || "Not available", "name":err.name || "UnknownError", "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error;
  if (typeof err == "string") {
    error = Error(err);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(error, goog.debug.enhanceError);
    }
  } else {
    error = err;
  }
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(goog.debug.enhanceError);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  if (goog.STRICT_MODE_COMPATIBLE) {
    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);
    if (stack) {
      return stack;
    }
  }
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getNativeStackTrace_ = function(fn) {
  var tempErr = new Error;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(tempErr, fn);
    return String(tempErr.stack);
  } else {
    try {
      throw tempErr;
    } catch (e) {
      tempErr = e;
    }
    var stack = tempErr.stack;
    if (stack) {
      return String(stack);
    }
  }
  return null;
};
goog.debug.getStacktrace = function(opt_fn) {
  var stack;
  if (goog.STRICT_MODE_COMPATIBLE) {
    var contextFn = opt_fn || goog.debug.getStacktrace;
    stack = goog.debug.getNativeStackTrace_(contextFn);
  }
  if (!stack) {
    stack = goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
  }
  return stack;
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;args && i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.define("goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS", true);
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.define("goog.debug.LogBuffer.CAPACITY", 0);
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Loggable");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Loggable;
goog.debug.Logger = function(name) {
  this.name_ = name;
  this.parent_ = null;
  this.level_ = null;
  this.children_ = null;
  this.handlers_ = null;
};
goog.debug.Logger.ROOT_LOGGER_NAME = "";
goog.define("goog.debug.Logger.ENABLE_HIERARCHY", true);
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      if (!this.handlers_) {
        this.handlers_ = [];
      }
      this.handlers_.push(handler);
    } else {
      goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootHandlers_.push(handler);
    }
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return!!handlers && goog.array.remove(handlers, handler);
  } else {
    return false;
  }
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      this.level_ = level;
    } else {
      goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootLevel_ = level;
    }
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {
    if (goog.isFunction(msg)) {
      msg = msg();
    }
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception, goog.debug.Logger.prototype.log));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception, opt_fnStackContext) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    var context;
    if (goog.STRICT_MODE_COMPATIBLE) {
      context = opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord;
    } else {
      context = opt_fnStackContext || arguments.callee.caller;
    }
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);
    goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.log");
goog.provide("goog.log.Level");
goog.provide("goog.log.LogRecord");
goog.provide("goog.log.Logger");
goog.require("goog.debug");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.LogRecord");
goog.require("goog.debug.Logger");
goog.define("goog.log.ENABLED", goog.debug.LOGGING_ENABLED);
goog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if (goog.log.ENABLED) {
    var logger = goog.debug.LogManager.getLogger(name);
    if (opt_level && logger) {
      logger.setLevel(opt_level);
    }
    return logger;
  } else {
    return null;
  }
};
goog.log.addHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    logger.addHandler(handler);
  }
};
goog.log.removeHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    return logger.removeHandler(handler);
  } else {
    return false;
  }
};
goog.log.log = function(logger, level, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.log(level, msg, opt_exception);
  }
};
goog.log.error = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.severe(msg, opt_exception);
  }
};
goog.log.warning = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.warning(msg, opt_exception);
  }
};
goog.log.info = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.info(msg, opt_exception);
  }
};
goog.log.fine = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.fine(msg, opt_exception);
  }
};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XhrLike");
goog.net.XhrLike = function() {
};
goog.net.XhrLike.OrNative;
goog.net.XhrLike.prototype.onreadystatechange;
goog.net.XhrLike.prototype.responseText;
goog.net.XhrLike.prototype.responseXML;
goog.net.XhrLike.prototype.readyState;
goog.net.XhrLike.prototype.status;
goog.net.XhrLike.prototype.statusText;
goog.net.XhrLike.prototype.open = function(method, url, opt_async, opt_user, opt_password) {
};
goog.net.XhrLike.prototype.send = function(opt_data) {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function(header, value) {
};
goog.net.XhrLike.prototype.getResponseHeader = function(header) {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
goog.provide("goog.net.XmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.provide("goog.net.XmlHttpDefines");
goog.require("goog.asserts");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.define("goog.net.XmlHttp.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttpDefines = {};
goog.define("goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.Uri");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.net.XhrIo.base(this, "constructor");
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
  this.active_ = false;
  this.xhr_ = null;
  this.xhrOptions_ = null;
  this.lastUri_ = "";
  this.lastMethod_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastError_ = "";
  this.errorDispatched_ = false;
  this.inSend_ = false;
  this.inOpen_ = false;
  this.inAbort_ = false;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.withCredentials_ = false;
  this.useXhr2Timeout_ = false;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    x.listen(goog.net.EventType.COMPLETE, opt_callback);
  }
  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
  return x;
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this);
};
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, String(url), true);
    this.inOpen_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) && !contentTypeKey && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  headers.forEach(function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    this.cleanUpTimeoutTimer_();
    if (this.timeoutInterval_ > 0) {
      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);
      goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_));
      if (this.useXhr2Timeout_) {
        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;
        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this);
      } else {
        this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);
      }
    }
    goog.log.fine(this.logger_, this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);
};
goog.net.XhrIo.isContentTypeHeader_ = function(header) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    goog.log.fine(this.logger_, this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.base(this, "disposeInternal");
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (this.isDisposed()) {
    return;
  }
  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  if (this.xhr_ && this.useXhr2Timeout_) {
    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;
  }
  if (goog.isNumber(this.timeoutId_)) {
    goog.Timer.clear(this.timeoutId_);
    this.timeoutId_ = null;
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getResponseHeaders = function() {
  var headersObject = {};
  var headersArray = this.getAllResponseHeaders().split("\r\n");
  for (var i = 0;i < headersArray.length;i++) {
    if (goog.string.isEmpty(headersArray[i])) {
      continue;
    }
    var keyValue = goog.string.splitLimit(headersArray[i], ": ", 2);
    if (headersObject[keyValue[0]]) {
      headersObject[keyValue[0]] += ", " + keyValue[1];
    } else {
      headersObject[keyValue[0]] = keyValue[1];
    }
  }
  return headersObject;
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("goog.structs.Queue");
goog.require("goog.array");
goog.structs.Queue = function() {
  this.front_ = [];
  this.back_ = [];
};
goog.structs.Queue.prototype.maybeFlip_ = function() {
  if (goog.array.isEmpty(this.front_)) {
    this.front_ = this.back_;
    this.front_.reverse();
    this.back_ = [];
  }
};
goog.structs.Queue.prototype.enqueue = function(element) {
  this.back_.push(element);
};
goog.structs.Queue.prototype.dequeue = function() {
  this.maybeFlip_();
  return this.front_.pop();
};
goog.structs.Queue.prototype.peek = function() {
  this.maybeFlip_();
  return goog.array.peek(this.front_);
};
goog.structs.Queue.prototype.getCount = function() {
  return this.front_.length + this.back_.length;
};
goog.structs.Queue.prototype.isEmpty = function() {
  return goog.array.isEmpty(this.front_) && goog.array.isEmpty(this.back_);
};
goog.structs.Queue.prototype.clear = function() {
  this.front_ = [];
  this.back_ = [];
};
goog.structs.Queue.prototype.contains = function(obj) {
  return goog.array.contains(this.front_, obj) || goog.array.contains(this.back_, obj);
};
goog.structs.Queue.prototype.remove = function(obj) {
  var index = goog.array.lastIndexOf(this.front_, obj);
  if (index < 0) {
    return goog.array.remove(this.back_, obj);
  }
  goog.array.removeAt(this.front_, index);
  return true;
};
goog.structs.Queue.prototype.getValues = function() {
  var res = [];
  for (var i = this.front_.length - 1;i >= 0;--i) {
    res.push(this.front_[i]);
  }
  var len = this.back_.length;
  for (var i = 0;i < len;++i) {
    res.push(this.back_[i]);
  }
  return res;
};
goog.provide("goog.structs.Pool");
goog.require("goog.Disposable");
goog.require("goog.structs.Queue");
goog.require("goog.structs.Set");
goog.structs.Pool = function(opt_minCount, opt_maxCount) {
  goog.Disposable.call(this);
  this.minCount_ = opt_minCount || 0;
  this.maxCount_ = opt_maxCount || 10;
  if (this.minCount_ > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.freeQueue_ = new goog.structs.Queue;
  this.inUseSet_ = new goog.structs.Set;
  this.delay = 0;
  this.lastAccess = null;
  this.adjustForMinMax();
  var magicProps = {canBeReused:0};
};
goog.inherits(goog.structs.Pool, goog.Disposable);
goog.structs.Pool.ERROR_MIN_MAX_ = "[goog.structs.Pool] Min can not be greater than max";
goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_ = "[goog.structs.Pool] Objects not released";
goog.structs.Pool.prototype.setMinimumCount = function(min) {
  if (min > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.minCount_ = min;
  this.adjustForMinMax();
};
goog.structs.Pool.prototype.setMaximumCount = function(max) {
  if (max < this.minCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.maxCount_ = max;
  this.adjustForMinMax();
};
goog.structs.Pool.prototype.setDelay = function(delay) {
  this.delay = delay;
};
goog.structs.Pool.prototype.getObject = function() {
  var time = goog.now();
  if (goog.isDefAndNotNull(this.lastAccess) && time - this.lastAccess < this.delay) {
    return undefined;
  }
  var obj = this.removeFreeObject_();
  if (obj) {
    this.lastAccess = time;
    this.inUseSet_.add(obj);
  }
  return obj;
};
goog.structs.Pool.prototype.releaseObject = function(obj) {
  if (this.inUseSet_.remove(obj)) {
    this.addFreeObject(obj);
    return true;
  }
  return false;
};
goog.structs.Pool.prototype.removeFreeObject_ = function() {
  var obj;
  while (this.getFreeCount() > 0) {
    obj = this.freeQueue_.dequeue();
    if (!this.objectCanBeReused(obj)) {
      this.adjustForMinMax();
    } else {
      break;
    }
  }
  if (!obj && this.getCount() < this.maxCount_) {
    obj = this.createObject();
  }
  return obj;
};
goog.structs.Pool.prototype.addFreeObject = function(obj) {
  this.inUseSet_.remove(obj);
  if (this.objectCanBeReused(obj) && this.getCount() < this.maxCount_) {
    this.freeQueue_.enqueue(obj);
  } else {
    this.disposeObject(obj);
  }
};
goog.structs.Pool.prototype.adjustForMinMax = function() {
  var freeQueue = this.freeQueue_;
  while (this.getCount() < this.minCount_) {
    freeQueue.enqueue(this.createObject());
  }
  while (this.getCount() > this.maxCount_ && this.getFreeCount() > 0) {
    this.disposeObject(freeQueue.dequeue());
  }
};
goog.structs.Pool.prototype.createObject = function() {
  return{};
};
goog.structs.Pool.prototype.disposeObject = function(obj) {
  if (typeof obj.dispose == "function") {
    obj.dispose();
  } else {
    for (var i in obj) {
      obj[i] = null;
    }
  }
};
goog.structs.Pool.prototype.objectCanBeReused = function(obj) {
  if (typeof obj.canBeReused == "function") {
    return obj.canBeReused();
  }
  return true;
};
goog.structs.Pool.prototype.contains = function(obj) {
  return this.freeQueue_.contains(obj) || this.inUseSet_.contains(obj);
};
goog.structs.Pool.prototype.getCount = function() {
  return this.freeQueue_.getCount() + this.inUseSet_.getCount();
};
goog.structs.Pool.prototype.getInUseCount = function() {
  return this.inUseSet_.getCount();
};
goog.structs.Pool.prototype.getFreeCount = function() {
  return this.freeQueue_.getCount();
};
goog.structs.Pool.prototype.isEmpty = function() {
  return this.freeQueue_.isEmpty() && this.inUseSet_.isEmpty();
};
goog.structs.Pool.prototype.disposeInternal = function() {
  goog.structs.Pool.superClass_.disposeInternal.call(this);
  if (this.getInUseCount() > 0) {
    throw Error(goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_);
  }
  delete this.inUseSet_;
  var freeQueue = this.freeQueue_;
  while (!freeQueue.isEmpty()) {
    this.disposeObject(freeQueue.dequeue());
  }
  delete this.freeQueue_;
};
goog.provide("goog.structs.Node");
goog.structs.Node = function(key, value) {
  this.key_ = key;
  this.value_ = value;
};
goog.structs.Node.prototype.getKey = function() {
  return this.key_;
};
goog.structs.Node.prototype.getValue = function() {
  return this.value_;
};
goog.structs.Node.prototype.clone = function() {
  return new goog.structs.Node(this.key_, this.value_);
};
goog.provide("goog.structs.Heap");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.structs.Node");
goog.structs.Heap = function(opt_heap) {
  this.nodes_ = [];
  if (opt_heap) {
    this.insertAll(opt_heap);
  }
};
goog.structs.Heap.prototype.insert = function(key, value) {
  var node = new goog.structs.Node(key, value);
  var nodes = this.nodes_;
  nodes.push(node);
  this.moveUp_(nodes.length - 1);
};
goog.structs.Heap.prototype.insertAll = function(heap) {
  var keys, values;
  if (heap instanceof goog.structs.Heap) {
    keys = heap.getKeys();
    values = heap.getValues();
    if (heap.getCount() <= 0) {
      var nodes = this.nodes_;
      for (var i = 0;i < keys.length;i++) {
        nodes.push(new goog.structs.Node(keys[i], values[i]));
      }
      return;
    }
  } else {
    keys = goog.object.getKeys(heap);
    values = goog.object.getValues(heap);
  }
  for (var i = 0;i < keys.length;i++) {
    this.insert(keys[i], values[i]);
  }
};
goog.structs.Heap.prototype.remove = function() {
  var nodes = this.nodes_;
  var count = nodes.length;
  var rootNode = nodes[0];
  if (count <= 0) {
    return undefined;
  } else {
    if (count == 1) {
      goog.array.clear(nodes);
    } else {
      nodes[0] = nodes.pop();
      this.moveDown_(0);
    }
  }
  return rootNode.getValue();
};
goog.structs.Heap.prototype.peek = function() {
  var nodes = this.nodes_;
  if (nodes.length == 0) {
    return undefined;
  }
  return nodes[0].getValue();
};
goog.structs.Heap.prototype.peekKey = function() {
  return this.nodes_[0] && this.nodes_[0].getKey();
};
goog.structs.Heap.prototype.moveDown_ = function(index) {
  var nodes = this.nodes_;
  var count = nodes.length;
  var node = nodes[index];
  while (index < count >> 1) {
    var leftChildIndex = this.getLeftChildIndex_(index);
    var rightChildIndex = this.getRightChildIndex_(index);
    var smallerChildIndex = rightChildIndex < count && nodes[rightChildIndex].getKey() < nodes[leftChildIndex].getKey() ? rightChildIndex : leftChildIndex;
    if (nodes[smallerChildIndex].getKey() > node.getKey()) {
      break;
    }
    nodes[index] = nodes[smallerChildIndex];
    index = smallerChildIndex;
  }
  nodes[index] = node;
};
goog.structs.Heap.prototype.moveUp_ = function(index) {
  var nodes = this.nodes_;
  var node = nodes[index];
  while (index > 0) {
    var parentIndex = this.getParentIndex_(index);
    if (nodes[parentIndex].getKey() > node.getKey()) {
      nodes[index] = nodes[parentIndex];
      index = parentIndex;
    } else {
      break;
    }
  }
  nodes[index] = node;
};
goog.structs.Heap.prototype.getLeftChildIndex_ = function(index) {
  return index * 2 + 1;
};
goog.structs.Heap.prototype.getRightChildIndex_ = function(index) {
  return index * 2 + 2;
};
goog.structs.Heap.prototype.getParentIndex_ = function(index) {
  return index - 1 >> 1;
};
goog.structs.Heap.prototype.getValues = function() {
  var nodes = this.nodes_;
  var rv = [];
  var l = nodes.length;
  for (var i = 0;i < l;i++) {
    rv.push(nodes[i].getValue());
  }
  return rv;
};
goog.structs.Heap.prototype.getKeys = function() {
  var nodes = this.nodes_;
  var rv = [];
  var l = nodes.length;
  for (var i = 0;i < l;i++) {
    rv.push(nodes[i].getKey());
  }
  return rv;
};
goog.structs.Heap.prototype.containsValue = function(val) {
  return goog.array.some(this.nodes_, function(node) {
    return node.getValue() == val;
  });
};
goog.structs.Heap.prototype.containsKey = function(key) {
  return goog.array.some(this.nodes_, function(node) {
    return node.getKey() == key;
  });
};
goog.structs.Heap.prototype.clone = function() {
  return new goog.structs.Heap(this);
};
goog.structs.Heap.prototype.getCount = function() {
  return this.nodes_.length;
};
goog.structs.Heap.prototype.isEmpty = function() {
  return goog.array.isEmpty(this.nodes_);
};
goog.structs.Heap.prototype.clear = function() {
  goog.array.clear(this.nodes_);
};
goog.provide("goog.structs.PriorityQueue");
goog.require("goog.structs.Heap");
goog.structs.PriorityQueue = function() {
  goog.structs.Heap.call(this);
};
goog.inherits(goog.structs.PriorityQueue, goog.structs.Heap);
goog.structs.PriorityQueue.prototype.enqueue = function(priority, value) {
  this.insert(priority, value);
};
goog.structs.PriorityQueue.prototype.dequeue = function() {
  return this.remove();
};
goog.provide("goog.structs.PriorityPool");
goog.require("goog.structs.Pool");
goog.require("goog.structs.PriorityQueue");
goog.structs.PriorityPool = function(opt_minCount, opt_maxCount) {
  this.delayTimeout_ = undefined;
  this.requestQueue_ = new goog.structs.PriorityQueue;
  goog.structs.Pool.call(this, opt_minCount, opt_maxCount);
};
goog.inherits(goog.structs.PriorityPool, goog.structs.Pool);
goog.structs.PriorityPool.DEFAULT_PRIORITY_ = 100;
goog.structs.PriorityPool.prototype.setDelay = function(delay) {
  goog.structs.PriorityPool.base(this, "setDelay", delay);
  if (!goog.isDefAndNotNull(this.lastAccess)) {
    return;
  }
  goog.global.clearTimeout(this.delayTimeout_);
  this.delayTimeout_ = goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay + this.lastAccess - goog.now());
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.getObject = function(opt_callback, opt_priority) {
  if (!opt_callback) {
    var result = goog.structs.PriorityPool.base(this, "getObject");
    if (result && this.delay) {
      this.delayTimeout_ = goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay);
    }
    return result;
  }
  var priority = goog.isDef(opt_priority) ? opt_priority : goog.structs.PriorityPool.DEFAULT_PRIORITY_;
  this.requestQueue_.enqueue(priority, opt_callback);
  this.handleQueueRequests_();
  return undefined;
};
goog.structs.PriorityPool.prototype.handleQueueRequests_ = function() {
  var requestQueue = this.requestQueue_;
  while (requestQueue.getCount() > 0) {
    var obj = this.getObject();
    if (!obj) {
      return;
    } else {
      var requestCallback = requestQueue.dequeue();
      requestCallback.apply(this, [obj]);
    }
  }
};
goog.structs.PriorityPool.prototype.addFreeObject = function(obj) {
  goog.structs.PriorityPool.superClass_.addFreeObject.call(this, obj);
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.adjustForMinMax = function() {
  goog.structs.PriorityPool.superClass_.adjustForMinMax.call(this);
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.disposeInternal = function() {
  goog.structs.PriorityPool.superClass_.disposeInternal.call(this);
  goog.global.clearTimeout(this.delayTimeout_);
  this.requestQueue_.clear();
  this.requestQueue_ = null;
};
goog.provide("goog.net.XhrIoPool");
goog.require("goog.net.XhrIo");
goog.require("goog.structs.PriorityPool");
goog.net.XhrIoPool = function(opt_headers, opt_minCount, opt_maxCount) {
  goog.structs.PriorityPool.call(this, opt_minCount, opt_maxCount);
  this.headers_ = opt_headers;
};
goog.inherits(goog.net.XhrIoPool, goog.structs.PriorityPool);
goog.net.XhrIoPool.prototype.createObject = function() {
  var xhrIo = new goog.net.XhrIo;
  var headers = this.headers_;
  if (headers) {
    headers.forEach(function(value, key) {
      xhrIo.headers.set(key, value);
    });
  }
  return xhrIo;
};
goog.net.XhrIoPool.prototype.objectCanBeReused = function(obj) {
  var xhr = (obj);
  return!xhr.isDisposed() && !xhr.isActive();
};
goog.provide("goog.net.XhrManager");
goog.provide("goog.net.XhrManager.Event");
goog.provide("goog.net.XhrManager.Request");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("goog.net.XhrIoPool");
goog.require("goog.structs.Map");
goog.net.XhrManager = function(opt_maxRetries, opt_headers, opt_minCount, opt_maxCount, opt_timeoutInterval) {
  goog.net.XhrManager.base(this, "constructor");
  this.maxRetries_ = goog.isDef(opt_maxRetries) ? opt_maxRetries : 1;
  this.timeoutInterval_ = goog.isDef(opt_timeoutInterval) ? Math.max(0, opt_timeoutInterval) : 0;
  this.xhrPool_ = new goog.net.XhrIoPool(opt_headers, opt_minCount, opt_maxCount);
  this.requests_ = new goog.structs.Map;
  this.eventHandler_ = new goog.events.EventHandler(this);
};
goog.inherits(goog.net.XhrManager, goog.events.EventTarget);
goog.net.XhrManager.ERROR_ID_IN_USE_ = "[goog.net.XhrManager] ID in use";
goog.net.XhrManager.XHR_EVENT_TYPES_ = [goog.net.EventType.READY, goog.net.EventType.COMPLETE, goog.net.EventType.SUCCESS, goog.net.EventType.ERROR, goog.net.EventType.ABORT, goog.net.EventType.TIMEOUT];
goog.net.XhrManager.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrManager.prototype.getOutstandingCount = function() {
  return this.requests_.getCount();
};
goog.net.XhrManager.prototype.getOutstandingRequestIds = function() {
  return this.requests_.getKeys();
};
goog.net.XhrManager.prototype.send = function(id, url, opt_method, opt_content, opt_headers, opt_priority, opt_callback, opt_maxRetries, opt_responseType) {
  var requests = this.requests_;
  if (requests.get(id)) {
    throw Error(goog.net.XhrManager.ERROR_ID_IN_USE_);
  }
  var request = new goog.net.XhrManager.Request(url, goog.bind(this.handleEvent_, this, id), opt_method, opt_content, opt_headers, opt_callback, goog.isDef(opt_maxRetries) ? opt_maxRetries : this.maxRetries_, opt_responseType);
  this.requests_.set(id, request);
  var callback = goog.bind(this.handleAvailableXhr_, this, id);
  this.xhrPool_.getObject(callback, opt_priority);
  return request;
};
goog.net.XhrManager.prototype.abort = function(id, opt_force) {
  var request = this.requests_.get(id);
  if (request) {
    var xhrIo = request.xhrIo;
    request.setAborted(true);
    if (opt_force) {
      if (xhrIo) {
        this.removeXhrListener_(xhrIo, request.getXhrEventCallback());
        goog.events.listenOnce(xhrIo, goog.net.EventType.READY, function() {
          this.xhrPool_.releaseObject(xhrIo);
        }, false, this);
      }
      this.requests_.remove(id);
    }
    if (xhrIo) {
      xhrIo.abort();
    }
  }
};
goog.net.XhrManager.prototype.handleAvailableXhr_ = function(id, xhrIo) {
  var request = this.requests_.get(id);
  if (request && !request.xhrIo) {
    this.addXhrListener_(xhrIo, request.getXhrEventCallback());
    xhrIo.setTimeoutInterval(this.timeoutInterval_);
    xhrIo.setResponseType(request.getResponseType());
    request.xhrIo = xhrIo;
    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.READY, this, id, xhrIo));
    this.retry_(id, xhrIo);
    if (request.getAborted()) {
      xhrIo.abort();
    }
  } else {
    this.xhrPool_.releaseObject(xhrIo);
  }
};
goog.net.XhrManager.prototype.handleEvent_ = function(id, e) {
  var xhrIo = (e.target);
  switch(e.type) {
    case goog.net.EventType.READY:
      this.retry_(id, xhrIo);
      break;
    case goog.net.EventType.COMPLETE:
      return this.handleComplete_(id, xhrIo, e);
    case goog.net.EventType.SUCCESS:
      this.handleSuccess_(id, xhrIo);
      break;
    case goog.net.EventType.TIMEOUT:
    ;
    case goog.net.EventType.ERROR:
      this.handleError_(id, xhrIo);
      break;
    case goog.net.EventType.ABORT:
      this.handleAbort_(id, xhrIo);
      break;
  }
  return null;
};
goog.net.XhrManager.prototype.retry_ = function(id, xhrIo) {
  var request = this.requests_.get(id);
  if (request && !request.getCompleted() && !request.hasReachedMaxRetries()) {
    request.increaseAttemptCount();
    xhrIo.send(request.getUrl(), request.getMethod(), request.getContent(), request.getHeaders());
  } else {
    if (request) {
      this.removeXhrListener_(xhrIo, request.getXhrEventCallback());
      this.requests_.remove(id);
    }
    this.xhrPool_.releaseObject(xhrIo);
  }
};
goog.net.XhrManager.prototype.handleComplete_ = function(id, xhrIo, e) {
  var request = this.requests_.get(id);
  if (xhrIo.getLastErrorCode() == goog.net.ErrorCode.ABORT || xhrIo.isSuccess() || request.hasReachedMaxRetries()) {
    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.COMPLETE, this, id, xhrIo));
    if (request) {
      request.setCompleted(true);
      if (request.getCompleteCallback()) {
        return request.getCompleteCallback().call(xhrIo, e);
      }
    }
  }
  return null;
};
goog.net.XhrManager.prototype.handleAbort_ = function(id, xhrIo) {
  this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.ABORT, this, id, xhrIo));
};
goog.net.XhrManager.prototype.handleSuccess_ = function(id, xhrIo) {
  this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.SUCCESS, this, id, xhrIo));
};
goog.net.XhrManager.prototype.handleError_ = function(id, xhrIo) {
  var request = this.requests_.get(id);
  if (request.hasReachedMaxRetries()) {
    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.ERROR, this, id, xhrIo));
  }
};
goog.net.XhrManager.prototype.removeXhrListener_ = function(xhrIo, func, opt_types) {
  var types = opt_types || goog.net.XhrManager.XHR_EVENT_TYPES_;
  this.eventHandler_.unlisten(xhrIo, types, func);
};
goog.net.XhrManager.prototype.addXhrListener_ = function(xhrIo, func, opt_types) {
  var types = opt_types || goog.net.XhrManager.XHR_EVENT_TYPES_;
  this.eventHandler_.listen(xhrIo, types, func);
};
goog.net.XhrManager.prototype.disposeInternal = function() {
  goog.net.XhrManager.superClass_.disposeInternal.call(this);
  this.xhrPool_.dispose();
  this.xhrPool_ = null;
  this.eventHandler_.dispose();
  this.eventHandler_ = null;
  this.requests_.clear();
  this.requests_ = null;
};
goog.net.XhrManager.Event = function(type, target, id, xhrIo) {
  goog.events.Event.call(this, type, target);
  this.id = id;
  this.xhrIo = xhrIo;
};
goog.inherits(goog.net.XhrManager.Event, goog.events.Event);
goog.net.XhrManager.Request = function(url, xhrEventCallback, opt_method, opt_content, opt_headers, opt_callback, opt_maxRetries, opt_responseType) {
  this.url_ = url;
  this.method_ = opt_method || "GET";
  this.content_ = opt_content;
  this.headers_ = opt_headers || null;
  this.maxRetries_ = goog.isDef(opt_maxRetries) ? opt_maxRetries : 1;
  this.attemptCount_ = 0;
  this.completed_ = false;
  this.aborted_ = false;
  this.xhrEventCallback_ = xhrEventCallback;
  this.completeCallback_ = opt_callback;
  this.responseType_ = opt_responseType || goog.net.XhrIo.ResponseType.DEFAULT;
  this.xhrIo = null;
};
goog.net.XhrManager.Request.prototype.getUrl = function() {
  return this.url_;
};
goog.net.XhrManager.Request.prototype.getMethod = function() {
  return this.method_;
};
goog.net.XhrManager.Request.prototype.getContent = function() {
  return this.content_;
};
goog.net.XhrManager.Request.prototype.getHeaders = function() {
  return this.headers_;
};
goog.net.XhrManager.Request.prototype.getMaxRetries = function() {
  return this.maxRetries_;
};
goog.net.XhrManager.Request.prototype.getAttemptCount = function() {
  return this.attemptCount_;
};
goog.net.XhrManager.Request.prototype.increaseAttemptCount = function() {
  this.attemptCount_++;
};
goog.net.XhrManager.Request.prototype.hasReachedMaxRetries = function() {
  return this.attemptCount_ > this.maxRetries_;
};
goog.net.XhrManager.Request.prototype.setCompleted = function(complete) {
  this.completed_ = complete;
};
goog.net.XhrManager.Request.prototype.getCompleted = function() {
  return this.completed_;
};
goog.net.XhrManager.Request.prototype.setAborted = function(aborted) {
  this.aborted_ = aborted;
};
goog.net.XhrManager.Request.prototype.getAborted = function() {
  return this.aborted_;
};
goog.net.XhrManager.Request.prototype.getXhrEventCallback = function() {
  return this.xhrEventCallback_;
};
goog.net.XhrManager.Request.prototype.getCompleteCallback = function() {
  return this.completeCallback_;
};
goog.net.XhrManager.Request.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("com.cognitect.transit.util");
goog.require("goog.object");
goog.scope(function() {
  var util = com.cognitect.transit.util, gobject = goog.object;
  if (typeof Object.keys != "undefined") {
    util.objectKeys = function(obj) {
      return Object.keys(obj);
    };
  } else {
    util.objectKeys = function(obj) {
      return gobject.getKeys(obj);
    };
  }
  if (typeof Array.isArray != "undefined") {
    util.isArray = function(obj) {
      return Array.isArray(obj);
    };
  } else {
    util.isArray = function(obj) {
      return goog.typeOf(obj) === "array";
    };
  }
  util.chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\x3d";
  util.randInt = function(ub) {
    return Math.round(Math.random() * ub);
  };
  util.randHex = function() {
    return util.randInt(15).toString(16);
  };
  util.randomUUID = function() {
    var rhex = (8 | 3 & util.randInt(14)).toString(16), ret = util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + "4" + util.randHex() + util.randHex() + util.randHex() + "-" + rhex + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + 
    util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex();
    return ret;
  };
  util.btoa = function(input) {
    if (typeof btoa != "undefined") {
      return btoa(input);
    } else {
      var str = String(input);
      for (var block, charCode, idx = 0, map = util.chars, output = "";str.charAt(idx | 0) || (map = "\x3d", idx % 1);output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {
        charCode = str.charCodeAt(idx += 3 / 4);
        if (charCode > 255) {
          throw new Error("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");
        }
        block = block << 8 | charCode;
      }
      return output;
    }
  };
  util.atob = function(input) {
    if (typeof atob != "undefined") {
      return atob(input);
    } else {
      var str = String(input).replace(/=+$/, "");
      if (str.length % 4 == 1) {
        throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");
      }
      for (var bc = 0, bs, buffer, idx = 0, output = "";buffer = str.charAt(idx++);~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {
        buffer = util.chars.indexOf(buffer);
      }
      return output;
    }
  };
  util.Uint8ToBase64 = function(u8Arr) {
    var CHUNK_SIZE = 32768, index = 0, length = u8Arr.length, result = "", slice = null;
    while (index < length) {
      slice = u8Arr.subarray(index, Math.min(index + CHUNK_SIZE, length));
      result += String.fromCharCode.apply(null, slice);
      index += CHUNK_SIZE;
    }
    return util.btoa(result);
  };
  util.Base64ToUint8 = function(base64) {
    var binary_string = util.atob(base64), len = binary_string.length, bytes = new Uint8Array(len);
    for (var i = 0;i < len;i++) {
      var ascii = binary_string.charCodeAt(i);
      bytes[i] = ascii;
    }
    return bytes;
  };
});
goog.provide("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.util");
goog.scope(function() {
  var eq = com.cognitect.transit.eq, util = com.cognitect.transit.util;
  eq.hashCodeProperty = "transit$hashCode$";
  eq.hashCodeCounter = 1;
  eq.equals = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      if (x === y) {
        return true;
      } else {
        if (typeof x === "object") {
          if (util.isArray(x)) {
            if (util.isArray(y)) {
              if (x.length === y.length) {
                for (var i = 0;i < x.length;i++) {
                  if (!eq.equals(x[i], y[i])) {
                    return false;
                  }
                }
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          } else {
            if (x.com$cognitect$transit$equals) {
              return x.com$cognitect$transit$equals(y);
            } else {
              if (y != null && typeof y === "object") {
                if (y.com$cognitect$transit$equals) {
                  return y.com$cognitect$transit$equals(x);
                } else {
                  var xklen = 0, yklen = util.objectKeys(y).length;
                  for (var p in x) {
                    if (!x.hasOwnProperty(p)) {
                      continue;
                    }
                    xklen++;
                    if (!y.hasOwnProperty(p)) {
                      return false;
                    } else {
                      if (!eq.equals(x[p], y[p])) {
                        return false;
                      }
                    }
                  }
                  return xklen === yklen;
                }
              } else {
                return false;
              }
            }
          }
        } else {
          return false;
        }
      }
    }
  };
  eq.hashCombine = function(seed, hash) {
    return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
  };
  eq.stringCodeCache = {};
  eq.stringCodeCacheSize = 0;
  eq.STR_CACHE_MAX = 256;
  eq.hashString = function(str) {
    var cached = eq.stringCodeCache[str];
    if (cached != null) {
      return cached;
    }
    var code = 0;
    for (var i = 0;i < str.length;++i) {
      code = 31 * code + str.charCodeAt(i);
      code %= 4294967296;
    }
    eq.stringCodeCacheSize++;
    if (eq.stringCodeCacheSize >= eq.STR_CACHE_MAX) {
      eq.stringCodeCache = {};
      eq.stringCodeCacheSize = 1;
    }
    eq.stringCodeCache[str] = code;
    return code;
  };
  eq.hashMapLike = function(m) {
    var code = 0;
    if (m.forEach != null) {
      m.forEach(function(val, key, m) {
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      });
    } else {
      var keys = util.objectKeys(m);
      for (var i = 0;i < keys.length;i++) {
        var key = keys[i];
        var val = m[key];
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      }
    }
    return code;
  };
  eq.hashArrayLike = function(arr) {
    var code = 0;
    if (util.isArray(arr)) {
      for (var i = 0;i < arr.length;i++) {
        code = eq.hashCombine(code, eq.hashCode(arr[i]));
      }
    } else {
      if (arr.forEach) {
        arr.forEach(function(x, i) {
          code = eq.hashCombine(code, eq.hashCode(x));
        });
      }
    }
    return code;
  };
  eq.hashCode = function(x) {
    if (x == null) {
      return 0;
    } else {
      switch(typeof x) {
        case "number":
          return x;
          break;
        case "boolean":
          return x === true ? 1 : 0;
          break;
        case "string":
          return eq.hashString(x);
          break;
        case "function":
          var code = x[eq.hashCodeProperty];
          if (code) {
            return code;
          } else {
            code = eq.hashCodeCounter;
            if (typeof Object.defineProperty != "undefined") {
              Object.defineProperty(x, eq.hashCodeProperty, {value:code, enumerable:false});
            } else {
              x[eq.hashCodeProperty] = code;
            }
            eq.hashCodeCounter++;
            return code;
          }
          break;
        default:
          if (x instanceof Date) {
            return x.valueOf();
          } else {
            if (util.isArray(x)) {
              return eq.hashArrayLike(x);
            }
          }
          if (x.com$cognitect$transit$hashCode) {
            return x.com$cognitect$transit$hashCode();
          } else {
            return eq.hashMapLike(x);
          }
          break;
      }
    }
  };
  eq.extendToEQ = function(obj, opts) {
    obj.com$cognitect$transit$hashCode = opts["hashCode"];
    obj.com$cognitect$transit$equals = opts["equals"];
    return obj;
  };
});
goog.provide("goog.math.Long");
goog.math.Long = function(low, high) {
  this.low_ = low | 0;
  this.high_ = high | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = goog.math.Long.IntCache_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }
  var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    goog.math.Long.IntCache_[value] = obj;
  }
  return obj;
};
goog.math.Long.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Long.ZERO;
  } else {
    if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else {
      if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.MAX_VALUE;
      } else {
        if (value < 0) {
          return goog.math.Long.fromNumber(-value).negate();
        } else {
          return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
        }
      }
    }
  }
};
goog.math.Long.fromBits = function(lowBits, highBits) {
  return new goog.math.Long(lowBits, highBits);
};
goog.math.Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Long.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Long.ZERO;
  for (var i = 0;i < str.length;i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Long.fromNumber(value));
    }
  }
  return result;
};
goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_31_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ / 2;
goog.math.Long.TWO_PWR_48_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.ZERO = goog.math.Long.fromInt(0);
goog.math.Long.ONE = goog.math.Long.fromInt(1);
goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
goog.math.Long.MAX_VALUE = goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 2147483648 | 0);
goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      var radixLong = goog.math.Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31;bit > 0;bit--) {
      if ((val & 1 << bit) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};
goog.math.Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};
goog.math.Long.prototype.isNegative = function() {
  return this.high_ < 0;
};
goog.math.Long.prototype.isOdd = function() {
  return(this.low_ & 1) == 1;
};
goog.math.Long.prototype.equals = function(other) {
  return this.high_ == other.high_ && this.low_ == other.low_;
};
goog.math.Long.prototype.notEquals = function(other) {
  return this.high_ != other.high_ || this.low_ != other.low_;
};
goog.math.Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }
  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return-1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }
  if (this.subtract(other).isNegative()) {
    return-1;
  } else {
    return 1;
  }
};
goog.math.Long.prototype.negate = function() {
  if (this.equals(goog.math.Long.MIN_VALUE)) {
    return goog.math.Long.MIN_VALUE;
  } else {
    return this.not().add(goog.math.Long.ONE);
  }
};
goog.math.Long.prototype.add = function(other) {
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 + b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Long.ZERO;
  } else {
    if (other.isZero()) {
      return goog.math.Long.ZERO;
    }
  }
  if (this.equals(goog.math.Long.MIN_VALUE)) {
    return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
  } else {
    if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Long.TWO_PWR_24_) && other.lessThan(goog.math.Long.TWO_PWR_24_)) {
    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
  }
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    }
  }
  if (this.equals(goog.math.Long.MIN_VALUE)) {
    if (other.equals(goog.math.Long.ONE) || other.equals(goog.math.Long.NEG_ONE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    }
  } else {
    if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
  }
  var res = goog.math.Long.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Long.ONE;
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(other) {
  return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};
goog.math.Long.prototype.or = function(other) {
  return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};
goog.math.Long.prototype.xor = function(other) {
  return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};
goog.math.Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
    } else {
      return goog.math.Long.fromBits(0, low << numBits - 32);
    }
  }
};
goog.math.Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
    } else {
      return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
    }
  }
};
goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
    } else {
      if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  }
};
goog.provide("com.cognitect.transit.types");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
goog.scope(function() {
  var types = com.cognitect.transit.types, util = com.cognitect.transit.util, eq = com.cognitect.transit.eq, Long = goog.math.Long;
  types.TaggedValue = function(tag, rep) {
    this.tag = tag;
    this.rep = rep;
    this.hashCode = -1;
  };
  types.TaggedValue.prototype.toString = function() {
    return "[TaggedValue: " + this.tag + ", " + this.rep + "]";
  };
  types.TaggedValue.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.TaggedValue.prototype["equiv"] = types.TaggedValue.prototype.equiv;
  types.TaggedValue.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TaggedValue) {
      return this.tag === other.tag && eq.equals(this.rep, other.rep);
    } else {
      return false;
    }
  };
  types.TaggedValue.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCombine(eq.hashCode(this.tag), eq.hashCode(this.rep));
    }
    return this.hashCode;
  };
  types.taggedValue = function(tag, rep) {
    return new types.TaggedValue(tag, rep);
  };
  types.isTaggedValue = function(x) {
    return x instanceof types.TaggedValue;
  };
  types.nullValue = function() {
    return null;
  };
  types.boolValue = function(s) {
    return s === "t";
  };
  types.MAX_INT = Long.fromString("9007199254740992");
  types.MIN_INT = Long.fromString("-9007199254740992");
  types.intValue = function(s) {
    if (typeof s === "number") {
      return s;
    } else {
      if (s instanceof Long) {
        return s;
      } else {
        var n = Long.fromString(s, 10);
        if (n.greaterThan(types.MAX_INT) || n.lessThan(types.MIN_INT)) {
          return n;
        } else {
          return n.toNumber();
        }
      }
    }
  };
  Long.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  Long.prototype["equiv"] = Long.prototype.equiv;
  Long.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof Long && this.equals(other);
  };
  Long.prototype.com$cognitect$transit$hashCode = function() {
    return this.toInt();
  };
  types.isInteger = function(x) {
    if (x instanceof Long) {
      return true;
    } else {
      return typeof x === "number" && !isNaN(x) && !(x === Infinity) && parseFloat(x) === parseInt(x);
    }
  };
  types.floatValue = function(s) {
    return parseFloat(s);
  };
  types.bigInteger = function(s) {
    return types.taggedValue("n", s);
  };
  types.isBigInteger = function(x) {
    return x instanceof types.TaggedValue && x.tag === "n";
  };
  types.bigDecimalValue = function(s) {
    return types.taggedValue("f", s);
  };
  types.isBigDecimal = function(x) {
    return x instanceof types.TaggedValue && x.tag === "f";
  };
  types.charValue = function(s) {
    return s;
  };
  types.Keyword = function(name) {
    this.name = name;
    this.hashCode = -1;
  };
  types.Keyword.prototype.toString = function() {
    return ":" + this.name;
  };
  types.Keyword.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Keyword.prototype["equiv"] = types.Keyword.prototype.equiv;
  types.Keyword.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Keyword && this.name == other.name;
  };
  types.Keyword.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.name);
    }
    return this.hashCode;
  };
  types.keyword = function(s) {
    return new types.Keyword(s);
  };
  types.isKeyword = function(x) {
    return x instanceof types.Keyword;
  };
  types.Symbol = function(name) {
    this.name = name;
    this.hashCode = -1;
  };
  types.Symbol.prototype.toString = function() {
    return "[Symbol: " + this.name + "]";
  };
  types.Symbol.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Symbol.prototype["equiv"] = types.Symbol.prototype.equiv;
  types.Symbol.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Symbol && this.name == other.name;
  };
  types.Symbol.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.name);
    }
    return this.hashCode;
  };
  types.symbol = function(s) {
    return new types.Symbol(s);
  };
  types.isSymbol = function(x) {
    return x instanceof types.Symbol;
  };
  types.hexFor = function(aLong, sidx, eidx) {
    var ret = "", eidx = eidx || sidx + 1;
    for (var i = sidx, shift = (7 - i) * 8, mask = Long.fromInt(255).shiftLeft(shift);i < eidx;i++, shift -= 8, mask = mask.shiftRightUnsigned(8)) {
      var s = aLong.and(mask).shiftRightUnsigned(shift).toString(16);
      if (s.length == 1) {
        s = "0" + s;
      }
      ret += s;
    }
    return ret;
  };
  types.UUID = function(high, low) {
    this.high = high;
    this.low = low;
    this.hashCode = -1;
  };
  types.UUID.prototype.getLeastSignificantBits = function() {
    return this.low;
  };
  types.UUID.prototype.getMostSignificantBits = function() {
    return this.high;
  };
  types.UUID.prototype.toString = function(s) {
    var s = "", hi64 = this.high, lo64 = this.low;
    s += types.hexFor(hi64, 0, 4) + "-";
    s += types.hexFor(hi64, 4, 6) + "-";
    s += types.hexFor(hi64, 6, 8) + "-";
    s += types.hexFor(lo64, 0, 2) + "-";
    s += types.hexFor(lo64, 2, 8);
    return s;
  };
  types.UUID.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.UUID.prototype["equiv"] = types.UUID.prototype.equiv;
  types.UUID.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.UUID && this.high.equals(other.high) && this.low.equals(other.low);
  };
  types.UUID.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.toString());
    }
    return this.hashCode;
  };
  types.UUIDfromString = function uuidFromString(s) {
    var s = s.replace(/-/g, ""), hi64 = null, lo64 = null, hi32 = 0, lo32 = 0, off = 24, i = 0;
    for (hi32 = 0, i = 0, off = 24;i < 8;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 8, off = 24;i < 16;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    hi64 = Long.fromBits(lo32, hi32);
    for (hi32 = 0, i = 16, off = 24;i < 24;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 24, off = 24;i < 32;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    lo64 = Long.fromBits(lo32, hi32);
    return new types.UUID(hi64, lo64);
  };
  types.uuid = function(s) {
    return types.UUIDfromString(s);
  };
  types.isUUID = function(x) {
    return x instanceof types.UUID;
  };
  types.date = function(s) {
    s = typeof s === "number" ? s : parseInt(s, 10);
    return new Date(s);
  };
  types.verboseDate = function(s) {
    return new Date(s);
  };
  Date.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof Date) {
      return this.valueOf() === other.valueOf();
    } else {
      return false;
    }
  };
  Date.prototype.com$cognitect$transit$hashCode = function() {
    return this.valueOf();
  };
  types.binary = function(str, decoder) {
    if ((!decoder || decoder.preferBuffers !== false) && typeof Buffer != "undefined") {
      return new Buffer(str, "base64");
    } else {
      if (typeof Uint8Array != "undefined") {
        return util.Base64ToUint8(str);
      } else {
        return types.taggedValue("b", str);
      }
    }
  };
  types.isBinary = function(x) {
    if (typeof Buffer != "undefined" && x instanceof Buffer) {
      return true;
    } else {
      if (typeof Uint8Array != "undefined" && x instanceof Uint8Array) {
        return true;
      } else {
        return x instanceof types.TaggedValue && x.tag === "b";
      }
    }
  };
  types.uri = function(s) {
    return types.taggedValue("r", s);
  };
  types.isURI = function(x) {
    return x instanceof types.TaggedValue && x.tag === "r";
  };
  types.KEYS = 0;
  types.VALUES = 1;
  types.ENTRIES = 2;
  types.TransitArrayMapIterator = function(entries, type) {
    this.entries = entries;
    this.type = type || types.KEYS;
    this.idx = 0;
  };
  types.TransitArrayMapIterator.prototype.next = function(map, type) {
    if (this.idx < this.entries.length) {
      var value = null;
      if (this.type === types.KEYS) {
        value = this.entries[this.idx];
      } else {
        if (this.type === types.VALUES) {
          value = this.entries[this.idx + 1];
        } else {
          value = [this.entries[this.idx], this.entries[this.idx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx += 2;
      return ret;
    } else {
      return{"value":null, "done":true};
    }
  };
  types.TransitArrayMapIterator.prototype["next"] = types.TransitArrayMapIterator.prototype.next;
  types.TransitMapIterator = function(map, type) {
    this.map = map;
    this.type = type || types.KEYS;
    this.keys = this.map.getKeys();
    this.idx = 0;
    this.bucket = null;
    this.bucketIdx = 0;
  };
  types.TransitMapIterator.prototype.next = function() {
    if (this.idx < this.map.size) {
      if (this.bucket == null || !(this.bucketIdx < this.bucket.length)) {
        this.bucket = this.map.map[this.keys[this.idx]];
        this.bucketIdx = 0;
      }
      var value = null;
      if (this.type === types.KEYS) {
        value = this.bucket[this.bucketIdx];
      } else {
        if (this.type === types.VALUES) {
          value = this.bucket[this.bucketIdx + 1];
        } else {
          value = [this.bucket[this.bucketIdx], this.bucket[this.bucketIdx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx++;
      this.bucketIdx += 2;
      return ret;
    } else {
      return{"value":null, "done":true};
    }
  };
  types.TransitMapIterator.prototype["next"] = types.TransitMapIterator.prototype.next;
  types.mapEquals = function(me, you) {
    if ((you instanceof types.TransitMap || you instanceof types.TransitArrayMap) && me.size === you.size) {
      for (var code in me.map) {
        var bucket = me.map[code];
        for (var j = 0;j < bucket.length;j += 2) {
          if (!eq.equals(bucket[j + 1], you.get(bucket[j]))) {
            return false;
          }
        }
      }
      return true;
    } else {
      if (you != null && typeof you === "object") {
        var ks = util.objectKeys(you), kslen = ks.length;
        if (me.size === kslen) {
          for (var i = 0;i < kslen;i++) {
            var k = ks[i];
            if (!me.has(k) || !eq.equals(you[k], me.get(k))) {
              return false;
            }
          }
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  };
  types.SMALL_ARRAY_MAP_THRESHOLD = 8;
  types.ARRAY_MAP_THRESHOLD = 32;
  types.ARRAY_MAP_ACCESS_THRESHOLD = 32;
  types.TransitArrayMap = function(entries) {
    this._entries = entries;
    this.backingMap = null;
    this.hashCode = -1;
    this.size = entries.length / 2;
    this.accesses = 0;
  };
  types.TransitArrayMap.prototype.toString = function() {
    return "[TransitArrayMap]";
  };
  types.TransitArrayMap.prototype.convert = function() {
    if (this.backingMap) {
      throw Error("Invalid operation, already converted");
    }
    if (this.size < types.SMALL_ARRAY_MAP_THRESHOLD) {
      return false;
    }
    this.accesses++;
    if (this.accesses > types.ARRAY_MAP_ACCESS_THRESHOLD) {
      this.backingMap = types.map(this._entries, false, true);
      this._entries = [];
      return true;
    } else {
      return false;
    }
  };
  types.TransitArrayMap.prototype.clear = function() {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.clear();
      this.size = 0;
    } else {
      this._entries = [];
      this.size = 0;
    }
  };
  types.TransitArrayMap.prototype["clear"] = types.TransitArrayMap.prototype.clear;
  types.TransitArrayMap.prototype.keys = function() {
    if (this.backingMap) {
      return this.backingMap.keys();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.KEYS);
    }
  };
  types.TransitArrayMap.prototype["keys"] = types.TransitArrayMap.prototype.keys;
  types.TransitArrayMap.prototype.keySet = function() {
    if (this.backingMap) {
      return this.backingMap.keySet();
    } else {
      var ret = [];
      for (var i = 0, j = 0;j < this._entries.length;i++, j += 2) {
        ret[i] = this._entries[j];
      }
      return ret;
    }
  };
  types.TransitArrayMap.prototype["keySet"] = types.TransitArrayMap.prototype.keySet;
  types.TransitArrayMap.prototype.entries = function() {
    if (this.backingMap) {
      return this.backingMap.entries();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.ENTRIES);
    }
  };
  types.TransitArrayMap.prototype["entries"] = types.TransitArrayMap.prototype.entries;
  types.TransitArrayMap.prototype.values = function() {
    if (this.backingMap) {
      return this.backingMap.values();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.VALUES);
    }
  };
  types.TransitArrayMap.prototype["values"] = types.TransitArrayMap.prototype.values;
  types.TransitArrayMap.prototype.forEach = function(f) {
    if (this.backingMap) {
      this.backingMap.forEach(f);
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        f(this._entries[i + 1], this._entries[i]);
      }
    }
  };
  types.TransitArrayMap.prototype["forEach"] = types.TransitArrayMap.prototype.forEach;
  types.TransitArrayMap.prototype.get = function(k, notFound) {
    if (this.backingMap) {
      return this.backingMap.get(k);
    } else {
      if (this.convert()) {
        return this.get(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return this._entries[i + 1];
          }
        }
        return notFound;
      }
    }
  };
  types.TransitArrayMap.prototype["get"] = types.TransitArrayMap.prototype.get;
  types.TransitArrayMap.prototype.has = function(k) {
    if (this.backingMap) {
      return this.backingMap.has(k);
    } else {
      if (this.convert()) {
        return this.has(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return true;
          }
        }
        return false;
      }
    }
  };
  types.TransitArrayMap.prototype["has"] = types.TransitArrayMap.prototype.has;
  types.TransitArrayMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.set(k, v);
      this.size = this.backingMap.size;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          this._entries[i + 1] = v;
          return;
        }
      }
      this._entries.push(k);
      this._entries.push(v);
      this.size++;
      if (this.size > types.ARRAY_MAP_THRESHOLD) {
        this.backingMap = types.map(this._entries, false, true);
        this._entries = null;
      }
    }
  };
  types.TransitArrayMap.prototype["set"] = types.TransitArrayMap.prototype.set;
  types.TransitArrayMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap["delete"](k);
      this.size = this.backingMap.size;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          this._entries.splice(i, 2);
          this.size--;
          return;
        }
      }
    }
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.backingMap) {
      return this.backingMap.com$cognitect$transit$hashCode();
    } else {
      if (this.hashCode === -1) {
        this.hashCode = eq.hashMapLike(this);
      }
      return this.hashCode;
    }
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$equals = function(other) {
    if (this.backingMap) {
      return types.mapEquals(this.backingMap, other);
    } else {
      return types.mapEquals(this, other);
    }
  };
  types.TransitMap = function(keys, map, size) {
    this.map = map || {};
    this._keys = keys || [];
    this.size = size || 0;
    this.hashCode = -1;
  };
  types.TransitMap.prototype.toString = function() {
    return "[TransitMap]";
  };
  types.TransitMap.prototype.clear = function() {
    this.hashCode = -1;
    this.map = {};
    this._keys = [];
    this.size = 0;
  };
  types.TransitMap.prototype["clear"] = types.TransitMap.prototype.clear;
  types.TransitMap.prototype.getKeys = function() {
    if (this._keys != null) {
      return this._keys;
    } else {
      return util.objectKeys(this.map);
    }
  };
  types.TransitMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    this._keys = null;
    var code = eq.hashCode(k), bucket = this.map[code];
    for (var i = 0;i < bucket.length;i += 2) {
      if (eq.equals(k, bucket[i])) {
        bucket.splice(i, 2);
        if (bucket.length === 0) {
          delete this.map[code];
        }
        this.size--;
        break;
      }
    }
  };
  types.TransitMap.prototype.entries = function() {
    return new types.TransitMapIterator(this, types.ENTRIES);
  };
  types.TransitMap.prototype["entries"] = types.TransitMap.prototype.entries;
  types.TransitMap.prototype.forEach = function(callback) {
    var ks = this.getKeys();
    for (var i = 0;i < ks.length;i++) {
      var bucket = this.map[ks[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        callback(bucket[j + 1], bucket[j], this);
      }
    }
  };
  types.TransitMap.prototype["forEach"] = types.TransitMap.prototype.forEach;
  types.TransitMap.prototype.get = function(k, notFound) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return bucket[i + 1];
        }
      }
    } else {
      return notFound;
    }
  };
  types.TransitMap.prototype["get"] = types.TransitMap.prototype.get;
  types.TransitMap.prototype.has = function(k) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return true;
        }
      }
      return false;
    } else {
      return false;
    }
  };
  types.TransitMap.prototype["has"] = types.TransitMap.prototype.has;
  types.TransitMap.prototype.keys = function() {
    return new types.TransitMapIterator(this, types.KEYS);
  };
  types.TransitMap.prototype["keys"] = types.TransitMap.prototype.keys;
  types.TransitMap.prototype.keySet = function() {
    var keys = this.getKeys(), ret = [];
    for (var i = 0;i < keys.length;i++) {
      var bucket = this.map[keys[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        ret.push(bucket[j]);
      }
    }
    return ret;
  };
  types.TransitMap.prototype["keySet"] = types.TransitMap.prototype.keySet;
  types.TransitMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket == null) {
      if (this._keys) {
        this._keys.push(code);
      }
      this.map[code] = [k, v];
      this.size++;
    } else {
      var newEntry = true;
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(v, bucket[i])) {
          newEntry = false;
          bucket[i] = v;
          break;
        }
      }
      if (newEntry) {
        bucket.push(k);
        bucket.push(v);
        this.size++;
      }
    }
  };
  types.TransitMap.prototype["set"] = types.TransitMap.prototype.set;
  types.TransitMap.prototype.values = function() {
    return new types.TransitMapIterator(this, types.VALUES);
  };
  types.TransitMap.prototype["values"] = types.TransitMap.prototype.values;
  types.TransitMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashMapLike(this);
    }
    return this.hashCode;
  };
  types.TransitMap.prototype.com$cognitect$transit$equals = function(other) {
    return types.mapEquals(this, other);
  };
  types.map = function(arr, checkDups, hashMap) {
    arr = arr || [];
    checkDups = checkDups === false ? checkDups : true;
    hashMap = hashMap === true ? hashMap : false;
    if (!hashMap && arr.length <= types.ARRAY_MAP_THRESHOLD * 2) {
      if (checkDups) {
        var t = arr;
        arr = [];
        for (var i = 0;i < t.length;i += 2) {
          var seen = false;
          for (var j = 0;j < arr.length;j += 2) {
            if (eq.equals(arr[j], t[i])) {
              arr[j + 1] = t[i + 1];
              seen = true;
              break;
            }
          }
          if (!seen) {
            arr.push(t[i]);
            arr.push(t[i + 1]);
          }
        }
      }
      return new types.TransitArrayMap(arr);
    } else {
      var map = {}, keys = [], size = 0;
      for (var i = 0;i < arr.length;i += 2) {
        var code = eq.hashCode(arr[i]), bucket = map[code];
        if (bucket == null) {
          keys.push(code);
          map[code] = [arr[i], arr[i + 1]];
          size++;
        } else {
          var newEntry = true;
          for (var j = 0;j < bucket.length;j += 2) {
            if (eq.equals(bucket[j], arr[i])) {
              bucket[j + 1] = arr[i + 1];
              newEntry = false;
              break;
            }
          }
          if (newEntry) {
            bucket.push(arr[i]);
            bucket.push(arr[i + 1]);
            size++;
          }
        }
      }
      return new types.TransitMap(keys, map, size);
    }
  };
  types.isArrayMap = function(x) {
    return x instanceof types.TransitArrayMap;
  };
  types.isMap = function(x) {
    return x instanceof types.TransitArrayMap || x instanceof types.TransitMap;
  };
  types.TransitSet = function(map) {
    this.map = map;
    this.size = map.size;
  };
  types.TransitSet.prototype.toString = function() {
    return "[TransitSet]";
  };
  types.TransitSet.prototype.add = function(value) {
    this.map.set(value, value);
    this.size = this.map.size;
  };
  types.TransitSet.prototype["add"] = types.TransitSet.prototype.add;
  types.TransitSet.prototype.clear = function() {
    this.map = new types.TransitMap;
    this.size = 0;
  };
  types.TransitSet.prototype["clear"] = types.TransitSet.prototype.clear;
  types.TransitSet.prototype["delete"] = function(value) {
    this.map["delete"](value);
    this.size = this.map.size;
  };
  types.TransitSet.prototype.entries = function() {
    return this.map.entries();
  };
  types.TransitSet.prototype["entries"] = types.TransitSet.prototype.entries;
  types.TransitSet.prototype.forEach = function(iterator, thisArg) {
    var self = this;
    this.map.forEach(function(v, k, m) {
      iterator(k, self);
    });
  };
  types.TransitSet.prototype["forEach"] = types.TransitSet.prototype.forEach;
  types.TransitSet.prototype.has = function(value) {
    return this.map.has(value);
  };
  types.TransitSet.prototype["has"] = types.TransitSet.prototype.has;
  types.TransitSet.prototype.keys = function() {
    return this.map.keys();
  };
  types.TransitSet.prototype["keys"] = types.TransitSet.prototype.keys;
  types.TransitSet.prototype.keySet = function() {
    return this.map.keySet();
  };
  types.TransitSet.prototype["keySet"] = types.TransitSet.prototype.keySet;
  types.TransitSet.prototype.values = function() {
    return this.map.values();
  };
  types.TransitSet.prototype["values"] = types.TransitSet.prototype.values;
  types.TransitSet.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TransitSet) {
      if (this.size === other.size) {
        return eq.equals(this.map, other.map);
      }
    } else {
      return false;
    }
  };
  types.TransitSet.prototype.com$cognitect$transit$hashCode = function(other) {
    return eq.hashCode(this.map);
  };
  types.set = function(arr) {
    arr = arr || [];
    var map = {}, keys = [], size = 0;
    for (var i = 0;i < arr.length;i++) {
      var code = eq.hashCode(arr[i]), vals = map[code];
      if (vals == null) {
        keys.push(code);
        map[code] = [arr[i], arr[i]];
        size++;
      } else {
        var newEntry = true;
        for (var j = 0;j < vals.length;j += 2) {
          if (eq.equals(vals[j], arr[i])) {
            newEntry = false;
            break;
          }
        }
        if (newEntry) {
          vals.push(arr[i]);
          vals.push(arr[i]);
          size++;
        }
      }
    }
    return new types.TransitSet(new types.TransitMap(keys, map, size));
  };
  types.isSet = function(x) {
    return x instanceof types.TransitSet;
  };
  types.quoted = function(obj) {
    return types.taggedValue("'", obj);
  };
  types.isQuoted = function(x) {
    return x instanceof types.TaggedValue && x.tag === "'";
  };
  types.list = function(xs) {
    return types.taggedValue("list", xs);
  };
  types.isList = function(x) {
    return x instanceof types.List && x.tag === "list";
  };
  types.link = function(rep) {
    return types.taggedValue("link", rep);
  };
  types.isLink = function(x) {
    return x instanceof types.TaggedValue && x.tag === "link";
  };
  types.specialDouble = function(v) {
    switch(v) {
      case "-INF":
        return-Infinity;
      case "INF":
        return Infinity;
      case "NaN":
        return NaN;
      default:
        throw new Error("Invalid special double value " + v);break;
    }
  };
});
goog.provide("com.cognitect.transit.delimiters");
goog.scope(function() {
  var delimiters = com.cognitect.transit.delimiters;
  delimiters.ESC = "~";
  delimiters.TAG = "#";
  delimiters.SUB = "^";
  delimiters.RES = "`";
  delimiters.ESC_TAG = "~#";
});
goog.provide("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.delimiters");
goog.scope(function() {
  var caching = com.cognitect.transit.caching, d = com.cognitect.transit.delimiters;
  caching.MIN_SIZE_CACHEABLE = 3;
  caching.BASE_CHAR_IDX = 48;
  caching.CACHE_CODE_DIGITS = 44;
  caching.MAX_CACHE_ENTRIES = caching.CACHE_CODE_DIGITS * caching.CACHE_CODE_DIGITS;
  caching.MAX_CACHE_SIZE = 4096;
  caching.isCacheable = function(string, asMapKey) {
    if (string.length > caching.MIN_SIZE_CACHEABLE) {
      if (asMapKey) {
        return true;
      } else {
        var c0 = string.charAt(0), c1 = string.charAt(1);
        if (c0 === d.ESC) {
          return c1 === ":" || c1 === "$" || c1 === "#";
        } else {
          return false;
        }
      }
    } else {
      return false;
    }
  };
  caching.idxToCode = function(idx) {
    var hi = Math.floor(idx / caching.CACHE_CODE_DIGITS), lo = idx % caching.CACHE_CODE_DIGITS, loc = String.fromCharCode(lo + caching.BASE_CHAR_IDX);
    if (hi === 0) {
      return d.SUB + loc;
    } else {
      return d.SUB + String.fromCharCode(hi + caching.BASE_CHAR_IDX) + loc;
    }
  };
  caching.WriteCache = function() {
    this.idx = 0;
    this.gen = 0;
    this.cacheSize = 0;
    this.cache = {};
  };
  caching.WriteCache.prototype.write = function(string, asMapKey) {
    if (caching.isCacheable(string, asMapKey)) {
      if (this.cacheSize === caching.MAX_CACHE_SIZE) {
        this.clear();
        this.gen = 0;
        this.cache = {};
      } else {
        if (this.idx === caching.MAX_CACHE_ENTRIES) {
          this.clear();
        }
      }
      var entry = this.cache[string];
      if (entry == null) {
        this.cache[string] = [caching.idxToCode(this.idx), this.gen];
        this.idx++;
        return string;
      } else {
        if (entry[1] != this.gen) {
          entry[1] = this.gen;
          entry[0] = caching.idxToCode(this.idx);
          this.idx++;
          return string;
        } else {
          return entry[0];
        }
      }
    } else {
      return string;
    }
  };
  caching.WriteCache.prototype.clear = function() {
    this.idx = 0;
    this.gen++;
  };
  caching.writeCache = function() {
    return new caching.WriteCache;
  };
  caching.isCacheCode = function(string) {
    return string.charAt(0) === d.SUB && string.charAt(1) !== " ";
  };
  caching.codeToIdx = function(code) {
    if (code.length === 2) {
      return code.charCodeAt(1) - caching.BASE_CHAR_IDX;
    } else {
      var hi = (code.charCodeAt(1) - caching.BASE_CHAR_IDX) * caching.CACHE_CODE_DIGITS, lo = code.charCodeAt(2) - caching.BASE_CHAR_IDX;
      return hi + lo;
    }
  };
  caching.ReadCache = function() {
    this.idx = 0;
    this.cache = [];
  };
  caching.ReadCache.prototype.write = function(obj, asMapKey) {
    if (this.idx == caching.MAX_CACHE_ENTRIES) {
      this.idx = 0;
    }
    this.cache[this.idx] = obj;
    this.idx++;
    return obj;
  };
  caching.ReadCache.prototype.read = function(string, asMapKey) {
    return this.cache[caching.codeToIdx(string)];
  };
  caching.ReadCache.prototype.clear = function() {
    this.idx = 0;
  };
  caching.readCache = function() {
    return new caching.ReadCache;
  };
});
goog.provide("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.delimiters");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.types");
goog.scope(function() {
  var decoder = com.cognitect.transit.impl.decoder, util = com.cognitect.transit.util, d = com.cognitect.transit.delimiters, caching = com.cognitect.transit.caching, types = com.cognitect.transit.types;
  decoder.Tag = function(s) {
    this.str = s;
  };
  decoder.tag = function(s) {
    return new decoder.Tag(s);
  };
  decoder.isTag = function(x) {
    return x && x instanceof decoder.Tag;
  };
  decoder.isGroundHandler = function(handler) {
    switch(handler) {
      case "_":
      ;
      case "s":
      ;
      case "?":
      ;
      case "i":
      ;
      case "d":
      ;
      case "b":
      ;
      case "'":
      ;
      case "array":
      ;
      case "map":
        return true;
    }
    return false;
  };
  decoder.Decoder = function(options) {
    this.options = options || {};
    this.handlers = {};
    for (var h in this.defaults.handlers) {
      this.handlers[h] = this.defaults.handlers[h];
    }
    for (var h in this.options["handlers"]) {
      if (decoder.isGroundHandler(h)) {
        throw new Error('Cannot override handler for ground type "' + h + '"');
      }
      this.handlers[h] = this.options["handlers"][h];
    }
    this.preferStrings = this.options["preferStrings"] != null ? this.options["preferStrings"] : this.defaults.preferStrings;
    this.preferBuffers = this.options["preferBuffers"] != null ? this.options["preferBuffers"] : this.defaults.preferBuffers;
    this.defaultHandler = this.options["defaultHandler"] || this.defaults.defaultHandler;
    this.mapBuilder = this.options["mapBuilder"];
    this.arrayBuilder = this.options["arrayBuilder"];
  };
  decoder.Decoder.prototype.defaults = {handlers:{"_":function(v, d) {
    return types.nullValue();
  }, "?":function(v, d) {
    return types.boolValue(v);
  }, "b":function(v, d) {
    return types.binary(v, d);
  }, "i":function(v, d) {
    return types.intValue(v);
  }, "n":function(v, d) {
    return types.bigInteger(v);
  }, "d":function(v, d) {
    return types.floatValue(v);
  }, "f":function(v, d) {
    return types.bigDecimalValue(v);
  }, "c":function(v, d) {
    return types.charValue(v);
  }, ":":function(v, d) {
    return types.keyword(v);
  }, "$":function(v, d) {
    return types.symbol(v);
  }, "r":function(v, d) {
    return types.uri(v);
  }, "z":function(v, d) {
    return types.specialDouble(v);
  }, "'":function(v, d) {
    return v;
  }, "m":function(v, d) {
    return types.date(v);
  }, "t":function(v, d) {
    return types.verboseDate(v);
  }, "u":function(v, d) {
    return types.uuid(v);
  }, "set":function(v, d) {
    return types.set(v);
  }, "list":function(v, d) {
    return types.list(v);
  }, "link":function(v, d) {
    return types.link(v);
  }, "cmap":function(v, d) {
    return types.map(v, false);
  }}, defaultHandler:function(c, val) {
    return types.taggedValue(c, val);
  }, preferStrings:true, preferBuffers:true};
  decoder.Decoder.prototype.decode = function(node, cache, asMapKey, tagValue) {
    if (node == null) {
      return null;
    }
    var t = typeof node;
    switch(t) {
      case "string":
        return this.decodeString(node, cache, asMapKey, tagValue);
        break;
      case "object":
        if (util.isArray(node)) {
          if (node[0] === "^ ") {
            return this.decodeArrayHash(node, cache, asMapKey, tagValue);
          } else {
            return this.decodeArray(node, cache, asMapKey, tagValue);
          }
        } else {
          return this.decodeHash(node, cache, asMapKey, tagValue);
        }
        break;
    }
    return node;
  };
  decoder.Decoder.prototype["decode"] = decoder.Decoder.prototype.decode;
  decoder.Decoder.prototype.decodeString = function(string, cache, asMapKey, tagValue) {
    if (caching.isCacheable(string, asMapKey)) {
      var val = this.parseString(string, cache, false);
      if (cache) {
        cache.write(val, asMapKey);
      }
      return val;
    } else {
      if (caching.isCacheCode(string)) {
        return cache.read(string, asMapKey);
      } else {
        return this.parseString(string, cache, asMapKey);
      }
    }
  };
  decoder.Decoder.prototype.decodeHash = function(hash, cache, asMapKey, tagValue) {
    var ks = util.objectKeys(hash), key = ks[0], tag = ks.length == 1 ? this.decode(key, cache, false, false) : null;
    if (decoder.isTag(tag)) {
      var val = hash[key], handler = this.handlers[tag.str];
      if (handler != null) {
        return handler(this.decode(val, cache, false, true), this);
      } else {
        return types.taggedValue(tag.str, this.decode(val, cache, false, false));
      }
    } else {
      if (this.mapBuilder) {
        if (ks.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 && this.mapBuilder.fromArray) {
          var nodep = [];
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            nodep.push(this.decode(strKey, cache, true, false));
            nodep.push(this.decode(hash[strKey], cache, false, false));
          }
          return this.mapBuilder.fromArray(nodep, hash);
        } else {
          var ret = this.mapBuilder.init(hash);
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            ret = this.mapBuilder.add(ret, this.decode(strKey, cache, true, false), this.decode(hash[strKey], cache, false, false), hash);
          }
          return this.mapBuilder.finalize(ret, hash);
        }
      } else {
        var nodep = [];
        for (var i = 0;i < ks.length;i++) {
          var strKey = ks[i];
          nodep.push(this.decode(strKey, cache, true, false));
          nodep.push(this.decode(hash[strKey], cache, false, false));
        }
        return types.map(nodep, false);
      }
    }
  };
  decoder.Decoder.prototype.decodeArrayHash = function(node, cache, asMapKey, tagValue) {
    if (this.mapBuilder) {
      if (node.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 + 1 && this.mapBuilder.fromArray) {
        var nodep = [];
        for (var i = 1;i < node.length;i += 2) {
          nodep.push(this.decode(node[i], cache, true, false));
          nodep.push(this.decode(node[i + 1], cache, false, false));
        }
        return this.mapBuilder.fromArray(nodep, node);
      } else {
        var ret = this.mapBuilder.init(node);
        for (var i = 1;i < node.length;i += 2) {
          ret = this.mapBuilder.add(ret, this.decode(node[i], cache, true, false), this.decode(node[i + 1], cache, false, false), node);
        }
        return this.mapBuilder.finalize(ret, node);
      }
    } else {
      var nodep = [];
      for (var i = 1;i < node.length;i += 2) {
        nodep.push(this.decode(node[i], cache, true, false));
        nodep.push(this.decode(node[i + 1], cache, false, false));
      }
      return types.map(nodep, false);
    }
  };
  decoder.Decoder.prototype.decodeArray = function(node, cache, asMapKey, tagValue) {
    if (tagValue) {
      var ret = [];
      for (var i = 0;i < node.length;i++) {
        ret.push(this.decode(node[i], cache, asMapKey, false));
      }
      return ret;
    } else {
      var cacheIdx = cache && cache.idx;
      if (node.length === 2 && typeof node[0] === "string") {
        var tag = this.decode(node[0], cache, false, false);
        if (decoder.isTag(tag)) {
          var val = node[1], handler = this.handlers[tag.str];
          if (handler != null) {
            var ret = handler(this.decode(val, cache, asMapKey, true), this);
            return ret;
          } else {
            return types.taggedValue(tag.str, this.decode(val, cache, asMapKey, false));
          }
        }
      }
      if (cache && cacheIdx != cache.idx) {
        cache.idx = cacheIdx;
      }
      if (this.arrayBuilder) {
        if (node.length <= 32 && this.arrayBuilder.fromArray) {
          var arr = [];
          for (var i = 0;i < node.length;i++) {
            arr.push(this.decode(node[i], cache, asMapKey, false));
          }
          return this.arrayBuilder.fromArray(arr, node);
        } else {
          var ret = this.arrayBuilder.init();
          for (var i = 0;i < node.length;i++) {
            ret = this.arrayBuilder.add(ret, this.decode(node[i], cache, asMapKey, false), node);
          }
          return this.arrayBuilder.finalize(ret, node);
        }
      } else {
        var ret = [];
        for (var i = 0;i < node.length;i++) {
          ret.push(this.decode(node[i], cache, asMapKey, false));
        }
        return ret;
      }
    }
  };
  decoder.Decoder.prototype.parseString = function(string, cache, asMapKey) {
    if (string.charAt(0) === d.ESC) {
      var c = string.charAt(1);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return string.substring(1);
      } else {
        if (c === d.TAG) {
          return decoder.tag(string.substring(2));
        } else {
          var handler = this.handlers[c];
          if (handler == null) {
            return this.defaultHandler(c, string.substring(2));
          } else {
            return handler(string.substring(2), this);
          }
        }
      }
    } else {
      return string;
    }
  };
  decoder.decoder = function(options) {
    return new decoder.Decoder(options);
  };
});
goog.provide("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
goog.scope(function() {
  var reader = com.cognitect.transit.impl.reader, decoder = com.cognitect.transit.impl.decoder, caching = com.cognitect.transit.caching;
  reader.JSONUnmarshaller = function(opts) {
    this.decoder = new decoder.Decoder(opts);
  };
  reader.JSONUnmarshaller.prototype.unmarshal = function(str, cache) {
    return this.decoder.decode(JSON.parse(str), cache);
  };
  reader.Reader = function(unmarshaller, options) {
    this.unmarshaller = unmarshaller;
    this.options = options || {};
    this.cache = this.options["cache"] ? this.options["cache"] : new caching.ReadCache;
  };
  reader.Reader.prototype.read = function(str) {
    var ret = this.unmarshaller.unmarshal(str, this.cache);
    this.cache.clear();
    return ret;
  };
  reader.Reader.prototype["read"] = reader.Reader.prototype.read;
});
goog.provide("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.types");
goog.require("goog.math.Long");
goog.scope(function() {
  var handlers = com.cognitect.transit.handlers, util = com.cognitect.transit.util, types = com.cognitect.transit.types, Long = goog.math.Long;
  handlers.ctorGuid = 0;
  handlers.ctorGuidProperty = "transit$guid$" + util.randomUUID();
  handlers.typeTag = function(ctor) {
    if (ctor == null) {
      return "null";
    } else {
      if (ctor === String) {
        return "string";
      } else {
        if (ctor === Boolean) {
          return "boolean";
        } else {
          if (ctor === Number) {
            return "number";
          } else {
            if (ctor === Array) {
              return "array";
            } else {
              if (ctor === Object) {
                return "map";
              } else {
                var tag = ctor[handlers.ctorGuidProperty];
                if (tag == null) {
                  if (typeof Object.defineProperty != "undefined") {
                    tag = ++handlers.ctorGuid;
                    Object.defineProperty(ctor, handlers.ctorGuidProperty, {value:tag, enumerable:false});
                  } else {
                    ctor[handlers.ctorGuidProperty] = tag = ++handlers.ctorGuid;
                  }
                }
                return tag;
              }
            }
          }
        }
      }
    }
  };
  handlers.constructor = function(x) {
    if (x == null) {
      return null;
    } else {
      return x.constructor;
    }
  };
  handlers.padZeros = function(n, m) {
    var s = n.toString();
    for (var i = s.length;i < m;i++) {
      s = "0" + s;
    }
    return s;
  };
  handlers.stringableKeys = function(m) {
    var stringable = false, ks = util.objectKeys(m);
    for (var i = 0;i < ks.length;i++) {
    }
    return true;
  };
  handlers.NilHandler = function() {
  };
  handlers.NilHandler.prototype.tag = function(v) {
    return "_";
  };
  handlers.NilHandler.prototype.rep = function(v) {
    return null;
  };
  handlers.NilHandler.prototype.stringRep = function(v) {
    return "null";
  };
  handlers.StringHandler = function() {
  };
  handlers.StringHandler.prototype.tag = function(v) {
    return "s";
  };
  handlers.StringHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.StringHandler.prototype.stringRep = function(v) {
    return v;
  };
  handlers.NumberHandler = function() {
  };
  handlers.NumberHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.NumberHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.NumberHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler = function() {
  };
  handlers.IntegerHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.IntegerHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.BooleanHandler = function() {
  };
  handlers.BooleanHandler.prototype.tag = function(v) {
    return "?";
  };
  handlers.BooleanHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.BooleanHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.ArrayHandler = function() {
  };
  handlers.ArrayHandler.prototype.tag = function(v) {
    return "array";
  };
  handlers.ArrayHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.ArrayHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.MapHandler = function() {
  };
  handlers.MapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.MapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.MapHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.VerboseDateHandler = function() {
  };
  handlers.VerboseDateHandler.prototype.tag = function(v) {
    return "t";
  };
  handlers.VerboseDateHandler.prototype.rep = function(v) {
    return v.getUTCFullYear() + "-" + handlers.padZeros(v.getUTCMonth() + 1, 2) + "-" + handlers.padZeros(v.getUTCDate(), 2) + "T" + handlers.padZeros(v.getUTCHours(), 2) + ":" + handlers.padZeros(v.getUTCMinutes(), 2) + ":" + handlers.padZeros(v.getUTCSeconds(), 2) + "." + handlers.padZeros(v.getUTCMilliseconds(), 3) + "Z";
  };
  handlers.VerboseDateHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.DateHandler = function() {
  };
  handlers.DateHandler.prototype.tag = function(v) {
    return "m";
  };
  handlers.DateHandler.prototype.rep = function(v) {
    return v.valueOf();
  };
  handlers.DateHandler.prototype.stringRep = function(v) {
    return v.valueOf().toString();
  };
  handlers.DateHandler.prototype.getVerboseHandler = function(v) {
    return new handlers.VerboseDateHandler;
  };
  handlers.UUIDHandler = function() {
  };
  handlers.UUIDHandler.prototype.tag = function(v) {
    return "u";
  };
  handlers.UUIDHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.UUIDHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.KeywordHandler = function() {
  };
  handlers.KeywordHandler.prototype.tag = function(v) {
    return ":";
  };
  handlers.KeywordHandler.prototype.rep = function(v) {
    return v.name;
  };
  handlers.KeywordHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.SymbolHandler = function() {
  };
  handlers.SymbolHandler.prototype.tag = function(v) {
    return "$";
  };
  handlers.SymbolHandler.prototype.rep = function(v) {
    return v.name;
  };
  handlers.SymbolHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.TaggedHandler = function() {
  };
  handlers.TaggedHandler.prototype.tag = function(v) {
    return v.tag;
  };
  handlers.TaggedHandler.prototype.rep = function(v) {
    return v.rep;
  };
  handlers.TaggedHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitSetHandler = function() {
  };
  handlers.TransitSetHandler.prototype.tag = function(v) {
    return "set";
  };
  handlers.TransitSetHandler.prototype.rep = function(v) {
    var arr = [];
    v.forEach(function(key, set) {
      arr.push(key);
    });
    return types.taggedValue("array", arr);
  };
  handlers.TransitSetHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitArrayMapHandler = function() {
  };
  handlers.TransitArrayMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitArrayMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitArrayMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitMapHandler = function() {
  };
  handlers.TransitMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.BufferHandler = function() {
  };
  handlers.BufferHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.BufferHandler.prototype.rep = function(v) {
    return v.toString("base64");
  };
  handlers.BufferHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.Uint8ArrayHandler = function() {
  };
  handlers.Uint8ArrayHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.Uint8ArrayHandler.prototype.rep = function(v) {
    return util.Uint8ToBase64(v);
  };
  handlers.Uint8ArrayHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.defaultHandlers = function(hs) {
    hs.set(null, new handlers.NilHandler);
    hs.set(String, new handlers.StringHandler);
    hs.set(Number, new handlers.NumberHandler);
    hs.set(Long, new handlers.IntegerHandler);
    hs.set(Boolean, new handlers.BooleanHandler);
    hs.set(Array, new handlers.ArrayHandler);
    hs.set(Object, new handlers.MapHandler);
    hs.set(Date, new handlers.DateHandler);
    hs.set(types.UUID, new handlers.UUIDHandler);
    hs.set(types.Keyword, new handlers.KeywordHandler);
    hs.set(types.Symbol, new handlers.SymbolHandler);
    hs.set(types.TaggedValue, new handlers.TaggedHandler);
    hs.set(types.TransitSet, new handlers.TransitSetHandler);
    hs.set(types.TransitArrayMap, new handlers.TransitArrayMapHandler);
    hs.set(types.TransitMap, new handlers.TransitMapHandler);
    if (typeof Buffer != "undefined") {
      hs.set(Buffer, new handlers.BufferHandler);
    }
    if (typeof Uint8Array != "undefined") {
      hs.set(Uint8Array, new handlers.Uint8ArrayHandler);
    }
    return hs;
  };
  handlers.Handlers = function() {
    this.handlers = {};
    handlers.defaultHandlers(this);
  };
  handlers.Handlers.prototype.get = function(ctor) {
    var h = null;
    if (typeof ctor === "string") {
      h = this.handlers[ctor];
    } else {
      h = this.handlers[handlers.typeTag(ctor)];
    }
    if (h != null) {
      return h;
    } else {
      return this.handlers["default"];
    }
  };
  handlers.Handlers.prototype["get"] = handlers.Handlers.prototype.get;
  handlers.validTag = function(tag) {
    switch(tag) {
      case "null":
      ;
      case "string":
      ;
      case "boolean":
      ;
      case "number":
      ;
      case "array":
      ;
      case "map":
        return false;
        break;
    }
    return true;
  };
  handlers.Handlers.prototype.set = function(ctor, handler) {
    if (typeof ctor === "string" && handlers.validTag(ctor)) {
      this.handlers[ctor] = handler;
    } else {
      this.handlers[handlers.typeTag(ctor)] = handler;
    }
  };
});
goog.provide("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.delimiters");
goog.require("goog.math.Long");
goog.scope(function() {
  var writer = com.cognitect.transit.impl.writer, util = com.cognitect.transit.util, caching = com.cognitect.transit.caching, handlers = com.cognitect.transit.handlers, types = com.cognitect.transit.types, d = com.cognitect.transit.delimiters, Long = goog.math.Long;
  writer.escape = function(string) {
    if (string.length > 0) {
      var c = string.charAt(0);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return d.ESC + string;
      } else {
        return string;
      }
    } else {
      return string;
    }
  };
  writer.JSONMarshaller = function(opts) {
    this.opts = opts || {};
    this.preferStrings = this.opts["preferStrings"] != null ? this.opts["preferStrings"] : true;
    this.objectBuilder = this.opts["objectBuilder"] || null;
    this.handlers = new handlers.Handlers;
    var optsHandlers = this.opts["handlers"];
    if (optsHandlers) {
      if (util.isArray(optsHandlers) || !optsHandlers.forEach) {
        throw new Error('transit writer "handlers" option must be a map');
      }
      var self = this;
      optsHandlers.forEach(function(v, k) {
        self.handlers.set(k, v);
      });
    }
    this.handlerForForeign = this.opts["handlerForForeign"];
    this.unpack = this.opts["unpack"] || function(x) {
      if (types.isArrayMap(x) && x.backingMap === null) {
        return x._entries;
      } else {
        return false;
      }
    };
    this.verbose = this.opts && this.opts["verbose"] || false;
  };
  writer.JSONMarshaller.prototype.handler = function(obj) {
    var h = this.handlers.get(handlers.constructor(obj));
    if (h != null) {
      return h;
    } else {
      var tag = obj && obj["transitTag"];
      if (tag) {
        return this.handlers.get(tag);
      } else {
        return null;
      }
    }
  };
  writer.JSONMarshaller.prototype.registerHandler = function(ctor, handler) {
    this.handlers.set(ctor, handler);
  };
  writer.JSONMarshaller.prototype.emitNil = function(asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "_", "", asMapKey, cache);
    } else {
      return null;
    }
  };
  writer.JSONMarshaller.prototype.emitString = function(prefix, tag, s, asMapKey, cache) {
    var string = prefix + tag + s;
    if (cache) {
      return cache.write(string, asMapKey);
    } else {
      return string;
    }
  };
  writer.JSONMarshaller.prototype.emitBoolean = function(b, asMapKey, cache) {
    if (asMapKey) {
      var s = b.toString();
      return this.emitString(d.ESC, "?", s[0], asMapKey, cache);
    } else {
      return b;
    }
  };
  writer.JSONMarshaller.prototype.emitInteger = function(i, asMapKey, cache) {
    if (i === Infinity) {
      return this.emitString(d.ESC, "z", "INF", asMapKey, cache);
    } else {
      if (i === -Infinity) {
        return this.emitString(d.ESC, "z", "-INF", asMapKey, cache);
      } else {
        if (isNaN(i)) {
          return this.emitString(d.ESC, "z", "NaN", asMapKey, cache);
        } else {
          if (asMapKey || typeof i === "string" || i instanceof Long) {
            return this.emitString(d.ESC, "i", i.toString(), asMapKey, cache);
          } else {
            return i;
          }
        }
      }
    }
  };
  writer.JSONMarshaller.prototype.emitDouble = function(d, asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "d", d, asMapKey, cache);
    } else {
      return d;
    }
  };
  writer.JSONMarshaller.prototype.emitBinary = function(b, asMapKey, cache) {
    return this.emitString(d.ESC, "b", b, asMapKey, cache);
  };
  writer.JSONMarshaller.prototype.emitQuoted = function(em, obj, cache) {
    if (em.verbose) {
      var ret = {}, k = this.emitString(d.ESC_TAG, "'", "", true, cache);
      ret[k] = writer.marshal(this, obj, false, cache);
      return ret;
    } else {
      return[this.emitString(d.ESC_TAG, "'", "", true, cache), writer.marshal(this, obj, false, cache)];
    }
  };
  writer.emitObjects = function(em, iterable, cache) {
    var ret = [];
    if (util.isArray(iterable)) {
      for (var i = 0;i < iterable.length;i++) {
        ret.push(writer.marshal(em, iterable[i], false, cache));
      }
    } else {
      iterable.forEach(function(v, i) {
        ret.push(writer.marshal(em, v, false, cache));
      });
    }
    return ret;
  };
  writer.emitArray = function(em, iterable, skip, cache) {
    return writer.emitObjects(em, iterable, cache);
  };
  writer.isStringableKey = function(em, k) {
    if (typeof k !== "string") {
      var h = em.handler(k);
      return h && h.tag(k).length === 1;
    } else {
      return true;
    }
  };
  writer.stringableKeys = function(em, obj) {
    var arr = em.unpack(obj), stringableKeys = true;
    if (arr) {
      for (var i = 0;i < arr.length;i += 2) {
        stringableKeys = writer.isStringableKey(em, arr[i]);
        if (!stringableKeys) {
          break;
        }
      }
      return stringableKeys;
    } else {
      if (obj.keys) {
        var iter = obj.keys(), step = null;
        if (iter.next) {
          step = iter.next();
          while (!step.done) {
            stringableKeys = writer.isStringableKey(em, step.value);
            if (!stringableKeys) {
              break;
            }
            step = iter.next();
          }
          return stringableKeys;
        }
      }
    }
    if (obj.forEach) {
      obj.forEach(function(v, k) {
        stringableKeys = stringableKeys && writer.isStringableKey(em, k);
      });
      return stringableKeys;
    } else {
      throw new Error("Cannot walk keys of object type " + handlers.constructor(obj).name);
    }
  };
  writer.isForeignObject = function(x) {
    if (x.constructor["transit$isObject"]) {
      return true;
    }
    var ret = x.constructor.toString(), ret = ret.substr("function ".length), ret = ret.substr(0, ret.indexOf("(")), isObject = ret == "Object";
    if (typeof Object.defineProperty != "undefined") {
      Object.defineProperty(x.constructor, "transit$isObject", {value:isObject, enumerable:false});
    } else {
      x.constructor["transit$isObject"] = isObject;
    }
    return isObject;
  };
  writer.emitMap = function(em, obj, skip, cache) {
    if (obj.constructor === Object || obj.forEach != null || em.handlerForForeign && writer.isForeignObject(obj)) {
      if (em.verbose) {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            var ret = {};
            obj.forEach(function(v, k) {
              ret[writer.marshal(em, k, true, false)] = writer.marshal(em, v, false, cache);
            });
            return ret;
          } else {
            var arr = em.unpack(obj), rep = [], tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (var i = 0;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], true, false));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, true, false));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            var ret = {};
            ret[tag] = rep;
            return ret;
          }
        } else {
          var ret = {}, ks = util.objectKeys(obj);
          for (var i = 0;i < ks.length;i++) {
            ret[writer.marshal(em, ks[i], true, false)] = writer.marshal(em, obj[ks[i]], false, cache);
          }
          return ret;
        }
      } else {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            var arr = em.unpack(obj), ret = ["^ "];
            if (arr) {
              for (var i = 0;i < arr.length;i += 2) {
                ret.push(writer.marshal(em, arr[i], true, cache));
                ret.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                ret.push(writer.marshal(em, k, true, cache));
                ret.push(writer.marshal(em, v, false, cache));
              });
            }
            return ret;
          } else {
            var arr = em.unpack(obj), rep = [], tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (var i = 0;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], true, cache));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, true, cache));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            return[tag, rep];
          }
        } else {
          var ret = ["^ "], ks = util.objectKeys(obj);
          for (var i = 0;i < ks.length;i++) {
            ret.push(writer.marshal(em, ks[i], true, cache));
            ret.push(writer.marshal(em, obj[ks[i]], false, cache));
          }
          return ret;
        }
      }
    } else {
      if (em.objectBuilder != null) {
        return em.objectBuilder(obj, function(k) {
          return writer.marshal(em, k, true, cache);
        }, function(v) {
          return writer.marshal(em, v, false, cache);
        });
      } else {
        var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
        err.data = {obj:obj, type:name};
        throw err;
      }
    }
  };
  writer.emitTaggedMap = function(em, tag, rep, skip, cache) {
    if (em.verbose) {
      var ret = {};
      ret[em.emitString(d.ESC_TAG, tag, "", true, cache)] = writer.marshal(em, rep, false, cache);
      return ret;
    } else {
      return[em.emitString(d.ESC_TAG, tag, "", true, cache), writer.marshal(em, rep, false, cache)];
    }
  };
  writer.emitEncoded = function(em, h, tag, rep, obj, asMapKey, cache) {
    if (tag.length === 1) {
      if (typeof rep === "string") {
        return em.emitString(d.ESC, tag, rep, asMapKey, cache);
      } else {
        if (asMapKey || em.preferStrings) {
          var vh = em.verbose && h.getVerboseHandler();
          if (vh) {
            tag = vh.tag(obj);
            rep = vh.stringRep(obj, vh);
          } else {
            rep = h.stringRep(obj, h);
          }
          if (rep !== null) {
            return em.emitString(d.ESC, tag, rep, asMapKey, cache);
          } else {
            var err = new Error('Tag "' + tag + '" cannot be encoded as string');
            err.data = {tag:tag, rep:rep, obj:obj};
            throw err;
          }
        } else {
          return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
        }
      }
    } else {
      return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
    }
  };
  writer.marshal = function(em, obj, asMapKey, cache) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null), tag = h ? h.tag(obj) : null, rep = h ? h.rep(obj) : null;
    if (h != null && tag != null) {
      switch(tag) {
        case "_":
          return em.emitNil(asMapKey, cache);
          break;
        case "s":
          return em.emitString("", "", writer.escape(rep), asMapKey, cache);
          break;
        case "?":
          return em.emitBoolean(rep, asMapKey, cache);
          break;
        case "i":
          return em.emitInteger(rep, asMapKey, cache);
          break;
        case "d":
          return em.emitDouble(rep, asMapKey, cache);
          break;
        case "b":
          return em.emitBinary(rep, asMapKey, cache);
          break;
        case "'":
          return em.emitQuoted(em, rep, cache);
          break;
        case "array":
          return writer.emitArray(em, rep, asMapKey, cache);
          break;
        case "map":
          return writer.emitMap(em, rep, asMapKey, cache);
          break;
        default:
          return writer.emitEncoded(em, h, tag, rep, obj, asMapKey, cache);
          break;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.maybeQuoted = function(em, obj) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null);
    if (h != null) {
      if (h.tag(obj).length === 1) {
        return types.quoted(obj);
      } else {
        return obj;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.marshalTop = function(em, obj, asMapKey, cache) {
    return JSON.stringify(writer.marshal(em, writer.maybeQuoted(em, obj), asMapKey, cache));
  };
  writer.Writer = function(marshaller, options) {
    this._marshaller = marshaller;
    this.options = options || {};
    if (this.options["cache"] === false) {
      this.cache = null;
    } else {
      this.cache = this.options["cache"] ? this.options["cache"] : new caching.WriteCache;
    }
  };
  writer.Writer.prototype.marshaller = function() {
    return this._marshaller;
  };
  writer.Writer.prototype["marshaller"] = writer.Writer.prototype.marshaller;
  writer.Writer.prototype.write = function(obj, opts) {
    var ret = null, ropts = opts || {}, asMapKey = ropts["asMapKey"] || false, cache = this._marshaller.verbose ? false : this.cache;
    if (ropts["marshalTop"] === false) {
      ret = writer.marshal(this._marshaller, obj, asMapKey, cache);
    } else {
      ret = writer.marshalTop(this._marshaller, obj, asMapKey, cache);
    }
    if (this.cache != null) {
      this.cache.clear();
    }
    return ret;
  };
  writer.Writer.prototype["write"] = writer.Writer.prototype.write;
  writer.Writer.prototype.register = function(type, handler) {
    this._marshaller.registerHandler(type, handler);
  };
  writer.Writer.prototype["register"] = writer.Writer.prototype.register;
});
goog.provide("com.cognitect.transit");
goog.require("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
var TRANSIT_DEV = true;
var TRANSIT_NODE_TARGET = false;
var TRANSIT_BROWSER_TARGET = false;
var TRANSIT_BROWSER_AMD_TARGET = false;
goog.scope(function() {
  var transit = com.cognitect.transit;
  var reader = com.cognitect.transit.impl.reader, writer = com.cognitect.transit.impl.writer, decoder = com.cognitect.transit.impl.decoder, types = com.cognitect.transit.types, eq = com.cognitect.transit.eq, caching = com.cognitect.transit.caching;
  transit.reader = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      type = "json";
      var unmarshaller = new reader.JSONUnmarshaller(opts);
      return new reader.Reader(unmarshaller, opts);
    } else {
      throw new Error("Cannot create reader of type " + type);
    }
  };
  transit.writer = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      if (type === "json-verbose") {
        if (opts == null) {
          opts = {};
        }
        opts["verbose"] = true;
      }
      type = "json";
      var marshaller = new writer.JSONMarshaller(opts);
      return new writer.Writer(marshaller, opts);
    } else {
      var err = new Error('Type must be "json"');
      err.data = {type:type};
      throw err;
    }
  };
  transit.makeWriteHandler = function(obj) {
    var Handler = function() {
    };
    Handler.prototype.tag = obj["tag"];
    Handler.prototype.rep = obj["rep"];
    Handler.prototype.stringRep = obj["stringRep"];
    Handler.prototype.getVerboseHandler = obj["getVerboseHandler"];
    return new Handler;
  };
  transit.makeBuilder = function(obj) {
    var Builder = function() {
    };
    Builder.prototype.init = obj["init"];
    Builder.prototype.add = obj["add"];
    Builder.prototype.finalize = obj["finalize"];
    Builder.prototype.fromArray = obj["fromArray"];
    return new Builder;
  };
  transit.date = types.date;
  transit.integer = types.intValue;
  transit.isInteger = types.isInteger;
  transit.uuid = types.uuid;
  transit.isUUID = types.isUUID;
  transit.bigInt = types.bigInteger;
  transit.isBigInt = types.isBigInteger;
  transit.bigDec = types.bigDecimalValue;
  transit.isBigDec = types.isBigDecimal;
  transit.keyword = types.keyword;
  transit.isKeyword = types.isKeyword;
  transit.symbol = types.symbol;
  transit.isSymbol = types.isSymbol;
  transit.binary = types.binary;
  transit.isBinary = types.isBinary;
  transit.uri = types.uri;
  transit.isURI = types.isURI;
  transit.map = types.map;
  transit.isMap = types.isMap;
  transit.set = types.set;
  transit.isSet = types.isSet;
  transit.list = types.list;
  transit.isList = types.isList;
  transit.quoted = types.quoted;
  transit.isQuoted = types.isQuoted;
  transit.tagged = types.taggedValue;
  transit.isTaggedValue = types.isTaggedValue;
  transit.link = types.link;
  transit.isLink = types.isLink;
  transit.hash = eq.hashCode;
  transit.hashMapLike = eq.hashMapLike;
  transit.hashMapLike = eq.hashArrayLike;
  transit.equals = eq.equals;
  transit.extendToEQ = eq.extendToEQ;
  transit.mapToObject = function(m) {
    var ret = {};
    m.forEach(function(v, k) {
      if (typeof k !== "string") {
        throw Error("Cannot convert map with non-string keys");
      } else {
        ret[k] = v;
      }
    });
    return ret;
  };
  transit.decoder = decoder.decoder;
  transit.readCache = caching.readCache;
  transit.writeCache = caching.writeCache;
  transit.UUIDfromString = types.UUIDfromString;
  transit.randomUUID = types.randomUUID;
  transit.stringableKeys = writer.stringableKeys;
  if (TRANSIT_BROWSER_TARGET) {
    goog.exportSymbol("transit.reader", transit.reader);
    goog.exportSymbol("transit.writer", transit.writer);
    goog.exportSymbol("transit.makeBuilder", transit.makeBuilder);
    goog.exportSymbol("transit.makeWriteHandler", transit.makeWriteHandler);
    goog.exportSymbol("transit.date", types.date);
    goog.exportSymbol("transit.integer", types.intValue);
    goog.exportSymbol("transit.isInteger", types.isInteger);
    goog.exportSymbol("transit.uuid", types.uuid);
    goog.exportSymbol("transit.isUUID", types.isUUID);
    goog.exportSymbol("transit.bigInt", types.bigInteger);
    goog.exportSymbol("transit.isBigInt", types.isBigInteger);
    goog.exportSymbol("transit.bigDec", types.bigDecimalValue);
    goog.exportSymbol("transit.isBigDec", types.isBigDecimal);
    goog.exportSymbol("transit.keyword", types.keyword);
    goog.exportSymbol("transit.isKeyword", types.isKeyword);
    goog.exportSymbol("transit.symbol", types.symbol);
    goog.exportSymbol("transit.isSymbol", types.isSymbol);
    goog.exportSymbol("transit.binary", types.binary);
    goog.exportSymbol("transit.isBinary", types.isBinary);
    goog.exportSymbol("transit.uri", types.uri);
    goog.exportSymbol("transit.isURI", types.isURI);
    goog.exportSymbol("transit.map", types.map);
    goog.exportSymbol("transit.isMap", types.isMap);
    goog.exportSymbol("transit.set", types.set);
    goog.exportSymbol("transit.isSet", types.isSet);
    goog.exportSymbol("transit.list", types.list);
    goog.exportSymbol("transit.isList", types.isList);
    goog.exportSymbol("transit.quoted", types.quoted);
    goog.exportSymbol("transit.isQuoted", types.isQuoted);
    goog.exportSymbol("transit.tagged", types.taggedValue);
    goog.exportSymbol("transit.isTaggedValue", types.isTaggedValue);
    goog.exportSymbol("transit.link", types.link);
    goog.exportSymbol("transit.isLink", types.isLink);
    goog.exportSymbol("transit.hash", eq.hashCode);
    goog.exportSymbol("transit.hashMapLike", eq.hashMapLike);
    goog.exportSymbol("transit.hashArrayLike", eq.hashArrayLike);
    goog.exportSymbol("transit.equals", eq.equals);
    goog.exportSymbol("transit.extendToEQ", eq.extendToEQ);
    goog.exportSymbol("transit.mapToObject", transit.mapToObject);
    goog.exportSymbol("transit.decoder", decoder.decoder);
    goog.exportSymbol("transit.UUIDfromString", types.UUIDfromString);
    goog.exportSymbol("transit.randomUUID", types.randomUUID);
    goog.exportSymbol("transit.stringableKeys", writer.stringableKeys);
    goog.exportSymbol("transit.readCache", caching.readCache);
    goog.exportSymbol("transit.writeCache", caching.writeCache);
  }
  if (TRANSIT_NODE_TARGET) {
    module.exports = {reader:transit.reader, writer:transit.writer, makeBuilder:transit.makeBuilder, makeWriteHandler:transit.makeWriteHandler, date:types.date, integer:types.intValue, isInteger:types.isInteger, uuid:types.uuid, isUUID:types.isUUID, bigInt:types.bigInteger, isBigInt:types.isBigInteger, bigDec:types.bigDecimalValue, isBigDec:types.isBigDecimal, keyword:types.keyword, isKeyword:types.isKeyword, symbol:types.symbol, isSymbol:types.isSymbol, binary:types.binary, isBinary:types.isBinary, 
    uri:types.uri, isURI:types.isURI, map:types.map, isMap:types.isMap, set:types.set, isSet:types.isSet, list:types.list, isList:types.isList, quoted:types.quoted, isQuoted:types.isQuoted, tagged:types.taggedValue, isTaggedValue:types.isTaggedValue, link:types.link, isLink:types.isLink, hash:eq.hashCode, hashArrayLike:eq.hashArrayLike, hashMapLike:eq.hashMapLike, equals:eq.equals, extendToEQ:eq.extendToEQ, mapToObject:transit.mapToObject, decoder:decoder.decoder, UUIDfromString:types.UUIDfromString, 
    randomUUID:types.randomUUID, stringableKeys:writer.stringableKeys, readCache:caching.readCache, writeCache:caching.writeCache};
  }
});
goog.provide("cognitect.transit");
goog.require("cljs.core");
goog.require("goog.math.Long");
goog.require("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit");
cljs.core.UUID.prototype.cljs$core$IEquiv$ = true;
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return this$__$1.uuid === other.uuid;
  } else {
    if (other instanceof com.cognitect.transit.types.UUID) {
      return this$__$1.uuid === other.toString();
    } else {
      return false;
    }
  }
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return cljs.core._equiv.call(null, other, this$__$1);
  } else {
    return this$__$1.equiv(other);
  }
};
goog.math.Long.prototype.cljs$core$IEquiv$ = true;
goog.math.Long.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
goog.math.Long.prototype.cljs$core$IHash$ = true;
goog.math.Long.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(uuid, writer, _) {
  var uuid__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(uuid__$1.toString()), cljs.core.str('"')].join(""));
};
cognitect.transit.opts_merge = function cognitect$transit$opts_merge(a, b) {
  var seq__12396_12400 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, b));
  var chunk__12397_12401 = null;
  var count__12398_12402 = 0;
  var i__12399_12403 = 0;
  while (true) {
    if (i__12399_12403 < count__12398_12402) {
      var k_12404 = cljs.core._nth.call(null, chunk__12397_12401, i__12399_12403);
      var v_12405 = b[k_12404];
      a[k_12404] = v_12405;
      var G__12406 = seq__12396_12400;
      var G__12407 = chunk__12397_12401;
      var G__12408 = count__12398_12402;
      var G__12409 = i__12399_12403 + 1;
      seq__12396_12400 = G__12406;
      chunk__12397_12401 = G__12407;
      count__12398_12402 = G__12408;
      i__12399_12403 = G__12409;
      continue;
    } else {
      var temp__4126__auto___12410 = cljs.core.seq.call(null, seq__12396_12400);
      if (temp__4126__auto___12410) {
        var seq__12396_12411__$1 = temp__4126__auto___12410;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__12396_12411__$1)) {
          var c__4894__auto___12412 = cljs.core.chunk_first.call(null, seq__12396_12411__$1);
          var G__12413 = cljs.core.chunk_rest.call(null, seq__12396_12411__$1);
          var G__12414 = c__4894__auto___12412;
          var G__12415 = cljs.core.count.call(null, c__4894__auto___12412);
          var G__12416 = 0;
          seq__12396_12400 = G__12413;
          chunk__12397_12401 = G__12414;
          count__12398_12402 = G__12415;
          i__12399_12403 = G__12416;
          continue;
        } else {
          var k_12417 = cljs.core.first.call(null, seq__12396_12411__$1);
          var v_12418 = b[k_12417];
          a[k_12417] = v_12418;
          var G__12419 = cljs.core.next.call(null, seq__12396_12411__$1);
          var G__12420 = null;
          var G__12421 = 0;
          var G__12422 = 0;
          seq__12396_12400 = G__12419;
          chunk__12397_12401 = G__12420;
          count__12398_12402 = G__12421;
          i__12399_12403 = G__12422;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return a;
};
cognitect.transit.MapBuilder = function() {
};
cognitect.transit.MapBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.MapBuilder.prototype.add = function(m, k, v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.assoc_BANG_.call(null, m, k, v);
};
cognitect.transit.MapBuilder.prototype.finalize = function(m, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, m);
};
cognitect.transit.MapBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentArrayMap.fromArray.call(null, arr, true, true);
};
cognitect.transit.MapBuilder.cljs$lang$type = true;
cognitect.transit.MapBuilder.cljs$lang$ctorStr = "cognitect.transit/MapBuilder";
cognitect.transit.MapBuilder.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cognitect.transit/MapBuilder");
};
cognitect.transit.__GT_MapBuilder = function cognitect$transit$__GT_MapBuilder() {
  return new cognitect.transit.MapBuilder;
};
cognitect.transit.VectorBuilder = function() {
};
cognitect.transit.VectorBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
};
cognitect.transit.VectorBuilder.prototype.add = function(v, x, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.conj_BANG_.call(null, v, x);
};
cognitect.transit.VectorBuilder.prototype.finalize = function(v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, v);
};
cognitect.transit.VectorBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentVector.fromArray.call(null, arr, true);
};
cognitect.transit.VectorBuilder.cljs$lang$type = true;
cognitect.transit.VectorBuilder.cljs$lang$ctorStr = "cognitect.transit/VectorBuilder";
cognitect.transit.VectorBuilder.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cognitect.transit/VectorBuilder");
};
cognitect.transit.__GT_VectorBuilder = function cognitect$transit$__GT_VectorBuilder() {
  return new cognitect.transit.VectorBuilder;
};
cognitect.transit.reader = function() {
  var cognitect$transit$reader = null;
  var cognitect$transit$reader__1 = function(type) {
    return cognitect$transit$reader.call(null, type, null);
  };
  var cognitect$transit$reader__2 = function(type, opts) {
    return com.cognitect.transit.reader.call(null, cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"prefersStrings":false, "arrayBuilder":new cognitect.transit.VectorBuilder, "mapBuilder":new cognitect.transit.MapBuilder, "handlers":cljs.core.clj__GT_js.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, ["$", function(v) {
      return cljs.core.symbol.call(null, v);
    }, ":", function(v) {
      return cljs.core.keyword.call(null, v);
    }, "set", function(v) {
      return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, v);
    }, "list", function(v) {
      return cljs.core.into.call(null, cljs.core.List.EMPTY, v.reverse());
    }, "cmap", function(v) {
      var i = 0;
      var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
      while (true) {
        if (i < v.length) {
          var G__12423 = i + 2;
          var G__12424 = cljs.core.assoc_BANG_.call(null, ret, v[i], v[i + 1]);
          i = G__12423;
          ret = G__12424;
          continue;
        } else {
          return cljs.core.persistent_BANG_.call(null, ret);
        }
        break;
      }
    }], null), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts)))}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
  };
  cognitect$transit$reader = function(type, opts) {
    switch(arguments.length) {
      case 1:
        return cognitect$transit$reader__1.call(this, type);
      case 2:
        return cognitect$transit$reader__2.call(this, type, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cognitect$transit$reader.cljs$core$IFn$_invoke$arity$1 = cognitect$transit$reader__1;
  cognitect$transit$reader.cljs$core$IFn$_invoke$arity$2 = cognitect$transit$reader__2;
  return cognitect$transit$reader;
}();
cognitect.transit.read = function cognitect$transit$read(r, str) {
  return r.read(str);
};
cognitect.transit.KeywordHandler = function() {
};
cognitect.transit.KeywordHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return ":";
};
cognitect.transit.KeywordHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.cljs$lang$type = true;
cognitect.transit.KeywordHandler.cljs$lang$ctorStr = "cognitect.transit/KeywordHandler";
cognitect.transit.KeywordHandler.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cognitect.transit/KeywordHandler");
};
cognitect.transit.__GT_KeywordHandler = function cognitect$transit$__GT_KeywordHandler() {
  return new cognitect.transit.KeywordHandler;
};
cognitect.transit.SymbolHandler = function() {
};
cognitect.transit.SymbolHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "$";
};
cognitect.transit.SymbolHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.cljs$lang$type = true;
cognitect.transit.SymbolHandler.cljs$lang$ctorStr = "cognitect.transit/SymbolHandler";
cognitect.transit.SymbolHandler.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cognitect.transit/SymbolHandler");
};
cognitect.transit.__GT_SymbolHandler = function cognitect$transit$__GT_SymbolHandler() {
  return new cognitect.transit.SymbolHandler;
};
cognitect.transit.ListHandler = function() {
};
cognitect.transit.ListHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "list";
};
cognitect.transit.ListHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__12425_12429 = cljs.core.seq.call(null, v);
  var chunk__12426_12430 = null;
  var count__12427_12431 = 0;
  var i__12428_12432 = 0;
  while (true) {
    if (i__12428_12432 < count__12427_12431) {
      var x_12433 = cljs.core._nth.call(null, chunk__12426_12430, i__12428_12432);
      ret.push(x_12433);
      var G__12434 = seq__12425_12429;
      var G__12435 = chunk__12426_12430;
      var G__12436 = count__12427_12431;
      var G__12437 = i__12428_12432 + 1;
      seq__12425_12429 = G__12434;
      chunk__12426_12430 = G__12435;
      count__12427_12431 = G__12436;
      i__12428_12432 = G__12437;
      continue;
    } else {
      var temp__4126__auto___12438 = cljs.core.seq.call(null, seq__12425_12429);
      if (temp__4126__auto___12438) {
        var seq__12425_12439__$1 = temp__4126__auto___12438;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__12425_12439__$1)) {
          var c__4894__auto___12440 = cljs.core.chunk_first.call(null, seq__12425_12439__$1);
          var G__12441 = cljs.core.chunk_rest.call(null, seq__12425_12439__$1);
          var G__12442 = c__4894__auto___12440;
          var G__12443 = cljs.core.count.call(null, c__4894__auto___12440);
          var G__12444 = 0;
          seq__12425_12429 = G__12441;
          chunk__12426_12430 = G__12442;
          count__12427_12431 = G__12443;
          i__12428_12432 = G__12444;
          continue;
        } else {
          var x_12445 = cljs.core.first.call(null, seq__12425_12439__$1);
          ret.push(x_12445);
          var G__12446 = cljs.core.next.call(null, seq__12425_12439__$1);
          var G__12447 = null;
          var G__12448 = 0;
          var G__12449 = 0;
          seq__12425_12429 = G__12446;
          chunk__12426_12430 = G__12447;
          count__12427_12431 = G__12448;
          i__12428_12432 = G__12449;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.ListHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.ListHandler.cljs$lang$type = true;
cognitect.transit.ListHandler.cljs$lang$ctorStr = "cognitect.transit/ListHandler";
cognitect.transit.ListHandler.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cognitect.transit/ListHandler");
};
cognitect.transit.__GT_ListHandler = function cognitect$transit$__GT_ListHandler() {
  return new cognitect.transit.ListHandler;
};
cognitect.transit.MapHandler = function() {
};
cognitect.transit.MapHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "map";
};
cognitect.transit.MapHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v;
};
cognitect.transit.MapHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.MapHandler.cljs$lang$type = true;
cognitect.transit.MapHandler.cljs$lang$ctorStr = "cognitect.transit/MapHandler";
cognitect.transit.MapHandler.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cognitect.transit/MapHandler");
};
cognitect.transit.__GT_MapHandler = function cognitect$transit$__GT_MapHandler() {
  return new cognitect.transit.MapHandler;
};
cognitect.transit.SetHandler = function() {
};
cognitect.transit.SetHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "set";
};
cognitect.transit.SetHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__12450_12454 = cljs.core.seq.call(null, v);
  var chunk__12451_12455 = null;
  var count__12452_12456 = 0;
  var i__12453_12457 = 0;
  while (true) {
    if (i__12453_12457 < count__12452_12456) {
      var x_12458 = cljs.core._nth.call(null, chunk__12451_12455, i__12453_12457);
      ret.push(x_12458);
      var G__12459 = seq__12450_12454;
      var G__12460 = chunk__12451_12455;
      var G__12461 = count__12452_12456;
      var G__12462 = i__12453_12457 + 1;
      seq__12450_12454 = G__12459;
      chunk__12451_12455 = G__12460;
      count__12452_12456 = G__12461;
      i__12453_12457 = G__12462;
      continue;
    } else {
      var temp__4126__auto___12463 = cljs.core.seq.call(null, seq__12450_12454);
      if (temp__4126__auto___12463) {
        var seq__12450_12464__$1 = temp__4126__auto___12463;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__12450_12464__$1)) {
          var c__4894__auto___12465 = cljs.core.chunk_first.call(null, seq__12450_12464__$1);
          var G__12466 = cljs.core.chunk_rest.call(null, seq__12450_12464__$1);
          var G__12467 = c__4894__auto___12465;
          var G__12468 = cljs.core.count.call(null, c__4894__auto___12465);
          var G__12469 = 0;
          seq__12450_12454 = G__12466;
          chunk__12451_12455 = G__12467;
          count__12452_12456 = G__12468;
          i__12453_12457 = G__12469;
          continue;
        } else {
          var x_12470 = cljs.core.first.call(null, seq__12450_12464__$1);
          ret.push(x_12470);
          var G__12471 = cljs.core.next.call(null, seq__12450_12464__$1);
          var G__12472 = null;
          var G__12473 = 0;
          var G__12474 = 0;
          seq__12450_12454 = G__12471;
          chunk__12451_12455 = G__12472;
          count__12452_12456 = G__12473;
          i__12453_12457 = G__12474;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.SetHandler.prototype.stringRep = function() {
  var self__ = this;
  var v = this;
  return null;
};
cognitect.transit.SetHandler.cljs$lang$type = true;
cognitect.transit.SetHandler.cljs$lang$ctorStr = "cognitect.transit/SetHandler";
cognitect.transit.SetHandler.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cognitect.transit/SetHandler");
};
cognitect.transit.__GT_SetHandler = function cognitect$transit$__GT_SetHandler() {
  return new cognitect.transit.SetHandler;
};
cognitect.transit.VectorHandler = function() {
};
cognitect.transit.VectorHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "array";
};
cognitect.transit.VectorHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__12475_12479 = cljs.core.seq.call(null, v);
  var chunk__12476_12480 = null;
  var count__12477_12481 = 0;
  var i__12478_12482 = 0;
  while (true) {
    if (i__12478_12482 < count__12477_12481) {
      var x_12483 = cljs.core._nth.call(null, chunk__12476_12480, i__12478_12482);
      ret.push(x_12483);
      var G__12484 = seq__12475_12479;
      var G__12485 = chunk__12476_12480;
      var G__12486 = count__12477_12481;
      var G__12487 = i__12478_12482 + 1;
      seq__12475_12479 = G__12484;
      chunk__12476_12480 = G__12485;
      count__12477_12481 = G__12486;
      i__12478_12482 = G__12487;
      continue;
    } else {
      var temp__4126__auto___12488 = cljs.core.seq.call(null, seq__12475_12479);
      if (temp__4126__auto___12488) {
        var seq__12475_12489__$1 = temp__4126__auto___12488;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__12475_12489__$1)) {
          var c__4894__auto___12490 = cljs.core.chunk_first.call(null, seq__12475_12489__$1);
          var G__12491 = cljs.core.chunk_rest.call(null, seq__12475_12489__$1);
          var G__12492 = c__4894__auto___12490;
          var G__12493 = cljs.core.count.call(null, c__4894__auto___12490);
          var G__12494 = 0;
          seq__12475_12479 = G__12491;
          chunk__12476_12480 = G__12492;
          count__12477_12481 = G__12493;
          i__12478_12482 = G__12494;
          continue;
        } else {
          var x_12495 = cljs.core.first.call(null, seq__12475_12489__$1);
          ret.push(x_12495);
          var G__12496 = cljs.core.next.call(null, seq__12475_12489__$1);
          var G__12497 = null;
          var G__12498 = 0;
          var G__12499 = 0;
          seq__12475_12479 = G__12496;
          chunk__12476_12480 = G__12497;
          count__12477_12481 = G__12498;
          i__12478_12482 = G__12499;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return ret;
};
cognitect.transit.VectorHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.VectorHandler.cljs$lang$type = true;
cognitect.transit.VectorHandler.cljs$lang$ctorStr = "cognitect.transit/VectorHandler";
cognitect.transit.VectorHandler.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cognitect.transit/VectorHandler");
};
cognitect.transit.__GT_VectorHandler = function cognitect$transit$__GT_VectorHandler() {
  return new cognitect.transit.VectorHandler;
};
cognitect.transit.UUIDHandler = function() {
};
cognitect.transit.UUIDHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "u";
};
cognitect.transit.UUIDHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.uuid;
};
cognitect.transit.UUIDHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var this$ = this;
  return this$.rep(v);
};
cognitect.transit.UUIDHandler.cljs$lang$type = true;
cognitect.transit.UUIDHandler.cljs$lang$ctorStr = "cognitect.transit/UUIDHandler";
cognitect.transit.UUIDHandler.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cognitect.transit/UUIDHandler");
};
cognitect.transit.__GT_UUIDHandler = function cognitect$transit$__GT_UUIDHandler() {
  return new cognitect.transit.UUIDHandler;
};
cognitect.transit.writer = function() {
  var cognitect$transit$writer = null;
  var cognitect$transit$writer__1 = function(type) {
    return cognitect$transit$writer.call(null, type, null);
  };
  var cognitect$transit$writer__2 = function(type, opts) {
    var keyword_handler = new cognitect.transit.KeywordHandler;
    var symbol_handler = new cognitect.transit.SymbolHandler;
    var list_handler = new cognitect.transit.ListHandler;
    var map_handler = new cognitect.transit.MapHandler;
    var set_handler = new cognitect.transit.SetHandler;
    var vector_handler = new cognitect.transit.VectorHandler;
    var uuid_handler = new cognitect.transit.UUIDHandler;
    var handlers = cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([cljs.core.PersistentHashMap, cljs.core.Cons, cljs.core.PersistentArrayMap, cljs.core.NodeSeq, cljs.core.PersistentQueue, cljs.core.IndexedSeq, cljs.core.Keyword, cljs.core.EmptyList, cljs.core.LazySeq, cljs.core.Subvec, cljs.core.PersistentQueueSeq, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentArrayMapSeq, cljs.core.PersistentVector, cljs.core.List, cljs.core.RSeq, cljs.core.PersistentHashSet, cljs.core.PersistentTreeMap, 
    cljs.core.KeySeq, cljs.core.ChunkedSeq, cljs.core.PersistentTreeSet, cljs.core.ChunkedCons, cljs.core.Symbol, cljs.core.UUID, cljs.core.Range, cljs.core.PersistentTreeMapSeq], [map_handler, list_handler, map_handler, list_handler, list_handler, list_handler, keyword_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, set_handler, map_handler, list_handler, list_handler, set_handler, list_handler, 
    symbol_handler, uuid_handler, list_handler, list_handler]), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts));
    return com.cognitect.transit.writer.call(null, cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"unpack":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
      return function(x) {
        if (x instanceof cljs.core.PersistentArrayMap) {
          return x.arr;
        } else {
          return false;
        }
      };
    }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), "handlers":function() {
      var x12509 = cljs.core.clone.call(null, handlers);
      x12509.forEach = function(x12509, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
        return function(f) {
          var coll = this;
          var seq__12510 = cljs.core.seq.call(null, coll);
          var chunk__12511 = null;
          var count__12512 = 0;
          var i__12513 = 0;
          while (true) {
            if (i__12513 < count__12512) {
              var vec__12514 = cljs.core._nth.call(null, chunk__12511, i__12513);
              var k = cljs.core.nth.call(null, vec__12514, 0, null);
              var v = cljs.core.nth.call(null, vec__12514, 1, null);
              f.call(null, v, k);
              var G__12516 = seq__12510;
              var G__12517 = chunk__12511;
              var G__12518 = count__12512;
              var G__12519 = i__12513 + 1;
              seq__12510 = G__12516;
              chunk__12511 = G__12517;
              count__12512 = G__12518;
              i__12513 = G__12519;
              continue;
            } else {
              var temp__4126__auto__ = cljs.core.seq.call(null, seq__12510);
              if (temp__4126__auto__) {
                var seq__12510__$1 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__12510__$1)) {
                  var c__4894__auto__ = cljs.core.chunk_first.call(null, seq__12510__$1);
                  var G__12520 = cljs.core.chunk_rest.call(null, seq__12510__$1);
                  var G__12521 = c__4894__auto__;
                  var G__12522 = cljs.core.count.call(null, c__4894__auto__);
                  var G__12523 = 0;
                  seq__12510 = G__12520;
                  chunk__12511 = G__12521;
                  count__12512 = G__12522;
                  i__12513 = G__12523;
                  continue;
                } else {
                  var vec__12515 = cljs.core.first.call(null, seq__12510__$1);
                  var k = cljs.core.nth.call(null, vec__12515, 0, null);
                  var v = cljs.core.nth.call(null, vec__12515, 1, null);
                  f.call(null, v, k);
                  var G__12524 = cljs.core.next.call(null, seq__12510__$1);
                  var G__12525 = null;
                  var G__12526 = 0;
                  var G__12527 = 0;
                  seq__12510 = G__12524;
                  chunk__12511 = G__12525;
                  count__12512 = G__12526;
                  i__12513 = G__12527;
                  continue;
                }
              } else {
                return null;
              }
            }
            break;
          }
        };
      }(x12509, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers);
      return x12509;
    }(), "objectBuilder":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
      return function(m, kfn, vfn) {
        return cljs.core.reduce_kv.call(null, function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
          return function(obj, k, v) {
            var G__12508 = obj;
            G__12508.push(kfn.call(null, k), vfn.call(null, v));
            return G__12508;
          };
        }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), ["^ "], m);
      };
    }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers)}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
  };
  cognitect$transit$writer = function(type, opts) {
    switch(arguments.length) {
      case 1:
        return cognitect$transit$writer__1.call(this, type);
      case 2:
        return cognitect$transit$writer__2.call(this, type, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cognitect$transit$writer.cljs$core$IFn$_invoke$arity$1 = cognitect$transit$writer__1;
  cognitect$transit$writer.cljs$core$IFn$_invoke$arity$2 = cognitect$transit$writer__2;
  return cognitect$transit$writer;
}();
cognitect.transit.write = function cognitect$transit$write(w, o) {
  return w.write(o);
};
cognitect.transit.read_handler = function cognitect$transit$read_handler(from_rep) {
  return from_rep;
};
cognitect.transit.write_handler = function() {
  var cognitect$transit$write_handler = null;
  var cognitect$transit$write_handler__2 = function(tag_fn, rep_fn) {
    return cognitect$transit$write_handler.call(null, tag_fn, rep_fn, null, null);
  };
  var cognitect$transit$write_handler__3 = function(tag_fn, rep_fn, str_rep_fn) {
    return cognitect$transit$write_handler.call(null, tag_fn, rep_fn, str_rep_fn, null);
  };
  var cognitect$transit$write_handler__4 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn) {
    if (typeof cognitect.transit.t12531 !== "undefined") {
    } else {
      cognitect.transit.t12531 = function(verbose_handler_fn, str_rep_fn, rep_fn, tag_fn, write_handler, meta12532) {
        this.verbose_handler_fn = verbose_handler_fn;
        this.str_rep_fn = str_rep_fn;
        this.rep_fn = rep_fn;
        this.tag_fn = tag_fn;
        this.write_handler = write_handler;
        this.meta12532 = meta12532;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cognitect.transit.t12531.prototype.tag = function(o) {
        var self__ = this;
        var _ = this;
        return self__.tag_fn.call(null, o);
      };
      cognitect.transit.t12531.prototype.rep = function(o) {
        var self__ = this;
        var _ = this;
        return self__.rep_fn.call(null, o);
      };
      cognitect.transit.t12531.prototype.stringRep = function(o) {
        var self__ = this;
        var _ = this;
        if (cljs.core.truth_(self__.str_rep_fn)) {
          return self__.str_rep_fn.call(null, o);
        } else {
          return null;
        }
      };
      cognitect.transit.t12531.prototype.getVerboseHandler = function() {
        var self__ = this;
        var _ = this;
        if (cljs.core.truth_(self__.verbose_handler_fn)) {
          return self__.verbose_handler_fn.call(null);
        } else {
          return null;
        }
      };
      cognitect.transit.t12531.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12533) {
        var self__ = this;
        var _12533__$1 = this;
        return self__.meta12532;
      };
      cognitect.transit.t12531.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12533, meta12532__$1) {
        var self__ = this;
        var _12533__$1 = this;
        return new cognitect.transit.t12531(self__.verbose_handler_fn, self__.str_rep_fn, self__.rep_fn, self__.tag_fn, self__.write_handler, meta12532__$1);
      };
      cognitect.transit.t12531.cljs$lang$type = true;
      cognitect.transit.t12531.cljs$lang$ctorStr = "cognitect.transit/t12531";
      cognitect.transit.t12531.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
        return cljs.core._write.call(null, writer__4689__auto__, "cognitect.transit/t12531");
      };
      cognitect.transit.__GT_t12531 = function cognitect$transit$write_handler_$___GT_t12531(verbose_handler_fn__$1, str_rep_fn__$1, rep_fn__$1, tag_fn__$1, write_handler__$1, meta12532) {
        return new cognitect.transit.t12531(verbose_handler_fn__$1, str_rep_fn__$1, rep_fn__$1, tag_fn__$1, write_handler__$1, meta12532);
      };
    }
    return new cognitect.transit.t12531(verbose_handler_fn, str_rep_fn, rep_fn, tag_fn, cognitect$transit$write_handler, cljs.core.PersistentArrayMap.EMPTY);
  };
  cognitect$transit$write_handler = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn) {
    switch(arguments.length) {
      case 2:
        return cognitect$transit$write_handler__2.call(this, tag_fn, rep_fn);
      case 3:
        return cognitect$transit$write_handler__3.call(this, tag_fn, rep_fn, str_rep_fn);
      case 4:
        return cognitect$transit$write_handler__4.call(this, tag_fn, rep_fn, str_rep_fn, verbose_handler_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cognitect$transit$write_handler.cljs$core$IFn$_invoke$arity$2 = cognitect$transit$write_handler__2;
  cognitect$transit$write_handler.cljs$core$IFn$_invoke$arity$3 = cognitect$transit$write_handler__3;
  cognitect$transit$write_handler.cljs$core$IFn$_invoke$arity$4 = cognitect$transit$write_handler__4;
  return cognitect$transit$write_handler;
}();
cognitect.transit.tagged_value = function cognitect$transit$tagged_value(tag, rep) {
  return com.cognitect.transit.types.taggedValue.call(null, tag, rep);
};
cognitect.transit.tagged_value_QMARK_ = function cognitect$transit$tagged_value_QMARK_(x) {
  return com.cognitect.transit.types.isTaggedValue.call(null, x);
};
cognitect.transit.integer = function cognitect$transit$integer(s) {
  return com.cognitect.transit.types.integer.call(null, s);
};
cognitect.transit.integer_QMARK_ = function cognitect$transit$integer_QMARK_(x) {
  return com.cognitect.transit.types.isInteger.call(null, x);
};
cognitect.transit.bigint = function cognitect$transit$bigint(s) {
  return com.cognitect.transit.types.bigInteger.call(null, s);
};
cognitect.transit.bigint_QMARK_ = function cognitect$transit$bigint_QMARK_(x) {
  return com.cognitect.transit.types.isBigInteger.call(null, x);
};
cognitect.transit.bigdec = function cognitect$transit$bigdec(s) {
  return com.cognitect.transit.types.bigDecimalValue.call(null, s);
};
cognitect.transit.bigdec_QMARK_ = function cognitect$transit$bigdec_QMARK_(x) {
  return com.cognitect.transit.types.isBigDecimal.call(null, x);
};
cognitect.transit.uri = function cognitect$transit$uri(s) {
  return com.cognitect.transit.types.uri.call(null, s);
};
cognitect.transit.uri_QMARK_ = function cognitect$transit$uri_QMARK_(x) {
  return com.cognitect.transit.types.isURI.call(null, x);
};
cognitect.transit.uuid = function cognitect$transit$uuid(s) {
  return com.cognitect.transit.types.uuid.call(null, s);
};
cognitect.transit.uuid_QMARK_ = function cognitect$transit$uuid_QMARK_(x) {
  return com.cognitect.transit.types.isUUID.call(null, x);
};
cognitect.transit.binary = function cognitect$transit$binary(s) {
  return com.cognitect.transit.types.binary.call(null, s);
};
cognitect.transit.binary_QMARK_ = function cognitect$transit$binary_QMARK_(x) {
  return com.cognitect.transit.types.isBinary.call(null, x);
};
cognitect.transit.quoted = function cognitect$transit$quoted(x) {
  return com.cognitect.transit.types.quoted.call(null, x);
};
cognitect.transit.quoted_QMARK_ = function cognitect$transit$quoted_QMARK_(x) {
  return com.cognitect.transit.types.isQuoted.call(null, x);
};
cognitect.transit.link = function cognitect$transit$link(x) {
  return com.cognitect.transit.types.link.call(null, x);
};
cognitect.transit.link_QMARK_ = function cognitect$transit$link_QMARK_(x) {
  return com.cognitect.transit.types.isLink.call(null, x);
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj12259 = {};
  return obj12259;
}();
cljs.reader.read_char = function cljs$reader$read_char(reader) {
  if (function() {
    var and__4097__auto__ = reader;
    if (and__4097__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4745__auto__ = reader == null ? null : reader;
    return function() {
      var or__4109__auto__ = cljs.reader.read_char[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.reader.read_char["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function cljs$reader$unread(reader, ch) {
  if (function() {
    var and__4097__auto__ = reader;
    if (and__4097__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4745__auto__ = reader == null ? null : reader;
    return function() {
      var or__4109__auto__ = cljs.reader.unread[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.reader.unread["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
  return cljs.core._write.call(null, writer__4689__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.__GT_StringPushbackReader = function cljs$reader$__GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function cljs$reader$push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function cljs$reader$whitespace_QMARK_(ch) {
  var or__4109__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__4109__auto__)) {
    return or__4109__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function cljs$reader$numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function cljs$reader$comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function cljs$reader$number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var cljs$reader$reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var cljs$reader$reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      var G__12260__i = 0, G__12260__a = new Array(arguments.length - 1);
      while (G__12260__i < G__12260__a.length) {
        G__12260__a[G__12260__i] = arguments[G__12260__i + 1];
        ++G__12260__i;
      }
      msg = new cljs.core.IndexedSeq(G__12260__a, 0);
    }
    return cljs$reader$reader_error__delegate.call(this, rdr, msg);
  };
  cljs$reader$reader_error.cljs$lang$maxFixedArity = 1;
  cljs$reader$reader_error.cljs$lang$applyTo = function(arglist__12261) {
    var rdr = cljs.core.first(arglist__12261);
    var msg = cljs.core.rest(arglist__12261);
    return cljs$reader$reader_error__delegate(rdr, msg);
  };
  cljs$reader$reader_error.cljs$core$IFn$_invoke$arity$variadic = cljs$reader$reader_error__delegate;
  return cljs$reader$reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function cljs$reader$macro_terminating_QMARK_(ch) {
  var and__4097__auto__ = !(ch === "#");
  if (and__4097__auto__) {
    var and__4097__auto____$1 = !(ch === "'");
    if (and__4097__auto____$1) {
      var and__4097__auto____$2 = !(ch === ":");
      if (and__4097__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__4097__auto____$2;
      }
    } else {
      return and__4097__auto____$1;
    }
  } else {
    return and__4097__auto__;
  }
};
cljs.reader.read_token = function cljs$reader$read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__12262 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__12263 = cljs.reader.read_char.call(null, rdr);
      sb = G__12262;
      ch = G__12263;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function cljs$reader$skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function cljs$reader$re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function cljs$reader$match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var ie8_fix = groups[2];
  var zero = cljs.core._EQ_.call(null, ie8_fix, "") ? null : ie8_fix;
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return-parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function cljs$reader$match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function cljs$reader$match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function cljs$reader$match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function cljs$reader$escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function cljs$reader$read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function cljs$reader$read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function cljs$reader$validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function cljs$reader$make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function cljs$reader$escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
        }
      }
    }
  }
};
cljs.reader.read_past = function cljs$reader$read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__12264 = cljs.reader.read_char.call(null, rdr);
      ch = G__12264;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function cljs$reader$read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4124__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var macrofn = temp__4124__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__12265 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__12265;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__12266 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__12266;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function cljs$reader$not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function cljs$reader$read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4124__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var obj = temp__4124__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function cljs$reader$read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmatched delimiter ", ch);
};
cljs.reader.read_list = function cljs$reader$read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function cljs$reader$read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function cljs$reader$read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function cljs$reader$read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4109__auto__ = ch == null;
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__4109__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__12267 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__12268 = cljs.reader.read_char.call(null, reader);
      buffer = G__12267;
      ch = G__12268;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function cljs$reader$read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__12269 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__12270 = cljs.reader.read_char.call(null, reader);
        buffer = G__12269;
        ch = G__12270;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__12271 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__12272 = cljs.reader.read_char.call(null, reader);
          buffer = G__12271;
          ch = G__12272;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function cljs$reader$read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char.call(null, reader);
        if (nch == null) {
          return cljs.reader.reader_error.call(null, reader, "EOF while reading");
        } else {
          var G__12277 = function() {
            var G__12275 = buffer;
            G__12275.append(nch);
            return G__12275;
          }();
          var G__12278 = cljs.reader.read_char.call(null, reader);
          buffer = G__12277;
          ch = G__12278;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__12279 = function() {
            var G__12276 = buffer;
            G__12276.append(ch);
            return G__12276;
          }();
          var G__12280 = cljs.reader.read_char.call(null, reader);
          buffer = G__12279;
          ch = G__12280;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function cljs$reader$special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (t === "/") {
          return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        } else {
          return not_found;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function cljs$reader$read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(function() {
    var and__4097__auto__ = goog.string.contains(token, "/");
    if (cljs.core.truth_(and__4097__auto__)) {
      return!(token.length === 1);
    } else {
      return and__4097__auto__;
    }
  }())) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function cljs$reader$read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function cljs$reader$desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function cljs$reader$wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function cljs$reader$throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function cljs$reader$read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__12282 = o;
    if (G__12282) {
      var bit__4783__auto__ = G__12282.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4783__auto__ || G__12282.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__12282.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__12282);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__12282);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function cljs$reader$read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function cljs$reader$read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_raw_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function cljs$reader$read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function cljs$reader$macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function cljs$reader$dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function cljs$reader$read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__12283 = reader;
        var G__12284 = eof_is_error;
        var G__12285 = sentinel;
        var G__12286 = is_recursive;
        reader = G__12283;
        eof_is_error = G__12284;
        sentinel = G__12285;
        is_recursive = G__12286;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__12287 = cljs.reader.read_comment.call(null, reader, ch);
          var G__12288 = eof_is_error;
          var G__12289 = sentinel;
          var G__12290 = is_recursive;
          reader = G__12287;
          eof_is_error = G__12288;
          sentinel = G__12289;
          is_recursive = G__12290;
          continue;
        } else {
          var f = cljs.reader.macros.call(null, ch);
          var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : cljs.reader.read_symbol.call(null, reader, ch);
          if (res === reader) {
            var G__12291 = reader;
            var G__12292 = eof_is_error;
            var G__12293 = sentinel;
            var G__12294 = is_recursive;
            reader = G__12291;
            eof_is_error = G__12292;
            sentinel = G__12293;
            is_recursive = G__12294;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function cljs$reader$read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function cljs$reader$zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__12295 = b.append("0");
          b = G__12295;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function cljs$reader$divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function cljs$reader$indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function cljs$reader$leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function cljs$reader$parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function cljs$reader$check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function cljs$reader$parse_and_validate_timestamp(s) {
  var vec__12297 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__12297, 0, null);
  var years = cljs.core.nth.call(null, vec__12297, 1, null);
  var months = cljs.core.nth.call(null, vec__12297, 2, null);
  var days = cljs.core.nth.call(null, vec__12297, 3, null);
  var hours = cljs.core.nth.call(null, vec__12297, 4, null);
  var minutes = cljs.core.nth.call(null, vec__12297, 5, null);
  var seconds = cljs.core.nth.call(null, vec__12297, 6, null);
  var fraction = cljs.core.nth.call(null, vec__12297, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__12297, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__12297, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__12297, 10, null);
  var v = vec__12297;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__4109__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__4109__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__4109__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__4109__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__4109__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__4109__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__4109__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__4109__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function cljs$reader$parse_timestamp(ts) {
  var temp__4124__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__12299 = temp__4124__auto__;
    var years = cljs.core.nth.call(null, vec__12299, 0, null);
    var months = cljs.core.nth.call(null, vec__12299, 1, null);
    var days = cljs.core.nth.call(null, vec__12299, 2, null);
    var hours = cljs.core.nth.call(null, vec__12299, 3, null);
    var minutes = cljs.core.nth.call(null, vec__12299, 4, null);
    var seconds = cljs.core.nth.call(null, vec__12299, 5, null);
    var ms = cljs.core.nth.call(null, vec__12299, 6, null);
    var offset = cljs.core.nth.call(null, vec__12299, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function cljs$reader$read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function cljs$reader$read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function cljs$reader$read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__12312_12324 = cljs.core.seq.call(null, form);
    var chunk__12313_12325 = null;
    var count__12314_12326 = 0;
    var i__12315_12327 = 0;
    while (true) {
      if (i__12315_12327 < count__12314_12326) {
        var x_12328 = cljs.core._nth.call(null, chunk__12313_12325, i__12315_12327);
        arr.push(x_12328);
        var G__12329 = seq__12312_12324;
        var G__12330 = chunk__12313_12325;
        var G__12331 = count__12314_12326;
        var G__12332 = i__12315_12327 + 1;
        seq__12312_12324 = G__12329;
        chunk__12313_12325 = G__12330;
        count__12314_12326 = G__12331;
        i__12315_12327 = G__12332;
        continue;
      } else {
        var temp__4126__auto___12333 = cljs.core.seq.call(null, seq__12312_12324);
        if (temp__4126__auto___12333) {
          var seq__12312_12334__$1 = temp__4126__auto___12333;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__12312_12334__$1)) {
            var c__4894__auto___12335 = cljs.core.chunk_first.call(null, seq__12312_12334__$1);
            var G__12336 = cljs.core.chunk_rest.call(null, seq__12312_12334__$1);
            var G__12337 = c__4894__auto___12335;
            var G__12338 = cljs.core.count.call(null, c__4894__auto___12335);
            var G__12339 = 0;
            seq__12312_12324 = G__12336;
            chunk__12313_12325 = G__12337;
            count__12314_12326 = G__12338;
            i__12315_12327 = G__12339;
            continue;
          } else {
            var x_12340 = cljs.core.first.call(null, seq__12312_12334__$1);
            arr.push(x_12340);
            var G__12341 = cljs.core.next.call(null, seq__12312_12334__$1);
            var G__12342 = null;
            var G__12343 = 0;
            var G__12344 = 0;
            seq__12312_12324 = G__12341;
            chunk__12313_12325 = G__12342;
            count__12314_12326 = G__12343;
            i__12315_12327 = G__12344;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj12317 = {};
        return obj12317;
      }();
      var seq__12318_12345 = cljs.core.seq.call(null, form);
      var chunk__12319_12346 = null;
      var count__12320_12347 = 0;
      var i__12321_12348 = 0;
      while (true) {
        if (i__12321_12348 < count__12320_12347) {
          var vec__12322_12349 = cljs.core._nth.call(null, chunk__12319_12346, i__12321_12348);
          var k_12350 = cljs.core.nth.call(null, vec__12322_12349, 0, null);
          var v_12351 = cljs.core.nth.call(null, vec__12322_12349, 1, null);
          obj[cljs.core.name.call(null, k_12350)] = v_12351;
          var G__12352 = seq__12318_12345;
          var G__12353 = chunk__12319_12346;
          var G__12354 = count__12320_12347;
          var G__12355 = i__12321_12348 + 1;
          seq__12318_12345 = G__12352;
          chunk__12319_12346 = G__12353;
          count__12320_12347 = G__12354;
          i__12321_12348 = G__12355;
          continue;
        } else {
          var temp__4126__auto___12356 = cljs.core.seq.call(null, seq__12318_12345);
          if (temp__4126__auto___12356) {
            var seq__12318_12357__$1 = temp__4126__auto___12356;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__12318_12357__$1)) {
              var c__4894__auto___12358 = cljs.core.chunk_first.call(null, seq__12318_12357__$1);
              var G__12359 = cljs.core.chunk_rest.call(null, seq__12318_12357__$1);
              var G__12360 = c__4894__auto___12358;
              var G__12361 = cljs.core.count.call(null, c__4894__auto___12358);
              var G__12362 = 0;
              seq__12318_12345 = G__12359;
              chunk__12319_12346 = G__12360;
              count__12320_12347 = G__12361;
              i__12321_12348 = G__12362;
              continue;
            } else {
              var vec__12323_12363 = cljs.core.first.call(null, seq__12318_12357__$1);
              var k_12364 = cljs.core.nth.call(null, vec__12323_12363, 0, null);
              var v_12365 = cljs.core.nth.call(null, vec__12323_12363, 1, null);
              obj[cljs.core.name.call(null, k_12364)] = v_12365;
              var G__12366 = cljs.core.next.call(null, seq__12318_12357__$1);
              var G__12367 = null;
              var G__12368 = 0;
              var G__12369 = 0;
              seq__12318_12345 = G__12366;
              chunk__12319_12346 = G__12367;
              count__12320_12347 = G__12368;
              i__12321_12348 = G__12369;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
    }
  }
};
cljs.reader.read_uuid = function cljs$reader$read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function cljs$reader$maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function cljs$reader$register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function cljs$reader$deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function cljs$reader$register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function cljs$reader$deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("ajax.core");
goog.require("cljs.core");
goog.require("goog.Uri");
goog.require("cognitect.transit");
goog.require("goog.net.XhrIo");
goog.require("goog.net.XhrManager");
goog.require("goog.json");
goog.require("goog.Uri.QueryData");
goog.require("goog.net.EventType");
goog.require("goog.events");
goog.require("goog.structs");
goog.require("goog.json.Serializer");
goog.require("clojure.string");
goog.require("cljs.reader");
goog.require("goog.net.ErrorCode");
ajax.core.AjaxImpl = function() {
  var obj12129 = {};
  return obj12129;
}();
ajax.core._js_ajax_request = function ajax$core$_js_ajax_request(this$, uri, method, body, headers, handler, opts) {
  if (function() {
    var and__4097__auto__ = this$;
    if (and__4097__auto__) {
      return this$.ajax$core$AjaxImpl$_js_ajax_request$arity$7;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return this$.ajax$core$AjaxImpl$_js_ajax_request$arity$7(this$, uri, method, body, headers, handler, opts);
  } else {
    var x__4745__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4109__auto__ = ajax.core._js_ajax_request[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = ajax.core._js_ajax_request["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "AjaxImpl.-js-ajax-request", this$);
        }
      }
    }().call(null, this$, uri, method, body, headers, handler, opts);
  }
};
ajax.core.AjaxRequest = function() {
  var obj12131 = {};
  return obj12131;
}();
ajax.core._abort = function ajax$core$_abort(this$) {
  if (function() {
    var and__4097__auto__ = this$;
    if (and__4097__auto__) {
      return this$.ajax$core$AjaxRequest$_abort$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return this$.ajax$core$AjaxRequest$_abort$arity$1(this$);
  } else {
    var x__4745__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4109__auto__ = ajax.core._abort[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = ajax.core._abort["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "AjaxRequest.-abort", this$);
        }
      }
    }().call(null, this$);
  }
};
ajax.core.DirectlySubmittable = function() {
  var obj12133 = {};
  return obj12133;
}();
ajax.core.AjaxResponse = function() {
  var obj12135 = {};
  return obj12135;
}();
ajax.core._status = function ajax$core$_status(this$) {
  if (function() {
    var and__4097__auto__ = this$;
    if (and__4097__auto__) {
      return this$.ajax$core$AjaxResponse$_status$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return this$.ajax$core$AjaxResponse$_status$arity$1(this$);
  } else {
    var x__4745__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4109__auto__ = ajax.core._status[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = ajax.core._status["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "AjaxResponse.-status", this$);
        }
      }
    }().call(null, this$);
  }
};
ajax.core._status_text = function ajax$core$_status_text(this$) {
  if (function() {
    var and__4097__auto__ = this$;
    if (and__4097__auto__) {
      return this$.ajax$core$AjaxResponse$_status_text$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return this$.ajax$core$AjaxResponse$_status_text$arity$1(this$);
  } else {
    var x__4745__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4109__auto__ = ajax.core._status_text[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = ajax.core._status_text["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "AjaxResponse.-status-text", this$);
        }
      }
    }().call(null, this$);
  }
};
ajax.core._body = function ajax$core$_body(this$) {
  if (function() {
    var and__4097__auto__ = this$;
    if (and__4097__auto__) {
      return this$.ajax$core$AjaxResponse$_body$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return this$.ajax$core$AjaxResponse$_body$arity$1(this$);
  } else {
    var x__4745__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4109__auto__ = ajax.core._body[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = ajax.core._body["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "AjaxResponse.-body", this$);
        }
      }
    }().call(null, this$);
  }
};
ajax.core._get_response_header = function ajax$core$_get_response_header(this$, header) {
  if (function() {
    var and__4097__auto__ = this$;
    if (and__4097__auto__) {
      return this$.ajax$core$AjaxResponse$_get_response_header$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return this$.ajax$core$AjaxResponse$_get_response_header$arity$2(this$, header);
  } else {
    var x__4745__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4109__auto__ = ajax.core._get_response_header[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = ajax.core._get_response_header["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "AjaxResponse.-get-response-header", this$);
        }
      }
    }().call(null, this$, header);
  }
};
ajax.core._was_aborted = function ajax$core$_was_aborted(this$) {
  if (function() {
    var and__4097__auto__ = this$;
    if (and__4097__auto__) {
      return this$.ajax$core$AjaxResponse$_was_aborted$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return this$.ajax$core$AjaxResponse$_was_aborted$arity$1(this$);
  } else {
    var x__4745__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4109__auto__ = ajax.core._was_aborted[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = ajax.core._was_aborted["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "AjaxResponse.-was-aborted", this$);
        }
      }
    }().call(null, this$);
  }
};
if (typeof FormData !== "undefined") {
  FormData.prototype.ajax$core$DirectlySubmittable$ = true;
} else {
}
if (typeof ArrayBufferView !== "undefined") {
  ArrayBufferView.prototype.ajax$core$DirectlySubmittable$ = true;
} else {
}
if (typeof Blob !== "undefined") {
  Blob.prototype.ajax$core$DirectlySubmittable$ = true;
} else {
}
if (typeof Document !== "undefined") {
  Document.prototype.ajax$core$DirectlySubmittable$ = true;
} else {
}
ajax.core.submittable_QMARK_ = function ajax$core$submittable_QMARK_(params) {
  var or__4109__auto__ = function() {
    var G__12139 = params;
    if (G__12139) {
      var bit__4783__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4109__auto__ = bit__4783__auto__;
        if (cljs.core.truth_(or__4109__auto__)) {
          return or__4109__auto__;
        } else {
          return G__12139.ajax$core$DirectlySubmittable$;
        }
      }())) {
        return true;
      } else {
        if (!G__12139.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, ajax.core.DirectlySubmittable, G__12139);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, ajax.core.DirectlySubmittable, G__12139);
    }
  }();
  if (or__4109__auto__) {
    return or__4109__auto__;
  } else {
    return typeof params === "string";
  }
};
goog.net.XhrIo.prototype.ajax$core$AjaxResponse$ = true;
goog.net.XhrIo.prototype.ajax$core$AjaxResponse$_body$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getResponseText();
};
goog.net.XhrIo.prototype.ajax$core$AjaxResponse$_status$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getStatus();
};
goog.net.XhrIo.prototype.ajax$core$AjaxResponse$_status_text$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getStatusText();
};
goog.net.XhrIo.prototype.ajax$core$AjaxResponse$_get_response_header$arity$2 = function(this$, header) {
  var this$__$1 = this;
  return this$__$1.getResponseHeader(header);
};
goog.net.XhrIo.prototype.ajax$core$AjaxResponse$_was_aborted$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core._EQ_.call(null, this$__$1.getLastErrorCode(), goog.net.ErrorCode.ABORT);
};
goog.net.XhrIo.prototype.ajax$core$AjaxRequest$ = true;
goog.net.XhrIo.prototype.ajax$core$AjaxRequest$_abort$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.abort(goog.net.ErrorCode.ABORT);
};
goog.net.XhrIo.prototype.ajax$core$AjaxImpl$ = true;
goog.net.XhrIo.prototype.ajax$core$AjaxImpl$_js_ajax_request$arity$7 = function(this$, uri, method, body, headers, handler, p__12141) {
  var map__12142 = p__12141;
  var map__12142__$1 = cljs.core.seq_QMARK_.call(null, map__12142) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12142) : map__12142;
  var with_credentials = cljs.core.get.call(null, map__12142__$1, new cljs.core.Keyword(null, "with-credentials", "with-credentials", -1163127235), false);
  var timeout = cljs.core.get.call(null, map__12142__$1, new cljs.core.Keyword(null, "timeout", "timeout", -318625318), 0);
  var this$__$1 = this;
  var G__12143 = this$__$1;
  goog.events.listen(G__12143, goog.net.EventType.COMPLETE, function(G__12143, this$__$1, map__12142, map__12142__$1, with_credentials, timeout) {
    return function(p1__12140_SHARP_) {
      return handler.call(null, p1__12140_SHARP_.target);
    };
  }(G__12143, this$__$1, map__12142, map__12142__$1, with_credentials, timeout));
  G__12143.setTimeoutInterval(timeout);
  G__12143.setWithCredentials(with_credentials);
  G__12143.send(uri, method, body, cljs.core.clj__GT_js.call(null, headers));
  return G__12143;
};
XMLHttpRequest.prototype.ajax$core$AjaxResponse$ = true;
XMLHttpRequest.prototype.ajax$core$AjaxResponse$_body$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.response;
};
XMLHttpRequest.prototype.ajax$core$AjaxResponse$_status$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.status;
};
XMLHttpRequest.prototype.ajax$core$AjaxResponse$_status_text$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.statusText;
};
XMLHttpRequest.prototype.ajax$core$AjaxResponse$_get_response_header$arity$2 = function(this$, header) {
  var this$__$1 = this;
  return this$__$1.getResponseHeader(header);
};
XMLHttpRequest.prototype.ajax$core$AjaxResponse$_was_aborted$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core._EQ_.call(null, 0, this$__$1.readyState);
};
XMLHttpRequest.prototype.ajax$core$AjaxRequest$ = true;
XMLHttpRequest.prototype.ajax$core$AjaxRequest$_abort$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.abort();
};
XMLHttpRequest.prototype.ajax$core$AjaxImpl$ = true;
XMLHttpRequest.prototype.ajax$core$AjaxImpl$_js_ajax_request$arity$7 = function(this$, uri, method, body, headers, handler, p__12144) {
  var map__12145 = p__12144;
  var map__12145__$1 = cljs.core.seq_QMARK_.call(null, map__12145) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12145) : map__12145;
  var with_credentials = cljs.core.get.call(null, map__12145__$1, new cljs.core.Keyword(null, "with-credentials", "with-credentials", -1163127235), false);
  var timeout = cljs.core.get.call(null, map__12145__$1, new cljs.core.Keyword(null, "timeout", "timeout", -318625318), 0);
  var this$__$1 = this;
  this$__$1.timeout = timeout;
  this$__$1.withCredentials = with_credentials;
  this$__$1.onreadystatechange = function(this$__$1, map__12145, map__12145__$1, with_credentials, timeout) {
    return function() {
      return handler.call(null, this$__$1);
    };
  }(this$__$1, map__12145, map__12145__$1, with_credentials, timeout);
  var G__12146 = this$__$1;
  G__12146.open(method, uri, true);
  var t_12153 = G__12146;
  var t_12154__$1 = function() {
    var seq__12147 = cljs.core.seq.call(null, headers);
    var chunk__12148 = null;
    var count__12149 = 0;
    var i__12150 = 0;
    while (true) {
      if (i__12150 < count__12149) {
        var vec__12151 = cljs.core._nth.call(null, chunk__12148, i__12150);
        var k = cljs.core.nth.call(null, vec__12151, 0, null);
        var v = cljs.core.nth.call(null, vec__12151, 1, null);
        t_12153.setRequestHeader(k, v);
        var G__12155 = seq__12147;
        var G__12156 = chunk__12148;
        var G__12157 = count__12149;
        var G__12158 = i__12150 + 1;
        seq__12147 = G__12155;
        chunk__12148 = G__12156;
        count__12149 = G__12157;
        i__12150 = G__12158;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__12147);
        if (temp__4126__auto__) {
          var seq__12147__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__12147__$1)) {
            var c__4894__auto__ = cljs.core.chunk_first.call(null, seq__12147__$1);
            var G__12159 = cljs.core.chunk_rest.call(null, seq__12147__$1);
            var G__12160 = c__4894__auto__;
            var G__12161 = cljs.core.count.call(null, c__4894__auto__);
            var G__12162 = 0;
            seq__12147 = G__12159;
            chunk__12148 = G__12160;
            count__12149 = G__12161;
            i__12150 = G__12162;
            continue;
          } else {
            var vec__12152 = cljs.core.first.call(null, seq__12147__$1);
            var k = cljs.core.nth.call(null, vec__12152, 0, null);
            var v = cljs.core.nth.call(null, vec__12152, 1, null);
            t_12153.setRequestHeader(k, v);
            var G__12163 = cljs.core.next.call(null, seq__12147__$1);
            var G__12164 = null;
            var G__12165 = 0;
            var G__12166 = 0;
            seq__12147 = G__12163;
            chunk__12148 = G__12164;
            count__12149 = G__12165;
            i__12150 = G__12166;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }();
  G__12146.send(function() {
    var or__4109__auto__ = body;
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return "";
    }
  }());
  return G__12146;
};
goog.net.XhrManager.prototype.ajax$core$AjaxImpl$ = true;
goog.net.XhrManager.prototype.ajax$core$AjaxImpl$_js_ajax_request$arity$7 = function(this$, uri, method, body, headers, handler, p__12167) {
  var map__12168 = p__12167;
  var map__12168__$1 = cljs.core.seq_QMARK_.call(null, map__12168) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12168) : map__12168;
  var max_retries = cljs.core.get.call(null, map__12168__$1, new cljs.core.Keyword(null, "max-retries", "max-retries", -1933762121));
  var priority = cljs.core.get.call(null, map__12168__$1, new cljs.core.Keyword(null, "priority", "priority", 1431093715));
  var timeout = cljs.core.get.call(null, map__12168__$1, new cljs.core.Keyword(null, "timeout", "timeout", -318625318));
  var id = cljs.core.get.call(null, map__12168__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  var this$__$1 = this;
  return this$__$1.send(id, uri, method, body, cljs.core.clj__GT_js.call(null, headers), priority, handler, max_retries);
};
ajax.core.abort = function ajax$core$abort(this$) {
  return ajax.core._abort.call(null, this$);
};
ajax.core.success_QMARK_ = function ajax$core$success_QMARK_(status) {
  return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([status], true), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [200, 201, 202, 204, 205, 206], null));
};
ajax.core.read_edn = function ajax$core$read_edn(xhrio) {
  return cljs.reader.read_string.call(null, ajax.core._body.call(null, xhrio));
};
ajax.core.edn_response_format = function() {
  var ajax$core$edn_response_format = null;
  var ajax$core$edn_response_format__0 = function() {
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "read", "read", 1140058661), ajax.core.read_edn, new cljs.core.Keyword(null, "description", "description", -1428560544), "EDN", new cljs.core.Keyword(null, "content-type", "content-type", -508222634), "application/edn"], null);
  };
  var ajax$core$edn_response_format__1 = function(opts) {
    return ajax$core$edn_response_format.call(null);
  };
  ajax$core$edn_response_format = function(opts) {
    switch(arguments.length) {
      case 0:
        return ajax$core$edn_response_format__0.call(this);
      case 1:
        return ajax$core$edn_response_format__1.call(this, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax$core$edn_response_format.cljs$core$IFn$_invoke$arity$0 = ajax$core$edn_response_format__0;
  ajax$core$edn_response_format.cljs$core$IFn$_invoke$arity$1 = ajax$core$edn_response_format__1;
  return ajax$core$edn_response_format;
}();
ajax.core.edn_request_format = function ajax$core$edn_request_format() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "write", "write", -1857649168), cljs.core.pr_str, new cljs.core.Keyword(null, "content-type", "content-type", -508222634), "application/edn"], null);
};
ajax.core.transit_content_type = "application/transit+json; charset\x3dutf-8";
ajax.core.transit_write = function() {
  var ajax$core$transit_write = null;
  var ajax$core$transit_write__1 = function(writer) {
    return function(params) {
      return cognitect.transit.write.call(null, writer, params);
    };
  };
  var ajax$core$transit_write__2 = function(writer, params) {
    return cognitect.transit.write.call(null, writer, params);
  };
  ajax$core$transit_write = function(writer, params) {
    switch(arguments.length) {
      case 1:
        return ajax$core$transit_write__1.call(this, writer);
      case 2:
        return ajax$core$transit_write__2.call(this, writer, params);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax$core$transit_write.cljs$core$IFn$_invoke$arity$1 = ajax$core$transit_write__1;
  ajax$core$transit_write.cljs$core$IFn$_invoke$arity$2 = ajax$core$transit_write__2;
  return ajax$core$transit_write;
}();
ajax.core.transit_request_format = function() {
  var ajax$core$transit_request_format = null;
  var ajax$core$transit_request_format__0 = function() {
    return ajax$core$transit_request_format.call(null, cljs.core.PersistentArrayMap.EMPTY);
  };
  var ajax$core$transit_request_format__1 = function(p__12169) {
    var map__12171 = p__12169;
    var map__12171__$1 = cljs.core.seq_QMARK_.call(null, map__12171) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12171) : map__12171;
    var opts = map__12171__$1;
    var writer = cljs.core.get.call(null, map__12171__$1, new cljs.core.Keyword(null, "writer", "writer", -277568236));
    var type = cljs.core.get.call(null, map__12171__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
    var writer__$1 = function() {
      var or__4109__auto__ = writer;
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return cognitect.transit.writer.call(null, function() {
          var or__4109__auto____$1 = type;
          if (cljs.core.truth_(or__4109__auto____$1)) {
            return or__4109__auto____$1;
          } else {
            return new cljs.core.Keyword(null, "json", "json", 1279968570);
          }
        }(), opts);
      }
    }();
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "write", "write", -1857649168), ajax.core.transit_write.call(null, writer__$1), new cljs.core.Keyword(null, "content-type", "content-type", -508222634), ajax.core.transit_content_type], null);
  };
  ajax$core$transit_request_format = function(p__12169) {
    switch(arguments.length) {
      case 0:
        return ajax$core$transit_request_format__0.call(this);
      case 1:
        return ajax$core$transit_request_format__1.call(this, p__12169);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax$core$transit_request_format.cljs$core$IFn$_invoke$arity$0 = ajax$core$transit_request_format__0;
  ajax$core$transit_request_format.cljs$core$IFn$_invoke$arity$1 = ajax$core$transit_request_format__1;
  return ajax$core$transit_request_format;
}();
ajax.core.transit_read = function() {
  var ajax$core$transit_read = null;
  var ajax$core$transit_read__1 = function(reader) {
    return function(raw, xhrio) {
      var text = ajax.core._body.call(null, xhrio);
      var data = cognitect.transit.read.call(null, reader, text);
      if (cljs.core.truth_(raw)) {
        return data;
      } else {
        return cljs.core.js__GT_clj.call(null, data);
      }
    };
  };
  var ajax$core$transit_read__2 = function(reader, raw) {
    return function(xhrio) {
      var text = ajax.core._body.call(null, xhrio);
      var data = cognitect.transit.read.call(null, reader, text);
      if (cljs.core.truth_(raw)) {
        return data;
      } else {
        return cljs.core.js__GT_clj.call(null, data);
      }
    };
  };
  var ajax$core$transit_read__3 = function(reader, raw, xhrio) {
    var text = ajax.core._body.call(null, xhrio);
    var data = cognitect.transit.read.call(null, reader, text);
    if (cljs.core.truth_(raw)) {
      return data;
    } else {
      return cljs.core.js__GT_clj.call(null, data);
    }
  };
  ajax$core$transit_read = function(reader, raw, xhrio) {
    switch(arguments.length) {
      case 1:
        return ajax$core$transit_read__1.call(this, reader);
      case 2:
        return ajax$core$transit_read__2.call(this, reader, raw);
      case 3:
        return ajax$core$transit_read__3.call(this, reader, raw, xhrio);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax$core$transit_read.cljs$core$IFn$_invoke$arity$1 = ajax$core$transit_read__1;
  ajax$core$transit_read.cljs$core$IFn$_invoke$arity$2 = ajax$core$transit_read__2;
  ajax$core$transit_read.cljs$core$IFn$_invoke$arity$3 = ajax$core$transit_read__3;
  return ajax$core$transit_read;
}();
ajax.core.transit_response_format = function() {
  var ajax$core$transit_response_format = null;
  var ajax$core$transit_response_format__0 = function() {
    return ajax$core$transit_response_format.call(null, cljs.core.PersistentArrayMap.EMPTY);
  };
  var ajax$core$transit_response_format__1 = function(p__12172) {
    var map__12174 = p__12172;
    var map__12174__$1 = cljs.core.seq_QMARK_.call(null, map__12174) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12174) : map__12174;
    var opts = map__12174__$1;
    var raw = cljs.core.get.call(null, map__12174__$1, new cljs.core.Keyword(null, "raw", "raw", 1604651272));
    var reader = cljs.core.get.call(null, map__12174__$1, new cljs.core.Keyword(null, "reader", "reader", 169660853));
    var type = cljs.core.get.call(null, map__12174__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
    var reader__$1 = function() {
      var or__4109__auto__ = reader;
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return cognitect.transit.reader.call(null, function() {
          var or__4109__auto____$1 = type;
          if (cljs.core.truth_(or__4109__auto____$1)) {
            return or__4109__auto____$1;
          } else {
            return new cljs.core.Keyword(null, "json", "json", 1279968570);
          }
        }(), opts);
      }
    }();
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "read", "read", 1140058661), ajax.core.transit_read.call(null, reader__$1, raw), new cljs.core.Keyword(null, "description", "description", -1428560544), "Transit", new cljs.core.Keyword(null, "content-type", "content-type", -508222634), "application/transit+json"], null);
  };
  ajax$core$transit_response_format = function(p__12172) {
    switch(arguments.length) {
      case 0:
        return ajax$core$transit_response_format__0.call(this);
      case 1:
        return ajax$core$transit_response_format__1.call(this, p__12172);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax$core$transit_response_format.cljs$core$IFn$_invoke$arity$0 = ajax$core$transit_response_format__0;
  ajax$core$transit_response_format.cljs$core$IFn$_invoke$arity$1 = ajax$core$transit_response_format__1;
  return ajax$core$transit_response_format;
}();
ajax.core.params_to_str = function ajax$core$params_to_str(params) {
  if (cljs.core.truth_(params)) {
    return goog.Uri.QueryData.createFromMap(new goog.structs.Map(cljs.core.clj__GT_js.call(null, params))).toString();
  } else {
    return null;
  }
};
ajax.core.url_request_format = function ajax$core$url_request_format() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "write", "write", -1857649168), ajax.core.params_to_str, new cljs.core.Keyword(null, "content-type", "content-type", -508222634), "application/x-www-form-urlencoded"], null);
};
ajax.core.raw_response_format = function() {
  var ajax$core$raw_response_format = null;
  var ajax$core$raw_response_format__0 = function() {
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "read", "read", 1140058661), ajax.core._body, new cljs.core.Keyword(null, "description", "description", -1428560544), "raw text", new cljs.core.Keyword(null, "content-type", "content-type", -508222634), "*/*"], null);
  };
  var ajax$core$raw_response_format__1 = function(opts) {
    return ajax$core$raw_response_format.call(null);
  };
  ajax$core$raw_response_format = function(opts) {
    switch(arguments.length) {
      case 0:
        return ajax$core$raw_response_format__0.call(this);
      case 1:
        return ajax$core$raw_response_format__1.call(this, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax$core$raw_response_format.cljs$core$IFn$_invoke$arity$0 = ajax$core$raw_response_format__0;
  ajax$core$raw_response_format.cljs$core$IFn$_invoke$arity$1 = ajax$core$raw_response_format__1;
  return ajax$core$raw_response_format;
}();
ajax.core.write_json = function ajax$core$write_json(data) {
  return(new goog.json.Serializer).serialize(cljs.core.clj__GT_js.call(null, data));
};
ajax.core.json_request_format = function ajax$core$json_request_format() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "write", "write", -1857649168), ajax.core.write_json, new cljs.core.Keyword(null, "content-type", "content-type", -508222634), "application/json"], null);
};
ajax.core.json_read = function() {
  var ajax$core$json_read = null;
  var ajax$core$json_read__1 = function(prefix) {
    return function(raw, keywords_QMARK_, xhrio) {
      var text = ajax.core._body.call(null, xhrio);
      var text__$1 = cljs.core.truth_(function() {
        var and__4097__auto__ = prefix;
        if (cljs.core.truth_(and__4097__auto__)) {
          return cljs.core._EQ_.call(null, 0, text.indexOf(prefix));
        } else {
          return and__4097__auto__;
        }
      }()) ? text.substring(prefix.length()) : text;
      var json = goog.json.parse(text__$1);
      if (cljs.core.truth_(raw)) {
        return json;
      } else {
        return cljs.core.js__GT_clj.call(null, json, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), keywords_QMARK_);
      }
    };
  };
  var ajax$core$json_read__2 = function(prefix, raw) {
    return function(keywords_QMARK_, xhrio) {
      var text = ajax.core._body.call(null, xhrio);
      var text__$1 = cljs.core.truth_(function() {
        var and__4097__auto__ = prefix;
        if (cljs.core.truth_(and__4097__auto__)) {
          return cljs.core._EQ_.call(null, 0, text.indexOf(prefix));
        } else {
          return and__4097__auto__;
        }
      }()) ? text.substring(prefix.length()) : text;
      var json = goog.json.parse(text__$1);
      if (cljs.core.truth_(raw)) {
        return json;
      } else {
        return cljs.core.js__GT_clj.call(null, json, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), keywords_QMARK_);
      }
    };
  };
  var ajax$core$json_read__3 = function(prefix, raw, keywords_QMARK_) {
    return function(xhrio) {
      var text = ajax.core._body.call(null, xhrio);
      var text__$1 = cljs.core.truth_(function() {
        var and__4097__auto__ = prefix;
        if (cljs.core.truth_(and__4097__auto__)) {
          return cljs.core._EQ_.call(null, 0, text.indexOf(prefix));
        } else {
          return and__4097__auto__;
        }
      }()) ? text.substring(prefix.length()) : text;
      var json = goog.json.parse(text__$1);
      if (cljs.core.truth_(raw)) {
        return json;
      } else {
        return cljs.core.js__GT_clj.call(null, json, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), keywords_QMARK_);
      }
    };
  };
  var ajax$core$json_read__4 = function(prefix, raw, keywords_QMARK_, xhrio) {
    var text = ajax.core._body.call(null, xhrio);
    var text__$1 = cljs.core.truth_(function() {
      var and__4097__auto__ = prefix;
      if (cljs.core.truth_(and__4097__auto__)) {
        return cljs.core._EQ_.call(null, 0, text.indexOf(prefix));
      } else {
        return and__4097__auto__;
      }
    }()) ? text.substring(prefix.length()) : text;
    var json = goog.json.parse(text__$1);
    if (cljs.core.truth_(raw)) {
      return json;
    } else {
      return cljs.core.js__GT_clj.call(null, json, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), keywords_QMARK_);
    }
  };
  ajax$core$json_read = function(prefix, raw, keywords_QMARK_, xhrio) {
    switch(arguments.length) {
      case 1:
        return ajax$core$json_read__1.call(this, prefix);
      case 2:
        return ajax$core$json_read__2.call(this, prefix, raw);
      case 3:
        return ajax$core$json_read__3.call(this, prefix, raw, keywords_QMARK_);
      case 4:
        return ajax$core$json_read__4.call(this, prefix, raw, keywords_QMARK_, xhrio);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax$core$json_read.cljs$core$IFn$_invoke$arity$1 = ajax$core$json_read__1;
  ajax$core$json_read.cljs$core$IFn$_invoke$arity$2 = ajax$core$json_read__2;
  ajax$core$json_read.cljs$core$IFn$_invoke$arity$3 = ajax$core$json_read__3;
  ajax$core$json_read.cljs$core$IFn$_invoke$arity$4 = ajax$core$json_read__4;
  return ajax$core$json_read;
}();
ajax.core.json_response_format = function() {
  var ajax$core$json_response_format = null;
  var ajax$core$json_response_format__0 = function() {
    return ajax$core$json_response_format.call(null, cljs.core.PersistentArrayMap.EMPTY);
  };
  var ajax$core$json_response_format__1 = function(p__12175) {
    var map__12177 = p__12175;
    var map__12177__$1 = cljs.core.seq_QMARK_.call(null, map__12177) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12177) : map__12177;
    var raw = cljs.core.get.call(null, map__12177__$1, new cljs.core.Keyword(null, "raw", "raw", 1604651272));
    var keywords_QMARK_ = cljs.core.get.call(null, map__12177__$1, new cljs.core.Keyword(null, "keywords?", "keywords?", 764949733));
    var prefix = cljs.core.get.call(null, map__12177__$1, new cljs.core.Keyword(null, "prefix", "prefix", -265908465));
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "read", "read", 1140058661), ajax.core.json_read.call(null, prefix, raw, keywords_QMARK_), new cljs.core.Keyword(null, "description", "description", -1428560544), [cljs.core.str("JSON"), cljs.core.str(cljs.core.truth_(prefix) ? [cljs.core.str(" prefix '"), cljs.core.str(prefix), cljs.core.str("'")].join("") : null), cljs.core.str(cljs.core.truth_(keywords_QMARK_) ? " keywordize" : null)].join(""), new cljs.core.Keyword(null, 
    "content-type", "content-type", -508222634), "application/json"], null);
  };
  ajax$core$json_response_format = function(p__12175) {
    switch(arguments.length) {
      case 0:
        return ajax$core$json_response_format__0.call(this);
      case 1:
        return ajax$core$json_response_format__1.call(this, p__12175);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax$core$json_response_format.cljs$core$IFn$_invoke$arity$0 = ajax$core$json_response_format__0;
  ajax$core$json_response_format.cljs$core$IFn$_invoke$arity$1 = ajax$core$json_response_format__1;
  return ajax$core$json_response_format;
}();
ajax.core.default_formats = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [ajax.core.json_response_format, ajax.core.edn_response_format, ajax.core.transit_response_format, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["text/plain", ajax.core.raw_response_format], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["text/html", ajax.core.raw_response_format], null), ajax.core.raw_response_format], 
null);
ajax.core.get_format = function() {
  var ajax$core$get_format = null;
  var ajax$core$get_format__1 = function(opts) {
    return function(format_entry) {
      if (cljs.core.vector_QMARK_.call(null, format_entry)) {
        return ajax$core$get_format.call(null, opts, cljs.core.second.call(null, format_entry));
      } else {
        if (cljs.core.map_QMARK_.call(null, format_entry)) {
          return format_entry;
        } else {
          return format_entry.call(null, opts);
        }
      }
    };
  };
  var ajax$core$get_format__2 = function(opts, format_entry) {
    if (cljs.core.vector_QMARK_.call(null, format_entry)) {
      return ajax$core$get_format.call(null, opts, cljs.core.second.call(null, format_entry));
    } else {
      if (cljs.core.map_QMARK_.call(null, format_entry)) {
        return format_entry;
      } else {
        return format_entry.call(null, opts);
      }
    }
  };
  ajax$core$get_format = function(opts, format_entry) {
    switch(arguments.length) {
      case 1:
        return ajax$core$get_format__1.call(this, opts);
      case 2:
        return ajax$core$get_format__2.call(this, opts, format_entry);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax$core$get_format.cljs$core$IFn$_invoke$arity$1 = ajax$core$get_format__1;
  ajax$core$get_format.cljs$core$IFn$_invoke$arity$2 = ajax$core$get_format__2;
  return ajax$core$get_format;
}();
ajax.core.accept_entry = function() {
  var ajax$core$accept_entry = null;
  var ajax$core$accept_entry__1 = function(opts) {
    return function(format_entry) {
      var or__4109__auto__ = cljs.core.vector_QMARK_.call(null, format_entry) ? cljs.core.first.call(null, format_entry) : (new cljs.core.Keyword(null, "content-type", "content-type", -508222634)).cljs$core$IFn$_invoke$arity$1(ajax.core.get_format.call(null, opts, format_entry));
      if (cljs.core.truth_(or__4109__auto__)) {
        return or__4109__auto__;
      } else {
        return "*/*";
      }
    };
  };
  var ajax$core$accept_entry__2 = function(opts, format_entry) {
    var or__4109__auto__ = cljs.core.vector_QMARK_.call(null, format_entry) ? cljs.core.first.call(null, format_entry) : (new cljs.core.Keyword(null, "content-type", "content-type", -508222634)).cljs$core$IFn$_invoke$arity$1(ajax.core.get_format.call(null, opts, format_entry));
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return "*/*";
    }
  };
  ajax$core$accept_entry = function(opts, format_entry) {
    switch(arguments.length) {
      case 1:
        return ajax$core$accept_entry__1.call(this, opts);
      case 2:
        return ajax$core$accept_entry__2.call(this, opts, format_entry);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax$core$accept_entry.cljs$core$IFn$_invoke$arity$1 = ajax$core$accept_entry__1;
  ajax$core$accept_entry.cljs$core$IFn$_invoke$arity$2 = ajax$core$accept_entry__2;
  return ajax$core$accept_entry;
}();
ajax.core.detect_content_type = function() {
  var ajax$core$detect_content_type = null;
  var ajax$core$detect_content_type__1 = function(content_type) {
    return function(opts, format_entry) {
      var accept = ajax.core.accept_entry.call(null, opts, format_entry);
      return cljs.core._EQ_.call(null, accept, "*/*") || content_type.indexOf(accept) >= 0;
    };
  };
  var ajax$core$detect_content_type__2 = function(content_type, opts) {
    return function(format_entry) {
      var accept = ajax.core.accept_entry.call(null, opts, format_entry);
      return cljs.core._EQ_.call(null, accept, "*/*") || content_type.indexOf(accept) >= 0;
    };
  };
  var ajax$core$detect_content_type__3 = function(content_type, opts, format_entry) {
    var accept = ajax.core.accept_entry.call(null, opts, format_entry);
    return cljs.core._EQ_.call(null, accept, "*/*") || content_type.indexOf(accept) >= 0;
  };
  ajax$core$detect_content_type = function(content_type, opts, format_entry) {
    switch(arguments.length) {
      case 1:
        return ajax$core$detect_content_type__1.call(this, content_type);
      case 2:
        return ajax$core$detect_content_type__2.call(this, content_type, opts);
      case 3:
        return ajax$core$detect_content_type__3.call(this, content_type, opts, format_entry);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax$core$detect_content_type.cljs$core$IFn$_invoke$arity$1 = ajax$core$detect_content_type__1;
  ajax$core$detect_content_type.cljs$core$IFn$_invoke$arity$2 = ajax$core$detect_content_type__2;
  ajax$core$detect_content_type.cljs$core$IFn$_invoke$arity$3 = ajax$core$detect_content_type__3;
  return ajax$core$detect_content_type;
}();
ajax.core.get_default_format = function ajax$core$get_default_format(xhrio, p__12178) {
  var map__12180 = p__12178;
  var map__12180__$1 = cljs.core.seq_QMARK_.call(null, map__12180) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12180) : map__12180;
  var opts = map__12180__$1;
  var response_format = cljs.core.get.call(null, map__12180__$1, new cljs.core.Keyword(null, "response-format", "response-format", 1664465322));
  var f = ajax.core.detect_content_type.call(null, function() {
    var or__4109__auto__ = ajax.core._get_response_header.call(null, xhrio, "Content-Type");
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return "";
    }
  }(), opts);
  return ajax.core.get_format.call(null, opts, cljs.core.first.call(null, cljs.core.filter.call(null, f, response_format)));
};
ajax.core.detect_response_format_read = function() {
  var ajax$core$detect_response_format_read = null;
  var ajax$core$detect_response_format_read__1 = function(opts) {
    return function(xhrio) {
      return(new cljs.core.Keyword(null, "read", "read", 1140058661)).cljs$core$IFn$_invoke$arity$1(ajax.core.get_default_format.call(null, xhrio, opts)).call(null, xhrio);
    };
  };
  var ajax$core$detect_response_format_read__2 = function(opts, xhrio) {
    return(new cljs.core.Keyword(null, "read", "read", 1140058661)).cljs$core$IFn$_invoke$arity$1(ajax.core.get_default_format.call(null, xhrio, opts)).call(null, xhrio);
  };
  ajax$core$detect_response_format_read = function(opts, xhrio) {
    switch(arguments.length) {
      case 1:
        return ajax$core$detect_response_format_read__1.call(this, opts);
      case 2:
        return ajax$core$detect_response_format_read__2.call(this, opts, xhrio);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax$core$detect_response_format_read.cljs$core$IFn$_invoke$arity$1 = ajax$core$detect_response_format_read__1;
  ajax$core$detect_response_format_read.cljs$core$IFn$_invoke$arity$2 = ajax$core$detect_response_format_read__2;
  return ajax$core$detect_response_format_read;
}();
ajax.core.accept_header = function ajax$core$accept_header(p__12181) {
  var map__12183 = p__12181;
  var map__12183__$1 = cljs.core.seq_QMARK_.call(null, map__12183) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12183) : map__12183;
  var opts = map__12183__$1;
  var response_format = cljs.core.get.call(null, map__12183__$1, new cljs.core.Keyword(null, "response-format", "response-format", 1664465322));
  if (cljs.core.vector_QMARK_.call(null, response_format)) {
    return clojure.string.join.call(null, ", ", cljs.core.map.call(null, ajax.core.accept_entry.call(null, opts), response_format));
  } else {
    return ajax.core.accept_entry.call(null, opts, response_format);
  }
};
ajax.core.detect_response_format = function() {
  var ajax$core$detect_response_format = null;
  var ajax$core$detect_response_format__0 = function() {
    return ajax$core$detect_response_format.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "response-format", "response-format", 1664465322), ajax.core.default_formats], null));
  };
  var ajax$core$detect_response_format__1 = function(opts) {
    var accept = ajax.core.accept_header.call(null, opts);
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "read", "read", 1140058661), ajax.core.detect_response_format_read.call(null, opts), new cljs.core.Keyword(null, "format", "format", -1306924766), [cljs.core.str("(from "), cljs.core.str(accept), cljs.core.str(")")].join(""), new cljs.core.Keyword(null, "content-type", "content-type", -508222634), accept], null);
  };
  ajax$core$detect_response_format = function(opts) {
    switch(arguments.length) {
      case 0:
        return ajax$core$detect_response_format__0.call(this);
      case 1:
        return ajax$core$detect_response_format__1.call(this, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax$core$detect_response_format.cljs$core$IFn$_invoke$arity$0 = ajax$core$detect_response_format__0;
  ajax$core$detect_response_format.cljs$core$IFn$_invoke$arity$1 = ajax$core$detect_response_format__1;
  return ajax$core$detect_response_format;
}();
ajax.core.get_response_format = function ajax$core$get_response_format(p__12184) {
  var map__12186 = p__12184;
  var map__12186__$1 = cljs.core.seq_QMARK_.call(null, map__12186) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12186) : map__12186;
  var opts = map__12186__$1;
  var response_format = cljs.core.get.call(null, map__12186__$1, new cljs.core.Keyword(null, "response-format", "response-format", 1664465322));
  if (cljs.core.vector_QMARK_.call(null, response_format)) {
    return ajax.core.detect_response_format.call(null, opts);
  } else {
    if (cljs.core.map_QMARK_.call(null, response_format)) {
      return response_format;
    } else {
      if (cljs.core.ifn_QMARK_.call(null, response_format)) {
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "read", "read", 1140058661), response_format, new cljs.core.Keyword(null, "description", "description", -1428560544), "custom", new cljs.core.Keyword(null, "content-type", "content-type", -508222634), "*/*"], null);
      } else {
        throw new Error([cljs.core.str("unrecognized response format: "), cljs.core.str(response_format)].join(""));
      }
    }
  }
};
ajax.core.exception_response = function ajax$core$exception_response(e, status, p__12187, xhrio) {
  var map__12189 = p__12187;
  var map__12189__$1 = cljs.core.seq_QMARK_.call(null, map__12189) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12189) : map__12189;
  var description = cljs.core.get.call(null, map__12189__$1, new cljs.core.Keyword(null, "description", "description", -1428560544));
  var response = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), status, new cljs.core.Keyword(null, "failure", "failure", 720415879), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "response", "response", -1068424192), null], null);
  var status_text = [cljs.core.str(e.message), cljs.core.str("  Format should have been "), cljs.core.str(description)].join("");
  var parse_error = cljs.core.assoc.call(null, response, new cljs.core.Keyword(null, "status-text", "status-text", -1834235478), status_text, new cljs.core.Keyword(null, "failure", "failure", 720415879), new cljs.core.Keyword(null, "parse", "parse", -1162164619), new cljs.core.Keyword(null, "original-text", "original-text", 744448452), ajax.core._body.call(null, xhrio));
  if (cljs.core.truth_(ajax.core.success_QMARK_.call(null, status))) {
    return parse_error;
  } else {
    return cljs.core.assoc.call(null, response, new cljs.core.Keyword(null, "status-text", "status-text", -1834235478), ajax.core._status_text.call(null, xhrio), new cljs.core.Keyword(null, "parse-error", "parse-error", 255902478), parse_error);
  }
};
ajax.core.fail = function() {
  var ajax$core$fail__delegate = function(status, status_text, failure, params) {
    var response = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), status, new cljs.core.Keyword(null, "status-text", "status-text", -1834235478), status_text, new cljs.core.Keyword(null, "failure", "failure", 720415879), failure], null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, cljs.core.reduce.call(null, cljs.core.conj, response, cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, params)))], null);
  };
  var ajax$core$fail = function(status, status_text, failure, var_args) {
    var params = null;
    if (arguments.length > 3) {
      var G__12190__i = 0, G__12190__a = new Array(arguments.length - 3);
      while (G__12190__i < G__12190__a.length) {
        G__12190__a[G__12190__i] = arguments[G__12190__i + 3];
        ++G__12190__i;
      }
      params = new cljs.core.IndexedSeq(G__12190__a, 0);
    }
    return ajax$core$fail__delegate.call(this, status, status_text, failure, params);
  };
  ajax$core$fail.cljs$lang$maxFixedArity = 3;
  ajax$core$fail.cljs$lang$applyTo = function(arglist__12191) {
    var status = cljs.core.first(arglist__12191);
    arglist__12191 = cljs.core.next(arglist__12191);
    var status_text = cljs.core.first(arglist__12191);
    arglist__12191 = cljs.core.next(arglist__12191);
    var failure = cljs.core.first(arglist__12191);
    var params = cljs.core.rest(arglist__12191);
    return ajax$core$fail__delegate(status, status_text, failure, params);
  };
  ajax$core$fail.cljs$core$IFn$_invoke$arity$variadic = ajax$core$fail__delegate;
  return ajax$core$fail;
}();
ajax.core.interpret_response = function ajax$core$interpret_response(p__12192, xhrio) {
  var map__12196 = p__12192;
  var map__12196__$1 = cljs.core.seq_QMARK_.call(null, map__12196) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12196) : map__12196;
  var format = map__12196__$1;
  var read = cljs.core.get.call(null, map__12196__$1, new cljs.core.Keyword(null, "read", "read", 1140058661));
  try {
    var status = ajax.core._status.call(null, xhrio);
    var fail = cljs.core.partial.call(null, ajax.core.fail, status);
    if (cljs.core._EQ_.call(null, -1, status)) {
      if (cljs.core.truth_(ajax.core._was_aborted.call(null, xhrio))) {
        return fail.call(null, "Request aborted by client.", new cljs.core.Keyword(null, "aborted", "aborted", 1775972619));
      } else {
        return fail.call(null, "Request timed out.", new cljs.core.Keyword(null, "timeout", "timeout", -318625318));
      }
    } else {
      try {
        var response = read.call(null, xhrio);
        if (cljs.core.truth_(ajax.core.success_QMARK_.call(null, status))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, response], null);
        } else {
          return fail.call(null, ajax.core._status_text.call(null, xhrio), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "response", "response", -1068424192), response);
        }
      } catch (e12198) {
        if (e12198 instanceof Object) {
          var e = e12198;
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, ajax.core.exception_response.call(null, e, status, format, xhrio)], null);
        } else {
          throw e12198;
        }
      }
    }
  } catch (e12197) {
    if (e12197 instanceof Object) {
      var e = e12197;
      return ajax.core.fail.call(null, 0, e.message, new cljs.core.Keyword(null, "exception", "exception", -335277064), new cljs.core.Keyword(null, "exception", "exception", -335277064), e);
    } else {
      throw e12197;
    }
  }
};
ajax.core.no_format = function ajax$core$no_format(xhrio) {
  throw new Error("No response format was supplied.");
};
ajax.core.uri_with_params = function ajax$core$uri_with_params(uri, params) {
  if (cljs.core.truth_(params)) {
    return[cljs.core.str(uri), cljs.core.str("?"), cljs.core.str(ajax.core.params_to_str.call(null, params))].join("");
  } else {
    return uri;
  }
};
ajax.core.get_request_format = function ajax$core$get_request_format(format) {
  if (cljs.core.map_QMARK_.call(null, format)) {
    return format;
  } else {
    if (cljs.core.ifn_QMARK_.call(null, format)) {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "write", "write", -1857649168), format, new cljs.core.Keyword(null, "content-type", "content-type", -508222634), "text/plain"], null);
    } else {
      return null;
    }
  }
};
ajax.core.normalize_method = function ajax$core$normalize_method(method) {
  if (method instanceof cljs.core.Keyword) {
    return clojure.string.upper_case.call(null, cljs.core.name.call(null, method));
  } else {
    return method;
  }
};
ajax.core.process_inputs = function ajax$core$process_inputs(p__12199, p__12200) {
  var map__12204 = p__12199;
  var map__12204__$1 = cljs.core.seq_QMARK_.call(null, map__12204) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12204) : map__12204;
  var headers = cljs.core.get.call(null, map__12204__$1, new cljs.core.Keyword(null, "headers", "headers", -835030129));
  var params = cljs.core.get.call(null, map__12204__$1, new cljs.core.Keyword(null, "params", "params", 710516235));
  var format = cljs.core.get.call(null, map__12204__$1, new cljs.core.Keyword(null, "format", "format", -1306924766));
  var method = cljs.core.get.call(null, map__12204__$1, new cljs.core.Keyword(null, "method", "method", 55703592));
  var uri = cljs.core.get.call(null, map__12204__$1, new cljs.core.Keyword(null, "uri", "uri", -774711847));
  var map__12205 = p__12200;
  var map__12205__$1 = cljs.core.seq_QMARK_.call(null, map__12205) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12205) : map__12205;
  var content_type = cljs.core.get.call(null, map__12205__$1, new cljs.core.Keyword(null, "content-type", "content-type", -508222634));
  var headers__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, ["Accept", content_type], null), function() {
    var or__4109__auto__ = headers;
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }());
  if (cljs.core._EQ_.call(null, ajax.core.normalize_method.call(null, method), "GET")) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ajax.core.uri_with_params.call(null, uri, params), null, headers__$1], null);
  } else {
    var map__12206 = ajax.core.get_request_format.call(null, format);
    var map__12206__$1 = cljs.core.seq_QMARK_.call(null, map__12206) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12206) : map__12206;
    var content_type__$1 = cljs.core.get.call(null, map__12206__$1, new cljs.core.Keyword(null, "content-type", "content-type", -508222634));
    var write = cljs.core.get.call(null, map__12206__$1, new cljs.core.Keyword(null, "write", "write", -1857649168));
    var body = !(write == null) ? write.call(null, params) : ajax.core.submittable_QMARK_.call(null, params) ? params : function() {
      throw new Error([cljs.core.str("unrecognized request format: "), cljs.core.str(format)].join(""));
    }();
    var content_type__$2 = cljs.core.truth_(content_type__$1) ? new cljs.core.PersistentArrayMap(null, 1, ["Content-Type", content_type__$1], null) : null;
    var headers__$2 = cljs.core.merge.call(null, headers__$1, content_type__$2);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [uri, body, headers__$2], null);
  }
};
ajax.core.js_handler = function() {
  var ajax$core$js_handler = null;
  var ajax$core$js_handler__1 = function(response_format) {
    return function(handler, xhrio) {
      var response = ajax.core.interpret_response.call(null, response_format, xhrio);
      return handler.call(null, response);
    };
  };
  var ajax$core$js_handler__2 = function(response_format, handler) {
    return function(xhrio) {
      var response = ajax.core.interpret_response.call(null, response_format, xhrio);
      return handler.call(null, response);
    };
  };
  var ajax$core$js_handler__3 = function(response_format, handler, xhrio) {
    var response = ajax.core.interpret_response.call(null, response_format, xhrio);
    return handler.call(null, response);
  };
  ajax$core$js_handler = function(response_format, handler, xhrio) {
    switch(arguments.length) {
      case 1:
        return ajax$core$js_handler__1.call(this, response_format);
      case 2:
        return ajax$core$js_handler__2.call(this, response_format, handler);
      case 3:
        return ajax$core$js_handler__3.call(this, response_format, handler, xhrio);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax$core$js_handler.cljs$core$IFn$_invoke$arity$1 = ajax$core$js_handler__1;
  ajax$core$js_handler.cljs$core$IFn$_invoke$arity$2 = ajax$core$js_handler__2;
  ajax$core$js_handler.cljs$core$IFn$_invoke$arity$3 = ajax$core$js_handler__3;
  return ajax$core$js_handler;
}();
ajax.core.base_handler = function ajax$core$base_handler(response_format, p__12207) {
  var map__12209 = p__12207;
  var map__12209__$1 = cljs.core.seq_QMARK_.call(null, map__12209) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12209) : map__12209;
  var handler = cljs.core.get.call(null, map__12209__$1, new cljs.core.Keyword(null, "handler", "handler", -195596612));
  if (cljs.core.truth_(handler)) {
    return ajax.core.js_handler.call(null, response_format, handler);
  } else {
    throw new Error("No ajax handler provided.");
  }
};
ajax.core.ajax_request = function ajax$core$ajax_request(p__12210) {
  var map__12213 = p__12210;
  var map__12213__$1 = cljs.core.seq_QMARK_.call(null, map__12213) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12213) : map__12213;
  var opts = map__12213__$1;
  var api = cljs.core.get.call(null, map__12213__$1, new cljs.core.Keyword(null, "api", "api", -899839580));
  var method = cljs.core.get.call(null, map__12213__$1, new cljs.core.Keyword(null, "method", "method", 55703592));
  var response_format = ajax.core.get_response_format.call(null, opts);
  var method__$1 = ajax.core.normalize_method.call(null, method);
  var vec__12214 = ajax.core.process_inputs.call(null, opts, response_format);
  var uri = cljs.core.nth.call(null, vec__12214, 0, null);
  var body = cljs.core.nth.call(null, vec__12214, 1, null);
  var headers = cljs.core.nth.call(null, vec__12214, 2, null);
  var handler = ajax.core.base_handler.call(null, response_format, opts);
  var api__$1 = function() {
    var or__4109__auto__ = api;
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return new goog.net.XhrIo;
    }
  }();
  return ajax.core._js_ajax_request.call(null, api__$1, uri, method__$1, body, headers, handler, opts);
};
ajax.core.keyword_request_format = function ajax$core$keyword_request_format(format, format_params) {
  if (cljs.core.map_QMARK_.call(null, format)) {
    return format;
  } else {
    if (cljs.core.fn_QMARK_.call(null, format)) {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "write", "write", -1857649168), format], null);
    } else {
      if (format == null) {
        return ajax.core.transit_request_format.call(null, format_params);
      } else {
        var G__12216 = format instanceof cljs.core.Keyword ? format.fqn : null;
        switch(G__12216) {
          case "url":
            return ajax.core.url_request_format.call(null);
            break;
          case "raw":
            return ajax.core.url_request_format.call(null);
            break;
          case "edn":
            return ajax.core.edn_request_format.call(null);
            break;
          case "json":
            return ajax.core.json_request_format.call(null);
            break;
          case "transit":
            return ajax.core.transit_request_format.call(null, format_params);
            break;
          default:
            return null;
        }
      }
    }
  }
};
ajax.core.keyword_response_format_2 = function ajax$core$keyword_response_format_2(format, format_params) {
  if (cljs.core.vector_QMARK_.call(null, format)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, format), ajax$core$keyword_response_format_2.call(null, cljs.core.second.call(null, format), format_params)], null);
  } else {
    if (cljs.core.map_QMARK_.call(null, format)) {
      return format;
    } else {
      if (cljs.core.fn_QMARK_.call(null, format)) {
        return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "read", "read", 1140058661), format, new cljs.core.Keyword(null, "description", "description", -1428560544), "custom"], null);
      } else {
        if (format == null) {
          return ajax.core.detect_response_format.call(null);
        } else {
          var G__12219 = format instanceof cljs.core.Keyword ? format.fqn : null;
          switch(G__12219) {
            case "detect":
              return ajax.core.detect_response_format.call(null);
              break;
            case "raw":
              return ajax.core.raw_response_format.call(null);
              break;
            case "edn":
              return ajax.core.edn_response_format.call(null);
              break;
            case "json":
              return ajax.core.json_response_format.call(null, format_params);
              break;
            case "transit":
              return ajax.core.transit_response_format.call(null, format_params);
              break;
            default:
              return null;
          }
        }
      }
    }
  }
};
ajax.core.keyword_response_format = function ajax$core$keyword_response_format(format, format_params) {
  if (cljs.core.vector_QMARK_.call(null, format)) {
    return cljs.core.apply.call(null, cljs.core.vector, cljs.core.map.call(null, function(p1__12221_SHARP_) {
      return ajax.core.keyword_response_format_2.call(null, p1__12221_SHARP_, format_params);
    }, format));
  } else {
    return ajax.core.keyword_response_format_2.call(null, format, format_params);
  }
};
ajax.core.transform_handler = function() {
  var ajax$core$transform_handler = null;
  var ajax$core$transform_handler__1 = function(p__12224) {
    var map__12232 = p__12224;
    var map__12232__$1 = cljs.core.seq_QMARK_.call(null, map__12232) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12232) : map__12232;
    var finally$ = cljs.core.get.call(null, map__12232__$1, new cljs.core.Keyword(null, "finally", "finally", 1589088705));
    var error_handler = cljs.core.get.call(null, map__12232__$1, new cljs.core.Keyword(null, "error-handler", "error-handler", -484945776));
    var handler = cljs.core.get.call(null, map__12232__$1, new cljs.core.Keyword(null, "handler", "handler", -195596612));
    return function(map__12232, map__12232__$1, finally$, error_handler, handler) {
      return function(p__12233) {
        var vec__12234 = p__12233;
        var ok = cljs.core.nth.call(null, vec__12234, 0, null);
        var result = cljs.core.nth.call(null, vec__12234, 1, null);
        var temp__4124__auto___12235 = cljs.core.truth_(ok) ? handler : error_handler;
        if (cljs.core.truth_(temp__4124__auto___12235)) {
          var h_12236 = temp__4124__auto___12235;
          h_12236.call(null, result);
        } else {
        }
        if (cljs.core.fn_QMARK_.call(null, finally$)) {
          return finally$.call(null);
        } else {
          return null;
        }
      };
    }(map__12232, map__12232__$1, finally$, error_handler, handler);
  };
  var ajax$core$transform_handler__2 = function(p__12222, p__12223) {
    var map__12230 = p__12222;
    var map__12230__$1 = cljs.core.seq_QMARK_.call(null, map__12230) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12230) : map__12230;
    var finally$ = cljs.core.get.call(null, map__12230__$1, new cljs.core.Keyword(null, "finally", "finally", 1589088705));
    var error_handler = cljs.core.get.call(null, map__12230__$1, new cljs.core.Keyword(null, "error-handler", "error-handler", -484945776));
    var handler = cljs.core.get.call(null, map__12230__$1, new cljs.core.Keyword(null, "handler", "handler", -195596612));
    var vec__12231 = p__12223;
    var ok = cljs.core.nth.call(null, vec__12231, 0, null);
    var result = cljs.core.nth.call(null, vec__12231, 1, null);
    var temp__4124__auto___12237 = cljs.core.truth_(ok) ? handler : error_handler;
    if (cljs.core.truth_(temp__4124__auto___12237)) {
      var h_12238 = temp__4124__auto___12237;
      h_12238.call(null, result);
    } else {
    }
    if (cljs.core.fn_QMARK_.call(null, finally$)) {
      return finally$.call(null);
    } else {
      return null;
    }
  };
  ajax$core$transform_handler = function(p__12222, p__12223) {
    switch(arguments.length) {
      case 1:
        return ajax$core$transform_handler__1.call(this, p__12222);
      case 2:
        return ajax$core$transform_handler__2.call(this, p__12222, p__12223);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax$core$transform_handler.cljs$core$IFn$_invoke$arity$1 = ajax$core$transform_handler__1;
  ajax$core$transform_handler.cljs$core$IFn$_invoke$arity$2 = ajax$core$transform_handler__2;
  return ajax$core$transform_handler;
}();
ajax.core.transform_opts = function ajax$core$transform_opts(p__12239) {
  var map__12241 = p__12239;
  var map__12241__$1 = cljs.core.seq_QMARK_.call(null, map__12241) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12241) : map__12241;
  var opts = map__12241__$1;
  var params = cljs.core.get.call(null, map__12241__$1, new cljs.core.Keyword(null, "params", "params", 710516235));
  var response_format = cljs.core.get.call(null, map__12241__$1, new cljs.core.Keyword(null, "response-format", "response-format", 1664465322));
  var format = cljs.core.get.call(null, map__12241__$1, new cljs.core.Keyword(null, "format", "format", -1306924766));
  var method = cljs.core.get.call(null, map__12241__$1, new cljs.core.Keyword(null, "method", "method", 55703592));
  var needs_format = !(ajax.core.submittable_QMARK_.call(null, params) || cljs.core._EQ_.call(null, method, "GET"));
  var rf = cljs.core.truth_(function() {
    var or__4109__auto__ = format;
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return needs_format;
    }
  }()) ? ajax.core.keyword_request_format.call(null, format, opts) : null;
  return cljs.core.assoc.call(null, opts, new cljs.core.Keyword(null, "handler", "handler", -195596612), ajax.core.transform_handler.call(null, opts), new cljs.core.Keyword(null, "format", "format", -1306924766), rf, new cljs.core.Keyword(null, "response-format", "response-format", 1664465322), ajax.core.keyword_response_format.call(null, response_format, opts));
};
ajax.core.easy_ajax_request = function ajax$core$easy_ajax_request(uri, method, opts) {
  return ajax.core.ajax_request.call(null, ajax.core.transform_opts.call(null, cljs.core.assoc.call(null, opts, new cljs.core.Keyword(null, "uri", "uri", -774711847), uri, new cljs.core.Keyword(null, "method", "method", 55703592), method)));
};
ajax.core.GET = function() {
  var ajax$core$GET__delegate = function(uri, opts) {
    var f__10841__auto__ = cljs.core.first.call(null, opts);
    return ajax.core.easy_ajax_request.call(null, uri, "GET", f__10841__auto__ instanceof cljs.core.Keyword ? cljs.core.apply.call(null, cljs.core.hash_map, opts) : f__10841__auto__);
  };
  var ajax$core$GET = function(uri, var_args) {
    var opts = null;
    if (arguments.length > 1) {
      var G__12242__i = 0, G__12242__a = new Array(arguments.length - 1);
      while (G__12242__i < G__12242__a.length) {
        G__12242__a[G__12242__i] = arguments[G__12242__i + 1];
        ++G__12242__i;
      }
      opts = new cljs.core.IndexedSeq(G__12242__a, 0);
    }
    return ajax$core$GET__delegate.call(this, uri, opts);
  };
  ajax$core$GET.cljs$lang$maxFixedArity = 1;
  ajax$core$GET.cljs$lang$applyTo = function(arglist__12243) {
    var uri = cljs.core.first(arglist__12243);
    var opts = cljs.core.rest(arglist__12243);
    return ajax$core$GET__delegate(uri, opts);
  };
  ajax$core$GET.cljs$core$IFn$_invoke$arity$variadic = ajax$core$GET__delegate;
  return ajax$core$GET;
}();
ajax.core.HEAD = function() {
  var ajax$core$HEAD__delegate = function(uri, opts) {
    var f__10841__auto__ = cljs.core.first.call(null, opts);
    return ajax.core.easy_ajax_request.call(null, uri, "HEAD", f__10841__auto__ instanceof cljs.core.Keyword ? cljs.core.apply.call(null, cljs.core.hash_map, opts) : f__10841__auto__);
  };
  var ajax$core$HEAD = function(uri, var_args) {
    var opts = null;
    if (arguments.length > 1) {
      var G__12244__i = 0, G__12244__a = new Array(arguments.length - 1);
      while (G__12244__i < G__12244__a.length) {
        G__12244__a[G__12244__i] = arguments[G__12244__i + 1];
        ++G__12244__i;
      }
      opts = new cljs.core.IndexedSeq(G__12244__a, 0);
    }
    return ajax$core$HEAD__delegate.call(this, uri, opts);
  };
  ajax$core$HEAD.cljs$lang$maxFixedArity = 1;
  ajax$core$HEAD.cljs$lang$applyTo = function(arglist__12245) {
    var uri = cljs.core.first(arglist__12245);
    var opts = cljs.core.rest(arglist__12245);
    return ajax$core$HEAD__delegate(uri, opts);
  };
  ajax$core$HEAD.cljs$core$IFn$_invoke$arity$variadic = ajax$core$HEAD__delegate;
  return ajax$core$HEAD;
}();
ajax.core.POST = function() {
  var ajax$core$POST__delegate = function(uri, opts) {
    var f__10841__auto__ = cljs.core.first.call(null, opts);
    return ajax.core.easy_ajax_request.call(null, uri, "POST", f__10841__auto__ instanceof cljs.core.Keyword ? cljs.core.apply.call(null, cljs.core.hash_map, opts) : f__10841__auto__);
  };
  var ajax$core$POST = function(uri, var_args) {
    var opts = null;
    if (arguments.length > 1) {
      var G__12246__i = 0, G__12246__a = new Array(arguments.length - 1);
      while (G__12246__i < G__12246__a.length) {
        G__12246__a[G__12246__i] = arguments[G__12246__i + 1];
        ++G__12246__i;
      }
      opts = new cljs.core.IndexedSeq(G__12246__a, 0);
    }
    return ajax$core$POST__delegate.call(this, uri, opts);
  };
  ajax$core$POST.cljs$lang$maxFixedArity = 1;
  ajax$core$POST.cljs$lang$applyTo = function(arglist__12247) {
    var uri = cljs.core.first(arglist__12247);
    var opts = cljs.core.rest(arglist__12247);
    return ajax$core$POST__delegate(uri, opts);
  };
  ajax$core$POST.cljs$core$IFn$_invoke$arity$variadic = ajax$core$POST__delegate;
  return ajax$core$POST;
}();
ajax.core.PUT = function() {
  var ajax$core$PUT__delegate = function(uri, opts) {
    var f__10841__auto__ = cljs.core.first.call(null, opts);
    return ajax.core.easy_ajax_request.call(null, uri, "PUT", f__10841__auto__ instanceof cljs.core.Keyword ? cljs.core.apply.call(null, cljs.core.hash_map, opts) : f__10841__auto__);
  };
  var ajax$core$PUT = function(uri, var_args) {
    var opts = null;
    if (arguments.length > 1) {
      var G__12248__i = 0, G__12248__a = new Array(arguments.length - 1);
      while (G__12248__i < G__12248__a.length) {
        G__12248__a[G__12248__i] = arguments[G__12248__i + 1];
        ++G__12248__i;
      }
      opts = new cljs.core.IndexedSeq(G__12248__a, 0);
    }
    return ajax$core$PUT__delegate.call(this, uri, opts);
  };
  ajax$core$PUT.cljs$lang$maxFixedArity = 1;
  ajax$core$PUT.cljs$lang$applyTo = function(arglist__12249) {
    var uri = cljs.core.first(arglist__12249);
    var opts = cljs.core.rest(arglist__12249);
    return ajax$core$PUT__delegate(uri, opts);
  };
  ajax$core$PUT.cljs$core$IFn$_invoke$arity$variadic = ajax$core$PUT__delegate;
  return ajax$core$PUT;
}();
ajax.core.DELETE = function() {
  var ajax$core$DELETE__delegate = function(uri, opts) {
    var f__10841__auto__ = cljs.core.first.call(null, opts);
    return ajax.core.easy_ajax_request.call(null, uri, "DELETE", f__10841__auto__ instanceof cljs.core.Keyword ? cljs.core.apply.call(null, cljs.core.hash_map, opts) : f__10841__auto__);
  };
  var ajax$core$DELETE = function(uri, var_args) {
    var opts = null;
    if (arguments.length > 1) {
      var G__12250__i = 0, G__12250__a = new Array(arguments.length - 1);
      while (G__12250__i < G__12250__a.length) {
        G__12250__a[G__12250__i] = arguments[G__12250__i + 1];
        ++G__12250__i;
      }
      opts = new cljs.core.IndexedSeq(G__12250__a, 0);
    }
    return ajax$core$DELETE__delegate.call(this, uri, opts);
  };
  ajax$core$DELETE.cljs$lang$maxFixedArity = 1;
  ajax$core$DELETE.cljs$lang$applyTo = function(arglist__12251) {
    var uri = cljs.core.first(arglist__12251);
    var opts = cljs.core.rest(arglist__12251);
    return ajax$core$DELETE__delegate(uri, opts);
  };
  ajax$core$DELETE.cljs$core$IFn$_invoke$arity$variadic = ajax$core$DELETE__delegate;
  return ajax$core$DELETE;
}();
ajax.core.OPTIONS = function() {
  var ajax$core$OPTIONS__delegate = function(uri, opts) {
    var f__10841__auto__ = cljs.core.first.call(null, opts);
    return ajax.core.easy_ajax_request.call(null, uri, "OPTIONS", f__10841__auto__ instanceof cljs.core.Keyword ? cljs.core.apply.call(null, cljs.core.hash_map, opts) : f__10841__auto__);
  };
  var ajax$core$OPTIONS = function(uri, var_args) {
    var opts = null;
    if (arguments.length > 1) {
      var G__12252__i = 0, G__12252__a = new Array(arguments.length - 1);
      while (G__12252__i < G__12252__a.length) {
        G__12252__a[G__12252__i] = arguments[G__12252__i + 1];
        ++G__12252__i;
      }
      opts = new cljs.core.IndexedSeq(G__12252__a, 0);
    }
    return ajax$core$OPTIONS__delegate.call(this, uri, opts);
  };
  ajax$core$OPTIONS.cljs$lang$maxFixedArity = 1;
  ajax$core$OPTIONS.cljs$lang$applyTo = function(arglist__12253) {
    var uri = cljs.core.first(arglist__12253);
    var opts = cljs.core.rest(arglist__12253);
    return ajax$core$OPTIONS__delegate(uri, opts);
  };
  ajax$core$OPTIONS.cljs$core$IFn$_invoke$arity$variadic = ajax$core$OPTIONS__delegate;
  return ajax$core$OPTIONS;
}();
ajax.core.TRACE = function() {
  var ajax$core$TRACE__delegate = function(uri, opts) {
    var f__10841__auto__ = cljs.core.first.call(null, opts);
    return ajax.core.easy_ajax_request.call(null, uri, "TRACE", f__10841__auto__ instanceof cljs.core.Keyword ? cljs.core.apply.call(null, cljs.core.hash_map, opts) : f__10841__auto__);
  };
  var ajax$core$TRACE = function(uri, var_args) {
    var opts = null;
    if (arguments.length > 1) {
      var G__12254__i = 0, G__12254__a = new Array(arguments.length - 1);
      while (G__12254__i < G__12254__a.length) {
        G__12254__a[G__12254__i] = arguments[G__12254__i + 1];
        ++G__12254__i;
      }
      opts = new cljs.core.IndexedSeq(G__12254__a, 0);
    }
    return ajax$core$TRACE__delegate.call(this, uri, opts);
  };
  ajax$core$TRACE.cljs$lang$maxFixedArity = 1;
  ajax$core$TRACE.cljs$lang$applyTo = function(arglist__12255) {
    var uri = cljs.core.first(arglist__12255);
    var opts = cljs.core.rest(arglist__12255);
    return ajax$core$TRACE__delegate(uri, opts);
  };
  ajax$core$TRACE.cljs$core$IFn$_invoke$arity$variadic = ajax$core$TRACE__delegate;
  return ajax$core$TRACE;
}();
goog.provide("centipair.core.components.notifier");
goog.require("cljs.core");
goog.require("reagent.core");
centipair.core.components.notifier.notifier_state = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "notify", new cljs.core.Keyword(null, "text", "text", -1790561697), ""], null));
centipair.core.components.notifier.notifier_component = function centipair$core$components$notifier$notifier_component() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.core.components.notifier.notifier_state))], null), (new cljs.core.Keyword(null, "text", "text", -1790561697)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  centipair.core.components.notifier.notifier_state))], null);
};
centipair.core.components.notifier.render_notifier_component = function centipair$core$components$notifier$render_notifier_component() {
  return reagent.core.render.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.core.components.notifier.notifier_component], null), document.getElementById("notifier"));
};
centipair.core.components.notifier.notify = function() {
  var centipair$core$components$notifier$notify__delegate = function(code, p__12050) {
    var vec__12053 = p__12050;
    var message = cljs.core.nth.call(null, vec__12053, 0, null);
    var G__12054 = code;
    switch(G__12054) {
      case 200:
        return cljs.core.reset_BANG_.call(null, centipair.core.components.notifier.notifier_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "notify", new cljs.core.Keyword(null, "text", "text", -1790561697), ""], null));
        break;
      case 102:
        return cljs.core.reset_BANG_.call(null, centipair.core.components.notifier.notifier_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "notify notify-loading", new cljs.core.Keyword(null, "text", "text", -1790561697), message == null ? "Loading" : message], null));
        break;
      case 404:
        return cljs.core.reset_BANG_.call(null, centipair.core.components.notifier.notifier_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "notify notify-error", new cljs.core.Keyword(null, "text", "text", -1790561697), message == null ? "Resource unavailable" : message], null));
        break;
      case 500:
        return cljs.core.reset_BANG_.call(null, centipair.core.components.notifier.notifier_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "notify notify-error", new cljs.core.Keyword(null, "text", "text", -1790561697), message == null ? "Internal Server Error" : message], null));
        break;
      case 422:
        return cljs.core.reset_BANG_.call(null, centipair.core.components.notifier.notifier_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "notify notify-error", new cljs.core.Keyword(null, "text", "text", -1790561697), message == null ? "Unprocessable entity" : message], null));
        break;
      case 403:
        return cljs.core.reset_BANG_.call(null, centipair.core.components.notifier.notifier_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "notify notify-error", new cljs.core.Keyword(null, "text", "text", -1790561697), message == null ? "Access Denied" : message], null));
        break;
      case 405:
        return cljs.core.reset_BANG_.call(null, centipair.core.components.notifier.notifier_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "notify notify-error", new cljs.core.Keyword(null, "text", "text", -1790561697), message == null ? "Method not allowed" : message], null));
        break;
      default:
        return cljs.core.reset_BANG_.call(null, centipair.core.components.notifier.notifier_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "notify", new cljs.core.Keyword(null, "text", "text", -1790561697), ""], null));
    }
  };
  var centipair$core$components$notifier$notify = function(code, var_args) {
    var p__12050 = null;
    if (arguments.length > 1) {
      var G__12056__i = 0, G__12056__a = new Array(arguments.length - 1);
      while (G__12056__i < G__12056__a.length) {
        G__12056__a[G__12056__i] = arguments[G__12056__i + 1];
        ++G__12056__i;
      }
      p__12050 = new cljs.core.IndexedSeq(G__12056__a, 0);
    }
    return centipair$core$components$notifier$notify__delegate.call(this, code, p__12050);
  };
  centipair$core$components$notifier$notify.cljs$lang$maxFixedArity = 1;
  centipair$core$components$notifier$notify.cljs$lang$applyTo = function(arglist__12057) {
    var code = cljs.core.first(arglist__12057);
    var p__12050 = cljs.core.rest(arglist__12057);
    return centipair$core$components$notifier$notify__delegate(code, p__12050);
  };
  centipair$core$components$notifier$notify.cljs$core$IFn$_invoke$arity$variadic = centipair$core$components$notifier$notify__delegate;
  return centipair$core$components$notifier$notify;
}();
centipair.core.components.notifier.message = function centipair$core$components$notifier$message(message__$1, type) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), [cljs.core.str("alert alert-"), cljs.core.str(type)].join(""), new cljs.core.Keyword(null, "role", "role", -736691072), "alert"], null), message__$1], null);
};
goog.provide("centipair.core.utilities.ajax");
goog.require("cljs.core");
goog.require("centipair.core.components.input");
goog.require("centipair.core.components.notifier");
goog.require("centipair.core.utilities.dom");
goog.require("ajax.core");
centipair.core.utilities.ajax.error_handler = function centipair$core$utilities$ajax$error_handler(response) {
  var status = (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(response);
  var G__11946 = status;
  switch(G__11946) {
    case 403:
      return centipair.core.components.notifier.notify.call(null, 403);
      break;
    case 404:
      return centipair.core.components.notifier.notify.call(null, 404);
      break;
    case 405:
      return centipair.core.components.notifier.notify.call(null, 405);
      break;
    case 500:
      return centipair.core.components.notifier.notify.call(null, 500);
      break;
    case 422:
      return centipair.core.components.notifier.notify.call(null, 422, "The submitted data is not valid");
      break;
    default:
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(status)].join(""));;
  }
};
centipair.core.utilities.ajax.success_handler = function centipair$core$utilities$ajax$success_handler(function_handler, response) {
  centipair.core.components.notifier.notify.call(null, 200);
  return function_handler.call(null, response);
};
centipair.core.utilities.ajax.post = function centipair$core$utilities$ajax$post(url, params, function_handler) {
  centipair.core.components.notifier.notify.call(null, 102, "Loading");
  return ajax.core.POST.call(null, url, new cljs.core.Keyword(null, "params", "params", 710516235), params, new cljs.core.Keyword(null, "handler", "handler", -195596612), cljs.core.partial.call(null, centipair.core.utilities.ajax.success_handler, function_handler), new cljs.core.Keyword(null, "error-handler", "error-handler", -484945776), centipair.core.utilities.ajax.error_handler, new cljs.core.Keyword(null, "format", "format", -1306924766), ajax.core.json_request_format.call(null), new cljs.core.Keyword(null, 
  "headers", "headers", -835030129), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "X-CSRF-Token", "X-CSRF-Token", 1562992453), centipair.core.utilities.dom.get_value.call(null, "__anti-forgery-token")], null), new cljs.core.Keyword(null, "response-format", "response-format", 1664465322), ajax.core.json_response_format.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywords?", "keywords?", 764949733), true], null)));
};
centipair.core.utilities.ajax.get_json = function centipair$core$utilities$ajax$get_json(url, params, function_handler) {
  centipair.core.components.notifier.notify.call(null, 102, "Loading");
  return ajax.core.GET.call(null, url, new cljs.core.Keyword(null, "params", "params", 710516235), params, new cljs.core.Keyword(null, "handler", "handler", -195596612), cljs.core.partial.call(null, centipair.core.utilities.ajax.success_handler, function_handler), new cljs.core.Keyword(null, "error-handler", "error-handler", -484945776), centipair.core.utilities.ajax.error_handler, new cljs.core.Keyword(null, "format", "format", -1306924766), ajax.core.json_request_format.call(null), new cljs.core.Keyword(null, 
  "response-format", "response-format", 1664465322), ajax.core.json_response_format.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywords?", "keywords?", 764949733), true], null)));
};
centipair.core.utilities.ajax.delete$ = function centipair$core$utilities$ajax$delete(url, function_handler) {
  centipair.core.components.notifier.notify.call(null, 102, "Deleting");
  return ajax.core.DELETE.call(null, url, new cljs.core.Keyword(null, "handler", "handler", -195596612), cljs.core.partial.call(null, centipair.core.utilities.ajax.success_handler, function_handler), new cljs.core.Keyword(null, "headers", "headers", -835030129), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "X-CSRF-Token", "X-CSRF-Token", 1562992453), centipair.core.utilities.dom.get_value.call(null, "__anti-forgery-token")], null), new cljs.core.Keyword(null, "error-handler", 
  "error-handler", -484945776), centipair.core.utilities.ajax.error_handler);
};
centipair.core.utilities.ajax.set_value_type = function centipair$core$utilities$ajax$set_value_type(field) {
  var G__11949 = (new cljs.core.Keyword(null, "value-type", "value-type", 576005757)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field));
  if (cljs.core._EQ_.call(null, "float", G__11949)) {
    return parseFloat((new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)));
  } else {
    if (cljs.core._EQ_.call(null, "integer", G__11949)) {
      return parseInt((new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)));
    } else {
      if (cljs.core._EQ_.call(null, "string", G__11949)) {
        return(new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field));
      } else {
        if (cljs.core._EQ_.call(null, null, G__11949)) {
          return(new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field));
        } else {
          return(new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field));
        }
      }
    }
  }
};
centipair.core.utilities.ajax.set_select_value_type = function centipair$core$utilities$ajax$set_select_value_type(field) {
  var fetched_value = centipair.core.utilities.dom.get_value.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field)));
  var G__11951 = (new cljs.core.Keyword(null, "value-type", "value-type", 576005757)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, field));
  if (cljs.core._EQ_.call(null, "float", G__11951)) {
    return parseFloat(fetched_value);
  } else {
    if (cljs.core._EQ_.call(null, "integer", G__11951)) {
      return parseInt(fetched_value);
    } else {
      if (cljs.core._EQ_.call(null, "string", G__11951)) {
        return fetched_value;
      } else {
        if (cljs.core._EQ_.call(null, null, G__11951)) {
          return fetched_value;
        } else {
          return fetched_value;
        }
      }
    }
  }
};
centipair.core.utilities.ajax.text_to_key = function centipair$core$utilities$ajax$text_to_key(previous, each) {
  return cljs.core.assoc.call(null, previous, cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, each))), centipair.core.utilities.ajax.set_value_type.call(null, each));
};
centipair.core.utilities.ajax.check_to_key = function centipair$core$utilities$ajax$check_to_key(previous, each) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "checked", "checked", -50955819)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, each)), "checked")) {
    return cljs.core.assoc.call(null, previous, cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, each))), true);
  } else {
    return cljs.core.assoc.call(null, previous, cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, each))), false);
  }
};
centipair.core.utilities.ajax.image_spec_to_key = function centipair$core$utilities$ajax$image_spec_to_key(previous, each) {
  return cljs.core.assoc.call(null, previous, cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "width", "width", -384071477)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, each)))), parseInt((new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "width", "width", -384071477)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  each)))), cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "height", "height", 1025178622)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, each)))), parseInt((new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "height", "height", 1025178622)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, each)))), cljs.core.keyword.call(null, 
  (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "crop", "crop", 793731643)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, each)))), cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "checked", "checked", -50955819)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "crop", "crop", 793731643)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, each))), "checked"));
};
centipair.core.utilities.ajax.select_to_key = function centipair$core$utilities$ajax$select_to_key(previous, each) {
  return cljs.core.assoc.call(null, previous, cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, each))), centipair.core.utilities.ajax.set_select_value_type.call(null, each));
};
centipair.core.utilities.ajax.to_key = function centipair$core$utilities$ajax$to_key(previous, each) {
  var G__11953 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, each));
  switch(G__11953) {
    case "text":
      return centipair.core.utilities.ajax.text_to_key.call(null, previous, each);
      break;
    case "checkbox":
      return centipair.core.utilities.ajax.check_to_key.call(null, previous, each);
      break;
    case "image-spec":
      return centipair.core.utilities.ajax.image_spec_to_key.call(null, previous, each);
      break;
    case "hidden":
      return centipair.core.utilities.ajax.text_to_key.call(null, previous, each);
      break;
    case "select":
      return centipair.core.utilities.ajax.select_to_key.call(null, previous, each);
      break;
    default:
      return cljs.core.assoc.call(null, previous, cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, each))), centipair.core.utilities.ajax.set_value_type.call(null, each));
  }
};
centipair.core.utilities.ajax.handle_form_error = function centipair$core$utilities$ajax$handle_form_error(form_state, form, response) {
  centipair.core.components.notifier.notify.call(null, 422, "The submitted data is not valid");
  var combined = cljs.core.conj.call(null, form, form_state);
  var seq__11959 = cljs.core.seq.call(null, combined);
  var chunk__11960 = null;
  var count__11961 = 0;
  var i__11962 = 0;
  while (true) {
    if (i__11962 < count__11961) {
      var each = cljs.core._nth.call(null, chunk__11960, i__11962);
      centipair.core.components.input.append_error.call(null, (new cljs.core.Keyword(null, "errors", "errors", -908790718)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "response", "response", -1068424192)).cljs$core$IFn$_invoke$arity$1(response)), each);
      var G__11963 = seq__11959;
      var G__11964 = chunk__11960;
      var G__11965 = count__11961;
      var G__11966 = i__11962 + 1;
      seq__11959 = G__11963;
      chunk__11960 = G__11964;
      count__11961 = G__11965;
      i__11962 = G__11966;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11959);
      if (temp__4126__auto__) {
        var seq__11959__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11959__$1)) {
          var c__4894__auto__ = cljs.core.chunk_first.call(null, seq__11959__$1);
          var G__11967 = cljs.core.chunk_rest.call(null, seq__11959__$1);
          var G__11968 = c__4894__auto__;
          var G__11969 = cljs.core.count.call(null, c__4894__auto__);
          var G__11970 = 0;
          seq__11959 = G__11967;
          chunk__11960 = G__11968;
          count__11961 = G__11969;
          i__11962 = G__11970;
          continue;
        } else {
          var each = cljs.core.first.call(null, seq__11959__$1);
          centipair.core.components.input.append_error.call(null, (new cljs.core.Keyword(null, "errors", "errors", -908790718)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "response", "response", -1068424192)).cljs$core$IFn$_invoke$arity$1(response)), each);
          var G__11971 = cljs.core.next.call(null, seq__11959__$1);
          var G__11972 = null;
          var G__11973 = 0;
          var G__11974 = 0;
          seq__11959 = G__11971;
          chunk__11960 = G__11972;
          count__11961 = G__11973;
          i__11962 = G__11974;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
centipair.core.utilities.ajax.form_error_handler = function centipair$core$utilities$ajax$form_error_handler(form_state, form, response) {
  var status = (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(response);
  var G__11976 = status;
  switch(G__11976) {
    case 403:
      return centipair.core.components.notifier.notify.call(null, 403);
      break;
    case 404:
      return centipair.core.components.notifier.notify.call(null, 404);
      break;
    case 405:
      return centipair.core.components.notifier.notify.call(null, 405);
      break;
    case 500:
      return centipair.core.components.notifier.notify.call(null, 500);
      break;
    case 422:
      return centipair.core.utilities.ajax.handle_form_error.call(null, form_state, form, response);
      break;
    default:
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(status)].join(""));;
  }
};
centipair.core.utilities.ajax.form_success_handler = function centipair$core$utilities$ajax$form_success_handler() {
  return null;
};
centipair.core.utilities.ajax.form_post = function centipair$core$utilities$ajax$form_post(form_state, url, form, function_handler) {
  centipair.core.components.notifier.notify.call(null, 102, "Loading");
  return ajax.core.POST.call(null, url, new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.reduce.call(null, centipair.core.utilities.ajax.to_key, cljs.core.PersistentArrayMap.EMPTY, form), new cljs.core.Keyword(null, "handler", "handler", -195596612), cljs.core.partial.call(null, centipair.core.utilities.ajax.success_handler, function_handler), new cljs.core.Keyword(null, "error-handler", "error-handler", -484945776), cljs.core.partial.call(null, centipair.core.utilities.ajax.form_error_handler, 
  form_state, form), new cljs.core.Keyword(null, "headers", "headers", -835030129), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "X-CSRF-Token", "X-CSRF-Token", 1562992453), centipair.core.utilities.dom.get_value.call(null, "__anti-forgery-token")], null), new cljs.core.Keyword(null, "response-format", "response-format", 1664465322), ajax.core.json_response_format.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywords?", "keywords?", 
  764949733), true], null)));
};
centipair.core.utilities.ajax.data_saved_notifier = function centipair$core$utilities$ajax$data_saved_notifier(response) {
  return centipair.core.components.notifier.notify.call(null, 102, "Data saved");
};
goog.provide("centipair.core.ui");
goog.require("cljs.core");
goog.require("reagent.core");
centipair.core.ui.render = function centipair$core$ui$render(elements, root_id) {
  return reagent.core.render.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [elements], null), document.getElementById(root_id));
};
centipair.core.ui.cleared_element = function centipair$core$ui$cleared_element() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991)], null);
};
centipair.core.ui.clear = function centipair$core$ui$clear(root_id) {
  return reagent.core.render.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.core.ui.cleared_element], null), document.getElementById(root_id));
};
centipair.core.ui.render_page_message = function centipair$core$ui$render_page_message(message) {
  return message;
};
centipair.core.ui.define_page = function centipair$core$ui$define_page(page, elements) {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), "page-container"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h3", "h3", 2067611163), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), 
  "page-title"], null), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, page))], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), "page-message"], null), centipair.core.ui.render_page_message.call(null, (new cljs.core.Keyword(null, "message", 
  "message", -406056002)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, page)))], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), "action-bar"], null), (new cljs.core.Keyword(null, "action-bar", "action-bar", 1747757453)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, page)) == null ? 
  "" : (new cljs.core.Keyword(null, "action-bar", "action-bar", 1747757453)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, page)).call(null)], null), elements.call(null)], null);
};
centipair.core.ui.render_page = function centipair$core$ui$render_page(page, elements) {
  return centipair.core.ui.render.call(null, cljs.core.partial.call(null, centipair.core.ui.define_page, page, elements), "content");
};
goog.provide("centipair.core.user.forms");
goog.require("cljs.core");
goog.require("centipair.core.components.input");
goog.require("reagent.core");
goog.require("centipair.core.utilities.validators");
goog.require("centipair.core.utilities.dom");
goog.require("centipair.core.utilities.ajax");
goog.require("centipair.core.ui");
goog.require("centipair.core.components.notifier");
centipair.core.user.forms.registration_form_state = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "Sign Up", new cljs.core.Keyword(null, "action", "action", -811238024), "/register-submit", new cljs.core.Keyword(null, "id", "id", -1388402092), "registration-form"], null));
centipair.core.user.forms.email = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "email", new cljs.core.Keyword(null, "type", "type", 1174270348), "email", new cljs.core.Keyword(null, "label", "label", 1718410804), "Email", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.email_required], null));
centipair.core.user.forms.username = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "username", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "label", "label", 1718410804), "Username", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.required], null));
centipair.core.user.forms.password = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "password", new cljs.core.Keyword(null, "type", "type", 1174270348), "password", new cljs.core.Keyword(null, "label", "label", 1718410804), "Password", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.required], null));
centipair.core.user.forms.accept_box_terms = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", -1388402092), "box-terms", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "label", "label", 1718410804), "Terms \x26 Conditions", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.agree_terms, new cljs.core.Keyword(null, "description", "description", 
-1428560544), "I've read and accept terms \x26 conditions"], null));
centipair.core.user.forms.password_required_match = function centipair$core$user$forms$password_required_match(field) {
  if (cljs.core.truth_(centipair.core.utilities.validators.has_value_QMARK_.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(field)))) {
    if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(field), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.core.user.forms.password)))) {
      return centipair.core.utilities.validators.validation_success.call(null);
    } else {
      return centipair.core.utilities.validators.validation_error.call(null, "Passwords does not match");
    }
  } else {
    return centipair.core.utilities.validators.validation_error.call(null, centipair.core.utilities.validators.required_field_error);
  }
};
centipair.core.user.forms.confirm_password = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "confirm-password", new cljs.core.Keyword(null, "type", "type", 1174270348), "password", new cljs.core.Keyword(null, "label", "label", 1718410804), "Confirm Password", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.user.forms.password_required_match], null));
centipair.core.user.forms.register_submit = function centipair$core$user$forms$register_submit() {
  return centipair.core.utilities.ajax.form_post.call(null, centipair.core.user.forms.registration_form_state, "/api/register", new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.core.user.forms.username, centipair.core.user.forms.email, centipair.core.user.forms.password, centipair.core.user.forms.confirm_password], null), function(response) {
    return console.log("yay!!!");
  });
};
centipair.core.user.forms.register_submit_button = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Submit", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), centipair.core.user.forms.register_submit, new cljs.core.Keyword(null, "id", "id", -1388402092), "register-submit-button"], null));
centipair.core.user.forms.registration_form = function centipair$core$user$forms$registration_form() {
  return centipair.core.components.input.form_aligned.call(null, centipair.core.user.forms.registration_form_state, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.core.user.forms.username, centipair.core.user.forms.email, centipair.core.user.forms.password, centipair.core.user.forms.confirm_password, centipair.core.user.forms.accept_box_terms], null), centipair.core.user.forms.register_submit_button);
};
centipair.core.user.forms.render_register_form = function centipair$core$user$forms$render_register_form() {
  return centipair.core.ui.render.call(null, centipair.core.user.forms.registration_form, "register-form");
};
centipair.core.user.forms.login_form_state = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "Login", new cljs.core.Keyword(null, "action", "action", -811238024), "/login-submit", new cljs.core.Keyword(null, "id", "id", -1388402092), "login-form"], null));
centipair.core.user.forms.login_submit = function centipair$core$user$forms$login_submit() {
  return centipair.core.utilities.ajax.form_post.call(null, centipair.core.user.forms.login_form_state, "/api/login", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.core.user.forms.username, centipair.core.user.forms.password], null), function(response) {
    return console.log(cljs.core.clj__GT_js.call(null, response));
  });
};
centipair.core.user.forms.login_submit_button = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Submit", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), centipair.core.user.forms.login_submit, new cljs.core.Keyword(null, "id", "id", -1388402092), "login-submit-button"], null));
centipair.core.user.forms.login_form = function centipair$core$user$forms$login_form() {
  return centipair.core.components.input.form_aligned.call(null, centipair.core.user.forms.login_form_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.core.user.forms.username, centipair.core.user.forms.password], null), centipair.core.user.forms.login_submit_button);
};
centipair.core.user.forms.render_login_form = function centipair$core$user$forms$render_login_form() {
  return centipair.core.ui.render.call(null, centipair.core.user.forms.login_form, "login-form");
};
centipair.core.user.forms.forgot_password_subheading = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "forgot-password-subheading", new cljs.core.Keyword(null, "label", "label", 1718410804), "Enter your email to reset password", new cljs.core.Keyword(null, "type", "type", 1174270348), "subheading"], null));
centipair.core.user.forms.forgot_password_form_state = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "Forgot password", new cljs.core.Keyword(null, "action", "action", -811238024), "/login-submit", new cljs.core.Keyword(null, "id", "id", -1388402092), "forgot-password-form"], null));
centipair.core.user.forms.forgot_password_success = function centipair$core$user$forms$forgot_password_success() {
  return centipair.core.components.notifier.message.call(null, "Please check your email for instructions on resetting password", "success");
};
centipair.core.user.forms.render_forgot_password_success = function centipair$core$user$forms$render_forgot_password_success() {
  return centipair.core.ui.render.call(null, centipair.core.user.forms.forgot_password_success, "forgot-password-form");
};
centipair.core.user.forms.forgot_password_submit = function centipair$core$user$forms$forgot_password_submit() {
  return centipair.core.utilities.ajax.form_post.call(null, centipair.core.user.forms.forgot_password_form_state, "/forgot-password-submit", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.core.user.forms.email], null), function(response) {
    return centipair.core.user.forms.render_forgot_password_success.call(null);
  });
};
centipair.core.user.forms.forgot_password_button = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Submit", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), centipair.core.user.forms.forgot_password_submit, new cljs.core.Keyword(null, "id", "id", -1388402092), "forgot-password-button"], null));
centipair.core.user.forms.forgot_password_form = function centipair$core$user$forms$forgot_password_form() {
  return centipair.core.components.input.form_aligned.call(null, centipair.core.user.forms.forgot_password_form_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.core.user.forms.forgot_password_subheading, centipair.core.user.forms.email], null), centipair.core.user.forms.forgot_password_button);
};
centipair.core.user.forms.render_forgot_password_form = function centipair$core$user$forms$render_forgot_password_form() {
  return centipair.core.ui.render.call(null, centipair.core.user.forms.forgot_password_form, "forgot-password-form");
};
centipair.core.user.forms.password_reset_key = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "password-reset-key", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "value", "value", 305978217), ""], null));
centipair.core.user.forms.reset_password_form_state = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "reset-password-form", new cljs.core.Keyword(null, "title", "title", 636505583), "Reset password"], null));
centipair.core.user.forms.reset_password_submit = function centipair$core$user$forms$reset_password_submit() {
  cljs.core.swap_BANG_.call(null, centipair.core.user.forms.password_reset_key, cljs.core.assoc, new cljs.core.Keyword(null, "value", "value", 305978217), centipair.core.utilities.dom.get_value.call(null, "password-reset-key"));
  return centipair.core.utilities.ajax.form_post.call(null, centipair.core.user.forms.reset_password_form_state, "/reset-password-submit", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.core.user.forms.password, centipair.core.user.forms.confirm_password, centipair.core.user.forms.password_reset_key], null), function(response) {
    return console.log(cljs.core.clj__GT_js.call(null, response));
  });
};
centipair.core.user.forms.reset_password_button = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "reset-password-button", new cljs.core.Keyword(null, "type", "type", 1174270348), "button", new cljs.core.Keyword(null, "label", "label", 1718410804), "Submit", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), centipair.core.user.forms.reset_password_submit], null));
centipair.core.user.forms.reset_password_form = function centipair$core$user$forms$reset_password_form() {
  return centipair.core.components.input.form_aligned.call(null, centipair.core.user.forms.reset_password_form_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.core.user.forms.password, centipair.core.user.forms.confirm_password], null), centipair.core.user.forms.reset_password_button);
};
centipair.core.user.forms.render_reset_password_form = function centipair$core$user$forms$render_reset_password_form() {
  return centipair.core.ui.render.call(null, centipair.core.user.forms.reset_password_form, "login-form");
};
goog.provide("centipair.core.utilities.currency");
goog.require("cljs.core");
centipair.core.utilities.currency.supported_currency_list = cljs.core.PersistentVector.fromArray([new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "AED", new cljs.core.Keyword(null, "label", "label", 1718410804), "United ArabEmirates Dirham"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "AFN", new cljs.core.Keyword(null, "label", "label", 1718410804), "Afghan Afghani*"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "value", "value", 305978217), "ALL", new cljs.core.Keyword(null, "label", "label", 1718410804), "Albanian Lek"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "AMD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Armenian Dram"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "ANG", new cljs.core.Keyword(null, "label", "label", 1718410804), 
"Netherlands Antillean Gulden"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "AOA", new cljs.core.Keyword(null, "label", "label", 1718410804), "Angolan Kwanza*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "ARS", new cljs.core.Keyword(null, "label", "label", 1718410804), "Argentine Peso*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", 
"value", 305978217), "AUD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Australian Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "AWG", new cljs.core.Keyword(null, "label", "label", 1718410804), "Aruban Florin"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "AZN", new cljs.core.Keyword(null, "label", "label", 1718410804), "Azerbaijani Manat"], null), 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "BAM", new cljs.core.Keyword(null, "label", "label", 1718410804), "Bosnia \x26 Herzegovina Convertible Mark"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "BBD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Barbadian Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 
305978217), "BDT", new cljs.core.Keyword(null, "label", "label", 1718410804), "Bangladeshi Taka"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "BGN", new cljs.core.Keyword(null, "label", "label", 1718410804), "Bulgarian Lev"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "BIF", new cljs.core.Keyword(null, "label", "label", 1718410804), "Burundian Franc"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "value", "value", 305978217), "BMD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Bermudian Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "BND", new cljs.core.Keyword(null, "label", "label", 1718410804), "Brunei Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "BOB", new cljs.core.Keyword(null, "label", "label", 
1718410804), "Bolivian Boliviano*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "BRL", new cljs.core.Keyword(null, "label", "label", 1718410804), "Brazilian Real*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "BSD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Bahamian Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"value", "value", 305978217), "BWP", new cljs.core.Keyword(null, "label", "label", 1718410804), "Botswana Pula"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "BZD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Belize Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "CAD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Canadian Dollar"], null), 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "CDF", new cljs.core.Keyword(null, "label", "label", 1718410804), "Congolese Franc"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "CHF", new cljs.core.Keyword(null, "label", "label", 1718410804), "Swiss Franc"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "CLP", new cljs.core.Keyword(null, 
"label", "label", 1718410804), "Chilean Peso*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "CNY", new cljs.core.Keyword(null, "label", "label", 1718410804), "Chinese Renminbi Yuan"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "COP", new cljs.core.Keyword(null, "label", "label", 1718410804), "Colombian Peso*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"value", "value", 305978217), "CRC", new cljs.core.Keyword(null, "label", "label", 1718410804), "CostaRican Col\u00f3n*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "CVE", new cljs.core.Keyword(null, "label", "label", 1718410804), "CapeVerdean Escudo*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "CZK", new cljs.core.Keyword(null, "label", "label", 1718410804), "Czech Koruna*"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "DJF", new cljs.core.Keyword(null, "label", "label", 1718410804), "Djiboutian Franc*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "DKK", new cljs.core.Keyword(null, "label", "label", 1718410804), "Danish Krone"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "DOP", 
new cljs.core.Keyword(null, "label", "label", 1718410804), "Dominican Peso"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "DZD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Algerian Dinar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "EEK", new cljs.core.Keyword(null, "label", "label", 1718410804), "Estonian Kroon*"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "value", "value", 305978217), "EGP", new cljs.core.Keyword(null, "label", "label", 1718410804), "Egyptian Pound"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "ETB", new cljs.core.Keyword(null, "label", "label", 1718410804), "Ethiopian Birr"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "EUR", new cljs.core.Keyword(null, "label", "label", 
1718410804), "Euro"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "FJD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Fijian Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "FKP", new cljs.core.Keyword(null, "label", "label", 1718410804), "Falkland Islands Pound*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", 
"value", 305978217), "GBP", new cljs.core.Keyword(null, "label", "label", 1718410804), "British Pound"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "GEL", new cljs.core.Keyword(null, "label", "label", 1718410804), "Georgian Lari"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "GIP", new cljs.core.Keyword(null, "label", "label", 1718410804), "Gibraltar Pound"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "value", "value", 305978217), "GMD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Gambian Dalasi"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "GNF", new cljs.core.Keyword(null, "label", "label", 1718410804), "Guinean Franc*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "GTQ", new cljs.core.Keyword(null, "label", "label", 
1718410804), "Guatemalan Quetzal*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "GYD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Guyanese Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "HKD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Hong Kong Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"value", "value", 305978217), "HNL", new cljs.core.Keyword(null, "label", "label", 1718410804), "Honduran Lempira*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "HRK", new cljs.core.Keyword(null, "label", "label", 1718410804), "Croatian Kuna"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "HTG", new cljs.core.Keyword(null, "label", "label", 1718410804), "Haitian Gourde"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "HUF", new cljs.core.Keyword(null, "label", "label", 1718410804), "Hungarian Forint*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "IDR", new cljs.core.Keyword(null, "label", "label", 1718410804), "Indonesian Rupiah"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "ILS", 
new cljs.core.Keyword(null, "label", "label", 1718410804), "Israeli New Sheqel"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "INR", new cljs.core.Keyword(null, "label", "label", 1718410804), "Indian Rupee*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "ISK", new cljs.core.Keyword(null, "label", "label", 1718410804), "Icelandic Kr\u00f3na"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "value", "value", 305978217), "JMD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Jamaican Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "JPY", new cljs.core.Keyword(null, "label", "label", 1718410804), "Japanese Yen"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "KES", new cljs.core.Keyword(null, "label", "label", 1718410804), 
"Kenyan Shilling"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "KGS", new cljs.core.Keyword(null, "label", "label", 1718410804), "Kyrgyzstani Som"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "KHR", new cljs.core.Keyword(null, "label", "label", 1718410804), "Cambodian Riel"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 
305978217), "KMF", new cljs.core.Keyword(null, "label", "label", 1718410804), "Comorian Franc"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "KRW", new cljs.core.Keyword(null, "label", "label", 1718410804), "South Korean Won"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "KYD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Cayman Islands Dollar"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "value", "value", 305978217), "KZT", new cljs.core.Keyword(null, "label", "label", 1718410804), "Kazakhstani Tenge"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "LAK", new cljs.core.Keyword(null, "label", "label", 1718410804), "LaoKip*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "LBP", new cljs.core.Keyword(null, "label", "label", 1718410804), 
"Lebanese Pound"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "LKR", new cljs.core.Keyword(null, "label", "label", 1718410804), "SriLankan Rupee"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "LRD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Liberian Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 
305978217), "LSL", new cljs.core.Keyword(null, "label", "label", 1718410804), "Lesotho Loti"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "LTL", new cljs.core.Keyword(null, "label", "label", 1718410804), "Lithuanian Litas"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "LVL", new cljs.core.Keyword(null, "label", "label", 1718410804), "Latvian Lats"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "value", "value", 305978217), "MAD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Moroccan Dirham"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "MDL", new cljs.core.Keyword(null, "label", "label", 1718410804), "Moldovan Leu"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "MGA", new cljs.core.Keyword(null, "label", "label", 1718410804), 
"Malagasy Ariary"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "MKD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Macedonian Denar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "MNT", new cljs.core.Keyword(null, "label", "label", 1718410804), "Mongolian T\u00f6gr\u00f6g"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", 
"value", 305978217), "MOP", new cljs.core.Keyword(null, "label", "label", 1718410804), "Macanese Pataca"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "MRO", new cljs.core.Keyword(null, "label", "label", 1718410804), "Mauritanian Ouguiya"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "MUR", new cljs.core.Keyword(null, "label", "label", 1718410804), "Mauritian Rupee*"], null), 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "MVR", new cljs.core.Keyword(null, "label", "label", 1718410804), "Maldivian Rufiyaa"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "MWK", new cljs.core.Keyword(null, "label", "label", 1718410804), "Malawian Kwacha"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "MXN", new cljs.core.Keyword(null, 
"label", "label", 1718410804), "Mexican Peso*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "MYR", new cljs.core.Keyword(null, "label", "label", 1718410804), "Malaysian Ringgit"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "MZN", new cljs.core.Keyword(null, "label", "label", 1718410804), "Mozambican Metical"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"value", "value", 305978217), "NAD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Namibian Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "NGN", new cljs.core.Keyword(null, "label", "label", 1718410804), "Nigerian Naira"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "NIO", new cljs.core.Keyword(null, "label", "label", 1718410804), "Nicaraguan C\u00f3rdoba*"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "NOK", new cljs.core.Keyword(null, "label", "label", 1718410804), "Norwegian Krone"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "NPR", new cljs.core.Keyword(null, "label", "label", 1718410804), "Nepalese Rupee"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "NZD", 
new cljs.core.Keyword(null, "label", "label", 1718410804), "NewZealand Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "PAB", new cljs.core.Keyword(null, "label", "label", 1718410804), "Panamanian Balboa*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "PEN", new cljs.core.Keyword(null, "label", "label", 1718410804), "Peruvian NuevoSol*"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "value", "value", 305978217), "PGK", new cljs.core.Keyword(null, "label", "label", 1718410804), "Papua New Guinean Kina"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "PHP", new cljs.core.Keyword(null, "label", "label", 1718410804), "Philippine Peso"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "PKR", new cljs.core.Keyword(null, "label", 
"label", 1718410804), "Pakistani Rupee"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "PLN", new cljs.core.Keyword(null, "label", "label", 1718410804), "Polish Z\u0142oty"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "PYG", new cljs.core.Keyword(null, "label", "label", 1718410804), "Paraguayan Guaran\u00ed*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"value", "value", 305978217), "QAR", new cljs.core.Keyword(null, "label", "label", 1718410804), "Qatari Riyal"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "RON", new cljs.core.Keyword(null, "label", "label", 1718410804), "Romanian Leu"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "RSD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Serbian Dinar"], null), 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "RUB", new cljs.core.Keyword(null, "label", "label", 1718410804), "Russian Ruble"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "RWF", new cljs.core.Keyword(null, "label", "label", 1718410804), "Rwandan Franc"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "SAR", new cljs.core.Keyword(null, 
"label", "label", 1718410804), "Saudi Riyal"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "SBD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Solomon Islands Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "SCR", new cljs.core.Keyword(null, "label", "label", 1718410804), "Seychellois Rupee"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"value", "value", 305978217), "SEK", new cljs.core.Keyword(null, "label", "label", 1718410804), "Swedish Krona"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "SGD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Singapore Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "SHP", new cljs.core.Keyword(null, "label", "label", 1718410804), "Saint Helenian Pound*"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "SLL", new cljs.core.Keyword(null, "label", "label", 1718410804), "Sierra Leonean Leone"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "SOS", new cljs.core.Keyword(null, "label", "label", 1718410804), "Somali Shilling"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), 
"SRD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Surinamese Dollar*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "STD", new cljs.core.Keyword(null, "label", "label", 1718410804), "S\u00e3o Tom\u00e9and Pr\u00edncipe Dobra"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "SVC", new cljs.core.Keyword(null, "label", "label", 1718410804), "Salvadoran Col\u00f3n*"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "SZL", new cljs.core.Keyword(null, "label", "label", 1718410804), "SwaziLilangeni"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "THB", new cljs.core.Keyword(null, "label", "label", 1718410804), "Thai Baht"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "TJS", new cljs.core.Keyword(null, 
"label", "label", 1718410804), "Tajikistani Somoni"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "TOP", new cljs.core.Keyword(null, "label", "label", 1718410804), "Tongan Pa\u02bbanga"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "TRY", new cljs.core.Keyword(null, "label", "label", 1718410804), "Turkish Lira"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"value", "value", 305978217), "TTD", new cljs.core.Keyword(null, "label", "label", 1718410804), "Trinidadand Tobago Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "TWD", new cljs.core.Keyword(null, "label", "label", 1718410804), "NewTaiwan Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "TZS", new cljs.core.Keyword(null, "label", "label", 1718410804), "Tanzanian Shilling"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "UAH", new cljs.core.Keyword(null, "label", "label", 1718410804), "Ukrainian Hryvnia"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "UGX", new cljs.core.Keyword(null, "label", "label", 1718410804), "Ugandan Shilling"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "USD", 
new cljs.core.Keyword(null, "label", "label", 1718410804), "United States Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "UYU", new cljs.core.Keyword(null, "label", "label", 1718410804), "Uruguayan Peso*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "UZS", new cljs.core.Keyword(null, "label", "label", 1718410804), "Uzbekistani Som"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "value", "value", 305978217), "VND", new cljs.core.Keyword(null, "label", "label", 1718410804), "Vietnamese \u0110\u1ed3ng"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "VUV", new cljs.core.Keyword(null, "label", "label", 1718410804), "Vanuatu Vatu"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "WST", new cljs.core.Keyword(null, "label", 
"label", 1718410804), "Samoan Tala"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "XAF", new cljs.core.Keyword(null, "label", "label", 1718410804), "Central African Cfa Franc"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "XCD", new cljs.core.Keyword(null, "label", "label", 1718410804), "East Caribbean Dollar"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"value", "value", 305978217), "XOF", new cljs.core.Keyword(null, "label", "label", 1718410804), "West AfricanCfa Franc*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "XPF", new cljs.core.Keyword(null, "label", "label", 1718410804), "Cfp Franc*"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "YER", new cljs.core.Keyword(null, "label", "label", 1718410804), "Yemeni Rial"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "ZAR", new cljs.core.Keyword(null, "label", "label", 1718410804), "South African Rand"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "ZMW", new cljs.core.Keyword(null, "label", "label", 1718410804), "Zambian Kwacha"], null)], true);
goog.provide("centipair.admin.resources");
goog.require("cljs.core");
centipair.admin.resources.site_endpoint_url = "/admin/api/site";
centipair.admin.resources.store_endpoint_url = "/admin/api/store";
centipair.admin.resources.page_endpoint_url = "/admin/api/page";
centipair.admin.resources.site_source = function() {
  var centipair$admin$resources$site_source__delegate = function(p__11786) {
    var vec__11788 = p__11786;
    var id = cljs.core.nth.call(null, vec__11788, 0, null);
    if (id == null) {
      return centipair.admin.resources.site_endpoint_url;
    } else {
      return[cljs.core.str(centipair.admin.resources.site_endpoint_url), cljs.core.str("/"), cljs.core.str(id)].join("");
    }
  };
  var centipair$admin$resources$site_source = function(var_args) {
    var p__11786 = null;
    if (arguments.length > 0) {
      var G__11789__i = 0, G__11789__a = new Array(arguments.length - 0);
      while (G__11789__i < G__11789__a.length) {
        G__11789__a[G__11789__i] = arguments[G__11789__i + 0];
        ++G__11789__i;
      }
      p__11786 = new cljs.core.IndexedSeq(G__11789__a, 0);
    }
    return centipair$admin$resources$site_source__delegate.call(this, p__11786);
  };
  centipair$admin$resources$site_source.cljs$lang$maxFixedArity = 0;
  centipair$admin$resources$site_source.cljs$lang$applyTo = function(arglist__11790) {
    var p__11786 = cljs.core.seq(arglist__11790);
    return centipair$admin$resources$site_source__delegate(p__11786);
  };
  centipair$admin$resources$site_source.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$resources$site_source__delegate;
  return centipair$admin$resources$site_source;
}();
centipair.admin.resources.store_source = function() {
  var centipair$admin$resources$store_source__delegate = function(p__11791) {
    var vec__11793 = p__11791;
    var id = cljs.core.nth.call(null, vec__11793, 0, null);
    if (id == null) {
      return centipair.admin.resources.store_endpoint_url;
    } else {
      return[cljs.core.str(centipair.admin.resources.store_endpoint_url), cljs.core.str("/"), cljs.core.str(id)].join("");
    }
  };
  var centipair$admin$resources$store_source = function(var_args) {
    var p__11791 = null;
    if (arguments.length > 0) {
      var G__11794__i = 0, G__11794__a = new Array(arguments.length - 0);
      while (G__11794__i < G__11794__a.length) {
        G__11794__a[G__11794__i] = arguments[G__11794__i + 0];
        ++G__11794__i;
      }
      p__11791 = new cljs.core.IndexedSeq(G__11794__a, 0);
    }
    return centipair$admin$resources$store_source__delegate.call(this, p__11791);
  };
  centipair$admin$resources$store_source.cljs$lang$maxFixedArity = 0;
  centipair$admin$resources$store_source.cljs$lang$applyTo = function(arglist__11795) {
    var p__11791 = cljs.core.seq(arglist__11795);
    return centipair$admin$resources$store_source__delegate(p__11791);
  };
  centipair$admin$resources$store_source.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$resources$store_source__delegate;
  return centipair$admin$resources$store_source;
}();
centipair.admin.resources.page_source = function() {
  var centipair$admin$resources$page_source__delegate = function(p__11796) {
    var vec__11798 = p__11796;
    var id = cljs.core.nth.call(null, vec__11798, 0, null);
    if (id == null) {
      return centipair.admin.resources.page_endpoint_url;
    } else {
      return[cljs.core.str(centipair.admin.resources.page_endpoint_url), cljs.core.str("/"), cljs.core.str(id)].join("");
    }
  };
  var centipair$admin$resources$page_source = function(var_args) {
    var p__11796 = null;
    if (arguments.length > 0) {
      var G__11799__i = 0, G__11799__a = new Array(arguments.length - 0);
      while (G__11799__i < G__11799__a.length) {
        G__11799__a[G__11799__i] = arguments[G__11799__i + 0];
        ++G__11799__i;
      }
      p__11796 = new cljs.core.IndexedSeq(G__11799__a, 0);
    }
    return centipair$admin$resources$page_source__delegate.call(this, p__11796);
  };
  centipair$admin$resources$page_source.cljs$lang$maxFixedArity = 0;
  centipair$admin$resources$page_source.cljs$lang$applyTo = function(arglist__11800) {
    var p__11796 = cljs.core.seq(arglist__11800);
    return centipair$admin$resources$page_source__delegate(p__11796);
  };
  centipair$admin$resources$page_source.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$resources$page_source__delegate;
  return centipair$admin$resources$page_source;
}();
goog.provide("centipair.admin.channels");
goog.require("cljs.core");
goog.require("reagent.core");
goog.require("centipair.admin.resources");
goog.require("cljs.core.async");
goog.require("centipair.core.utilities.ajax");
goog.require("centipair.core.utilities.dom");
goog.require("centipair.core.ui");
centipair.admin.channels.site_settings_data = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "site-settings-selector", new cljs.core.Keyword(null, "options", "options", 99638489), cljs.core.PersistentVector.EMPTY], null));
centipair.admin.channels.site_settings_id = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "site-settings-id", new cljs.core.Keyword(null, "type", "type", 1174270348), "hidden", new cljs.core.Keyword(null, "value", "value", 305978217), null], null));
centipair.admin.channels.dashboard_channel = cljs.core.async.chan.call(null);
centipair.admin.channels.site_settings_channel = cljs.core.async.chan.call(null);
centipair.admin.channels.new_site_channel = cljs.core.async.chan.call(null);
centipair.admin.channels.store_settings_channel = cljs.core.async.chan.call(null);
centipair.admin.channels.page_list_channel = cljs.core.async.chan.call(null);
centipair.admin.channels.page_channel = cljs.core.async.chan.call(null);
centipair.admin.channels.site_selector_channel = cljs.core.async.chan.call(null);
centipair.admin.channels.active_channel = cljs.core.atom.call(null, null);
centipair.admin.channels.admin_menu_channel = cljs.core.async.chan.call(null);
centipair.admin.channels.active_page = cljs.core.atom.call(null, null);
centipair.admin.channels.activate_channel = function centipair$admin$channels$activate_channel(site_id) {
  var active_channel = (new cljs.core.Keyword(null, "channel", "channel", 734187692)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.admin.channels.active_page));
  if (!(active_channel == null)) {
    if (cljs.core._EQ_.call(null, site_id, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.admin.channels.site_settings_id)))) {
      return cljs.core.async.put_BANG_.call(null, active_channel, site_id);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
centipair.admin.channels.set_active_channel = function centipair$admin$channels$set_active_channel(current_channel) {
  return cljs.core.swap_BANG_.call(null, centipair.admin.channels.active_page, cljs.core.assoc, new cljs.core.Keyword(null, "channel", "channel", 734187692), current_channel);
};
centipair.admin.channels.remove_site_selector_prompt = function centipair$admin$channels$remove_site_selector_prompt() {
  if (cljs.core._EQ_.call(null, 0, (new cljs.core.Keyword(null, "site_settings_id", "site_settings_id", 295737949)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "options", "options", 99638489)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.admin.channels.site_settings_data)))))) {
    return cljs.core.swap_BANG_.call(null, centipair.admin.channels.site_settings_data, cljs.core.assoc, new cljs.core.Keyword(null, "options", "options", 99638489), cljs.core.rest.call(null, (new cljs.core.Keyword(null, "options", "options", 99638489)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.admin.channels.site_settings_data))));
  } else {
    return null;
  }
};
centipair.admin.channels.change_destination = function centipair$admin$channels$change_destination(site_id) {
  centipair.admin.channels.remove_site_selector_prompt.call(null);
  cljs.core.swap_BANG_.call(null, centipair.admin.channels.site_settings_id, cljs.core.assoc, new cljs.core.Keyword(null, "value", "value", 305978217), site_id);
  if (!(cljs.core.deref.call(null, centipair.admin.channels.active_page) == null)) {
    if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "independent", "independent", -1262557623)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.admin.channels.active_page)))) {
      return window.location.hash = [cljs.core.str("#/site/"), cljs.core.str(site_id), cljs.core.str((new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.admin.channels.active_page)))].join("");
    } else {
      return null;
    }
  } else {
    return window.location.hash = [cljs.core.str("#/site/"), cljs.core.str(site_id), cljs.core.str("/dashboard")].join("");
  }
};
centipair.admin.channels.selector_option = function centipair$admin$channels$selector_option(option) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "site_settings_id", "site_settings_id", 295737949)).cljs$core$IFn$_invoke$arity$1(option), new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "site_settings_id", "site_settings_id", 295737949)).cljs$core$IFn$_invoke$arity$1(option)], 
  null), (new cljs.core.Keyword(null, "site_name", "site_name", -1436471344)).cljs$core$IFn$_invoke$arity$1(option)], null);
};
centipair.admin.channels.site_selector = function centipair$admin$channels$site_selector() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "class", "class", -2030961996), "form-control", new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.admin.channels.site_settings_id)), new cljs.core.Keyword(null, 
  "on-change", "on-change", -732046149), function(p1__11358_SHARP_) {
    return centipair.admin.channels.change_destination.call(null, parseInt(p1__11358_SHARP_.target.value));
  }, new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.admin.channels.site_settings_data)), new cljs.core.Keyword(null, "key", "key", -1516042587), "site-selector"], null), cljs.core.doall.call(null, cljs.core.map.call(null, centipair.admin.channels.selector_option, (new cljs.core.Keyword(null, "options", "options", 99638489)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  centipair.admin.channels.site_settings_data))))], null);
};
centipair.admin.channels.set_site = function centipair$admin$channels$set_site(site_id) {
  console.log(site_id);
  cljs.core.async.put_BANG_.call(null, centipair.admin.channels.admin_menu_channel, site_id);
  cljs.core.swap_BANG_.call(null, centipair.admin.channels.site_settings_id, cljs.core.assoc, new cljs.core.Keyword(null, "value", "value", 305978217), site_id);
  centipair.admin.channels.activate_channel.call(null, site_id);
  return centipair.admin.channels.remove_site_selector_prompt.call(null);
};
centipair.admin.channels.init_site_selector_channel = function centipair$admin$channels$init_site_selector_channel() {
  var c__6881__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto__) {
    return function() {
      var f__6882__auto__ = function() {
        var switch__6825__auto__ = function(c__6881__auto__) {
          return function(state_11399) {
            var state_val_11400 = state_11399[1];
            if (state_val_11400 === 7) {
              var inst_11390 = state_11399[2];
              var inst_11391 = centipair.admin.channels.set_site.call(null, inst_11390);
              var state_11399__$1 = function() {
                var statearr_11401 = state_11399;
                statearr_11401[7] = inst_11391;
                return statearr_11401;
              }();
              var statearr_11402_11415 = state_11399__$1;
              statearr_11402_11415[2] = null;
              statearr_11402_11415[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11400 === 6) {
                var inst_11395 = state_11399[2];
                var state_11399__$1 = state_11399;
                var statearr_11403_11416 = state_11399__$1;
                statearr_11403_11416[2] = inst_11395;
                statearr_11403_11416[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11400 === 5) {
                  var state_11399__$1 = state_11399;
                  var statearr_11404_11417 = state_11399__$1;
                  statearr_11404_11417[2] = null;
                  statearr_11404_11417[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11400 === 4) {
                    var state_11399__$1 = state_11399;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11399__$1, 7, centipair.admin.channels.site_selector_channel);
                  } else {
                    if (state_val_11400 === 3) {
                      var inst_11397 = state_11399[2];
                      var state_11399__$1 = state_11399;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11399__$1, inst_11397);
                    } else {
                      if (state_val_11400 === 2) {
                        var state_11399__$1 = state_11399;
                        var statearr_11405_11418 = state_11399__$1;
                        statearr_11405_11418[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11400 === 1) {
                          var state_11399__$1 = state_11399;
                          var statearr_11407_11419 = state_11399__$1;
                          statearr_11407_11419[2] = null;
                          statearr_11407_11419[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6881__auto__);
        return function(switch__6825__auto__, c__6881__auto__) {
          return function() {
            var centipair$admin$channels$init_site_selector_channel_$_state_machine__6826__auto__ = null;
            var centipair$admin$channels$init_site_selector_channel_$_state_machine__6826__auto____0 = function() {
              var statearr_11411 = [null, null, null, null, null, null, null, null];
              statearr_11411[0] = centipair$admin$channels$init_site_selector_channel_$_state_machine__6826__auto__;
              statearr_11411[1] = 1;
              return statearr_11411;
            };
            var centipair$admin$channels$init_site_selector_channel_$_state_machine__6826__auto____1 = function(state_11399) {
              while (true) {
                var ret_value__6827__auto__ = function() {
                  try {
                    while (true) {
                      var result__6828__auto__ = switch__6825__auto__.call(null, state_11399);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6828__auto__;
                      }
                      break;
                    }
                  } catch (e11412) {
                    if (e11412 instanceof Object) {
                      var ex__6829__auto__ = e11412;
                      var statearr_11413_11420 = state_11399;
                      statearr_11413_11420[5] = ex__6829__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11399);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11412;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11421 = state_11399;
                  state_11399 = G__11421;
                  continue;
                } else {
                  return ret_value__6827__auto__;
                }
                break;
              }
            };
            centipair$admin$channels$init_site_selector_channel_$_state_machine__6826__auto__ = function(state_11399) {
              switch(arguments.length) {
                case 0:
                  return centipair$admin$channels$init_site_selector_channel_$_state_machine__6826__auto____0.call(this);
                case 1:
                  return centipair$admin$channels$init_site_selector_channel_$_state_machine__6826__auto____1.call(this, state_11399);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            centipair$admin$channels$init_site_selector_channel_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = centipair$admin$channels$init_site_selector_channel_$_state_machine__6826__auto____0;
            centipair$admin$channels$init_site_selector_channel_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = centipair$admin$channels$init_site_selector_channel_$_state_machine__6826__auto____1;
            return centipair$admin$channels$init_site_selector_channel_$_state_machine__6826__auto__;
          }();
        }(switch__6825__auto__, c__6881__auto__);
      }();
      var state__6883__auto__ = function() {
        var statearr_11414 = f__6882__auto__.call(null);
        statearr_11414[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto__;
        return statearr_11414;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
    };
  }(c__6881__auto__));
  return c__6881__auto__;
};
centipair.admin.channels.get_initial_site_settings_data = function centipair$admin$channels$get_initial_site_settings_data() {
  return centipair.core.utilities.ajax.get_json.call(null, centipair.admin.resources.site_source.call(null), null, function(response) {
    cljs.core.swap_BANG_.call(null, centipair.admin.channels.site_settings_data, cljs.core.assoc, new cljs.core.Keyword(null, "options", "options", 99638489), cljs.core.cons.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "site_settings_id", "site_settings_id", 295737949), 0, new cljs.core.Keyword(null, "site_name", "site_name", -1436471344), "Select site"], null), response));
    return centipair.admin.channels.init_site_selector_channel.call(null);
  });
};
centipair.admin.channels.reload_site_settings_data = function centipair$admin$channels$reload_site_settings_data() {
  return centipair.core.utilities.ajax.get_json.call(null, centipair.admin.resources.site_source.call(null), null, function(response) {
    return cljs.core.swap_BANG_.call(null, centipair.admin.channels.site_settings_data, cljs.core.assoc, new cljs.core.Keyword(null, "options", "options", 99638489), response);
  });
};
centipair.admin.channels.render_site_selector = function centipair$admin$channels$render_site_selector() {
  centipair.core.ui.render.call(null, centipair.admin.channels.site_selector, "site-selector");
  return centipair.admin.channels.get_initial_site_settings_data.call(null);
};
goog.provide("centipair.admin.action");
goog.require("cljs.core");
goog.require("centipair.admin.channels");
centipair.admin.action.crud_label = function centipair$admin$action$crud_label(key, props) {
  if ((new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(key.call(null, props)) == null) {
    var G__11425 = key instanceof cljs.core.Keyword ? key.fqn : null;
    switch(G__11425) {
      case "delete":
        return "Delete";
        break;
      case "create":
        return "Create";
        break;
      default:
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(key)].join(""));;
    }
  } else {
    return(new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(key.call(null, props));
  }
};
centipair.admin.action.crud_action_bar = function centipair$admin$action$crud_action_bar(props) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "crud-toolbar", new cljs.core.Keyword(null, "class", "class", -2030961996), "action-bar"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 
  2, [new cljs.core.Keyword(null, "href", "href", -793805698), [cljs.core.str("#/site/"), cljs.core.str((new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.admin.channels.site_settings_id))), cljs.core.str("/"), cljs.core.str((new cljs.core.Keyword(null, "entity", "entity", -450970276)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "create", "create", -1301499256)).cljs$core$IFn$_invoke$arity$1(props))), cljs.core.str("/create")].join(""), 
  new cljs.core.Keyword(null, "class", "class", -2030961996), "btn btn-primary"], null), centipair.admin.action.crud_label.call(null, new cljs.core.Keyword(null, "create", "create", -1301499256), props)], null), " ", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "href", "href", -793805698), "javascript: void(0)", new cljs.core.Keyword(null, 
  "on-click", "on-click", 1632826543), (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "delete", "delete", -1768633620)).cljs$core$IFn$_invoke$arity$1(props)), new cljs.core.Keyword(null, "class", "class", -2030961996), "btn btn-danger"], null), centipair.admin.action.crud_label.call(null, new cljs.core.Keyword(null, "delete", "delete", -1768633620), props)], null)], null);
};
centipair.admin.action.render_reset_button = function centipair$admin$action$render_reset_button(reset_function) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "href", "href", -793805698), "javascript:void(0)", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), reset_function, new cljs.core.Keyword(null, "class", "class", -2030961996), "btn btn-danger"], null), "Reset"], null);
};
centipair.admin.action.cancel_action_bar = function() {
  var centipair$admin$action$cancel_action_bar__delegate = function(site_settings_id, redirect_url, p__11427) {
    var vec__11429 = p__11427;
    var reset_function = cljs.core.nth.call(null, vec__11429, 0, null);
    return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "crud-toolbar", new cljs.core.Keyword(null, "class", "class", -2030961996), "action-bar"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 
    2, [new cljs.core.Keyword(null, "href", "href", -793805698), [cljs.core.str("#/site/"), cljs.core.str((new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, site_settings_id))), cljs.core.str("/"), cljs.core.str(redirect_url)].join(""), new cljs.core.Keyword(null, "class", "class", -2030961996), "btn btn-primary"], null), "Cancel"], null), "  ", reset_function == null ? "" : centipair.admin.action.render_reset_button.call(null, reset_function)], 
    null);
  };
  var centipair$admin$action$cancel_action_bar = function(site_settings_id, redirect_url, var_args) {
    var p__11427 = null;
    if (arguments.length > 2) {
      var G__11430__i = 0, G__11430__a = new Array(arguments.length - 2);
      while (G__11430__i < G__11430__a.length) {
        G__11430__a[G__11430__i] = arguments[G__11430__i + 2];
        ++G__11430__i;
      }
      p__11427 = new cljs.core.IndexedSeq(G__11430__a, 0);
    }
    return centipair$admin$action$cancel_action_bar__delegate.call(this, site_settings_id, redirect_url, p__11427);
  };
  centipair$admin$action$cancel_action_bar.cljs$lang$maxFixedArity = 2;
  centipair$admin$action$cancel_action_bar.cljs$lang$applyTo = function(arglist__11431) {
    var site_settings_id = cljs.core.first(arglist__11431);
    arglist__11431 = cljs.core.next(arglist__11431);
    var redirect_url = cljs.core.first(arglist__11431);
    var p__11427 = cljs.core.rest(arglist__11431);
    return centipair$admin$action$cancel_action_bar__delegate(site_settings_id, redirect_url, p__11427);
  };
  centipair$admin$action$cancel_action_bar.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$action$cancel_action_bar__delegate;
  return centipair$admin$action$cancel_action_bar;
}();
goog.provide("goog.history.EventType");
goog.history.EventType = {NAVIGATE:"navigate"};
goog.provide("goog.history.Event");
goog.require("goog.events.Event");
goog.require("goog.history.EventType");
goog.history.Event = function(token, isNavigation) {
  goog.events.Event.call(this, goog.history.EventType.NAVIGATE);
  this.token = token;
  this.isNavigation = isNavigation;
};
goog.inherits(goog.history.Event, goog.events.Event);
goog.provide("goog.labs.userAgent.device");
goog.require("goog.labs.userAgent.util");
goog.labs.userAgent.device.isMobile = function() {
  return!goog.labs.userAgent.device.isTablet() && (goog.labs.userAgent.util.matchUserAgent("iPod") || goog.labs.userAgent.util.matchUserAgent("iPhone") || goog.labs.userAgent.util.matchUserAgent("Android") || goog.labs.userAgent.util.matchUserAgent("IEMobile"));
};
goog.labs.userAgent.device.isTablet = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Mobile") || goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.device.isDesktop = function() {
  return!goog.labs.userAgent.device.isMobile() && !goog.labs.userAgent.device.isTablet();
};
goog.provide("goog.memoize");
goog.memoize = function(f, opt_serializer) {
  var serializer = opt_serializer || goog.memoize.simpleSerializer;
  return function() {
    if (goog.memoize.ENABLE_MEMOIZE) {
      var thisOrGlobal = this || goog.global;
      var cache = thisOrGlobal[goog.memoize.CACHE_PROPERTY_] || (thisOrGlobal[goog.memoize.CACHE_PROPERTY_] = {});
      var key = serializer(goog.getUid(f), arguments);
      return cache.hasOwnProperty(key) ? cache[key] : cache[key] = f.apply(this, arguments);
    } else {
      return f.apply(this, arguments);
    }
  };
};
goog.define("goog.memoize.ENABLE_MEMOIZE", true);
goog.memoize.clearCache = function(cacheOwner) {
  cacheOwner[goog.memoize.CACHE_PROPERTY_] = {};
};
goog.memoize.CACHE_PROPERTY_ = "closure_memoize_cache_";
goog.memoize.simpleSerializer = function(functionUid, args) {
  var context = [functionUid];
  for (var i = args.length - 1;i >= 0;--i) {
    context.push(typeof args[i], args[i]);
  }
  return context.join("\x0B");
};
goog.provide("goog.History");
goog.provide("goog.History.Event");
goog.provide("goog.History.EventType");
goog.require("goog.Timer");
goog.require("goog.dom");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.history.Event");
goog.require("goog.history.EventType");
goog.require("goog.labs.userAgent.device");
goog.require("goog.memoize");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.History = function(opt_invisible, opt_blankPageUrl, opt_input, opt_iframe) {
  goog.events.EventTarget.call(this);
  if (opt_invisible && !opt_blankPageUrl) {
    throw Error("Can't use invisible history without providing a blank page.");
  }
  var input;
  if (opt_input) {
    input = opt_input;
  } else {
    var inputId = "history_state" + goog.History.historyCount_;
    document.write(goog.string.subs(goog.History.INPUT_TEMPLATE_, inputId, inputId));
    input = goog.dom.getElement(inputId);
  }
  this.hiddenInput_ = (input);
  this.window_ = opt_input ? goog.dom.getWindow(goog.dom.getOwnerDocument(opt_input)) : window;
  this.iframeSrc_ = opt_blankPageUrl;
  if (goog.userAgent.IE && !opt_blankPageUrl) {
    this.iframeSrc_ = window.location.protocol == "https" ? "https:///" : 'javascript:""';
  }
  this.timer_ = new goog.Timer(goog.History.PollingType.NORMAL);
  this.registerDisposable(this.timer_);
  this.userVisible_ = !opt_invisible;
  this.eventHandler_ = new goog.events.EventHandler(this);
  if (opt_invisible || goog.History.LEGACY_IE) {
    var iframe;
    if (opt_iframe) {
      iframe = opt_iframe;
    } else {
      var iframeId = "history_iframe" + goog.History.historyCount_;
      var srcAttribute = this.iframeSrc_ ? 'src\x3d"' + goog.string.htmlEscape(this.iframeSrc_) + '"' : "";
      document.write(goog.string.subs(goog.History.IFRAME_TEMPLATE_, iframeId, srcAttribute));
      iframe = goog.dom.getElement(iframeId);
    }
    this.iframe_ = (iframe);
    this.unsetIframe_ = true;
  }
  if (goog.History.LEGACY_IE) {
    this.eventHandler_.listen(this.window_, goog.events.EventType.LOAD, this.onDocumentLoaded);
    this.documentLoaded = false;
    this.shouldEnable_ = false;
  }
  if (this.userVisible_) {
    this.setHash_(this.getToken(), true);
  } else {
    this.setIframeToken_(this.hiddenInput_.value);
  }
  goog.History.historyCount_++;
};
goog.inherits(goog.History, goog.events.EventTarget);
goog.History.prototype.enabled_ = false;
goog.History.prototype.longerPolling_ = false;
goog.History.prototype.lastToken_ = null;
goog.History.isOnHashChangeSupported = goog.memoize(function() {
  return goog.userAgent.IE ? document.documentMode >= 8 : "onhashchange" in goog.global;
});
goog.History.LEGACY_IE = goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8);
goog.History.HASH_ALWAYS_REQUIRED = goog.History.LEGACY_IE;
goog.History.prototype.lockedToken_ = null;
goog.History.prototype.disposeInternal = function() {
  goog.History.superClass_.disposeInternal.call(this);
  this.eventHandler_.dispose();
  this.setEnabled(false);
};
goog.History.prototype.setEnabled = function(enable) {
  if (enable == this.enabled_) {
    return;
  }
  if (goog.History.LEGACY_IE && !this.documentLoaded) {
    this.shouldEnable_ = enable;
    return;
  }
  if (enable) {
    if (goog.userAgent.OPERA) {
      this.eventHandler_.listen(this.window_.document, goog.History.INPUT_EVENTS_, this.operaDefibrillator_);
    } else {
      if (goog.userAgent.GECKO) {
        this.eventHandler_.listen(this.window_, "pageshow", this.onShow_);
      }
    }
    if (goog.History.isOnHashChangeSupported() && this.userVisible_) {
      this.eventHandler_.listen(this.window_, goog.events.EventType.HASHCHANGE, this.onHashChange_);
      this.enabled_ = true;
      this.dispatchEvent(new goog.history.Event(this.getToken(), false));
    } else {
      if (!(goog.userAgent.IE && !goog.labs.userAgent.device.isMobile()) || this.documentLoaded) {
        this.eventHandler_.listen(this.timer_, goog.Timer.TICK, goog.bind(this.check_, this, true));
        this.enabled_ = true;
        if (!goog.History.LEGACY_IE) {
          this.lastToken_ = this.getToken();
          this.dispatchEvent(new goog.history.Event(this.getToken(), false));
        }
        this.timer_.start();
      }
    }
  } else {
    this.enabled_ = false;
    this.eventHandler_.removeAll();
    this.timer_.stop();
  }
};
goog.History.prototype.onDocumentLoaded = function() {
  this.documentLoaded = true;
  if (this.hiddenInput_.value) {
    this.setIframeToken_(this.hiddenInput_.value, true);
  }
  this.setEnabled(this.shouldEnable_);
};
goog.History.prototype.onShow_ = function(e) {
  if (e.getBrowserEvent()["persisted"]) {
    this.setEnabled(false);
    this.setEnabled(true);
  }
};
goog.History.prototype.onHashChange_ = function(e) {
  var hash = this.getLocationFragment_(this.window_);
  if (hash != this.lastToken_) {
    this.update_(hash, true);
  }
};
goog.History.prototype.getToken = function() {
  if (this.lockedToken_ != null) {
    return this.lockedToken_;
  } else {
    if (this.userVisible_) {
      return this.getLocationFragment_(this.window_);
    } else {
      return this.getIframeToken_() || "";
    }
  }
};
goog.History.prototype.setToken = function(token, opt_title) {
  this.setHistoryState_(token, false, opt_title);
};
goog.History.prototype.replaceToken = function(token, opt_title) {
  this.setHistoryState_(token, true, opt_title);
};
goog.History.prototype.getLocationFragment_ = function(win) {
  var href = win.location.href;
  var index = href.indexOf("#");
  return index < 0 ? "" : href.substring(index + 1);
};
goog.History.prototype.setHistoryState_ = function(token, replace, opt_title) {
  if (this.getToken() != token) {
    if (this.userVisible_) {
      this.setHash_(token, replace);
      if (!goog.History.isOnHashChangeSupported()) {
        if (goog.userAgent.IE && !goog.labs.userAgent.device.isMobile()) {
          this.setIframeToken_(token, replace, opt_title);
        }
      }
      if (this.enabled_) {
        this.check_(false);
      }
    } else {
      this.setIframeToken_(token, replace);
      this.lockedToken_ = this.lastToken_ = this.hiddenInput_.value = token;
      this.dispatchEvent(new goog.history.Event(token, false));
    }
  }
};
goog.History.prototype.setHash_ = function(token, opt_replace) {
  var loc = this.window_.location;
  var url = loc.href.split("#")[0];
  var hasHash = goog.string.contains(loc.href, "#");
  if (goog.History.HASH_ALWAYS_REQUIRED || hasHash || token) {
    url += "#" + token;
  }
  if (url != loc.href) {
    if (opt_replace) {
      loc.replace(url);
    } else {
      loc.href = url;
    }
  }
};
goog.History.prototype.setIframeToken_ = function(token, opt_replace, opt_title) {
  if (this.unsetIframe_ || token != this.getIframeToken_()) {
    this.unsetIframe_ = false;
    token = goog.string.urlEncode(token);
    if (goog.userAgent.IE) {
      var doc = goog.dom.getFrameContentDocument(this.iframe_);
      doc.open("text/html", opt_replace ? "replace" : undefined);
      doc.write(goog.string.subs(goog.History.IFRAME_SOURCE_TEMPLATE_, goog.string.htmlEscape((opt_title || this.window_.document.title)), token));
      doc.close();
    } else {
      var url = this.iframeSrc_ + "#" + token;
      var contentWindow = this.iframe_.contentWindow;
      if (contentWindow) {
        if (opt_replace) {
          contentWindow.location.replace(url);
        } else {
          contentWindow.location.href = url;
        }
      }
    }
  }
};
goog.History.prototype.getIframeToken_ = function() {
  if (goog.userAgent.IE) {
    var doc = goog.dom.getFrameContentDocument(this.iframe_);
    return doc.body ? goog.string.urlDecode(doc.body.innerHTML) : null;
  } else {
    var contentWindow = this.iframe_.contentWindow;
    if (contentWindow) {
      var hash;
      try {
        hash = goog.string.urlDecode(this.getLocationFragment_(contentWindow));
      } catch (e) {
        if (!this.longerPolling_) {
          this.setLongerPolling_(true);
        }
        return null;
      }
      if (this.longerPolling_) {
        this.setLongerPolling_(false);
      }
      return hash || null;
    } else {
      return null;
    }
  }
};
goog.History.prototype.check_ = function(isNavigation) {
  if (this.userVisible_) {
    var hash = this.getLocationFragment_(this.window_);
    if (hash != this.lastToken_) {
      this.update_(hash, isNavigation);
    }
  }
  if (!this.userVisible_ || goog.History.LEGACY_IE) {
    var token = this.getIframeToken_() || "";
    if (this.lockedToken_ == null || token == this.lockedToken_) {
      this.lockedToken_ = null;
      if (token != this.lastToken_) {
        this.update_(token, isNavigation);
      }
    }
  }
};
goog.History.prototype.update_ = function(token, isNavigation) {
  this.lastToken_ = this.hiddenInput_.value = token;
  if (this.userVisible_) {
    if (goog.History.LEGACY_IE) {
      this.setIframeToken_(token);
    }
    this.setHash_(token);
  } else {
    this.setIframeToken_(token);
  }
  this.dispatchEvent(new goog.history.Event(this.getToken(), isNavigation));
};
goog.History.prototype.setLongerPolling_ = function(longerPolling) {
  if (this.longerPolling_ != longerPolling) {
    this.timer_.setInterval(longerPolling ? goog.History.PollingType.LONG : goog.History.PollingType.NORMAL);
  }
  this.longerPolling_ = longerPolling;
};
goog.History.prototype.operaDefibrillator_ = function() {
  this.timer_.stop();
  this.timer_.start();
};
goog.History.INPUT_EVENTS_ = [goog.events.EventType.MOUSEDOWN, goog.events.EventType.KEYDOWN, goog.events.EventType.MOUSEMOVE];
goog.History.IFRAME_SOURCE_TEMPLATE_ = "\x3ctitle\x3e%s\x3c/title\x3e\x3cbody\x3e%s\x3c/body\x3e";
goog.History.IFRAME_TEMPLATE_ = '\x3ciframe id\x3d"%s" style\x3d"display:none" %s\x3e\x3c/iframe\x3e';
goog.History.INPUT_TEMPLATE_ = '\x3cinput type\x3d"text" name\x3d"%s" id\x3d"%s" style\x3d"display:none"\x3e';
goog.History.historyCount_ = 0;
goog.History.PollingType = {NORMAL:150, LONG:1E4};
goog.History.EventType = goog.history.EventType;
goog.History.Event = goog.history.Event;
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function clojure$walk$walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      return outer.call(null, form);
    }
  }
};
clojure.walk.postwalk = function clojure$walk$postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure$walk$postwalk, f), f, form);
};
clojure.walk.prewalk = function clojure$walk$prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure$walk$prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function clojure$walk$keywordize_keys(m) {
  var f = function(p__12897) {
    var vec__12898 = p__12897;
    var k = cljs.core.nth.call(null, vec__12898, 0, null);
    var v = cljs.core.nth.call(null, vec__12898, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function clojure$walk$stringify_keys(m) {
  var f = function(p__12901) {
    var vec__12902 = p__12901;
    var k = cljs.core.nth.call(null, vec__12902, 0, null);
    var v = cljs.core.nth.call(null, vec__12902, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function clojure$walk$prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function clojure$walk$postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("secretary.core");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("clojure.string");
secretary.core.IRouteMatches = function() {
  var obj12813 = {};
  return obj12813;
}();
secretary.core.route_matches = function secretary$core$route_matches(this$, route) {
  if (function() {
    var and__4097__auto__ = this$;
    if (and__4097__auto__) {
      return this$.secretary$core$IRouteMatches$route_matches$arity$2;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteMatches$route_matches$arity$2(this$, route);
  } else {
    var x__4745__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4109__auto__ = secretary.core.route_matches[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = secretary.core.route_matches["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteMatches.route-matches", this$);
        }
      }
    }().call(null, this$, route);
  }
};
secretary.core.IRouteValue = function() {
  var obj12815 = {};
  return obj12815;
}();
secretary.core.route_value = function secretary$core$route_value(this$) {
  if (function() {
    var and__4097__auto__ = this$;
    if (and__4097__auto__) {
      return this$.secretary$core$IRouteValue$route_value$arity$1;
    } else {
      return and__4097__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteValue$route_value$arity$1(this$);
  } else {
    var x__4745__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4109__auto__ = secretary.core.route_value[goog.typeOf(x__4745__auto__)];
      if (or__4109__auto__) {
        return or__4109__auto__;
      } else {
        var or__4109__auto____$1 = secretary.core.route_value["_"];
        if (or__4109__auto____$1) {
          return or__4109__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteValue.route-value", this$);
        }
      }
    }().call(null, this$);
  }
};
secretary.core.IRenderRoute = function() {
  var obj12817 = {};
  return obj12817;
}();
secretary.core.render_route = function() {
  var secretary$core$render_route = null;
  var secretary$core$render_route__1 = function(this$) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$1;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$1(this$);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = secretary.core.render_route[goog.typeOf(x__4745__auto__)];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = secretary.core.render_route["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var secretary$core$render_route__2 = function(this$, params) {
    if (function() {
      var and__4097__auto__ = this$;
      if (and__4097__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$2;
      } else {
        return and__4097__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$2(this$, params);
    } else {
      var x__4745__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4109__auto__ = secretary.core.render_route[goog.typeOf(x__4745__auto__)];
        if (or__4109__auto__) {
          return or__4109__auto__;
        } else {
          var or__4109__auto____$1 = secretary.core.render_route["_"];
          if (or__4109__auto____$1) {
            return or__4109__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$, params);
    }
  };
  secretary$core$render_route = function(this$, params) {
    switch(arguments.length) {
      case 1:
        return secretary$core$render_route__1.call(this, this$);
      case 2:
        return secretary$core$render_route__2.call(this, this$, params);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  secretary$core$render_route.cljs$core$IFn$_invoke$arity$1 = secretary$core$render_route__1;
  secretary$core$render_route.cljs$core$IFn$_invoke$arity$2 = secretary$core$render_route__2;
  return secretary$core$render_route;
}();
secretary.core._STAR_config_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), ""], null));
secretary.core.get_config = function secretary$core$get_config(path) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, secretary.core._STAR_config_STAR_), path__$1);
};
secretary.core.set_config_BANG_ = function secretary$core$set_config_BANG_(path, val) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_config_STAR_, cljs.core.assoc_in, path__$1, val);
};
secretary.core.encode = encodeURIComponent;
secretary.core.encode_pair = function() {
  var method_table__5004__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__5005__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__5006__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__5007__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__5008__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "secretary.core", "encode-pair"), function(method_table__5004__auto__, prefer_table__5005__auto__, method_cache__5006__auto__, cached_hierarchy__5007__auto__, hierarchy__5008__auto__) {
    return function(p__12818) {
      var vec__12819 = p__12818;
      var k = cljs.core.nth.call(null, vec__12819, 0, null);
      var v = cljs.core.nth.call(null, vec__12819, 1, null);
      if (cljs.core.sequential_QMARK_.call(null, v) || cljs.core.set_QMARK_.call(null, v)) {
        return new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", -347187207);
      } else {
        if (function() {
          var or__4109__auto__ = cljs.core.map_QMARK_.call(null, v);
          if (or__4109__auto__) {
            return or__4109__auto__;
          } else {
            var G__12821 = v;
            if (G__12821) {
              var bit__4783__auto__ = G__12821.cljs$lang$protocol_mask$partition0$ & 67108864;
              if (bit__4783__auto__ || G__12821.cljs$core$IRecord$) {
                return true;
              } else {
                if (!G__12821.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__12821);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__12821);
            }
          }
        }()) {
          return new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", -31086646);
        } else {
          return null;
        }
      }
    };
  }(method_table__5004__auto__, prefer_table__5005__auto__, method_cache__5006__auto__, cached_hierarchy__5007__auto__, hierarchy__5008__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5008__auto__, method_table__5004__auto__, prefer_table__5005__auto__, method_cache__5006__auto__, cached_hierarchy__5007__auto__);
}();
secretary.core.key_index = function() {
  var secretary$core$key_index = null;
  var secretary$core$key_index__1 = function(k) {
    return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("[]")].join("");
  };
  var secretary$core$key_index__2 = function(k, index) {
    return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("["), cljs.core.str(index), cljs.core.str("]")].join("");
  };
  secretary$core$key_index = function(k, index) {
    switch(arguments.length) {
      case 1:
        return secretary$core$key_index__1.call(this, k);
      case 2:
        return secretary$core$key_index__2.call(this, k, index);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  secretary$core$key_index.cljs$core$IFn$_invoke$arity$1 = secretary$core$key_index__1;
  secretary$core$key_index.cljs$core$IFn$_invoke$arity$2 = secretary$core$key_index__2;
  return secretary$core$key_index;
}();
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", -347187207), function(p__12822) {
  var vec__12823 = p__12822;
  var k = cljs.core.nth.call(null, vec__12823, 0, null);
  var v = cljs.core.nth.call(null, vec__12823, 1, null);
  var encoded = cljs.core.map_indexed.call(null, function(vec__12823, k, v) {
    return function(i, x) {
      var pair = cljs.core.coll_QMARK_.call(null, x) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, i), x], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k), x], null);
      return secretary.core.encode_pair.call(null, pair);
    };
  }(vec__12823, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", -31086646), function(p__12824) {
  var vec__12825 = p__12824;
  var k = cljs.core.nth.call(null, vec__12825, 0, null);
  var v = cljs.core.nth.call(null, vec__12825, 1, null);
  var encoded = cljs.core.map.call(null, function(vec__12825, k, v) {
    return function(p__12826) {
      var vec__12827 = p__12826;
      var ik = cljs.core.nth.call(null, vec__12827, 0, null);
      var iv = cljs.core.nth.call(null, vec__12827, 1, null);
      return secretary.core.encode_pair.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, cljs.core.name.call(null, ik)), iv], null));
    };
  }(vec__12825, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword(null, "default", "default", -1987822328), function(p__12828) {
  var vec__12829 = p__12828;
  var k = cljs.core.nth.call(null, vec__12829, 0, null);
  var v = cljs.core.nth.call(null, vec__12829, 1, null);
  return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("\x3d"), cljs.core.str(secretary.core.encode.call(null, [cljs.core.str(v)].join("")))].join("");
});
secretary.core.encode_query_params = function secretary$core$encode_query_params(query_params) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, secretary.core.encode_pair, query_params));
};
secretary.core.encode_uri = function secretary$core$encode_uri(uri) {
  return clojure.string.join.call(null, "/", cljs.core.map.call(null, secretary.core.encode, clojure.string.split.call(null, uri, /\//)));
};
secretary.core.decode = decodeURIComponent;
secretary.core.parse_path = function secretary$core$parse_path(path) {
  var index_re = /\[([^\]]*)\]*/;
  var parts = cljs.core.re_seq.call(null, index_re, path);
  return cljs.core.map.call(null, function(index_re, parts) {
    return function(p__12832) {
      var vec__12833 = p__12832;
      var _ = cljs.core.nth.call(null, vec__12833, 0, null);
      var part = cljs.core.nth.call(null, vec__12833, 1, null);
      if (cljs.core.empty_QMARK_.call(null, part)) {
        return 0;
      } else {
        if (cljs.core.truth_(cljs.core.re_matches.call(null, /\d+/, part))) {
          return parseInt(part);
        } else {
          return part;
        }
      }
    };
  }(index_re, parts), parts);
};
secretary.core.key_parse = function secretary$core$key_parse(k) {
  var re = /([^\[\]]+)((?:\[[^\]]*\])*)?/;
  var vec__12835 = cljs.core.re_matches.call(null, re, k);
  var _ = cljs.core.nth.call(null, vec__12835, 0, null);
  var key = cljs.core.nth.call(null, vec__12835, 1, null);
  var path = cljs.core.nth.call(null, vec__12835, 2, null);
  var parsed_path = cljs.core.truth_(path) ? secretary.core.parse_path.call(null, path) : null;
  return cljs.core.cons.call(null, key, parsed_path);
};
secretary.core.assoc_in_query_params = function secretary$core$assoc_in_query_params(m, path, v) {
  var heads = function(xs) {
    return cljs.core.map_indexed.call(null, function(i, _) {
      return cljs.core.take.call(null, i + 1, xs);
    }, xs);
  };
  var hs = heads.call(null, path);
  var m__$1 = cljs.core.reduce.call(null, function(heads, hs) {
    return function(m__$1, h) {
      if (typeof cljs.core.last.call(null, h) === "number" && !cljs.core.vector_QMARK_.call(null, cljs.core.get_in.call(null, m__$1, cljs.core.butlast.call(null, h)))) {
        return cljs.core.assoc_in.call(null, m__$1, cljs.core.butlast.call(null, h), cljs.core.PersistentVector.EMPTY);
      } else {
        return m__$1;
      }
    };
  }(heads, hs), m, hs);
  if (cljs.core.last.call(null, path) === 0) {
    return cljs.core.update_in.call(null, m__$1, cljs.core.butlast.call(null, path), cljs.core.conj, v);
  } else {
    return cljs.core.assoc_in.call(null, m__$1, path, v);
  }
};
secretary.core.decode_query_params = function secretary$core$decode_query_params(query_string) {
  var parts = clojure.string.split.call(null, query_string, /&/);
  var params = cljs.core.reduce.call(null, function(parts) {
    return function(m, part) {
      var vec__12837 = clojure.string.split.call(null, part, /=/, 2);
      var k = cljs.core.nth.call(null, vec__12837, 0, null);
      var v = cljs.core.nth.call(null, vec__12837, 1, null);
      return secretary.core.assoc_in_query_params.call(null, m, secretary.core.key_parse.call(null, k), secretary.core.decode.call(null, v));
    };
  }(parts), cljs.core.PersistentArrayMap.EMPTY, parts);
  var params__$1 = clojure.walk.keywordize_keys.call(null, params);
  return params__$1;
};
secretary.core.re_matches_STAR_ = function secretary$core$re_matches_STAR_(re, s) {
  var ms = cljs.core.re_matches.call(null, re, s);
  if (cljs.core.truth_(ms)) {
    if (cljs.core.sequential_QMARK_.call(null, ms)) {
      return ms;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ms, ms], null);
    }
  } else {
    return null;
  }
};
secretary.core.re_escape_chars = cljs.core.set.call(null, "\\.*+|?()[]{}$^");
secretary.core.re_escape = function secretary$core$re_escape(s) {
  return cljs.core.reduce.call(null, function(s__$1, c) {
    if (cljs.core.truth_(secretary.core.re_escape_chars.call(null, c))) {
      return[cljs.core.str(s__$1), cljs.core.str("\\"), cljs.core.str(c)].join("");
    } else {
      return[cljs.core.str(s__$1), cljs.core.str(c)].join("");
    }
  }, "", s);
};
secretary.core.lex_STAR_ = function secretary$core$lex_STAR_(s, clauses) {
  return cljs.core.some.call(null, function(p__12841) {
    var vec__12842 = p__12841;
    var re = cljs.core.nth.call(null, vec__12842, 0, null);
    var action = cljs.core.nth.call(null, vec__12842, 1, null);
    var temp__4126__auto__ = cljs.core.re_find.call(null, re, s);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__12843 = temp__4126__auto__;
      var m = cljs.core.nth.call(null, vec__12843, 0, null);
      var c = cljs.core.nth.call(null, vec__12843, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, cljs.core.count.call(null, m)), action.call(null, c)], null);
    } else {
      return null;
    }
  }, clauses);
};
secretary.core.lex_route = function secretary$core$lex_route(s, clauses) {
  var s__$1 = s;
  var pattern = "";
  var params = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      var vec__12846 = secretary.core.lex_STAR_.call(null, s__$1, clauses);
      var s__$2 = cljs.core.nth.call(null, vec__12846, 0, null);
      var vec__12847 = cljs.core.nth.call(null, vec__12846, 1, null);
      var r = cljs.core.nth.call(null, vec__12847, 0, null);
      var p = cljs.core.nth.call(null, vec__12847, 1, null);
      var G__12848 = s__$2;
      var G__12849 = [cljs.core.str(pattern), cljs.core.str(r)].join("");
      var G__12850 = cljs.core.conj.call(null, params, p);
      s__$1 = G__12848;
      pattern = G__12849;
      params = G__12850;
      continue;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.re_pattern.call(null, [cljs.core.str("^"), cljs.core.str(pattern), cljs.core.str("$")].join("")), cljs.core.remove.call(null, cljs.core.nil_QMARK_, params)], null);
    }
    break;
  }
};
secretary.core.compile_route = function secretary$core$compile_route(orig_route) {
  var clauses = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\*([^\s.:*\/]*)/, function(v) {
    var r = "(.*?)";
    var p = cljs.core.seq.call(null, v) ? cljs.core.keyword.call(null, v) : new cljs.core.Keyword(null, "*", "*", -1294732318);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\:([^\s.:*\/]+)/, function(v) {
    var r = "([^,;?/]+)";
    var p = cljs.core.keyword.call(null, v);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^([^:*]+)/, function(v) {
    var r = secretary.core.re_escape.call(null, v);
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null);
  }], null)], null);
  var vec__12856 = secretary.core.lex_route.call(null, orig_route, clauses);
  var re = cljs.core.nth.call(null, vec__12856, 0, null);
  var params = cljs.core.nth.call(null, vec__12856, 1, null);
  if (typeof secretary.core.t12857 !== "undefined") {
  } else {
    secretary.core.t12857 = function(params, re, vec__12856, clauses, orig_route, compile_route, meta12858) {
      this.params = params;
      this.re = re;
      this.vec__12856 = vec__12856;
      this.clauses = clauses;
      this.orig_route = orig_route;
      this.compile_route = compile_route;
      this.meta12858 = meta12858;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    secretary.core.t12857.prototype.secretary$core$IRouteMatches$ = true;
    secretary.core.t12857.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(clauses, vec__12856, re, params) {
      return function(_, route) {
        var self__ = this;
        var ___$1 = this;
        var temp__4126__auto__ = secretary.core.re_matches_STAR_.call(null, self__.re, route);
        if (cljs.core.truth_(temp__4126__auto__)) {
          var vec__12860 = temp__4126__auto__;
          var ___$2 = cljs.core.nth.call(null, vec__12860, 0, null);
          var ms = cljs.core.nthnext.call(null, vec__12860, 1);
          return cljs.core.merge_with.call(null, cljs.core.vector, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, self__.params, cljs.core.map.call(null, secretary.core.decode, ms))));
        } else {
          return null;
        }
      };
    }(clauses, vec__12856, re, params);
    secretary.core.t12857.prototype.secretary$core$IRouteValue$ = true;
    secretary.core.t12857.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(clauses, vec__12856, re, params) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.orig_route;
      };
    }(clauses, vec__12856, re, params);
    secretary.core.t12857.prototype.cljs$core$IMeta$_meta$arity$1 = function(clauses, vec__12856, re, params) {
      return function(_12859) {
        var self__ = this;
        var _12859__$1 = this;
        return self__.meta12858;
      };
    }(clauses, vec__12856, re, params);
    secretary.core.t12857.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(clauses, vec__12856, re, params) {
      return function(_12859, meta12858__$1) {
        var self__ = this;
        var _12859__$1 = this;
        return new secretary.core.t12857(self__.params, self__.re, self__.vec__12856, self__.clauses, self__.orig_route, self__.compile_route, meta12858__$1);
      };
    }(clauses, vec__12856, re, params);
    secretary.core.t12857.cljs$lang$type = true;
    secretary.core.t12857.cljs$lang$ctorStr = "secretary.core/t12857";
    secretary.core.t12857.cljs$lang$ctorPrWriter = function(clauses, vec__12856, re, params) {
      return function(this__4688__auto__, writer__4689__auto__, opt__4690__auto__) {
        return cljs.core._write.call(null, writer__4689__auto__, "secretary.core/t12857");
      };
    }(clauses, vec__12856, re, params);
    secretary.core.__GT_t12857 = function(clauses, vec__12856, re, params) {
      return function secretary$core$compile_route_$___GT_t12857(params__$1, re__$1, vec__12856__$1, clauses__$1, orig_route__$1, compile_route__$1, meta12858) {
        return new secretary.core.t12857(params__$1, re__$1, vec__12856__$1, clauses__$1, orig_route__$1, compile_route__$1, meta12858);
      };
    }(clauses, vec__12856, re, params);
  }
  return new secretary.core.t12857(params, re, vec__12856, clauses, orig_route, secretary$core$compile_route, cljs.core.PersistentArrayMap.EMPTY);
};
secretary.core.render_route_STAR_ = function() {
  var secretary$core$render_route_STAR___delegate = function(obj, args) {
    if (function() {
      var G__12862 = obj;
      if (G__12862) {
        var bit__4783__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__4109__auto__ = bit__4783__auto__;
          if (cljs.core.truth_(or__4109__auto__)) {
            return or__4109__auto__;
          } else {
            return G__12862.secretary$core$IRenderRoute$;
          }
        }())) {
          return true;
        } else {
          if (!G__12862.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__12862);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__12862);
      }
    }()) {
      return cljs.core.apply.call(null, secretary.core.render_route, obj, args);
    } else {
      return null;
    }
  };
  var secretary$core$render_route_STAR_ = function(obj, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__12863__i = 0, G__12863__a = new Array(arguments.length - 1);
      while (G__12863__i < G__12863__a.length) {
        G__12863__a[G__12863__i] = arguments[G__12863__i + 1];
        ++G__12863__i;
      }
      args = new cljs.core.IndexedSeq(G__12863__a, 0);
    }
    return secretary$core$render_route_STAR___delegate.call(this, obj, args);
  };
  secretary$core$render_route_STAR_.cljs$lang$maxFixedArity = 1;
  secretary$core$render_route_STAR_.cljs$lang$applyTo = function(arglist__12864) {
    var obj = cljs.core.first(arglist__12864);
    var args = cljs.core.rest(arglist__12864);
    return secretary$core$render_route_STAR___delegate(obj, args);
  };
  secretary$core$render_route_STAR_.cljs$core$IFn$_invoke$arity$variadic = secretary$core$render_route_STAR___delegate;
  return secretary$core$render_route_STAR_;
}();
secretary.core._STAR_routes_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
secretary.core.add_route_BANG_ = function secretary$core$add_route_BANG_(obj, action) {
  var obj__$1 = typeof obj === "string" ? secretary.core.compile_route.call(null, obj) : obj;
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [obj__$1, action], null));
};
secretary.core.remove_route_BANG_ = function secretary$core$remove_route_BANG_(obj) {
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, function(rs) {
    return cljs.core.filterv.call(null, function(p__12867) {
      var vec__12868 = p__12867;
      var x = cljs.core.nth.call(null, vec__12868, 0, null);
      var _ = cljs.core.nth.call(null, vec__12868, 1, null);
      return cljs.core.not_EQ_.call(null, x, obj);
    }, rs);
  });
};
secretary.core.reset_routes_BANG_ = function secretary$core$reset_routes_BANG_() {
  return cljs.core.reset_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.PersistentVector.EMPTY);
};
secretary.core.locate_route = function secretary$core$locate_route(route) {
  return cljs.core.some.call(null, function(p__12871) {
    var vec__12872 = p__12871;
    var compiled_route = cljs.core.nth.call(null, vec__12872, 0, null);
    var action = cljs.core.nth.call(null, vec__12872, 1, null);
    var temp__4126__auto__ = secretary.core.route_matches.call(null, compiled_route, route);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var params = temp__4126__auto__;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "action", "action", -811238024), action, new cljs.core.Keyword(null, "params", "params", 710516235), params, new cljs.core.Keyword(null, "route", "route", 329891309), compiled_route], null);
    } else {
      return null;
    }
  }, cljs.core.deref.call(null, secretary.core._STAR_routes_STAR_));
};
secretary.core.locate_route_value = function secretary$core$locate_route_value(uri) {
  return secretary.core.route_value.call(null, (new cljs.core.Keyword(null, "route", "route", 329891309)).cljs$core$IFn$_invoke$arity$1(secretary.core.locate_route.call(null, uri)));
};
secretary.core.prefix = function secretary$core$prefix() {
  return[cljs.core.str(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465)], null)))].join("");
};
secretary.core.uri_without_prefix = function secretary$core$uri_without_prefix(uri) {
  return clojure.string.replace.call(null, uri, cljs.core.re_pattern.call(null, [cljs.core.str("^"), cljs.core.str(secretary.core.prefix.call(null))].join("")), "");
};
secretary.core.uri_with_leading_slash = function secretary$core$uri_with_leading_slash(uri) {
  if (cljs.core._EQ_.call(null, "/", cljs.core.first.call(null, uri))) {
    return uri;
  } else {
    return[cljs.core.str("/"), cljs.core.str(uri)].join("");
  }
};
secretary.core.dispatch_BANG_ = function secretary$core$dispatch_BANG_(uri) {
  var vec__12875 = clojure.string.split.call(null, secretary.core.uri_without_prefix.call(null, uri), /\?/);
  var uri_path = cljs.core.nth.call(null, vec__12875, 0, null);
  var query_string = cljs.core.nth.call(null, vec__12875, 1, null);
  var uri_path__$1 = secretary.core.uri_with_leading_slash.call(null, uri_path);
  var query_params = cljs.core.truth_(query_string) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), secretary.core.decode_query_params.call(null, query_string)], null) : null;
  var map__12876 = secretary.core.locate_route.call(null, uri_path__$1);
  var map__12876__$1 = cljs.core.seq_QMARK_.call(null, map__12876) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12876) : map__12876;
  var params = cljs.core.get.call(null, map__12876__$1, new cljs.core.Keyword(null, "params", "params", 710516235));
  var action = cljs.core.get.call(null, map__12876__$1, new cljs.core.Keyword(null, "action", "action", -811238024));
  var action__$1 = function() {
    var or__4109__auto__ = action;
    if (cljs.core.truth_(or__4109__auto__)) {
      return or__4109__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var params__$1 = cljs.core.merge.call(null, params, query_params);
  return action__$1.call(null, params__$1);
};
secretary.core.invalid_params = function secretary$core$invalid_params(params, validations) {
  return cljs.core.reduce.call(null, function(m, p__12879) {
    var vec__12880 = p__12879;
    var key = cljs.core.nth.call(null, vec__12880, 0, null);
    var validation = cljs.core.nth.call(null, vec__12880, 1, null);
    var value = cljs.core.get.call(null, params, key);
    if (cljs.core.truth_(cljs.core.re_matches.call(null, validation, value))) {
      return m;
    } else {
      return cljs.core.assoc.call(null, m, key, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [value, validation], null));
    }
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, validations));
};
secretary.core.params_valid_QMARK_ = function secretary$core$params_valid_QMARK_(params, validations) {
  return cljs.core.empty_QMARK_.call(null, secretary.core.invalid_params.call(null, params, validations));
};
cljs.core.PersistentVector.prototype.secretary$core$IRouteMatches$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(p__12881, route) {
  var vec__12882 = p__12881;
  var route_string = cljs.core.nth.call(null, vec__12882, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__12882, 1);
  var vec__12883 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__12883, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__12883, 1);
  var params = secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, route_string__$1), route);
  if (secretary.core.params_valid_QMARK_.call(null, params, validations__$1)) {
    return params;
  } else {
    return null;
  }
};
RegExp.prototype.secretary$core$IRouteMatches$ = true;
RegExp.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(this$, route) {
  var this$__$1 = this;
  var temp__4126__auto__ = secretary.core.re_matches_STAR_.call(null, this$__$1, route);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var vec__12884 = temp__4126__auto__;
    var _ = cljs.core.nth.call(null, vec__12884, 0, null);
    var ms = cljs.core.nthnext.call(null, vec__12884, 1);
    return cljs.core.vec.call(null, ms);
  } else {
    return null;
  }
};
secretary.core.IRouteMatches["string"] = true;
secretary.core.route_matches["string"] = function(this$, route) {
  return secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, this$), route);
};
cljs.core.PersistentVector.prototype.secretary$core$IRouteValue$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(p__12885) {
  var vec__12886 = p__12885;
  var route_string = cljs.core.nth.call(null, vec__12886, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__12886, 1);
  var vec__12887 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__12887, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__12887, 1);
  return cljs.core.vec.call(null, cljs.core.cons.call(null, secretary.core.route_value.call(null, route_string__$1), validations__$1));
};
RegExp.prototype.secretary$core$IRouteValue$ = true;
RegExp.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1;
};
secretary.core.IRouteValue["string"] = true;
secretary.core.route_value["string"] = function(this$) {
  return secretary.core.route_value.call(null, secretary.core.compile_route.call(null, this$));
};
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$render_route$arity$1 = function(this$) {
  var this$__$1 = this;
  return secretary.core.render_route.call(null, this$__$1, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$render_route$arity$2 = function(p__12888, params) {
  var vec__12889 = p__12888;
  var route_string = cljs.core.nth.call(null, vec__12889, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__12889, 1);
  var vec__12890 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__12890, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__12890, 1);
  var invalid = secretary.core.invalid_params.call(null, params, validations__$1);
  if (cljs.core.empty_QMARK_.call(null, invalid)) {
    return secretary.core.render_route.call(null, route_string__$1, params);
  } else {
    throw cljs.core.ex_info.call(null, "Could not build route: invalid params", invalid);
  }
};
secretary.core.IRenderRoute["string"] = true;
secretary.core.render_route["string"] = function() {
  var G__12892 = null;
  var G__12892__1 = function(this$) {
    return secretary.core.render_route.call(null, this$, cljs.core.PersistentArrayMap.EMPTY);
  };
  var G__12892__2 = function(this$, params) {
    var map__12891 = params;
    var map__12891__$1 = cljs.core.seq_QMARK_.call(null, map__12891) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12891) : map__12891;
    var m = map__12891__$1;
    var query_params = cljs.core.get.call(null, map__12891__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
    var a = cljs.core.atom.call(null, m);
    var path = this$.replace(new RegExp(":[^\\s.:*/]+|\\*[^\\s.:*/]*", "g"), function(map__12891, map__12891__$1, m, query_params, a) {
      return function($1) {
        var lookup = cljs.core.keyword.call(null, cljs.core._EQ_.call(null, $1, "*") ? $1 : cljs.core.subs.call(null, $1, 1));
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, a), lookup);
        var replacement = cljs.core.sequential_QMARK_.call(null, v) ? function() {
          cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, lookup, cljs.core.next.call(null, v));
          return secretary.core.encode_uri.call(null, cljs.core.first.call(null, v));
        }() : cljs.core.truth_(v) ? secretary.core.encode_uri.call(null, v) : $1;
        return replacement;
      };
    }(map__12891, map__12891__$1, m, query_params, a));
    var path__$1 = [cljs.core.str(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465)], null))), cljs.core.str(path)].join("");
    var temp__4124__auto__ = function() {
      var and__4097__auto__ = query_params;
      if (cljs.core.truth_(and__4097__auto__)) {
        return secretary.core.encode_query_params.call(null, query_params);
      } else {
        return and__4097__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4124__auto__)) {
      var query_string = temp__4124__auto__;
      return[cljs.core.str(path__$1), cljs.core.str("?"), cljs.core.str(query_string)].join("");
    } else {
      return path__$1;
    }
  };
  G__12892 = function(this$, params) {
    switch(arguments.length) {
      case 1:
        return G__12892__1.call(this, this$);
      case 2:
        return G__12892__2.call(this, this$, params);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12892.cljs$core$IFn$_invoke$arity$1 = G__12892__1;
  G__12892.cljs$core$IFn$_invoke$arity$2 = G__12892__2;
  return G__12892;
}();
goog.provide("centipair.store.dashboard");
goog.require("cljs.core");
goog.require("centipair.admin.channels");
goog.require("cljs.core.async");
goog.require("centipair.core.ui");
centipair.store.dashboard.store_stats = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "store-stats", new cljs.core.Keyword(null, "label", "label", 1718410804), "Store stats"], null));
centipair.store.dashboard.create_dashboard = function centipair$store$dashboard$create_dashboard() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.store.dashboard.store_stats))], null), (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  centipair.store.dashboard.store_stats))], null);
};
centipair.store.dashboard.render_dashboard = function centipair$store$dashboard$render_dashboard(site_id) {
  centipair.admin.channels.set_active_channel.call(null, centipair.admin.channels.dashboard_channel);
  return centipair.core.ui.render.call(null, centipair.store.dashboard.create_dashboard, "content");
};
centipair.store.dashboard.fetch_dashboard = function centipair$store$dashboard$fetch_dashboard(site_id) {
  return console.log("Dashboard fetched");
};
centipair.store.dashboard.init_dashboard_channel = function centipair$store$dashboard$init_dashboard_channel() {
  var c__6881__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto__) {
    return function() {
      var f__6882__auto__ = function() {
        var switch__6825__auto__ = function(c__6881__auto__) {
          return function(state_11261) {
            var state_val_11262 = state_11261[1];
            if (state_val_11262 === 7) {
              var inst_11252 = state_11261[2];
              var inst_11253 = centipair.store.dashboard.fetch_dashboard.call(null, inst_11252);
              var state_11261__$1 = function() {
                var statearr_11263 = state_11261;
                statearr_11263[7] = inst_11253;
                return statearr_11263;
              }();
              var statearr_11264_11277 = state_11261__$1;
              statearr_11264_11277[2] = null;
              statearr_11264_11277[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11262 === 6) {
                var inst_11257 = state_11261[2];
                var state_11261__$1 = state_11261;
                var statearr_11265_11278 = state_11261__$1;
                statearr_11265_11278[2] = inst_11257;
                statearr_11265_11278[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11262 === 5) {
                  var state_11261__$1 = state_11261;
                  var statearr_11266_11279 = state_11261__$1;
                  statearr_11266_11279[2] = null;
                  statearr_11266_11279[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11262 === 4) {
                    var state_11261__$1 = state_11261;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11261__$1, 7, centipair.admin.channels.dashboard_channel);
                  } else {
                    if (state_val_11262 === 3) {
                      var inst_11259 = state_11261[2];
                      var state_11261__$1 = state_11261;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11261__$1, inst_11259);
                    } else {
                      if (state_val_11262 === 2) {
                        var state_11261__$1 = state_11261;
                        var statearr_11267_11280 = state_11261__$1;
                        statearr_11267_11280[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11262 === 1) {
                          var state_11261__$1 = state_11261;
                          var statearr_11269_11281 = state_11261__$1;
                          statearr_11269_11281[2] = null;
                          statearr_11269_11281[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6881__auto__);
        return function(switch__6825__auto__, c__6881__auto__) {
          return function() {
            var centipair$store$dashboard$init_dashboard_channel_$_state_machine__6826__auto__ = null;
            var centipair$store$dashboard$init_dashboard_channel_$_state_machine__6826__auto____0 = function() {
              var statearr_11273 = [null, null, null, null, null, null, null, null];
              statearr_11273[0] = centipair$store$dashboard$init_dashboard_channel_$_state_machine__6826__auto__;
              statearr_11273[1] = 1;
              return statearr_11273;
            };
            var centipair$store$dashboard$init_dashboard_channel_$_state_machine__6826__auto____1 = function(state_11261) {
              while (true) {
                var ret_value__6827__auto__ = function() {
                  try {
                    while (true) {
                      var result__6828__auto__ = switch__6825__auto__.call(null, state_11261);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6828__auto__;
                      }
                      break;
                    }
                  } catch (e11274) {
                    if (e11274 instanceof Object) {
                      var ex__6829__auto__ = e11274;
                      var statearr_11275_11282 = state_11261;
                      statearr_11275_11282[5] = ex__6829__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11261);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11274;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11283 = state_11261;
                  state_11261 = G__11283;
                  continue;
                } else {
                  return ret_value__6827__auto__;
                }
                break;
              }
            };
            centipair$store$dashboard$init_dashboard_channel_$_state_machine__6826__auto__ = function(state_11261) {
              switch(arguments.length) {
                case 0:
                  return centipair$store$dashboard$init_dashboard_channel_$_state_machine__6826__auto____0.call(this);
                case 1:
                  return centipair$store$dashboard$init_dashboard_channel_$_state_machine__6826__auto____1.call(this, state_11261);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            centipair$store$dashboard$init_dashboard_channel_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = centipair$store$dashboard$init_dashboard_channel_$_state_machine__6826__auto____0;
            centipair$store$dashboard$init_dashboard_channel_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = centipair$store$dashboard$init_dashboard_channel_$_state_machine__6826__auto____1;
            return centipair$store$dashboard$init_dashboard_channel_$_state_machine__6826__auto__;
          }();
        }(switch__6825__auto__, c__6881__auto__);
      }();
      var state__6883__auto__ = function() {
        var statearr_11276 = f__6882__auto__.call(null);
        statearr_11276[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto__;
        return statearr_11276;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
    };
  }(c__6881__auto__));
  return c__6881__auto__;
};
goog.provide("centipair.core.components.tabs");
goog.require("cljs.core");
centipair.core.components.tabs.nav_tab = function centipair$core$components$tabs$nav_tab(tab) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "role", "role", -736691072), "presentation", new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core.truth_((new cljs.core.Keyword(null, "active", "active", 1895962068)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, tab))) ? "active" : "", new cljs.core.Keyword(null, 
  "key", "key", -1516042587), [cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, tab))), cljs.core.str("-list")].join("")], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "href", "href", -793805698), [cljs.core.str("#"), cljs.core.str((new cljs.core.Keyword(null, 
  "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, tab)))].join(""), new cljs.core.Keyword(null, "aria-controls", "aria-controls", -1872379154), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, tab)), new cljs.core.Keyword(null, "role", "role", -736691072), "tab", new cljs.core.Keyword(null, "data-toggle", "data-toggle", 436966687), "tab", new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str((new cljs.core.Keyword(null, 
  "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, tab))), cljs.core.str("-link")].join("")], null), (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, tab))], null)], null);
};
centipair.core.components.tabs.tab_panel = function centipair$core$components$tabs$tab_panel(tab) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "role", "role", -736691072), "tabpanel", new cljs.core.Keyword(null, "class", "class", -2030961996), [cljs.core.str("tab-pane"), cljs.core.str(cljs.core.truth_((new cljs.core.Keyword(null, "active", "active", 1895962068)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, tab))) ? 
  " active" : "")].join(""), new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, tab)), new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, tab))), cljs.core.str("-panel")].join("")], null), (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  tab)).call(null)], null);
};
centipair.core.components.tabs.render_tabs = function centipair$core$components$tabs$render_tabs(tab_data) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "role", "role", -736691072), "tab-panel", new cljs.core.Keyword(null, "key", "key", -1516042587), "tab-panel-div"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), new cljs.core.PersistentArrayMap(null, 
  3, [new cljs.core.Keyword(null, "class", "class", -2030961996), "nav nav-tabs", new cljs.core.Keyword(null, "role", "role", -736691072), "tablist", new cljs.core.Keyword(null, "key", "key", -1516042587), "tab-list"], null), cljs.core.doall.call(null, cljs.core.map.call(null, centipair.core.components.tabs.nav_tab, tab_data))], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 
  2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "tab-content", new cljs.core.Keyword(null, "key", "key", -1516042587), "tab-content"], null), cljs.core.doall.call(null, cljs.core.map.call(null, centipair.core.components.tabs.tab_panel, tab_data))], null)], null);
};
goog.provide("centipair.site.forms");
goog.require("cljs.core");
goog.require("centipair.core.components.input");
goog.require("reagent.core");
goog.require("centipair.core.utilities.validators");
goog.require("centipair.core.components.tabs");
goog.require("centipair.admin.resources");
goog.require("cljs.core.async");
goog.require("centipair.core.utilities.ajax");
goog.require("centipair.admin.action");
goog.require("centipair.core.ui");
goog.require("centipair.admin.channels");
centipair.site.forms.site_active = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "site-active", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "label", "label", 1718410804), "Activate", new cljs.core.Keyword(null, "description", "description", -1428560544), "Checking this activates your website"], null));
centipair.site.forms.site_name = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "site-name", new cljs.core.Keyword(null, "label", "label", 1718410804), "Site name", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.required], null));
centipair.site.forms.site_domain_name = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "site-domain-name", new cljs.core.Keyword(null, "label", "label", 1718410804), "Domain name", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.required], null));
centipair.site.forms.site_link = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "site-link", new cljs.core.Keyword(null, "label", "label", 1718410804), "Site link", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.required], null));
centipair.site.forms.site_email = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "site-email", new cljs.core.Keyword(null, "label", "label", 1718410804), "Site email", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.required], null));
centipair.site.forms.site_phone = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "site-phone", new cljs.core.Keyword(null, "label", "label", 1718410804), "Site phone", new cljs.core.Keyword(null, "type", "type", 1174270348), "text"], null));
centipair.site.forms.template_folder = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "template-folder", new cljs.core.Keyword(null, "label", "label", 1718410804), "Template Folder", new cljs.core.Keyword(null, "type", "type", 1174270348), "text"], null));
centipair.site.forms.site_group = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "group", new cljs.core.Keyword(null, "value", "value", 305978217), "site"], null));
centipair.site.forms.mail_option = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "mail-option", new cljs.core.Keyword(null, "label", "label", 1718410804), "Mail option", new cljs.core.Keyword(null, "type", "type", 1174270348), "radio", new cljs.core.Keyword(null, "options", "options", 99638489), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, 
[new cljs.core.Keyword(null, "id", "id", -1388402092), "use-smtp", new cljs.core.Keyword(null, "label", "label", 1718410804), "Use SMTP", new cljs.core.Keyword(null, "name", "name", 1843675177), "mail-option-radio", new cljs.core.Keyword(null, "value", "value", 305978217), "smtp"], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "use-api", new cljs.core.Keyword(null, "label", "label", 1718410804), "Use API", new cljs.core.Keyword(null, "name", 
"name", 1843675177), "mail-option-radio", new cljs.core.Keyword(null, "value", "value", 305978217), "api"], null)], null)], null));
centipair.site.forms.mail_host = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "mail-host", new cljs.core.Keyword(null, "label", "label", 1718410804), "Mail server", new cljs.core.Keyword(null, "type", "type", 1174270348), "text"], null));
centipair.site.forms.mail_user = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "mail-user", new cljs.core.Keyword(null, "label", "label", 1718410804), "Mail username", new cljs.core.Keyword(null, "type", "type", 1174270348), "text"], null));
centipair.site.forms.mail_password = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "mail-password", new cljs.core.Keyword(null, "label", "label", 1718410804), "Mail password", new cljs.core.Keyword(null, "type", "type", 1174270348), "text"], null));
centipair.site.forms.mail_port = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", -1388402092), "mail-port", new cljs.core.Keyword(null, "label", "label", 1718410804), "Mail Port", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.integer_required, new cljs.core.Keyword(null, "value-type", "value-type", 576005757), "integer"], 
null));
centipair.site.forms.mail_ssl = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "mail-ssl", new cljs.core.Keyword(null, "label", "label", 1718410804), "Mail SSL", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox"], null));
centipair.site.forms.mail_api_subheading = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "mail-api-subheading", new cljs.core.Keyword(null, "label", "label", 1718410804), "Mail API", new cljs.core.Keyword(null, "type", "type", 1174270348), "subheading"], null));
centipair.site.forms.mail_api_url = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "mail-api-url", new cljs.core.Keyword(null, "label", "label", 1718410804), "Mail API URL", new cljs.core.Keyword(null, "type", "type", 1174270348), "text"], null));
centipair.site.forms.mail_group = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "group", new cljs.core.Keyword(null, "value", "value", 305978217), "mail"], null));
centipair.site.forms.site_form = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 636505583), "Site Settings", new cljs.core.Keyword(null, "id", "id", -1388402092), "site-form"], null));
centipair.site.forms.save_site = function centipair$site$forms$save_site() {
  return centipair.core.utilities.ajax.form_post.call(null, centipair.site.forms.site_form, centipair.admin.resources.site_source.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.admin.channels.site_settings_id))), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.site.forms.site_active, centipair.site.forms.site_name, centipair.site.forms.site_domain_name, centipair.site.forms.site_link, 
  centipair.site.forms.site_email, centipair.site.forms.site_phone, centipair.site.forms.template_folder, centipair.admin.channels.site_settings_id, centipair.site.forms.site_group], null), function(response) {
    centipair.core.utilities.ajax.data_saved_notifier.call(null, response);
    return centipair.admin.channels.reload_site_settings_data.call(null);
  });
};
centipair.site.forms.save_site_button = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Save", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), centipair.site.forms.save_site, new cljs.core.Keyword(null, "id", "id", -1388402092), "save-site-button"], null));
centipair.site.forms.create_site_form = function centipair$site$forms$create_site_form() {
  return centipair.core.components.input.form_aligned.call(null, centipair.site.forms.site_form, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.site.forms.site_active, centipair.site.forms.site_name, centipair.site.forms.site_domain_name, centipair.site.forms.site_link, centipair.site.forms.site_email, centipair.site.forms.site_phone, centipair.site.forms.template_folder], null), centipair.site.forms.save_site_button);
};
centipair.site.forms.mail_settings_form = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "mail-settings-form", new cljs.core.Keyword(null, "title", "title", 636505583), "Mail Settings"], null));
centipair.site.forms.save_mail_settings = function centipair$site$forms$save_mail_settings() {
  return centipair.core.utilities.ajax.form_post.call(null, centipair.site.forms.mail_settings_form, centipair.admin.resources.site_source.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.admin.channels.site_settings_id))), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.site.forms.mail_option, centipair.site.forms.mail_host, centipair.site.forms.mail_user, centipair.site.forms.mail_password, 
  centipair.site.forms.mail_port, centipair.site.forms.mail_ssl, centipair.site.forms.mail_api_url, centipair.admin.channels.site_settings_id, centipair.site.forms.mail_group], null), centipair.core.utilities.ajax.data_saved_notifier);
};
centipair.site.forms.save_mail_settings_button = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "save-mail-settings-button", new cljs.core.Keyword(null, "label", "label", 1718410804), "Save", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), centipair.site.forms.save_mail_settings], null));
centipair.site.forms.create_mail_settings_form = function centipair$site$forms$create_mail_settings_form() {
  return centipair.core.components.input.form_aligned.call(null, centipair.site.forms.mail_settings_form, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.site.forms.mail_option, centipair.site.forms.mail_host, centipair.site.forms.mail_user, centipair.site.forms.mail_password, centipair.site.forms.mail_port, centipair.site.forms.mail_ssl, centipair.site.forms.mail_api_subheading, centipair.site.forms.mail_api_url], null), centipair.site.forms.save_mail_settings_button);
};
centipair.site.forms.site_settings = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "id", "id", -1388402092), "site-settings", new cljs.core.Keyword(null, "label", "label", 1718410804), "Site Settings", new cljs.core.Keyword(null, "content", "content", 15833224), centipair.site.forms.create_site_form, new cljs.core.Keyword(null, "active", "active", 1895962068), true, new cljs.core.Keyword(null, "url", "url", 276297046), "site-settings", new cljs.core.Keyword(null, 
"key", "key", -1516042587), "site-settings"], null));
centipair.site.forms.mail_settings = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "id", "id", -1388402092), "mail-settings", new cljs.core.Keyword(null, "label", "label", 1718410804), "Mail Settings", new cljs.core.Keyword(null, "content", "content", 15833224), centipair.site.forms.create_mail_settings_form, new cljs.core.Keyword(null, "active", "active", 1895962068), false, new cljs.core.Keyword(null, "url", "url", 276297046), "mail-settings", 
new cljs.core.Keyword(null, "key", "key", -1516042587), "mail-settings"], null));
centipair.site.forms.site_settings_tabs = function centipair$site$forms$site_settings_tabs() {
  return centipair.core.components.tabs.render_tabs.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.site.forms.site_settings, centipair.site.forms.mail_settings], null));
};
centipair.site.forms.delete_site = function centipair$site$forms$delete_site() {
  return console.log("deleting site");
};
centipair.site.forms.site_action_bar = function centipair$site$forms$site_action_bar() {
  return centipair.admin.action.crud_action_bar.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "create", "create", -1301499256), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "entity", "entity", -450970276), "site"], null), new cljs.core.Keyword(null, "delete", "delete", -1768633620), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "action", "action", -811238024), centipair.site.forms.delete_site], null)], null));
};
centipair.site.forms.site_page = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "Site", new cljs.core.Keyword(null, "action-bar", "action-bar", 1747757453), centipair.site.forms.site_action_bar, new cljs.core.Keyword(null, "message", "message", -406056002), ""], null));
centipair.site.forms.render_site_settings_tabs = function centipair$site$forms$render_site_settings_tabs(site_id) {
  centipair.core.ui.render_page.call(null, centipair.site.forms.site_page, centipair.site.forms.site_settings_tabs);
  return centipair.admin.channels.set_active_channel.call(null, centipair.admin.channels.site_settings_channel);
};
centipair.site.forms.map_site_settings = function centipair$site$forms$map_site_settings(response) {
  centipair.core.components.input.update_value.call(null, centipair.admin.channels.site_settings_id, (new cljs.core.Keyword(null, "site_settings_id", "site_settings_id", 295737949)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.site.forms.site_active, (new cljs.core.Keyword(null, "active", "active", 1895962068)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.forms.site_name, (new cljs.core.Keyword(null, "site_name", "site_name", -1436471344)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.forms.site_domain_name, (new cljs.core.Keyword(null, "site_domain_name", "site_domain_name", 202454497)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.forms.site_link, (new cljs.core.Keyword(null, "site_link", "site_link", -1380760555)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.forms.site_email, (new cljs.core.Keyword(null, "site_email", "site_email", 955563666)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.forms.site_phone, (new cljs.core.Keyword(null, "site_phone", "site_phone", 1494034354)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.forms.template_folder, (new cljs.core.Keyword(null, "template_folder", "template_folder", 2045355785)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.forms.mail_option, (new cljs.core.Keyword(null, "mail_option", "mail_option", 398852800)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.forms.mail_host, (new cljs.core.Keyword(null, "mail_host", "mail_host", -120274983)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.forms.mail_user, (new cljs.core.Keyword(null, "mail_user", "mail_user", 2003434213)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.forms.mail_password, (new cljs.core.Keyword(null, "mail_password", "mail_password", -1566456162)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.forms.mail_port, (new cljs.core.Keyword(null, "mail_port", "mail_port", 1714418966)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.site.forms.mail_ssl, (new cljs.core.Keyword(null, "mail_ssl", "mail_ssl", 1260020551)).cljs$core$IFn$_invoke$arity$1(response));
  return centipair.core.components.input.update_value.call(null, centipair.site.forms.mail_api_url, (new cljs.core.Keyword(null, "mail_api_url", "mail_api_url", 1311133253)).cljs$core$IFn$_invoke$arity$1(response));
};
centipair.site.forms.fetch_site_settings = function centipair$site$forms$fetch_site_settings(site_id) {
  return centipair.core.utilities.ajax.get_json.call(null, centipair.admin.resources.site_source.call(null, site_id), cljs.core.PersistentArrayMap.EMPTY, function(response) {
    return centipair.site.forms.map_site_settings.call(null, response);
  });
};
centipair.site.forms.init_site_settings_channel = function centipair$site$forms$init_site_settings_channel() {
  var c__6881__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto__) {
    return function() {
      var f__6882__auto__ = function() {
        var switch__6825__auto__ = function(c__6881__auto__) {
          return function(state_11910) {
            var state_val_11911 = state_11910[1];
            if (state_val_11911 === 7) {
              var inst_11901 = state_11910[2];
              var inst_11902 = centipair.site.forms.fetch_site_settings.call(null, inst_11901);
              var state_11910__$1 = function() {
                var statearr_11912 = state_11910;
                statearr_11912[7] = inst_11902;
                return statearr_11912;
              }();
              var statearr_11913_11926 = state_11910__$1;
              statearr_11913_11926[2] = null;
              statearr_11913_11926[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11911 === 6) {
                var inst_11906 = state_11910[2];
                var state_11910__$1 = state_11910;
                var statearr_11914_11927 = state_11910__$1;
                statearr_11914_11927[2] = inst_11906;
                statearr_11914_11927[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11911 === 5) {
                  var state_11910__$1 = state_11910;
                  var statearr_11915_11928 = state_11910__$1;
                  statearr_11915_11928[2] = null;
                  statearr_11915_11928[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11911 === 4) {
                    var state_11910__$1 = state_11910;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11910__$1, 7, centipair.admin.channels.site_settings_channel);
                  } else {
                    if (state_val_11911 === 3) {
                      var inst_11908 = state_11910[2];
                      var state_11910__$1 = state_11910;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11910__$1, inst_11908);
                    } else {
                      if (state_val_11911 === 2) {
                        var state_11910__$1 = state_11910;
                        var statearr_11916_11929 = state_11910__$1;
                        statearr_11916_11929[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11911 === 1) {
                          var state_11910__$1 = state_11910;
                          var statearr_11918_11930 = state_11910__$1;
                          statearr_11918_11930[2] = null;
                          statearr_11918_11930[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6881__auto__);
        return function(switch__6825__auto__, c__6881__auto__) {
          return function() {
            var centipair$site$forms$init_site_settings_channel_$_state_machine__6826__auto__ = null;
            var centipair$site$forms$init_site_settings_channel_$_state_machine__6826__auto____0 = function() {
              var statearr_11922 = [null, null, null, null, null, null, null, null];
              statearr_11922[0] = centipair$site$forms$init_site_settings_channel_$_state_machine__6826__auto__;
              statearr_11922[1] = 1;
              return statearr_11922;
            };
            var centipair$site$forms$init_site_settings_channel_$_state_machine__6826__auto____1 = function(state_11910) {
              while (true) {
                var ret_value__6827__auto__ = function() {
                  try {
                    while (true) {
                      var result__6828__auto__ = switch__6825__auto__.call(null, state_11910);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6828__auto__;
                      }
                      break;
                    }
                  } catch (e11923) {
                    if (e11923 instanceof Object) {
                      var ex__6829__auto__ = e11923;
                      var statearr_11924_11931 = state_11910;
                      statearr_11924_11931[5] = ex__6829__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11910);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11923;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11932 = state_11910;
                  state_11910 = G__11932;
                  continue;
                } else {
                  return ret_value__6827__auto__;
                }
                break;
              }
            };
            centipair$site$forms$init_site_settings_channel_$_state_machine__6826__auto__ = function(state_11910) {
              switch(arguments.length) {
                case 0:
                  return centipair$site$forms$init_site_settings_channel_$_state_machine__6826__auto____0.call(this);
                case 1:
                  return centipair$site$forms$init_site_settings_channel_$_state_machine__6826__auto____1.call(this, state_11910);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            centipair$site$forms$init_site_settings_channel_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = centipair$site$forms$init_site_settings_channel_$_state_machine__6826__auto____0;
            centipair$site$forms$init_site_settings_channel_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = centipair$site$forms$init_site_settings_channel_$_state_machine__6826__auto____1;
            return centipair$site$forms$init_site_settings_channel_$_state_machine__6826__auto__;
          }();
        }(switch__6825__auto__, c__6881__auto__);
      }();
      var state__6883__auto__ = function() {
        var statearr_11925 = f__6882__auto__.call(null);
        statearr_11925[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto__;
        return statearr_11925;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
    };
  }(c__6881__auto__));
  return c__6881__auto__;
};
centipair.site.forms.new_site_form = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 636505583), "Create New Site", new cljs.core.Keyword(null, "id", "id", -1388402092), "site-form"], null));
centipair.site.forms.new_site_active = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "site-active", new cljs.core.Keyword(null, "label", "label", 1718410804), "Active", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox"], null));
centipair.site.forms.new_site_name = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "site-name", new cljs.core.Keyword(null, "label", "label", 1718410804), "Site name", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.required], null));
centipair.site.forms.new_site_domain_name = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "site-domain-name", new cljs.core.Keyword(null, "label", "label", 1718410804), "Domain name", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.required], null));
centipair.site.forms.new_site_link = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "site-link", new cljs.core.Keyword(null, "label", "label", 1718410804), "Site link", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.required], null));
centipair.site.forms.new_site_email = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "site-email", new cljs.core.Keyword(null, "label", "label", 1718410804), "Site email", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.required], null));
centipair.site.forms.new_site_phone = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "site-phone", new cljs.core.Keyword(null, "label", "label", 1718410804), "Site phone", new cljs.core.Keyword(null, "type", "type", 1174270348), "text"], null));
centipair.site.forms.new_template_folder = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "template-folder", new cljs.core.Keyword(null, "label", "label", 1718410804), "Template Folder", new cljs.core.Keyword(null, "type", "type", 1174270348), "text"], null));
centipair.site.forms.save_new_site = function centipair$site$forms$save_new_site() {
  return centipair.core.utilities.ajax.form_post.call(null, centipair.site.forms.new_site_form, centipair.admin.resources.site_source.call(null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.site.forms.new_site_active, centipair.site.forms.new_site_name, centipair.site.forms.new_site_domain_name, centipair.site.forms.new_site_link, centipair.site.forms.new_site_email, centipair.site.forms.new_site_phone, centipair.site.forms.new_template_folder, centipair.site.forms.site_group], 
  null), function(response) {
    centipair.core.utilities.ajax.data_saved_notifier.call(null, response);
    return centipair.admin.channels.reload_site_settings_data.call(null);
  });
};
centipair.site.forms.save_new_site_button = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Save", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), centipair.site.forms.save_new_site, new cljs.core.Keyword(null, "id", "id", -1388402092), "save-site-button"], null));
centipair.site.forms.create_new_site_form = function centipair$site$forms$create_new_site_form() {
  return centipair.core.components.input.form_aligned.call(null, centipair.site.forms.new_site_form, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.site.forms.new_site_active, centipair.site.forms.new_site_name, centipair.site.forms.new_site_domain_name, centipair.site.forms.new_site_link, centipair.site.forms.new_site_email, centipair.site.forms.new_site_phone, centipair.site.forms.new_template_folder], null), centipair.site.forms.save_new_site_button);
};
centipair.site.forms.reset_new_site_form = function centipair$site$forms$reset_new_site_form() {
  return centipair.core.components.input.reset_inputs.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.site.forms.new_site_name, centipair.site.forms.new_site_domain_name, centipair.site.forms.new_site_link, centipair.site.forms.new_site_email, centipair.site.forms.new_site_phone, centipair.site.forms.new_template_folder], null));
};
centipair.site.forms.cancel_action_bar = function centipair$site$forms$cancel_action_bar() {
  return centipair.admin.action.cancel_action_bar.call(null, centipair.admin.channels.site_settings_id, "site", centipair.site.forms.reset_new_site_form);
};
centipair.site.forms.new_site_page = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "New site", new cljs.core.Keyword(null, "message", "message", -406056002), "", new cljs.core.Keyword(null, "action-bar", "action-bar", 1747757453), centipair.site.forms.cancel_action_bar], null));
centipair.site.forms.render_new_site_form = function centipair$site$forms$render_new_site_form() {
  centipair.core.ui.render_page.call(null, centipair.site.forms.new_site_page, centipair.site.forms.create_new_site_form);
  return centipair.admin.channels.set_active_channel.call(null, centipair.admin.channels.site_settings_channel);
};
goog.provide("centipair.core.utilities.countries");
goog.require("cljs.core");
centipair.core.utilities.countries.supported_country_list = new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Australia", new cljs.core.Keyword(null, "value", "value", 305978217), "AU"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Canada", new cljs.core.Keyword(null, "value", "value", 305978217), 
"CA"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Ireland", new cljs.core.Keyword(null, "value", "value", 305978217), "IE"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "United Kingdom", new cljs.core.Keyword(null, "value", "value", 305978217), "GB"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "United States", 
new cljs.core.Keyword(null, "value", "value", 305978217), "US"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Belgium", new cljs.core.Keyword(null, "value", "value", 305978217), "BE"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Finland", new cljs.core.Keyword(null, "value", "value", 305978217), "FI"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"label", "label", 1718410804), "France", new cljs.core.Keyword(null, "value", "value", 305978217), "FR"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Germany", new cljs.core.Keyword(null, "value", "value", 305978217), "DE"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Luxembourg", new cljs.core.Keyword(null, "value", "value", 305978217), "LU"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Netherlands", new cljs.core.Keyword(null, "value", "value", 305978217), "NL"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Spain", new cljs.core.Keyword(null, "value", "value", 305978217), "ES"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Denmark", new cljs.core.Keyword(null, "value", "value", 305978217), 
"DK"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Norway", new cljs.core.Keyword(null, "value", "value", 305978217), "NO"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Sweden", new cljs.core.Keyword(null, "value", "value", 305978217), "SE"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Austria", new cljs.core.Keyword(null, 
"value", "value", 305978217), "AT"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Italy", new cljs.core.Keyword(null, "value", "value", 305978217), "IT"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Switzerland", new cljs.core.Keyword(null, "value", "value", 305978217), "CH"], null)], null);
centipair.core.utilities.countries.country_list = cljs.core.PersistentVector.fromArray([new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Afghanistan", new cljs.core.Keyword(null, "value", "value", 305978217), "AF"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Aland Islands", new cljs.core.Keyword(null, "value", "value", 305978217), "AX"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Albania", new cljs.core.Keyword(null, "value", "value", 305978217), "AL"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Algeria", new cljs.core.Keyword(null, "value", "value", 305978217), "DZ"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "American Samoa", new cljs.core.Keyword(null, "value", "value", 305978217), 
"AS"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "AndorrA", new cljs.core.Keyword(null, "value", "value", 305978217), "AD"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Angola", new cljs.core.Keyword(null, "value", "value", 305978217), "AO"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Anguilla", new cljs.core.Keyword(null, 
"value", "value", 305978217), "AI"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Antarctica", new cljs.core.Keyword(null, "value", "value", 305978217), "AQ"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Antigua and Barbuda", new cljs.core.Keyword(null, "value", "value", 305978217), "AG"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", 
"label", 1718410804), "Argentina", new cljs.core.Keyword(null, "value", "value", 305978217), "AR"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Armenia", new cljs.core.Keyword(null, "value", "value", 305978217), "AM"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Aruba", new cljs.core.Keyword(null, "value", "value", 305978217), "AW"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Australia", new cljs.core.Keyword(null, "value", "value", 305978217), "AU"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Austria", new cljs.core.Keyword(null, "value", "value", 305978217), "AT"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Azerbaijan", new cljs.core.Keyword(null, "value", "value", 305978217), 
"AZ"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Bahamas", new cljs.core.Keyword(null, "value", "value", 305978217), "BS"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Bahrain", new cljs.core.Keyword(null, "value", "value", 305978217), "BH"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Bangladesh", new cljs.core.Keyword(null, 
"value", "value", 305978217), "BD"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Barbados", new cljs.core.Keyword(null, "value", "value", 305978217), "BB"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Belarus", new cljs.core.Keyword(null, "value", "value", 305978217), "BY"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 
1718410804), "Belgium", new cljs.core.Keyword(null, "value", "value", 305978217), "BE"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Belize", new cljs.core.Keyword(null, "value", "value", 305978217), "BZ"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Benin", new cljs.core.Keyword(null, "value", "value", 305978217), "BJ"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Bermuda", new cljs.core.Keyword(null, "value", "value", 305978217), "BM"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Bhutan", new cljs.core.Keyword(null, "value", "value", 305978217), "BT"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Bolivia", new cljs.core.Keyword(null, "value", "value", 305978217), 
"BO"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Bosnia and Herzegovina", new cljs.core.Keyword(null, "value", "value", 305978217), "BA"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Botswana", new cljs.core.Keyword(null, "value", "value", 305978217), "BW"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), 
"Bouvet Island", new cljs.core.Keyword(null, "value", "value", 305978217), "BV"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Brazil", new cljs.core.Keyword(null, "value", "value", 305978217), "BR"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "British Indian Ocean Territory", new cljs.core.Keyword(null, "value", "value", 305978217), "IO"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Brunei Darussalam", new cljs.core.Keyword(null, "value", "value", 305978217), "BN"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Bulgaria", new cljs.core.Keyword(null, "value", "value", 305978217), "BG"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Burkina Faso", new cljs.core.Keyword(null, "value", "value", 
305978217), "BF"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Burundi", new cljs.core.Keyword(null, "value", "value", 305978217), "BI"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Cambodia", new cljs.core.Keyword(null, "value", "value", 305978217), "KH"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Cameroon", 
new cljs.core.Keyword(null, "value", "value", 305978217), "CM"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Canada", new cljs.core.Keyword(null, "value", "value", 305978217), "CA"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Cape Verde", new cljs.core.Keyword(null, "value", "value", 305978217), "CV"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"label", "label", 1718410804), "Cayman Islands", new cljs.core.Keyword(null, "value", "value", 305978217), "KY"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Central African Republic", new cljs.core.Keyword(null, "value", "value", 305978217), "CF"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Chad", new cljs.core.Keyword(null, "value", "value", 305978217), "TD"], null), 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Chile", new cljs.core.Keyword(null, "value", "value", 305978217), "CL"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "China", new cljs.core.Keyword(null, "value", "value", 305978217), "CN"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Christmas Island", new cljs.core.Keyword(null, 
"value", "value", 305978217), "CX"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Cocos (Keeling) Islands", new cljs.core.Keyword(null, "value", "value", 305978217), "CC"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Colombia", new cljs.core.Keyword(null, "value", "value", 305978217), "CO"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"label", "label", 1718410804), "Comoros", new cljs.core.Keyword(null, "value", "value", 305978217), "KM"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Congo", new cljs.core.Keyword(null, "value", "value", 305978217), "CG"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Congo,The Democratic Republic of the", new cljs.core.Keyword(null, "value", "value", 305978217), "CD"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Cook Islands", new cljs.core.Keyword(null, "value", "value", 305978217), "CK"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Costa Rica", new cljs.core.Keyword(null, "value", "value", 305978217), "CR"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), 'Cote D"Ivoire', 
new cljs.core.Keyword(null, "value", "value", 305978217), "CI"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Croatia", new cljs.core.Keyword(null, "value", "value", 305978217), "HR"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Cuba", new cljs.core.Keyword(null, "value", "value", 305978217), "CU"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"label", "label", 1718410804), "Cyprus", new cljs.core.Keyword(null, "value", "value", 305978217), "CY"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Czech Republic", new cljs.core.Keyword(null, "value", "value", 305978217), "CZ"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Denmark", new cljs.core.Keyword(null, "value", "value", 305978217), "DK"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Djibouti", new cljs.core.Keyword(null, "value", "value", 305978217), "DJ"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Dominica", new cljs.core.Keyword(null, "value", "value", 305978217), "DM"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Dominican Republic", new cljs.core.Keyword(null, "value", "value", 
305978217), "DO"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Ecuador", new cljs.core.Keyword(null, "value", "value", 305978217), "EC"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Egypt", new cljs.core.Keyword(null, "value", "value", 305978217), "EG"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "El Salvador", 
new cljs.core.Keyword(null, "value", "value", 305978217), "SV"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Equatorial Guinea", new cljs.core.Keyword(null, "value", "value", 305978217), "GQ"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Eritrea", new cljs.core.Keyword(null, "value", "value", 305978217), "ER"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"label", "label", 1718410804), "Estonia", new cljs.core.Keyword(null, "value", "value", 305978217), "EE"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Ethiopia", new cljs.core.Keyword(null, "value", "value", 305978217), "ET"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Falkland Islands (Malvinas)", new cljs.core.Keyword(null, "value", "value", 305978217), "FK"], null), 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Faroe Islands", new cljs.core.Keyword(null, "value", "value", 305978217), "FO"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Fiji", new cljs.core.Keyword(null, "value", "value", 305978217), "FJ"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Finland", new cljs.core.Keyword(null, 
"value", "value", 305978217), "FI"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "France", new cljs.core.Keyword(null, "value", "value", 305978217), "FR"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "French Guiana", new cljs.core.Keyword(null, "value", "value", 305978217), "GF"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 
1718410804), "French Polynesia", new cljs.core.Keyword(null, "value", "value", 305978217), "PF"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "French Southern Territories", new cljs.core.Keyword(null, "value", "value", 305978217), "TF"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Gabon", new cljs.core.Keyword(null, "value", "value", 305978217), "GA"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Gambia", new cljs.core.Keyword(null, "value", "value", 305978217), "GM"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Georgia", new cljs.core.Keyword(null, "value", "value", 305978217), "GE"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Germany", new cljs.core.Keyword(null, "value", "value", 305978217), 
"DE"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Ghana", new cljs.core.Keyword(null, "value", "value", 305978217), "GH"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Gibraltar", new cljs.core.Keyword(null, "value", "value", 305978217), "GI"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Greece", new cljs.core.Keyword(null, 
"value", "value", 305978217), "GR"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Greenland", new cljs.core.Keyword(null, "value", "value", 305978217), "GL"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Grenada", new cljs.core.Keyword(null, "value", "value", 305978217), "GD"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 
1718410804), "Guadeloupe", new cljs.core.Keyword(null, "value", "value", 305978217), "GP"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Guam", new cljs.core.Keyword(null, "value", "value", 305978217), "GU"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Guatemala", new cljs.core.Keyword(null, "value", "value", 305978217), "GT"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Guernsey", new cljs.core.Keyword(null, "value", "value", 305978217), "GG"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Guinea", new cljs.core.Keyword(null, "value", "value", 305978217), "GN"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Guinea-Bissau", new cljs.core.Keyword(null, "value", "value", 305978217), 
"GW"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Guyana", new cljs.core.Keyword(null, "value", "value", 305978217), "GY"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Haiti", new cljs.core.Keyword(null, "value", "value", 305978217), "HT"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Heard Island and Mcdonald Islands", 
new cljs.core.Keyword(null, "value", "value", 305978217), "HM"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Holy See (Vatican City State)", new cljs.core.Keyword(null, "value", "value", 305978217), "VA"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Honduras", new cljs.core.Keyword(null, "value", "value", 305978217), "HN"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Hong Kong", new cljs.core.Keyword(null, "value", "value", 305978217), "HK"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Hungary", new cljs.core.Keyword(null, "value", "value", 305978217), "HU"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Iceland", new cljs.core.Keyword(null, "value", "value", 305978217), 
"IS"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "India", new cljs.core.Keyword(null, "value", "value", 305978217), "IN"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Indonesia", new cljs.core.Keyword(null, "value", "value", 305978217), "ID"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Iran,Islamic Republic Of", 
new cljs.core.Keyword(null, "value", "value", 305978217), "IR"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Iraq", new cljs.core.Keyword(null, "value", "value", 305978217), "IQ"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Ireland", new cljs.core.Keyword(null, "value", "value", 305978217), "IE"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"label", "label", 1718410804), "Isle of Man", new cljs.core.Keyword(null, "value", "value", 305978217), "IM"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Israel", new cljs.core.Keyword(null, "value", "value", 305978217), "IL"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Italy", new cljs.core.Keyword(null, "value", "value", 305978217), "IT"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Jamaica", new cljs.core.Keyword(null, "value", "value", 305978217), "JM"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Japan", new cljs.core.Keyword(null, "value", "value", 305978217), "JP"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Jersey", new cljs.core.Keyword(null, "value", "value", 305978217), "JE"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Jordan", new cljs.core.Keyword(null, "value", "value", 305978217), "JO"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Kazakhstan", new cljs.core.Keyword(null, "value", "value", 305978217), "KZ"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Kenya", new cljs.core.Keyword(null, 
"value", "value", 305978217), "KE"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Kiribati", new cljs.core.Keyword(null, "value", "value", 305978217), "KI"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), 'Korea,Democratic People"S Republic of', new cljs.core.Keyword(null, "value", "value", 305978217), "KP"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"label", "label", 1718410804), "Korea,Republic of", new cljs.core.Keyword(null, "value", "value", 305978217), "KR"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Kuwait", new cljs.core.Keyword(null, "value", "value", 305978217), "KW"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Kyrgyzstan", new cljs.core.Keyword(null, "value", "value", 305978217), "KG"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), 'Lao People"S Democratic Republic', new cljs.core.Keyword(null, "value", "value", 305978217), "LA"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Latvia", new cljs.core.Keyword(null, "value", "value", 305978217), "LV"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Lebanon", new cljs.core.Keyword(null, "value", 
"value", 305978217), "LB"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Lesotho", new cljs.core.Keyword(null, "value", "value", 305978217), "LS"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Liberia", new cljs.core.Keyword(null, "value", "value", 305978217), "LR"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), 
"Libyan Arab Jamahiriya", new cljs.core.Keyword(null, "value", "value", 305978217), "LY"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Liechtenstein", new cljs.core.Keyword(null, "value", "value", 305978217), "LI"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Lithuania", new cljs.core.Keyword(null, "value", "value", 305978217), "LT"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Luxembourg", new cljs.core.Keyword(null, "value", "value", 305978217), "LU"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Macao", new cljs.core.Keyword(null, "value", "value", 305978217), "MO"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Macedonia,The Former Yugoslav Republic of", new cljs.core.Keyword(null, 
"value", "value", 305978217), "MK"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Madagascar", new cljs.core.Keyword(null, "value", "value", 305978217), "MG"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Malawi", new cljs.core.Keyword(null, "value", "value", 305978217), "MW"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 
1718410804), "Malaysia", new cljs.core.Keyword(null, "value", "value", 305978217), "MY"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Maldives", new cljs.core.Keyword(null, "value", "value", 305978217), "MV"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Mali", new cljs.core.Keyword(null, "value", "value", 305978217), "ML"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Malta", new cljs.core.Keyword(null, "value", "value", 305978217), "MT"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Marshall Islands", new cljs.core.Keyword(null, "value", "value", 305978217), "MH"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Martinique", new cljs.core.Keyword(null, "value", "value", 305978217), 
"MQ"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Mauritania", new cljs.core.Keyword(null, "value", "value", 305978217), "MR"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Mauritius", new cljs.core.Keyword(null, "value", "value", 305978217), "MU"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Mayotte", 
new cljs.core.Keyword(null, "value", "value", 305978217), "YT"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Mexico", new cljs.core.Keyword(null, "value", "value", 305978217), "MX"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Micronesia,Federated States of", new cljs.core.Keyword(null, "value", "value", 305978217), "FM"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Moldova,Republic of", new cljs.core.Keyword(null, "value", "value", 305978217), "MD"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Monaco", new cljs.core.Keyword(null, "value", "value", 305978217), "MC"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Mongolia", new cljs.core.Keyword(null, "value", "value", 
305978217), "MN"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Montserrat", new cljs.core.Keyword(null, "value", "value", 305978217), "MS"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Morocco", new cljs.core.Keyword(null, "value", "value", 305978217), "MA"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), 
"Mozambique", new cljs.core.Keyword(null, "value", "value", 305978217), "MZ"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Myanmar", new cljs.core.Keyword(null, "value", "value", 305978217), "MM"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Namibia", new cljs.core.Keyword(null, "value", "value", 305978217), "NA"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"label", "label", 1718410804), "Nauru", new cljs.core.Keyword(null, "value", "value", 305978217), "NR"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Nepal", new cljs.core.Keyword(null, "value", "value", 305978217), "NP"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Netherlands", new cljs.core.Keyword(null, "value", "value", 305978217), "NL"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Netherlands Antilles", new cljs.core.Keyword(null, "value", "value", 305978217), "AN"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "New Caledonia", new cljs.core.Keyword(null, "value", "value", 305978217), "NC"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "New Zealand", new cljs.core.Keyword(null, "value", 
"value", 305978217), "NZ"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Nicaragua", new cljs.core.Keyword(null, "value", "value", 305978217), "NI"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Niger", new cljs.core.Keyword(null, "value", "value", 305978217), "NE"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), 
"Nigeria", new cljs.core.Keyword(null, "value", "value", 305978217), "NG"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Niue", new cljs.core.Keyword(null, "value", "value", 305978217), "NU"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Norfolk Island", new cljs.core.Keyword(null, "value", "value", 305978217), "NF"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"label", "label", 1718410804), "Northern Mariana Islands", new cljs.core.Keyword(null, "value", "value", 305978217), "MP"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Norway", new cljs.core.Keyword(null, "value", "value", 305978217), "NO"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Oman", new cljs.core.Keyword(null, "value", "value", 305978217), "OM"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Pakistan", new cljs.core.Keyword(null, "value", "value", 305978217), "PK"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Palau", new cljs.core.Keyword(null, "value", "value", 305978217), "PW"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Palestinian Territory,Occupied", new cljs.core.Keyword(null, "value", 
"value", 305978217), "PS"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Panama", new cljs.core.Keyword(null, "value", "value", 305978217), "PA"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Papua New Guinea", new cljs.core.Keyword(null, "value", "value", 305978217), "PG"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 
1718410804), "Paraguay", new cljs.core.Keyword(null, "value", "value", 305978217), "PY"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Peru", new cljs.core.Keyword(null, "value", "value", 305978217), "PE"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Philippines", new cljs.core.Keyword(null, "value", "value", 305978217), "PH"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Pitcairn", new cljs.core.Keyword(null, "value", "value", 305978217), "PN"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Poland", new cljs.core.Keyword(null, "value", "value", 305978217), "PL"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Portugal", new cljs.core.Keyword(null, "value", "value", 305978217), 
"PT"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Puerto Rico", new cljs.core.Keyword(null, "value", "value", 305978217), "PR"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Qatar", new cljs.core.Keyword(null, "value", "value", 305978217), "QA"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Reunion", new cljs.core.Keyword(null, 
"value", "value", 305978217), "RE"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Romania", new cljs.core.Keyword(null, "value", "value", 305978217), "RO"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Russian Federation", new cljs.core.Keyword(null, "value", "value", 305978217), "RU"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", 
"label", 1718410804), "RWANDA", new cljs.core.Keyword(null, "value", "value", 305978217), "RW"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Saint Helena", new cljs.core.Keyword(null, "value", "value", 305978217), "SH"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Saint Kitts and Nevis", new cljs.core.Keyword(null, "value", "value", 305978217), "KN"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Saint Lucia", new cljs.core.Keyword(null, "value", "value", 305978217), "LC"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Saint Pierre and Miquelon", new cljs.core.Keyword(null, "value", "value", 305978217), "PM"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Saint Vincent and the Grenadines", new cljs.core.Keyword(null, 
"value", "value", 305978217), "VC"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Samoa", new cljs.core.Keyword(null, "value", "value", 305978217), "WS"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "San Marino", new cljs.core.Keyword(null, "value", "value", 305978217), "SM"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 
1718410804), "Sao Tome and Principe", new cljs.core.Keyword(null, "value", "value", 305978217), "ST"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Saudi Arabia", new cljs.core.Keyword(null, "value", "value", 305978217), "SA"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Senegal", new cljs.core.Keyword(null, "value", "value", 305978217), "SN"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Serbia and Montenegro", new cljs.core.Keyword(null, "value", "value", 305978217), "CS"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Seychelles", new cljs.core.Keyword(null, "value", "value", 305978217), "SC"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Sierra Leone", new cljs.core.Keyword(null, "value", 
"value", 305978217), "SL"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Singapore", new cljs.core.Keyword(null, "value", "value", 305978217), "SG"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Slovakia", new cljs.core.Keyword(null, "value", "value", 305978217), "SK"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), 
"Slovenia", new cljs.core.Keyword(null, "value", "value", 305978217), "SI"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Solomon Islands", new cljs.core.Keyword(null, "value", "value", 305978217), "SB"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Somalia", new cljs.core.Keyword(null, "value", "value", 305978217), "SO"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "South Africa", new cljs.core.Keyword(null, "value", "value", 305978217), "ZA"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "South Georgia and the South Sandwich Islands", new cljs.core.Keyword(null, "value", "value", 305978217), "GS"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Spain", new cljs.core.Keyword(null, 
"value", "value", 305978217), "ES"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Sri Lanka", new cljs.core.Keyword(null, "value", "value", 305978217), "LK"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Sudan", new cljs.core.Keyword(null, "value", "value", 305978217), "SD"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 
1718410804), "Suriname", new cljs.core.Keyword(null, "value", "value", 305978217), "SR"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Svalbard and Jan Mayen", new cljs.core.Keyword(null, "value", "value", 305978217), "SJ"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Swaziland", new cljs.core.Keyword(null, "value", "value", 305978217), "SZ"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Sweden", new cljs.core.Keyword(null, "value", "value", 305978217), "SE"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Switzerland", new cljs.core.Keyword(null, "value", "value", 305978217), "CH"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Syrian Arab Republic", new cljs.core.Keyword(null, "value", "value", 
305978217), "SY"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Taiwan,Province of China", new cljs.core.Keyword(null, "value", "value", 305978217), "TW"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Tajikistan", new cljs.core.Keyword(null, "value", "value", 305978217), "TJ"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 
1718410804), "Tanzania,United Republic of", new cljs.core.Keyword(null, "value", "value", 305978217), "TZ"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Thailand", new cljs.core.Keyword(null, "value", "value", 305978217), "TH"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Timor-Leste", new cljs.core.Keyword(null, "value", "value", 305978217), "TL"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Togo", new cljs.core.Keyword(null, "value", "value", 305978217), "TG"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Tokelau", new cljs.core.Keyword(null, "value", "value", 305978217), "TK"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Tonga", new cljs.core.Keyword(null, "value", "value", 305978217), "TO"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Trinidad and Tobago", new cljs.core.Keyword(null, "value", "value", 305978217), "TT"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Tunisia", new cljs.core.Keyword(null, "value", "value", 305978217), "TN"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Turkey", 
new cljs.core.Keyword(null, "value", "value", 305978217), "TR"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Turkmenistan", new cljs.core.Keyword(null, "value", "value", 305978217), "TM"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Turks and Caicos Islands", new cljs.core.Keyword(null, "value", "value", 305978217), "TC"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Tuvalu", new cljs.core.Keyword(null, "value", "value", 305978217), "TV"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Uganda", new cljs.core.Keyword(null, "value", "value", 305978217), "UG"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Ukraine", new cljs.core.Keyword(null, "value", "value", 305978217), "UA"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "United Arab Emirates", new cljs.core.Keyword(null, "value", "value", 305978217), "AE"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "United Kingdom", new cljs.core.Keyword(null, "value", "value", 305978217), "GB"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "United States", 
new cljs.core.Keyword(null, "value", "value", 305978217), "US"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "United States Minor Outlying Islands", new cljs.core.Keyword(null, "value", "value", 305978217), "UM"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Uruguay", new cljs.core.Keyword(null, "value", "value", 305978217), "UY"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Uzbekistan", new cljs.core.Keyword(null, "value", "value", 305978217), "UZ"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Vanuatu", new cljs.core.Keyword(null, "value", "value", 305978217), "VU"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Venezuela", new cljs.core.Keyword(null, "value", "value", 305978217), 
"VE"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Viet Nam", new cljs.core.Keyword(null, "value", "value", 305978217), "VN"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Virgin Islands,British", new cljs.core.Keyword(null, "value", "value", 305978217), "VG"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), 
"Virgin Islands,U.S.", new cljs.core.Keyword(null, "value", "value", 305978217), "VI"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Wallis and Futuna", new cljs.core.Keyword(null, "value", "value", 305978217), "WF"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Western Sahara", new cljs.core.Keyword(null, "value", "value", 305978217), "EH"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Yemen", new cljs.core.Keyword(null, "value", "value", 305978217), "YE"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Zambia", new cljs.core.Keyword(null, "value", "value", 305978217), "ZM"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Zimbabwe", new cljs.core.Keyword(null, "value", "value", 305978217), "ZW"], 
null)], true);
goog.provide("centipair.core.components.table");
goog.require("cljs.core");
centipair.core.components.table.per_page = 50;
centipair.core.components.table.search_list_bar = function centipair$core$components$table$search_list_bar(table_data) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "action-bar"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 
  -2030961996), "form-horizontal"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "form-group"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "class", "class", -2030961996), "col-sm-4"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "search", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Search list", new cljs.core.Keyword(null, "class", "class", -2030961996), "form-control"], null)], null)], null), new cljs.core.PersistentVector(null, 
  3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-1"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "btn btn-default"], null), "Search"], 
  null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "col-sm-1"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", -793805698), 
  [cljs.core.str("#/"), cljs.core.str((new cljs.core.Keyword(null, "entity", "entity", -450970276)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "create", "create", -1301499256)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, table_data)))), cljs.core.str("/create")].join(""), new cljs.core.Keyword(null, "class", "class", -2030961996), "btn btn-primary"], null), "Create"], null)], null)], null)], null)], null);
};
centipair.core.components.table.page_numbers = function centipair$core$components$table$page_numbers(total) {
  if (centipair.core.components.table.per_page > total) {
    return 1;
  } else {
    if (cljs.core.mod.call(null, total, centipair.core.components.table.per_page) > 0) {
      return 1 + cljs.core.quot.call(null, total, centipair.core.components.table.per_page);
    } else {
      return cljs.core.quot.call(null, total, centipair.core.components.table.per_page);
    }
  }
};
centipair.core.components.table.page_button = function centipair$core$components$table$page_button(table_data, page_count) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core._EQ_.call(null, page_count, (new cljs.core.Keyword(null, "page", "page", 849072397)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, table_data))) ? "active" : ""], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), [cljs.core.str("#"), cljs.core.str((new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, table_data))), cljs.core.str("/"), cljs.core.str([cljs.core.str(page_count)].join(""))].join("")], null), [cljs.core.str(page_count)].join("")], null)], null);
};
centipair.core.components.table.previous_button_disabled_QMARK_ = function centipair$core$components$table$previous_button_disabled_QMARK_(table_data) {
  return(new cljs.core.Keyword(null, "page", "page", 849072397)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, table_data)) <= 0;
};
centipair.core.components.table.previous_button = function centipair$core$components$table$previous_button(table_data) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), centipair.core.components.table.previous_button_disabled_QMARK_.call(null, table_data) ? "disabled" : ""], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "href", "href", -793805698), centipair.core.components.table.previous_button_disabled_QMARK_.call(null, table_data) ? [cljs.core.str("#"), cljs.core.str((new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, table_data))), cljs.core.str("/"), cljs.core.str([cljs.core.str((new cljs.core.Keyword(null, "page", "page", 849072397)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, table_data)))].join(""))].join("") : 
  [cljs.core.str("#"), cljs.core.str((new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, table_data))), cljs.core.str("/"), cljs.core.str([cljs.core.str((new cljs.core.Keyword(null, "page", "page", 849072397)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, table_data)) - 1)].join(""))].join("")], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 
  1394872991), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aria-hidden", "aria-hidden", 399337029), "true"], null), "\x3c\x3c"], null)], null)], null);
};
centipair.core.components.table.next_button_disabled_QMARK_ = function centipair$core$components$table$next_button_disabled_QMARK_(table_data) {
  return(new cljs.core.Keyword(null, "page", "page", 849072397)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, table_data)) >= centipair.core.components.table.page_numbers.call(null, (new cljs.core.Keyword(null, "total", "total", 1916810418)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, table_data))) - 1;
};
centipair.core.components.table.next_button = function centipair$core$components$table$next_button(table_data) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), centipair.core.components.table.next_button_disabled_QMARK_.call(null, table_data) ? "disabled" : ""], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "href", "href", -793805698), centipair.core.components.table.next_button_disabled_QMARK_.call(null, table_data) ? [cljs.core.str("#"), cljs.core.str((new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, table_data))), cljs.core.str("/"), cljs.core.str([cljs.core.str((new cljs.core.Keyword(null, "page", "page", 849072397)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, table_data)))].join(""))].join("") : 
  [cljs.core.str("#"), cljs.core.str((new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, table_data))), cljs.core.str("/"), cljs.core.str([cljs.core.str((new cljs.core.Keyword(null, "page", "page", 849072397)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, table_data)) + 1)].join(""))].join("")], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 
  1394872991), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aria-hidden", "aria-hidden", 399337029), "true"], null), "\x3e\x3e"], null)], null)], null);
};
centipair.core.components.table.data_table_pagination = function centipair$core$components$table$data_table_pagination(table_data) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "nav", "nav", 719540477), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "pagination"], null), centipair.core.components.table.previous_button.call(null, table_data), cljs.core.doall.call(null, 
  cljs.core.map.call(null, cljs.core.partial.call(null, centipair.core.components.table.page_button, table_data), cljs.core.range.call(null, centipair.core.components.table.page_numbers.call(null, (new cljs.core.Keyword(null, "total", "total", 1916810418)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, table_data)))))), centipair.core.components.table.next_button.call(null, table_data)], null)], null);
};
centipair.core.components.table.data_table = function centipair$core$components$table$data_table(table_data) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), centipair.core.components.table.search_list_bar.call(null, table_data), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "table", "table", -564943036), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "table"], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "thead", "thead", -291875296), (new cljs.core.Keyword(null, "headers", "headers", -835030129)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, table_data))], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tbody", "tbody", -80678300), (new cljs.core.Keyword(null, "rows", "rows", 850049680)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  table_data))], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), centipair.core.components.table.data_table_pagination.call(null, table_data)], null)], null);
};
centipair.core.components.table.generate_table_rows = function centipair$core$components$table$generate_table_rows(data_list, data_container, ui_function) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "page", "page", 849072397)).cljs$core$IFn$_invoke$arity$1(data_list), (new cljs.core.Keyword(null, "page", "page", 849072397)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, data_container)))) {
    var table_rows = cljs.core.doall.call(null, cljs.core.map.call(null, ui_function, (new cljs.core.Keyword(null, "result", "result", 1415092211)).cljs$core$IFn$_invoke$arity$1(data_list)));
    return cljs.core.swap_BANG_.call(null, data_container, cljs.core.assoc, new cljs.core.Keyword(null, "rows", "rows", 850049680), table_rows, new cljs.core.Keyword(null, "total", "total", 1916810418), (new cljs.core.Keyword(null, "total", "total", 1916810418)).cljs$core$IFn$_invoke$arity$1(data_list));
  } else {
    return null;
  }
};
goog.provide("centipair.site.page");
goog.require("cljs.core");
goog.require("centipair.core.components.input");
goog.require("reagent.core");
goog.require("centipair.core.utilities.validators");
goog.require("centipair.core.components.tabs");
goog.require("centipair.admin.resources");
goog.require("cljs.core.async");
goog.require("centipair.core.utilities.ajax");
goog.require("centipair.core.ui");
goog.require("centipair.admin.channels");
goog.require("centipair.core.components.table");
centipair.site.page.page_headers = function centipair$site$page$page_headers() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), "Title"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), "Active"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "th", "th", -545608566), "Action"], null)], null);
};
centipair.site.page.delete_page = function centipair$site$page$delete_page(id) {
  return centipair.core.utilities.ajax.delete$.call(null, centipair.admin.resources.page_source.call(null, id), function(response) {
    return cljs.core.async.put_BANG_.call(null, centipair.admin.channels.page_list_channel, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.admin.channels.site_settings_id)));
  });
};
centipair.site.page.page_row = function centipair$site$page$page_row(row_data) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), (new cljs.core.Keyword(null, "page_title", "page_title", -263967741)).cljs$core$IFn$_invoke$arity$1(row_data)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "td", "td", 1479933353), [cljs.core.str((new cljs.core.Keyword(null, "page_active", "page_active", -548516481)).cljs$core$IFn$_invoke$arity$1(row_data))].join("")], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "href", "href", -793805698), [cljs.core.str("#/page/edit/"), cljs.core.str((new cljs.core.Keyword(null, "page_id", "page_id", 1238065700)).cljs$core$IFn$_invoke$arity$1(row_data))].join("")], null), "Edit "], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", -793805698), "javascript:void(0)", new cljs.core.Keyword(null, 
  "on-click", "on-click", 1632826543), cljs.core.partial.call(null, centipair.site.page.delete_page, (new cljs.core.Keyword(null, "page_id", "page_id", 1238065700)).cljs$core$IFn$_invoke$arity$1(row_data))], null), " Delete"], null)], null)], null);
};
centipair.site.page.page_data = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "page", "page", 849072397), 0, new cljs.core.Keyword(null, "url", "url", 276297046), "/pages", new cljs.core.Keyword(null, "total", "total", 1916810418), 0, new cljs.core.Keyword(null, "rows", "rows", 850049680), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), "Loading"], null)], null), new cljs.core.Keyword(null, "headers", "headers", -835030129), centipair.site.page.page_headers.call(null), new cljs.core.Keyword(null, "create", "create", -1301499256), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "entity", "entity", -450970276), "page"], null), new cljs.core.Keyword(null, "delete", "delete", -1768633620), new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "action", "action", -811238024), function() {
  return console.log("delete");
}], null)], null));
centipair.site.page.create_page_data_list = function centipair$site$page$create_page_data_list() {
  return centipair.core.components.table.data_table.call(null, centipair.site.page.page_data);
};
centipair.site.page.load_site_pages = function centipair$site$page$load_site_pages(site_settings_id) {
  return centipair.core.utilities.ajax.get_json.call(null, centipair.admin.resources.page_source.call(null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "site-settings-id", "site-settings-id", 1959446953), site_settings_id, new cljs.core.Keyword(null, "page", "page", 849072397), (new cljs.core.Keyword(null, "page", "page", 849072397)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.site.page.page_data)), new cljs.core.Keyword(null, "per", "per", -1436678642), 
  centipair.core.components.table.per_page], null), function(response) {
    return centipair.core.components.table.generate_table_rows.call(null, response, centipair.site.page.page_data, centipair.site.page.page_row);
  });
};
centipair.site.page.render_page_list = function centipair$site$page$render_page_list() {
  return centipair.core.ui.render.call(null, centipair.site.page.create_page_data_list, "content");
};
centipair.site.page.page_id = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "page-id", new cljs.core.Keyword(null, "value", "value", 305978217), null, new cljs.core.Keyword(null, "type", "type", 1174270348), "hidden", new cljs.core.Keyword(null, "value-type", "value-type", 576005757), "integer"], null));
centipair.site.page.page_title = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "page-title", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "label", "label", 1718410804), "Page Title", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.required], null));
centipair.site.page.page_content = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "page-content", new cljs.core.Keyword(null, "type", "type", 1174270348), "markdown", new cljs.core.Keyword(null, "label", "label", 1718410804), "Page Content"], null));
centipair.site.page.page_seo_subheading = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "page-seo-subheading", new cljs.core.Keyword(null, "label", "label", 1718410804), "Search Engine Optimization", new cljs.core.Keyword(null, "type", "type", 1174270348), "subheading"], null));
centipair.site.page.page_url = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "page-url", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "label", "label", 1718410804), "Page URL", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.required], null));
centipair.site.page.page_meta_keywords = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "page-meta-keywords", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "label", "label", 1718410804), "Page Meta Keywords"], null));
centipair.site.page.page_meta_description = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "page-meta-description", new cljs.core.Keyword(null, "type", "type", 1174270348), "textarea", new cljs.core.Keyword(null, "label", "label", 1718410804), "Page Meta Description"], null));
centipair.site.page.page_active = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "page-active", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "label", "label", 1718410804), "Active", new cljs.core.Keyword(null, "description", "description", -1428560544), "Publishes this page"], null));
centipair.site.page.page_template = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", -1388402092), "page-template", new cljs.core.Keyword(null, "label", "label", 1718410804), "Template", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.required, new cljs.core.Keyword(null, "default", "default", -1987822328), "page.html", new cljs.core.Keyword(null, "type", "type", 1174270348), "text"], 
null));
centipair.site.page.page_form = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "page-form", new cljs.core.Keyword(null, "title", "title", 636505583), "Page Editor"], null));
centipair.site.page.save_page = function centipair$site$page$save_page() {
  return centipair.core.utilities.ajax.form_post.call(null, centipair.site.page.page_form, centipair.admin.resources.page_source.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.site.page.page_id))), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.site.page.page_title, centipair.site.page.page_content, centipair.site.page.page_url, centipair.site.page.page_meta_keywords, 
  centipair.site.page.page_meta_description, centipair.site.page.page_id, centipair.admin.channels.site_settings_id, centipair.site.page.page_active, centipair.site.page.page_template], null), function(response) {
    centipair.core.utilities.ajax.data_saved_notifier.call(null, response);
    return cljs.core.swap_BANG_.call(null, centipair.site.page.page_id, cljs.core.assoc, new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "page_id", "page_id", 1238065700)).cljs$core$IFn$_invoke$arity$1(response));
  });
};
centipair.site.page.save_page_button = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Save", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), centipair.site.page.save_page, new cljs.core.Keyword(null, "id", "id", -1388402092), "save-page-button"], null));
centipair.site.page.create_page_form = function centipair$site$page$create_page_form() {
  return centipair.core.components.input.form_plain.call(null, centipair.site.page.page_form, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.site.page.page_title, centipair.site.page.page_content, centipair.site.page.page_seo_subheading, centipair.site.page.page_url, centipair.site.page.page_meta_keywords, centipair.site.page.page_meta_description, centipair.site.page.page_active, centipair.site.page.page_template], null), centipair.site.page.save_page_button);
};
centipair.site.page.map_page_form = function centipair$site$page$map_page_form(response) {
  centipair.admin.channels.set_site.call(null, (new cljs.core.Keyword(null, "site_settings_id", "site_settings_id", 295737949)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.page.page_id, (new cljs.core.Keyword(null, "page_id", "page_id", 1238065700)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.page.page_title, (new cljs.core.Keyword(null, "page_title", "page_title", -263967741)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.page.page_content, (new cljs.core.Keyword(null, "page_content", "page_content", -1431982283)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.page.page_url, (new cljs.core.Keyword(null, "page_url", "page_url", -725508863)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.page.page_meta_keywords, (new cljs.core.Keyword(null, "page_meta_keywords", "page_meta_keywords", 1193447858)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.page.page_meta_description, (new cljs.core.Keyword(null, "page_meta_description", "page_meta_description", -1917635937)).cljs$core$IFn$_invoke$arity$1(response));
  return centipair.core.components.input.update_value.call(null, centipair.site.page.page_template, (new cljs.core.Keyword(null, "page_template", "page_template", 1907125262)).cljs$core$IFn$_invoke$arity$1(response));
};
centipair.site.page.reset_page_form = function centipair$site$page$reset_page_form() {
  return centipair.core.components.input.reset_inputs.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.site.page.page_id, centipair.site.page.page_title, centipair.site.page.page_content, centipair.site.page.page_url, centipair.site.page.page_meta_keywords, centipair.site.page.page_meta_description, centipair.site.page.page_template], null));
};
centipair.site.page.render_crud_form = function centipair$site$page$render_crud_form() {
  return centipair.core.ui.render.call(null, centipair.site.page.create_page_form, "content");
};
centipair.site.page.edit_page = function centipair$site$page$edit_page(id) {
  centipair.site.page.render_crud_form.call(null);
  return centipair.core.utilities.ajax.get_json.call(null, centipair.admin.resources.page_source.call(null, id), null, function(response) {
    return centipair.site.page.map_page_form.call(null, response);
  });
};
centipair.site.page.new_page = function centipair$site$page$new_page() {
  centipair.site.page.reset_page_form.call(null);
  return centipair.site.page.render_crud_form.call(null);
};
centipair.site.page.markdown_html_value = function centipair$site$page$markdown_html_value() {
  return console.log((new cljs.core.Keyword(null, "html", "html", -998796897)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.site.page.page_content)));
};
centipair.site.page.map_page_data = function centipair$site$page$map_page_data(response) {
  centipair.core.components.input.update_value.call(null, centipair.site.page.page_title, (new cljs.core.Keyword(null, "page_title", "page_title", -263967741)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.page.page_content, (new cljs.core.Keyword(null, "page_content", "page_content", -1431982283)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.page.page_url, (new cljs.core.Keyword(null, "page_url", "page_url", -725508863)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.page.page_meta_keywords, (new cljs.core.Keyword(null, "page_meta_keywords", "page_meta_keywords", 1193447858)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.site.page.page_meta_description, (new cljs.core.Keyword(null, "page_meta_description", "page_meta_description", -1917635937)).cljs$core$IFn$_invoke$arity$1(response));
  return centipair.core.components.input.update_value.call(null, centipair.site.page.page_id, (new cljs.core.Keyword(null, "page_id", "page_id", 1238065700)).cljs$core$IFn$_invoke$arity$1(response));
};
centipair.site.page.init_page_list_channel = function centipair$site$page$init_page_list_channel() {
  var c__6881__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto__) {
    return function() {
      var f__6882__auto__ = function() {
        var switch__6825__auto__ = function(c__6881__auto__) {
          return function(state_11845) {
            var state_val_11846 = state_11845[1];
            if (state_val_11846 === 7) {
              var inst_11836 = state_11845[2];
              var inst_11837 = centipair.site.page.load_site_pages.call(null, inst_11836);
              var state_11845__$1 = function() {
                var statearr_11847 = state_11845;
                statearr_11847[7] = inst_11837;
                return statearr_11847;
              }();
              var statearr_11848_11861 = state_11845__$1;
              statearr_11848_11861[2] = null;
              statearr_11848_11861[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11846 === 6) {
                var inst_11841 = state_11845[2];
                var state_11845__$1 = state_11845;
                var statearr_11849_11862 = state_11845__$1;
                statearr_11849_11862[2] = inst_11841;
                statearr_11849_11862[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11846 === 5) {
                  var state_11845__$1 = state_11845;
                  var statearr_11850_11863 = state_11845__$1;
                  statearr_11850_11863[2] = null;
                  statearr_11850_11863[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11846 === 4) {
                    var state_11845__$1 = state_11845;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11845__$1, 7, centipair.admin.channels.page_list_channel);
                  } else {
                    if (state_val_11846 === 3) {
                      var inst_11843 = state_11845[2];
                      var state_11845__$1 = state_11845;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11845__$1, inst_11843);
                    } else {
                      if (state_val_11846 === 2) {
                        var state_11845__$1 = state_11845;
                        var statearr_11851_11864 = state_11845__$1;
                        statearr_11851_11864[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11846 === 1) {
                          var state_11845__$1 = state_11845;
                          var statearr_11853_11865 = state_11845__$1;
                          statearr_11853_11865[2] = null;
                          statearr_11853_11865[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6881__auto__);
        return function(switch__6825__auto__, c__6881__auto__) {
          return function() {
            var centipair$site$page$init_page_list_channel_$_state_machine__6826__auto__ = null;
            var centipair$site$page$init_page_list_channel_$_state_machine__6826__auto____0 = function() {
              var statearr_11857 = [null, null, null, null, null, null, null, null];
              statearr_11857[0] = centipair$site$page$init_page_list_channel_$_state_machine__6826__auto__;
              statearr_11857[1] = 1;
              return statearr_11857;
            };
            var centipair$site$page$init_page_list_channel_$_state_machine__6826__auto____1 = function(state_11845) {
              while (true) {
                var ret_value__6827__auto__ = function() {
                  try {
                    while (true) {
                      var result__6828__auto__ = switch__6825__auto__.call(null, state_11845);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6828__auto__;
                      }
                      break;
                    }
                  } catch (e11858) {
                    if (e11858 instanceof Object) {
                      var ex__6829__auto__ = e11858;
                      var statearr_11859_11866 = state_11845;
                      statearr_11859_11866[5] = ex__6829__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11845);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11858;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11867 = state_11845;
                  state_11845 = G__11867;
                  continue;
                } else {
                  return ret_value__6827__auto__;
                }
                break;
              }
            };
            centipair$site$page$init_page_list_channel_$_state_machine__6826__auto__ = function(state_11845) {
              switch(arguments.length) {
                case 0:
                  return centipair$site$page$init_page_list_channel_$_state_machine__6826__auto____0.call(this);
                case 1:
                  return centipair$site$page$init_page_list_channel_$_state_machine__6826__auto____1.call(this, state_11845);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            centipair$site$page$init_page_list_channel_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = centipair$site$page$init_page_list_channel_$_state_machine__6826__auto____0;
            centipair$site$page$init_page_list_channel_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = centipair$site$page$init_page_list_channel_$_state_machine__6826__auto____1;
            return centipair$site$page$init_page_list_channel_$_state_machine__6826__auto__;
          }();
        }(switch__6825__auto__, c__6881__auto__);
      }();
      var state__6883__auto__ = function() {
        var statearr_11860 = f__6882__auto__.call(null);
        statearr_11860[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto__;
        return statearr_11860;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
    };
  }(c__6881__auto__));
  return c__6881__auto__;
};
centipair.site.page.activate_page_list = function centipair$site$page$activate_page_list(page_number) {
  cljs.core.reset_BANG_.call(null, centipair.admin.channels.active_channel, centipair.admin.channels.page_list_channel);
  cljs.core.swap_BANG_.call(null, centipair.site.page.page_data, cljs.core.assoc, new cljs.core.Keyword(null, "page", "page", 849072397), parseInt(page_number));
  if (!((new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.admin.channels.site_settings_id)) == null)) {
    cljs.core.async.put_BANG_.call(null, centipair.admin.channels.page_list_channel, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.admin.channels.site_settings_id)));
  } else {
  }
  return centipair.site.page.render_page_list.call(null);
};
goog.provide("centipair.store.product");
goog.require("cljs.core");
goog.require("centipair.core.components.input");
goog.require("reagent.core");
goog.require("centipair.core.utilities.validators");
goog.require("centipair.admin.action");
goog.require("centipair.core.ui");
centipair.store.product.product_type_id = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "product-type-id", new cljs.core.Keyword(null, "type", "type", 1174270348), "hidden"], null);
centipair.store.product.product_type_name = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "product-type-name", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "label", "label", 1718410804), "Name: ", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.required], null));
centipair.store.product.product_type_attribute_name = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "product-type-attribute-name", new cljs.core.Keyword(null, "type", "type", 1174270348), "text"], null);
centipair.store.product.product_type_attribute_type = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "product-type-attribute-type", new cljs.core.Keyword(null, "type", "type", 1174270348), "text"], null);
centipair.store.product.product_type_attribute_label = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "product-type-attribute-label", new cljs.core.Keyword(null, "type", "type", 1174270348), "text"], null);
centipair.store.product.product_type_attribute_sort_order = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "product-type-attribute-sort-order", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "value-type", "value-type", 576005757), "integer"], null);
centipair.store.product.attribute_name = reagent.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
centipair.store.product.product_type_attributes = reagent.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
centipair.store.product.delete_product_type = function centipair$store$product$delete_product_type() {
  return null;
};
centipair.store.product.product_type_action_bar = function centipair$store$product$product_type_action_bar() {
  return centipair.admin.action.crud_action_bar.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "create", "create", -1301499256), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "entity", "entity", -450970276), "product-type", new cljs.core.Keyword(null, "label", "label", 1718410804), "Create new product type"], null), new cljs.core.Keyword(null, "delete", "delete", -1768633620), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
  "action", "action", -811238024), centipair.store.product.delete_product_type, new cljs.core.Keyword(null, "label", "label", 1718410804), "Delete selected product types"], null)], null));
};
centipair.store.product.product_type_page = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 636505583), "Product Type", new cljs.core.Keyword(null, "action-bar", "action-bar", 1747757453), centipair.store.product.product_type_action_bar], null));
centipair.store.product.new_product_type_page = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "New product Type"], null));
centipair.store.product.product_type = function centipair$store$product$product_type() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "table", "table", -564943036)], null);
};
centipair.store.product.new_product_type = function centipair$store$product$new_product_type() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "form-inline"], null), centipair.core.components.input.plain_text.call(null, centipair.store.product.product_type_name)], null);
};
centipair.store.product.render_product_type = function centipair$store$product$render_product_type() {
  return centipair.core.ui.render_page.call(null, centipair.store.product.product_type_page, centipair.store.product.product_type);
};
centipair.store.product.render_new_product_type_form = function centipair$store$product$render_new_product_type_form() {
  return centipair.core.ui.render_page.call(null, centipair.store.product.new_product_type_page, centipair.store.product.new_product_type);
};
goog.provide("centipair.store.forms");
goog.require("cljs.core");
goog.require("centipair.core.components.input");
goog.require("reagent.core");
goog.require("centipair.core.utilities.validators");
goog.require("centipair.core.utilities.countries");
goog.require("centipair.core.components.tabs");
goog.require("centipair.admin.resources");
goog.require("centipair.core.utilities.currency");
goog.require("cljs.core.async");
goog.require("centipair.core.utilities.ajax");
goog.require("centipair.core.ui");
goog.require("centipair.admin.channels");
goog.require("centipair.core.components.notifier");
centipair.store.forms.store_settings_id = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "store-settings-id", new cljs.core.Keyword(null, "value", "value", 305978217), null], null));
centipair.store.forms.store_name = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "store-name", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "label", "label", 1718410804), "Store Name", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.required], null));
centipair.store.forms.store_description = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "store-description", new cljs.core.Keyword(null, "type", "type", 1174270348), "textarea", new cljs.core.Keyword(null, "label", "label", 1718410804), "Store Description", new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.required], null));
centipair.store.forms.store_base = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", -1388402092), "store-base", new cljs.core.Keyword(null, "type", "type", 1174270348), "select", new cljs.core.Keyword(null, "label", "label", 1718410804), "Store Base", new cljs.core.Keyword(null, "options", "options", 99638489), centipair.core.utilities.countries.supported_country_list, new cljs.core.Keyword(null, "value", "value", 305978217), "US"], null));
centipair.store.forms.default_currency = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", -1388402092), "default-currency", new cljs.core.Keyword(null, "type", "type", 1174270348), "select", new cljs.core.Keyword(null, "label", "label", 1718410804), "Default Currency", new cljs.core.Keyword(null, "options", "options", 99638489), centipair.core.utilities.currency.supported_currency_list, new cljs.core.Keyword(null, "value", "value", 305978217), 
"USD"], null));
centipair.store.forms.cart_account_subheading = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "cart-account", new cljs.core.Keyword(null, "label", "label", 1718410804), "Cart, Checkout and Accounts", new cljs.core.Keyword(null, "type", "type", 1174270348), "subheading"], null));
centipair.store.forms.enable_coupons = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "enable-coupons", new cljs.core.Keyword(null, "label", "label", 1718410804), "Coupons", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "description", "description", -1428560544), "Enable the use of coupons"], null));
centipair.store.forms.enable_guest_checkout = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "enable-guest-checkout", new cljs.core.Keyword(null, "label", "label", 1718410804), "Checkout", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "description", "description", -1428560544), "Enable Guest Checkout"], null));
centipair.store.forms.enable_customer_note = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "enable-customer-note", new cljs.core.Keyword(null, "label", "label", 1718410804), "", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "description", "description", -1428560544), "Enable Customer Note on Checkout"], null));
centipair.store.forms.registration_on_checkout = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "registration-on-checkout", new cljs.core.Keyword(null, "label", "label", 1718410804), "Registration", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "description", "description", -1428560544), "Allow registration on checkout"], null));
centipair.store.forms.default_product_sorting = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "product-sorting", new cljs.core.Keyword(null, "type", "type", 1174270348), "select", new cljs.core.Keyword(null, "label", "label", 1718410804), "Default product sorting", new cljs.core.Keyword(null, "options", "options", 99638489), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Popularity (sales)", new cljs.core.Keyword(null, "value", "value", 305978217), "popularity"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Average Rating", new cljs.core.Keyword(null, "value", "value", 305978217), "rating"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Sort by most recent", new cljs.core.Keyword(null, 
"value", "value", 305978217), "recent"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Sort by Price (ascending)", new cljs.core.Keyword(null, "value", "value", 305978217), "price-ascending"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Sort by Price (descending)", new cljs.core.Keyword(null, "value", "value", 305978217), "price-descending"], null)], null)], null));
centipair.store.forms.shop_display_page = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "shop-display-page", new cljs.core.Keyword(null, "type", "type", 1174270348), "select", new cljs.core.Keyword(null, "label", "label", 1718410804), "Shop Display", new cljs.core.Keyword(null, "options", "options", 99638489), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Show products", new cljs.core.Keyword(null, "value", "value", 305978217), "products"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "categories", new cljs.core.Keyword(null, "value", "value", 305978217), "categories"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "both", new cljs.core.Keyword(null, "value", 
"value", 305978217), "both"], null)], null)], null));
centipair.store.forms.validate_items_per_page = function centipair$store$forms$validate_items_per_page(field) {
  var check_value = parseInt((new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(field));
  if (cljs.core.integer_QMARK_.call(null, check_value)) {
    if ((new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(field) < 100) {
      return centipair.core.utilities.validators.validation_success.call(null);
    } else {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "message", "message", -406056002), "Please enter an integer less than 100", new cljs.core.Keyword(null, "valid", "valid", 155614240), false], null);
    }
  } else {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "message", "message", -406056002), "Please enter an integer less than 100", new cljs.core.Keyword(null, "valid", "valid", 155614240), false], null);
  }
};
centipair.store.forms.items_per_page = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "id", "id", -1388402092), "items-per-page", new cljs.core.Keyword(null, "label", "label", 1718410804), "Number of items per page", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "size", "size", 1098693007), 1, new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.store.forms.validate_items_per_page, 
new cljs.core.Keyword(null, "value-type", "value-type", 576005757), "integer"], null));
centipair.store.forms.product_subheading = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "product-subheading", new cljs.core.Keyword(null, "label", "label", 1718410804), "Product", new cljs.core.Keyword(null, "type", "type", 1174270348), "subheading"], null));
centipair.store.forms.weight_unit = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "weight-unit", new cljs.core.Keyword(null, "label", "label", 1718410804), "Weight Unit", new cljs.core.Keyword(null, "type", "type", 1174270348), "select", new cljs.core.Keyword(null, "options", "options", 99638489), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Kilogram (kg)", new cljs.core.Keyword(null, "value", "value", 305978217), "kg"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Gram (g)", new cljs.core.Keyword(null, "value", "value", 305978217), "g"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Pound (lbs)", new cljs.core.Keyword(null, "value", "value", 305978217), 
"lbs"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Ounce (oz)", new cljs.core.Keyword(null, "value", "value", 305978217), "oz"], null)], null)], null));
centipair.store.forms.dimensions_unit = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "dimensions-unit", new cljs.core.Keyword(null, "label", "label", 1718410804), "Dimensions Unit", new cljs.core.Keyword(null, "type", "type", 1174270348), "select", new cljs.core.Keyword(null, "options", "options", 99638489), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Meter (m)", new cljs.core.Keyword(null, "value", "value", 305978217), "m"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Centimeter (m)", new cljs.core.Keyword(null, "value", "value", 305978217), "cm"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Millimeter (mm)", new cljs.core.Keyword(null, "value", "value", 
305978217), "mm"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Inch (in)", new cljs.core.Keyword(null, "value", "value", 305978217), "in"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Yard (yd)", new cljs.core.Keyword(null, "value", "value", 305978217), "yd"], null)], null)], null));
centipair.store.forms.product_rating = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "product-rating", new cljs.core.Keyword(null, "label", "label", 1718410804), "Product Ratings", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "description", "description", -1428560544), "Enable product ratings"], null));
centipair.store.forms.review_rating_required = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "review-rating-required", new cljs.core.Keyword(null, "label", "label", 1718410804), "", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "description", "description", -1428560544), "Ratings are required to leave a review"], null));
centipair.store.forms.show_verified_buyer_label = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "show-verified-buyer-label", new cljs.core.Keyword(null, "label", "label", 1718410804), "", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "description", "description", -1428560544), "Show 'Verified Buyer' label"], null));
centipair.store.forms.only_verified_buyer_review = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "only-verified-buyer-review", new cljs.core.Keyword(null, "label", "label", 1718410804), "", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "description", "description", -1428560544), "Only allow reviews from verified buyers"], null));
centipair.store.forms.review_alert_mail = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "review-alert-mail", new cljs.core.Keyword(null, "label", "label", 1718410804), "New Review Alert Mail", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "description", "description", -1428560544), "Send an email to admin when new review is submitted"], null));
centipair.store.forms.pricing_subheading = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "pricing-subheading", new cljs.core.Keyword(null, "label", "label", 1718410804), "Pricing", new cljs.core.Keyword(null, "type", "type", 1174270348), "subheading", new cljs.core.Keyword(null, "description", "description", -1428560544), "Product based settings"], null));
centipair.store.forms.currency_position = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "currency-position", new cljs.core.Keyword(null, "label", "label", 1718410804), "Currency position", new cljs.core.Keyword(null, "type", "type", 1174270348), "select", new cljs.core.Keyword(null, "options", "options", 99638489), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Left", new cljs.core.Keyword(null, "value", "value", 305978217), "left"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Right", new cljs.core.Keyword(null, "value", "value", 305978217), "right"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Left (with space)", new cljs.core.Keyword(null, "value", "value", 305978217), 
"left-space"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Right (with space)", new cljs.core.Keyword(null, "value", "value", 305978217), "right-space"], null)], null)], null));
centipair.store.forms.remove_trailing_zeros = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "remove-trailing-zeros", new cljs.core.Keyword(null, "label", "label", 1718410804), "Trailing zeros", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "description", "description", -1428560544), "Remove trailing zeros after the decimal point. e.g. $10.00 becomes $10"], null));
centipair.store.forms.product_image_subheading = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "product-image-subheading", new cljs.core.Keyword(null, "label", "label", 1718410804), "Product Image Sizes", new cljs.core.Keyword(null, "type", "type", 1174270348), "subheading", new cljs.core.Keyword(null, "description", "description", -1428560544), "These settings affect the actual dimensions of images in your catalog - the display on the front-end will still be affected by CSS styles"], 
null));
centipair.store.forms.validate_image_specs = function centipair$store$forms$validate_image_specs(field) {
  return null;
};
centipair.store.forms.catalog_images = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "id", "id", -1388402092), "catalog-images", new cljs.core.Keyword(null, "type", "type", 1174270348), "image-spec", new cljs.core.Keyword(null, "label", "label", 1718410804), "Catalog Images", new cljs.core.Keyword(null, "width", "width", -384071477), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), "catalog-images-width"], 
null), new cljs.core.Keyword(null, "height", "height", 1025178622), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), "catalog-images-height"], null), new cljs.core.Keyword(null, "crop", "crop", 793731643), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "catalog-images-hard-crop", new cljs.core.Keyword(null, "description", "description", -1428560544), "hard crop"], null)], null));
centipair.store.forms.single_product_image = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "id", "id", -1388402092), "single-product-image", new cljs.core.Keyword(null, "type", "type", 1174270348), "image-spec", new cljs.core.Keyword(null, "label", "label", 1718410804), "Single product image", new cljs.core.Keyword(null, "width", "width", -384071477), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), 
"single-product-image-width"], null), new cljs.core.Keyword(null, "height", "height", 1025178622), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), "single-product-image-height"], null), new cljs.core.Keyword(null, "crop", "crop", 793731643), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "single-product-image-hard-crop", new cljs.core.Keyword(null, "description", "description", -1428560544), "hard crop"], 
null)], null));
centipair.store.forms.product_thumbnails = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "id", "id", -1388402092), "product-thumbnails", new cljs.core.Keyword(null, "type", "type", 1174270348), "image-spec", new cljs.core.Keyword(null, "label", "label", 1718410804), "Product thumbnails", new cljs.core.Keyword(null, "width", "width", -384071477), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), "product-thumbnails-width"], 
null), new cljs.core.Keyword(null, "height", "height", 1025178622), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), "product-thumbnails-height"], null), new cljs.core.Keyword(null, "crop", "crop", 793731643), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "product-thumbnails-hard-crop", new cljs.core.Keyword(null, "description", "description", -1428560544), "hard crop"], null)], null));
centipair.store.forms.manage_stock = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "manage-stock", new cljs.core.Keyword(null, "label", "label", 1718410804), "Manage Stock", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "description", "description", -1428560544), "Enable stock management"], null));
centipair.store.forms.hold_stock = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "id", "id", -1388402092), "hold-stock", new cljs.core.Keyword(null, "label", "label", 1718410804), "Hold Stock (minutes)", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "size", "size", 1098693007), 1, new cljs.core.Keyword(null, "validator", "validator", -1966190681), centipair.core.utilities.validators.integer_required, 
new cljs.core.Keyword(null, "value-type", "value-type", 576005757), "integer"], null));
centipair.store.forms.low_stock_notification = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "low-stock-notification", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "label", "label", 1718410804), "Notifications", new cljs.core.Keyword(null, "description", "description", -1428560544), "Enable low stock notification"], null));
centipair.store.forms.out_of_stock_notification = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "out-of-stock-notification", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "label", "label", 1718410804), "", new cljs.core.Keyword(null, "description", "description", -1428560544), "Enable out of stock notification"], null));
centipair.store.forms.stock_notification_recipient = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", -1388402092), "stock-notification-recipient", new cljs.core.Keyword(null, "type", "type", 1174270348), "email", new cljs.core.Keyword(null, "label", "label", 1718410804), "Notification recipient", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Enter stock notification recipient email", new cljs.core.Keyword(null, 
"validator", "validator", -1966190681), centipair.core.utilities.validators.email_required], null));
centipair.store.forms.low_stock_threshold = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", -1388402092), "low-stock-threshold", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "label", "label", 1718410804), "Low stock threshold", new cljs.core.Keyword(null, "size", "size", 1098693007), 1, new cljs.core.Keyword(null, "value-type", "value-type", 576005757), "integer"], null));
centipair.store.forms.out_of_stock_threshold = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "id", "id", -1388402092), "out-of-stock-threshold", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "label", "label", 1718410804), "Out of stock threshold", new cljs.core.Keyword(null, "size", "size", 1098693007), 1, new cljs.core.Keyword(null, "value-type", "value-type", 576005757), "integer", new cljs.core.Keyword(null, 
"validator", "validator", -1966190681), centipair.core.utilities.validators.integer_required], null));
centipair.store.forms.out_of_stock_visibility = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "out-of-stock-visibility", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "label", "label", 1718410804), "Out of stock visibility", new cljs.core.Keyword(null, "description", "description", -1428560544), "Hide out of stock items from the catalog"], null));
centipair.store.forms.stock_display_format = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "stock-display-format", new cljs.core.Keyword(null, "label", "label", 1718410804), "Stock display format", new cljs.core.Keyword(null, "type", "type", 1174270348), "select", new cljs.core.Keyword(null, "options", "options", 99638489), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), 'Always show stock e.g. "9 in stock"', new cljs.core.Keyword(null, "value", "value", 305978217), "always"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), 'Only show stock when low e.g. "only 2 left in stock" vs "In stock"', new cljs.core.Keyword(null, "value", "value", 305978217), "only-low"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", 
"label", 1718410804), "Never show stock amount", new cljs.core.Keyword(null, "value", "value", 305978217), "never"], null)], null)], null));
centipair.store.forms.store_form = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "Store Settings", new cljs.core.Keyword(null, "id", "id", -1388402092), "store-form", new cljs.core.Keyword(null, "type", "type", 1174270348), "form"], null));
centipair.store.forms.catalog_form = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "Catalog Settings", new cljs.core.Keyword(null, "id", "id", -1388402092), "catalog-settings", new cljs.core.Keyword(null, "type", "type", 1174270348), "form"], null));
centipair.store.forms.inventory_form = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "Inventory Options", new cljs.core.Keyword(null, "id", "id", -1388402092), "inventory-options", new cljs.core.Keyword(null, "type", "type", 1174270348), "form"], null));
centipair.store.forms.store_group = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "group", new cljs.core.Keyword(null, "value", "value", 305978217), "store"], null));
centipair.store.forms.save_store_settings = function centipair$store$forms$save_store_settings() {
  return centipair.core.utilities.ajax.form_post.call(null, centipair.store.forms.store_form, centipair.admin.resources.store_source.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.store.forms.store_settings_id))), new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.store.forms.store_group, centipair.admin.channels.site_settings_id, centipair.store.forms.store_settings_id, 
  centipair.store.forms.store_name, centipair.store.forms.store_description, centipair.store.forms.store_base, centipair.store.forms.default_currency, centipair.store.forms.enable_coupons, centipair.store.forms.enable_guest_checkout, centipair.store.forms.enable_customer_note, centipair.store.forms.registration_on_checkout], null), function(response) {
    cljs.core.async.put_BANG_.call(null, centipair.admin.channels.store_settings_channel, response);
    return centipair.core.utilities.ajax.data_saved_notifier.call(null, response);
  });
};
centipair.store.forms.save_store_button = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Save", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), centipair.store.forms.save_store_settings, new cljs.core.Keyword(null, "id", "id", -1388402092), "save-store-button"], null));
centipair.store.forms.create_store_form = function centipair$store$forms$create_store_form() {
  return centipair.core.components.input.form_aligned.call(null, centipair.store.forms.store_form, new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.store.forms.store_name, centipair.store.forms.store_description, centipair.store.forms.store_base, centipair.store.forms.default_currency, centipair.store.forms.cart_account_subheading, centipair.store.forms.enable_coupons, centipair.store.forms.enable_guest_checkout, centipair.store.forms.enable_customer_note, 
  centipair.store.forms.registration_on_checkout], null), centipair.store.forms.save_store_button);
};
centipair.store.forms.catalog_group = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "group", new cljs.core.Keyword(null, "value", "value", 305978217), "catalog"], null));
centipair.store.forms.save_catalog_settings = function centipair$store$forms$save_catalog_settings() {
  return centipair.core.utilities.ajax.form_post.call(null, centipair.store.forms.catalog_form, centipair.admin.resources.store_source.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.store.forms.store_settings_id))), new cljs.core.PersistentVector(null, 21, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.store.forms.catalog_group, centipair.store.forms.default_product_sorting, centipair.store.forms.shop_display_page, 
  centipair.store.forms.items_per_page, centipair.store.forms.product_subheading, centipair.store.forms.weight_unit, centipair.store.forms.dimensions_unit, centipair.store.forms.product_rating, centipair.store.forms.review_rating_required, centipair.store.forms.show_verified_buyer_label, centipair.store.forms.only_verified_buyer_review, centipair.store.forms.review_alert_mail, centipair.store.forms.pricing_subheading, centipair.store.forms.currency_position, centipair.store.forms.remove_trailing_zeros, 
  centipair.store.forms.product_image_subheading, centipair.store.forms.catalog_images, centipair.store.forms.single_product_image, centipair.store.forms.product_thumbnails, centipair.admin.channels.site_settings_id, centipair.store.forms.store_settings_id], null), function(response) {
    return cljs.core.swap_BANG_.call(null, centipair.store.forms.store_settings_id, cljs.core.assoc, new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "store_settings_id", "store_settings_id", -1652655363)).cljs$core$IFn$_invoke$arity$1(response));
  });
};
centipair.store.forms.save_catalog_button = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Save", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), centipair.store.forms.save_catalog_settings, new cljs.core.Keyword(null, "id", "id", -1388402092), "save-catalog-button"], null));
centipair.store.forms.create_catalog_form = function centipair$store$forms$create_catalog_form() {
  return centipair.core.components.input.form_aligned.call(null, centipair.store.forms.catalog_form, new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.store.forms.default_product_sorting, centipair.store.forms.shop_display_page, centipair.store.forms.items_per_page, centipair.store.forms.product_subheading, centipair.store.forms.weight_unit, centipair.store.forms.dimensions_unit, centipair.store.forms.product_rating, centipair.store.forms.review_rating_required, 
  centipair.store.forms.show_verified_buyer_label, centipair.store.forms.only_verified_buyer_review, centipair.store.forms.review_alert_mail, centipair.store.forms.pricing_subheading, centipair.store.forms.currency_position, centipair.store.forms.remove_trailing_zeros, centipair.store.forms.product_image_subheading, centipair.store.forms.catalog_images, centipair.store.forms.single_product_image, centipair.store.forms.product_thumbnails], null), centipair.store.forms.save_catalog_button);
};
centipair.store.forms.inventory_group = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "group", new cljs.core.Keyword(null, "value", "value", 305978217), "inventory"], null));
centipair.store.forms.save_inventory = function centipair$store$forms$save_inventory() {
  return centipair.core.utilities.ajax.form_post.call(null, centipair.store.forms.inventory_form, centipair.admin.resources.store_source.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.store.forms.store_settings_id))), new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.store.forms.inventory_group, centipair.store.forms.manage_stock, centipair.store.forms.hold_stock, 
  centipair.store.forms.low_stock_notification, centipair.store.forms.out_of_stock_notification, centipair.store.forms.stock_notification_recipient, centipair.store.forms.low_stock_threshold, centipair.store.forms.out_of_stock_threshold, centipair.store.forms.out_of_stock_visibility, centipair.store.forms.stock_display_format, centipair.admin.channels.site_settings_id, centipair.store.forms.store_settings_id], null), function(response) {
    return cljs.core.swap_BANG_.call(null, centipair.store.forms.store_settings_id, cljs.core.assoc, new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "store_settings_id", "store_settings_id", -1652655363)).cljs$core$IFn$_invoke$arity$1(response));
  });
};
centipair.store.forms.save_inventory_button = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Save", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), centipair.store.forms.save_inventory, new cljs.core.Keyword(null, "id", "id", -1388402092), "save-inventory-button"], null));
centipair.store.forms.create_inventory_form = function centipair$store$forms$create_inventory_form() {
  return centipair.core.components.input.form_aligned.call(null, centipair.store.forms.inventory_form, new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.store.forms.manage_stock, centipair.store.forms.hold_stock, centipair.store.forms.low_stock_notification, centipair.store.forms.out_of_stock_notification, centipair.store.forms.stock_notification_recipient, centipair.store.forms.low_stock_threshold, centipair.store.forms.out_of_stock_threshold, centipair.store.forms.out_of_stock_visibility, 
  centipair.store.forms.stock_display_format], null), centipair.store.forms.save_inventory_button);
};
centipair.store.forms.enable_taxes = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "enable-taxes", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "label", "label", 1718410804), "Enable Tax", new cljs.core.Keyword(null, "description", "description", -1428560544), "Enable taxes and tax calculations"], null));
centipair.store.forms.tax_included_price = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "tax-included-price", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "label", "label", 1718410804), "Prices Entered With Tax", new cljs.core.Keyword(null, "description", "description", -1428560544), "I will enter prices inclusive of tax"], null));
centipair.store.forms.calculate_tax_based_on = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "calculate-tax-based-on", new cljs.core.Keyword(null, "label", "label", 1718410804), "Calculate Tax based on", new cljs.core.Keyword(null, "type", "type", 1174270348), "select", new cljs.core.Keyword(null, "options", "options", 99638489), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Customer Shipping Address", new cljs.core.Keyword(null, "value", "value", 305978217), "customer-shipping-address"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Customer Billing Address", new cljs.core.Keyword(null, "value", "value", 305978217), "customer-billing-address"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), 
"Shop Base Address", new cljs.core.Keyword(null, "value", "value", 305978217), "shop-base-address"], null)], null)], null));
centipair.store.forms.default_customer_address = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "default-customer-address", new cljs.core.Keyword(null, "label", "label", 1718410804), "Default Customer Address", new cljs.core.Keyword(null, "type", "type", 1174270348), "select", new cljs.core.Keyword(null, "options", "options", 99638489), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Shop Base Address", new cljs.core.Keyword(null, "value", "value", 305978217), "shop-base-address"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "No Address", new cljs.core.Keyword(null, "value", "value", 305978217), "none"], null)], null)], null));
centipair.store.forms.shipping_tax_class = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "shipping-tax-class", new cljs.core.Keyword(null, "label", "label", 1718410804), "Shipping Tax Class", new cljs.core.Keyword(null, "type", "type", 1174270348), "select", new cljs.core.Keyword(null, "options", "options", 99638489), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Shipping tax class based on cart items", new cljs.core.Keyword(null, "value", "value", 305978217), "cart-items"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Standard", new cljs.core.Keyword(null, "value", "value", 305978217), "standard"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Reduced Rate", new cljs.core.Keyword(null, 
"value", "value", 305978217), "reduced-rate"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Zero Rate", new cljs.core.Keyword(null, "value", "value", 305978217), "zero-rate"], null)], null)], null));
centipair.store.forms.tax_total_rounding = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "tax-total-rounding", new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "label", "label", 1718410804), "Rounding", new cljs.core.Keyword(null, "description", "description", -1428560544), "Round tax at subtotal level, instead of rounding per line"], null));
centipair.store.forms.checkout_display_tax_price = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "checkout-display-tax-price", new cljs.core.Keyword(null, "label", "label", 1718410804), "Display prices during cart/checkout", new cljs.core.Keyword(null, "type", "type", 1174270348), "select", new cljs.core.Keyword(null, "options", "options", 99638489), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Excluding Tax", new cljs.core.Keyword(null, "value", "value", 305978217), "excluding-tax"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Including Tax", new cljs.core.Keyword(null, "value", "value", 305978217), "including-tax"], null)], null)], null));
centipair.store.forms.tax_form = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 636505583), "Tax settings", new cljs.core.Keyword(null, "id", "id", -1388402092), "tax-settings"], null));
centipair.store.forms.tax_group = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), "group", new cljs.core.Keyword(null, "value", "value", 305978217), "tax"], null));
centipair.store.forms.save_tax_settings = function centipair$store$forms$save_tax_settings() {
  return centipair.core.utilities.ajax.form_post.call(null, centipair.store.forms.tax_form, centipair.admin.resources.store_source.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, centipair.store.forms.store_settings_id))), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.store.forms.tax_group, centipair.store.forms.enable_taxes, centipair.store.forms.tax_included_price, centipair.store.forms.calculate_tax_based_on, 
  centipair.store.forms.default_customer_address, centipair.store.forms.shipping_tax_class, centipair.store.forms.tax_total_rounding, centipair.store.forms.checkout_display_tax_price, centipair.store.forms.store_settings_id, centipair.admin.channels.site_settings_id], null), function(response) {
    return cljs.core.swap_BANG_.call(null, centipair.store.forms.store_settings_id, cljs.core.assoc, new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "store_settings_id", "store_settings_id", -1652655363)).cljs$core$IFn$_invoke$arity$1(response));
  });
};
centipair.store.forms.save_tax_button = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Save", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), centipair.store.forms.save_tax_settings, new cljs.core.Keyword(null, "id", "id", -1388402092), "save-tax-button"], null));
centipair.store.forms.create_tax_form = function centipair$store$forms$create_tax_form() {
  return centipair.core.components.input.form_aligned.call(null, centipair.store.forms.tax_form, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.store.forms.enable_taxes, centipair.store.forms.tax_included_price, centipair.store.forms.calculate_tax_based_on, centipair.store.forms.default_customer_address, centipair.store.forms.shipping_tax_class, centipair.store.forms.tax_total_rounding, centipair.store.forms.checkout_display_tax_price], null), centipair.store.forms.save_tax_button);
};
centipair.store.forms.store_settings_tab = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", -1388402092), "store-settings", new cljs.core.Keyword(null, "label", "label", 1718410804), "Store Settings", new cljs.core.Keyword(null, "content", "content", 15833224), centipair.store.forms.create_store_form, new cljs.core.Keyword(null, "active", "active", 1895962068), true, new cljs.core.Keyword(null, "url", "url", 276297046), "store-settings"], 
null));
centipair.store.forms.catalog_settings_tab = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", -1388402092), "catalog-settings", new cljs.core.Keyword(null, "label", "label", 1718410804), "Catalog", new cljs.core.Keyword(null, "content", "content", 15833224), centipair.store.forms.create_catalog_form, new cljs.core.Keyword(null, "active", "active", 1895962068), false, new cljs.core.Keyword(null, "url", "url", 276297046), "catalog-settings"], 
null));
centipair.store.forms.inventory_settings_tab = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", -1388402092), "inventory-settings", new cljs.core.Keyword(null, "label", "label", 1718410804), "Inventory", new cljs.core.Keyword(null, "content", "content", 15833224), centipair.store.forms.create_inventory_form, new cljs.core.Keyword(null, "active", "active", 1895962068), false, new cljs.core.Keyword(null, "url", "url", 276297046), "inventory-settings"], 
null));
centipair.store.forms.tax_settings_tab = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", -1388402092), "tax-settings", new cljs.core.Keyword(null, "label", "label", 1718410804), "Tax", new cljs.core.Keyword(null, "content", "content", 15833224), centipair.store.forms.create_tax_form, new cljs.core.Keyword(null, "active", "active", 1895962068), false, new cljs.core.Keyword(null, "url", "url", 276297046), "tax-settings"], null));
centipair.store.forms.settings_tabs = function centipair$store$forms$settings_tabs() {
  return centipair.core.components.tabs.render_tabs.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.store.forms.store_settings_tab, centipair.store.forms.catalog_settings_tab, centipair.store.forms.inventory_settings_tab, centipair.store.forms.tax_settings_tab], null));
};
centipair.store.forms.store_page = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 636505583), "Store", new cljs.core.Keyword(null, "message", "message", -406056002), "Loading store settings..."], null));
centipair.store.forms.render_store_form = function centipair$store$forms$render_store_form(site_id) {
  centipair.admin.channels.set_active_channel.call(null, centipair.admin.channels.store_settings_channel);
  return centipair.core.ui.render_page.call(null, centipair.store.forms.store_page, centipair.store.forms.settings_tabs);
};
centipair.store.forms.load_store_message = function centipair$store$forms$load_store_message(response) {
  if ((new cljs.core.Keyword(null, "store_settings_id", "store_settings_id", -1652655363)).cljs$core$IFn$_invoke$arity$1(response) == null) {
    return cljs.core.swap_BANG_.call(null, centipair.store.forms.store_page, cljs.core.assoc, new cljs.core.Keyword(null, "message", "message", -406056002), "Store not found");
  } else {
    return cljs.core.swap_BANG_.call(null, centipair.store.forms.store_page, cljs.core.assoc, new cljs.core.Keyword(null, "message", "message", -406056002), "");
  }
};
centipair.store.forms.clear_store_form_errors = function centipair$store$forms$clear_store_form_errors() {
  return centipair.core.components.input.clear_form_errors.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.store.forms.store_form, centipair.store.forms.store_name, centipair.store.forms.store_description, centipair.store.forms.store_base, centipair.store.forms.default_currency, centipair.store.forms.cart_account_subheading, centipair.store.forms.enable_coupons, centipair.store.forms.enable_guest_checkout, centipair.store.forms.enable_customer_note, 
  centipair.store.forms.registration_on_checkout], null));
};
centipair.store.forms.map_store_settings = function centipair$store$forms$map_store_settings(response) {
  centipair.core.components.input.update_value.call(null, centipair.store.forms.store_settings_id, (new cljs.core.Keyword(null, "store_settings_id", "store_settings_id", -1652655363)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.store.forms.store_name, (new cljs.core.Keyword(null, "store_name", "store_name", 252175049)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.store.forms.store_description, (new cljs.core.Keyword(null, "store_description", "store_description", -1200103629)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.store.forms.store_base, (new cljs.core.Keyword(null, "store_base", "store_base", 362748710)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.store.forms.default_currency, (new cljs.core.Keyword(null, "default_currency", "default_currency", 526161975)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.store.forms.enable_coupons, (new cljs.core.Keyword(null, "enable_coupons", "enable_coupons", 1646250385)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.store.forms.enable_guest_checkout, (new cljs.core.Keyword(null, "enable_guest_checkout", "enable_guest_checkout", -622398568)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.store.forms.enable_customer_note, (new cljs.core.Keyword(null, "enable_customer_note", "enable_customer_note", 572592338)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.store.forms.registration_on_checkout, (new cljs.core.Keyword(null, "registration_on_checkout", "registration_on_checkout", 1214762809)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.store.forms.default_product_sorting, (new cljs.core.Keyword(null, "default_prouct_sorting", "default_prouct_sorting", -1881028108)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.store.forms.shop_display_page, (new cljs.core.Keyword(null, "shop_display_page", "shop_display_page", -1943431501)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.store.forms.items_per_page, (new cljs.core.Keyword(null, "items_per_page", "items_per_page", -138759676)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.store.forms.product_rating, (new cljs.core.Keyword(null, "product_rating", "product_rating", 1513050819)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.store.forms.review_rating_required, (new cljs.core.Keyword(null, "review_rating_required", "review_rating_required", 2075972192)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.store.forms.show_verified_buyer_label, (new cljs.core.Keyword(null, "show_verified_buyer_label", "show_verified_buyer_label", -418968379)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.store.forms.only_verified_buyer_review, (new cljs.core.Keyword(null, "only_verified_buyer_review", "only_verified_buyer_review", -2055972700)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.store.forms.review_alert_mail, (new cljs.core.Keyword(null, "review_alert_mail", "review_alert_mail", 492019573)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.store.forms.currency_position, (new cljs.core.Keyword(null, "currency_position", "currency_position", 1959176722)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.store.forms.remove_trailing_zeros, (new cljs.core.Keyword(null, "remove_trailing_zeros", "remove_trailing_zeros", -1711987879)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_image_spec.call(null, new cljs.core.Keyword(null, "width", "width", -384071477), centipair.store.forms.catalog_images, (new cljs.core.Keyword(null, "catalog_images_width", "catalog_images_width", -325695210)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_image_spec.call(null, new cljs.core.Keyword(null, "height", "height", 1025178622), centipair.store.forms.catalog_images, (new cljs.core.Keyword(null, "catalog_images_height", "catalog_images_height", -324253027)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_image_spec_check.call(null, centipair.store.forms.catalog_images, (new cljs.core.Keyword(null, "catalog_images_hard_crop", "catalog_images_hard_crop", 6684612)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_image_spec.call(null, new cljs.core.Keyword(null, "width", "width", -384071477), centipair.store.forms.single_product_image, (new cljs.core.Keyword(null, "single_product_image_width", "single_product_image_width", 972028388)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_image_spec.call(null, new cljs.core.Keyword(null, "height", "height", 1025178622), centipair.store.forms.single_product_image, (new cljs.core.Keyword(null, "single_product_image_height", "single_product_image_height", 688813329)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_image_spec_check.call(null, centipair.store.forms.single_product_image, (new cljs.core.Keyword(null, "single_product_image_hard_crop", "single_product_image_hard_crop", 304525802)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_image_spec.call(null, new cljs.core.Keyword(null, "width", "width", -384071477), centipair.store.forms.product_thumbnails, (new cljs.core.Keyword(null, "product_thumbnails_width", "product_thumbnails_width", -1531235229)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_image_spec.call(null, new cljs.core.Keyword(null, "height", "height", 1025178622), centipair.store.forms.product_thumbnails, (new cljs.core.Keyword(null, "product_thumbnails_height", "product_thumbnails_height", -516838343)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_image_spec_check.call(null, centipair.store.forms.product_thumbnails, (new cljs.core.Keyword(null, "product_thumbnails_hard_crop", "product_thumbnails_hard_crop", 380072012)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.store.forms.manage_stock, (new cljs.core.Keyword(null, "manage_stock", "manage_stock", -62858589)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.store.forms.hold_stock, (new cljs.core.Keyword(null, "hold_stock", "hold_stock", 913888582)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.store.forms.low_stock_notification, (new cljs.core.Keyword(null, "low_stock_notification", "low_stock_notification", -920016145)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.store.forms.out_of_stock_notification, (new cljs.core.Keyword(null, "out_of_stock_notification", "out_of_stock_notification", -558905365)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.store.forms.stock_notification_recipient, (new cljs.core.Keyword(null, "stock_notification_recipient", "stock_notification_recipient", -1200244761)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.store.forms.low_stock_threshold, (new cljs.core.Keyword(null, "low_stock_threshold", "low_stock_threshold", 1315143430)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.store.forms.out_of_stock_threshold, (new cljs.core.Keyword(null, "out_of_stock_threshold", "out_of_stock_threshold", 1665194168)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.store.forms.out_of_stock_visibility, (new cljs.core.Keyword(null, "out_of_stock_visibility", "out_of_stock_visibility", 1098458112)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.store.forms.stock_display_format, (new cljs.core.Keyword(null, "stock_display_format", "stock_display_format", -1670209772)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.store.forms.enable_taxes, (new cljs.core.Keyword(null, "enable_taxes", "enable_taxes", -36646809)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.store.forms.tax_included_price, (new cljs.core.Keyword(null, "tax_included_price", "tax_included_price", 1044605954)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.store.forms.calculate_tax_based_on, (new cljs.core.Keyword(null, "calculate_tax_based_on", "calculate_tax_based_on", -1167980691)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.store.forms.default_customer_address, (new cljs.core.Keyword(null, "default_customer_address", "default_customer_address", -614350622)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.store.forms.shipping_tax_class, (new cljs.core.Keyword(null, "shipping_tax_class", "shipping_tax_class", 1400117980)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_check.call(null, centipair.store.forms.tax_total_rounding, (new cljs.core.Keyword(null, "tax_total_rounding", "tax_total_rounding", -926121416)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.core.components.input.update_value.call(null, centipair.store.forms.checkout_display_tax_price, (new cljs.core.Keyword(null, "checkout_display_tax_price", "checkout_display_tax_price", 2042393296)).cljs$core$IFn$_invoke$arity$1(response));
  centipair.store.forms.load_store_message.call(null, response);
  return centipair.store.forms.clear_store_form_errors.call(null);
};
centipair.store.forms.fetch_store_settings = function centipair$store$forms$fetch_store_settings(site_id) {
  return centipair.core.utilities.ajax.get_json.call(null, centipair.admin.resources.store_source.call(null, site_id), cljs.core.PersistentArrayMap.EMPTY, function(response) {
    return centipair.store.forms.map_store_settings.call(null, response);
  });
};
centipair.store.forms.init_store_settings_channel = function centipair$store$forms$init_store_settings_channel() {
  var c__6881__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6881__auto__) {
    return function() {
      var f__6882__auto__ = function() {
        var switch__6825__auto__ = function(c__6881__auto__) {
          return function(state_11333) {
            var state_val_11334 = state_11333[1];
            if (state_val_11334 === 7) {
              var inst_11324 = state_11333[2];
              var inst_11325 = centipair.store.forms.fetch_store_settings.call(null, inst_11324);
              var state_11333__$1 = function() {
                var statearr_11335 = state_11333;
                statearr_11335[7] = inst_11325;
                return statearr_11335;
              }();
              var statearr_11336_11349 = state_11333__$1;
              statearr_11336_11349[2] = null;
              statearr_11336_11349[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11334 === 6) {
                var inst_11329 = state_11333[2];
                var state_11333__$1 = state_11333;
                var statearr_11337_11350 = state_11333__$1;
                statearr_11337_11350[2] = inst_11329;
                statearr_11337_11350[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11334 === 5) {
                  var state_11333__$1 = state_11333;
                  var statearr_11338_11351 = state_11333__$1;
                  statearr_11338_11351[2] = null;
                  statearr_11338_11351[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11334 === 4) {
                    var state_11333__$1 = state_11333;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11333__$1, 7, centipair.admin.channels.store_settings_channel);
                  } else {
                    if (state_val_11334 === 3) {
                      var inst_11331 = state_11333[2];
                      var state_11333__$1 = state_11333;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11333__$1, inst_11331);
                    } else {
                      if (state_val_11334 === 2) {
                        var state_11333__$1 = state_11333;
                        var statearr_11339_11352 = state_11333__$1;
                        statearr_11339_11352[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11334 === 1) {
                          var state_11333__$1 = state_11333;
                          var statearr_11341_11353 = state_11333__$1;
                          statearr_11341_11353[2] = null;
                          statearr_11341_11353[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6881__auto__);
        return function(switch__6825__auto__, c__6881__auto__) {
          return function() {
            var centipair$store$forms$init_store_settings_channel_$_state_machine__6826__auto__ = null;
            var centipair$store$forms$init_store_settings_channel_$_state_machine__6826__auto____0 = function() {
              var statearr_11345 = [null, null, null, null, null, null, null, null];
              statearr_11345[0] = centipair$store$forms$init_store_settings_channel_$_state_machine__6826__auto__;
              statearr_11345[1] = 1;
              return statearr_11345;
            };
            var centipair$store$forms$init_store_settings_channel_$_state_machine__6826__auto____1 = function(state_11333) {
              while (true) {
                var ret_value__6827__auto__ = function() {
                  try {
                    while (true) {
                      var result__6828__auto__ = switch__6825__auto__.call(null, state_11333);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6828__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6828__auto__;
                      }
                      break;
                    }
                  } catch (e11346) {
                    if (e11346 instanceof Object) {
                      var ex__6829__auto__ = e11346;
                      var statearr_11347_11354 = state_11333;
                      statearr_11347_11354[5] = ex__6829__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11333);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11346;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6827__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11355 = state_11333;
                  state_11333 = G__11355;
                  continue;
                } else {
                  return ret_value__6827__auto__;
                }
                break;
              }
            };
            centipair$store$forms$init_store_settings_channel_$_state_machine__6826__auto__ = function(state_11333) {
              switch(arguments.length) {
                case 0:
                  return centipair$store$forms$init_store_settings_channel_$_state_machine__6826__auto____0.call(this);
                case 1:
                  return centipair$store$forms$init_store_settings_channel_$_state_machine__6826__auto____1.call(this, state_11333);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            centipair$store$forms$init_store_settings_channel_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$0 = centipair$store$forms$init_store_settings_channel_$_state_machine__6826__auto____0;
            centipair$store$forms$init_store_settings_channel_$_state_machine__6826__auto__.cljs$core$IFn$_invoke$arity$1 = centipair$store$forms$init_store_settings_channel_$_state_machine__6826__auto____1;
            return centipair$store$forms$init_store_settings_channel_$_state_machine__6826__auto__;
          }();
        }(switch__6825__auto__, c__6881__auto__);
      }();
      var state__6883__auto__ = function() {
        var statearr_11348 = f__6882__auto__.call(null);
        statearr_11348[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6881__auto__;
        return statearr_11348;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6883__auto__);
    };
  }(c__6881__auto__));
  return c__6881__auto__;
};
goog.provide("centipair.admin.menu");
goog.require("cljs.core");
goog.require("centipair.core.components.notifier");
goog.require("reagent.core");
goog.require("centipair.site.page");
goog.require("secretary.core");
goog.require("centipair.store.product");
goog.require("centipair.store.forms");
goog.require("goog.history.EventType");
goog.require("cljs.core.async");
goog.require("goog.History");
goog.require("goog.events");
goog.require("centipair.store.dashboard");
goog.require("centipair.site.forms");
goog.require("centipair.core.ui");
goog.require("centipair.admin.channels");
centipair.admin.menu.site_url = function centipair$admin$menu$site_url(site_id, url) {
  return[cljs.core.str("/site/"), cljs.core.str(site_id), cljs.core.str(url)].join("");
};
centipair.admin.menu.admin_menu = reagent.core.atom.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Dashboard", new cljs.core.Keyword(null, "url", "url", 276297046), "/dashboard", new cljs.core.Keyword(null, "id", "id", -1388402092), "dashboard", new cljs.core.Keyword(null, "active", "active", 1895962068), false], null), new cljs.core.PersistentArrayMap(null, 
4, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Site", new cljs.core.Keyword(null, "url", "url", 276297046), "/site", new cljs.core.Keyword(null, "id", "id", -1388402092), "site", new cljs.core.Keyword(null, "active", "active", 1895962068), false], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Store", new cljs.core.Keyword(null, "url", "url", 276297046), "/store", new cljs.core.Keyword(null, "id", "id", -1388402092), 
"store", new cljs.core.Keyword(null, "active", "active", 1895962068), false], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Products", new cljs.core.Keyword(null, "url", "url", 276297046), "/products", new cljs.core.Keyword(null, "id", "id", -1388402092), "products", new cljs.core.Keyword(null, "active", "active", 1895962068), false], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "label", "label", 1718410804), 
"Product Type", new cljs.core.Keyword(null, "url", "url", 276297046), "/product-type", new cljs.core.Keyword(null, "id", "id", -1388402092), "product-type", new cljs.core.Keyword(null, "active", "active", 1895962068), false], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Pages", new cljs.core.Keyword(null, "url", "url", 276297046), "/pages/0", new cljs.core.Keyword(null, "id", "id", -1388402092), "pages", new cljs.core.Keyword(null, 
"active", "active", 1895962068), false], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Sales", new cljs.core.Keyword(null, "url", "url", 276297046), "/sales", new cljs.core.Keyword(null, "id", "id", -1388402092), "sales", new cljs.core.Keyword(null, "active", "active", 1895962068), false], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Reviews", new cljs.core.Keyword(null, 
"url", "url", 276297046), "/reviews", new cljs.core.Keyword(null, "id", "id", -1388402092), "reviews", new cljs.core.Keyword(null, "active", "active", 1895962068), false], null)], null));
centipair.admin.menu.menu_component = function centipair$admin$menu$menu_component(com_data) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "nav nav-sidebar"], null), cljs.core.map.call(null, function(each) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(each), new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core.truth_((new cljs.core.Keyword(null, "active", "active", 1895962068)).cljs$core$IFn$_invoke$arity$1(each)) ? 
    "active" : ""], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", -793805698), [cljs.core.str("#"), cljs.core.str((new cljs.core.Keyword(null, "site-url", "site-url", 1492702733)).cljs$core$IFn$_invoke$arity$1(each))].join(""), new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "id", 
    "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(each)], null), (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(each)], null)], null);
  }, cljs.core.deref.call(null, com_data))], null);
};
centipair.admin.menu.admin_menu_component = function centipair$admin$menu$admin_menu_component() {
  return centipair.admin.menu.menu_component.call(null, centipair.admin.menu.admin_menu);
};
centipair.admin.menu.render_admin_menu = function centipair$admin$menu$render_admin_menu() {
  return reagent.core.render.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [centipair.admin.menu.admin_menu_component], null), document.getElementById("admin-menu"));
};
centipair.admin.menu.update_menu_item = function centipair$admin$menu$update_menu_item(site_id, menu_item) {
  if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "independent", "independent", -1262557623)).cljs$core$IFn$_invoke$arity$1(menu_item))) {
    return cljs.core.assoc.call(null, menu_item, new cljs.core.Keyword(null, "site-url", "site-url", 1492702733), centipair.admin.menu.site_url.call(null, site_id, (new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(menu_item)));
  } else {
    return cljs.core.assoc.call(null, menu_item, new cljs.core.Keyword(null, "site-url", "site-url", 1492702733), (new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(menu_item));
  }
};
centipair.admin.menu.update_site_admin_menu = function centipair$admin$menu$update_site_admin_menu(site_id) {
  cljs.core.reset_BANG_.call(null, centipair.admin.menu.admin_menu, cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, cljs.core.partial.call(null, centipair.admin.menu.update_menu_item, site_id), cljs.core.deref.call(null, centipair.admin.menu.admin_menu))));
  return centipair.admin.menu.render_admin_menu.call(null);
};
centipair.admin.menu.title_component = function centipair$admin$menu$title_component(id) {
  return reagent.core.render.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h3", "h3", 2067611163), (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.filter.call(null, function(each) {
    return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(each), id);
  }, cljs.core.deref.call(null, centipair.admin.menu.admin_menu))))], null), document.getElementById("admin-title"));
};
centipair.admin.menu.deactivate = function centipair$admin$menu$deactivate(id, item) {
  if (cljs.core._EQ_.call(null, id, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(item))) {
    cljs.core.assoc.call(null, item, new cljs.core.Keyword(null, "active", "active", 1895962068), true);
    return cljs.core.reset_BANG_.call(null, centipair.admin.channels.active_page, item);
  } else {
    return cljs.core.assoc.call(null, item, new cljs.core.Keyword(null, "active", "active", 1895962068), false);
  }
};
centipair.admin.menu.activate_side_menu_item = function() {
  var centipair$admin$menu$activate_side_menu_item__delegate = function(id, p__11552) {
    var vec__11554 = p__11552;
    var site_id = cljs.core.nth.call(null, vec__11554, 0, null);
    centipair.core.components.notifier.notify.call(null, 200);
    cljs.core.reset_BANG_.call(null, centipair.admin.menu.admin_menu, cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, cljs.core.partial.call(null, centipair.admin.menu.deactivate, id), cljs.core.deref.call(null, centipair.admin.menu.admin_menu))));
    if (!(site_id == null)) {
      cljs.core.async.put_BANG_.call(null, centipair.admin.channels.admin_menu_channel, site_id);
      return cljs.core.async.put_BANG_.call(null, centipair.admin.channels.site_selector_channel, parseInt(site_id));
    } else {
      return null;
    }
  };
  var centipair$admin$menu$activate_side_menu_item = function(id, var_args) {
    var p__11552 = null;
    if (arguments.length > 1) {
      var G__11555__i = 0, G__11555__a = new Array(arguments.length - 1);
      while (G__11555__i < G__11555__a.length) {
        G__11555__a[G__11555__i] = arguments[G__11555__i + 1];
        ++G__11555__i;
      }
      p__11552 = new cljs.core.IndexedSeq(G__11555__a, 0);
    }
    return centipair$admin$menu$activate_side_menu_item__delegate.call(this, id, p__11552);
  };
  centipair$admin$menu$activate_side_menu_item.cljs$lang$maxFixedArity = 1;
  centipair$admin$menu$activate_side_menu_item.cljs$lang$applyTo = function(arglist__11556) {
    var id = cljs.core.first(arglist__11556);
    var p__11552 = cljs.core.rest(arglist__11556);
    return centipair$admin$menu$activate_side_menu_item__delegate(id, p__11552);
  };
  centipair$admin$menu$activate_side_menu_item.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$menu$activate_side_menu_item__delegate;
  return centipair$admin$menu$activate_side_menu_item;
}();
var action__11299__auto___11559 = function(params__11300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__11300__auto__)) {
    var map__11557 = params__11300__auto__;
    var map__11557__$1 = cljs.core.seq_QMARK_.call(null, map__11557) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11557) : map__11557;
    var site_id = cljs.core.get.call(null, map__11557__$1, new cljs.core.Keyword(null, "site-id", "site-id", -1581972488));
    centipair.admin.menu.activate_side_menu_item.call(null, "dashboard", site_id);
    return centipair.store.dashboard.render_dashboard.call(null, site_id);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__11300__auto__)) {
      var map__11558 = params__11300__auto__;
      var map__11558__$1 = cljs.core.seq_QMARK_.call(null, map__11558) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11558) : map__11558;
      var site_id = cljs.core.get.call(null, map__11558__$1, new cljs.core.Keyword(null, "site-id", "site-id", -1581972488));
      centipair.admin.menu.activate_side_menu_item.call(null, "dashboard", site_id);
      return centipair.store.dashboard.render_dashboard.call(null, site_id);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/site/:site-id/dashboard", action__11299__auto___11559);
centipair.admin.menu.dashboard = function(action__11299__auto___11559) {
  return function() {
    var centipair$admin$menu$dashboard__delegate = function(args__11298__auto__) {
      return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "/site/:site-id/dashboard", args__11298__auto__);
    };
    var centipair$admin$menu$dashboard = function(var_args) {
      var args__11298__auto__ = null;
      if (arguments.length > 0) {
        var G__11560__i = 0, G__11560__a = new Array(arguments.length - 0);
        while (G__11560__i < G__11560__a.length) {
          G__11560__a[G__11560__i] = arguments[G__11560__i + 0];
          ++G__11560__i;
        }
        args__11298__auto__ = new cljs.core.IndexedSeq(G__11560__a, 0);
      }
      return centipair$admin$menu$dashboard__delegate.call(this, args__11298__auto__);
    };
    centipair$admin$menu$dashboard.cljs$lang$maxFixedArity = 0;
    centipair$admin$menu$dashboard.cljs$lang$applyTo = function(arglist__11561) {
      var args__11298__auto__ = cljs.core.seq(arglist__11561);
      return centipair$admin$menu$dashboard__delegate(args__11298__auto__);
    };
    centipair$admin$menu$dashboard.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$menu$dashboard__delegate;
    return centipair$admin$menu$dashboard;
  }();
}(action__11299__auto___11559);
var action__11299__auto___11564 = function(params__11300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__11300__auto__)) {
    var map__11562 = params__11300__auto__;
    var map__11562__$1 = cljs.core.seq_QMARK_.call(null, map__11562) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11562) : map__11562;
    var site_id = cljs.core.get.call(null, map__11562__$1, new cljs.core.Keyword(null, "site-id", "site-id", -1581972488));
    centipair.admin.menu.activate_side_menu_item.call(null, "store", site_id);
    return centipair.store.forms.render_store_form.call(null, site_id);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__11300__auto__)) {
      var map__11563 = params__11300__auto__;
      var map__11563__$1 = cljs.core.seq_QMARK_.call(null, map__11563) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11563) : map__11563;
      var site_id = cljs.core.get.call(null, map__11563__$1, new cljs.core.Keyword(null, "site-id", "site-id", -1581972488));
      centipair.admin.menu.activate_side_menu_item.call(null, "store", site_id);
      return centipair.store.forms.render_store_form.call(null, site_id);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/site/:site-id/store", action__11299__auto___11564);
centipair.admin.menu.settings = function(action__11299__auto___11564) {
  return function() {
    var centipair$admin$menu$settings__delegate = function(args__11298__auto__) {
      return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "/site/:site-id/store", args__11298__auto__);
    };
    var centipair$admin$menu$settings = function(var_args) {
      var args__11298__auto__ = null;
      if (arguments.length > 0) {
        var G__11565__i = 0, G__11565__a = new Array(arguments.length - 0);
        while (G__11565__i < G__11565__a.length) {
          G__11565__a[G__11565__i] = arguments[G__11565__i + 0];
          ++G__11565__i;
        }
        args__11298__auto__ = new cljs.core.IndexedSeq(G__11565__a, 0);
      }
      return centipair$admin$menu$settings__delegate.call(this, args__11298__auto__);
    };
    centipair$admin$menu$settings.cljs$lang$maxFixedArity = 0;
    centipair$admin$menu$settings.cljs$lang$applyTo = function(arglist__11566) {
      var args__11298__auto__ = cljs.core.seq(arglist__11566);
      return centipair$admin$menu$settings__delegate(args__11298__auto__);
    };
    centipair$admin$menu$settings.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$menu$settings__delegate;
    return centipair$admin$menu$settings;
  }();
}(action__11299__auto___11564);
var action__11299__auto___11569 = function(params__11300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__11300__auto__)) {
    var map__11567 = params__11300__auto__;
    var map__11567__$1 = cljs.core.seq_QMARK_.call(null, map__11567) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11567) : map__11567;
    var site_id = cljs.core.get.call(null, map__11567__$1, new cljs.core.Keyword(null, "site-id", "site-id", -1581972488));
    centipair.admin.menu.activate_side_menu_item.call(null, "site", site_id);
    return centipair.site.forms.render_site_settings_tabs.call(null, site_id);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__11300__auto__)) {
      var map__11568 = params__11300__auto__;
      var map__11568__$1 = cljs.core.seq_QMARK_.call(null, map__11568) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11568) : map__11568;
      var site_id = cljs.core.get.call(null, map__11568__$1, new cljs.core.Keyword(null, "site-id", "site-id", -1581972488));
      centipair.admin.menu.activate_side_menu_item.call(null, "site", site_id);
      return centipair.site.forms.render_site_settings_tabs.call(null, site_id);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/site/:site-id/site", action__11299__auto___11569);
centipair.admin.menu.site = function(action__11299__auto___11569) {
  return function() {
    var centipair$admin$menu$site__delegate = function(args__11298__auto__) {
      return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "/site/:site-id/site", args__11298__auto__);
    };
    var centipair$admin$menu$site = function(var_args) {
      var args__11298__auto__ = null;
      if (arguments.length > 0) {
        var G__11570__i = 0, G__11570__a = new Array(arguments.length - 0);
        while (G__11570__i < G__11570__a.length) {
          G__11570__a[G__11570__i] = arguments[G__11570__i + 0];
          ++G__11570__i;
        }
        args__11298__auto__ = new cljs.core.IndexedSeq(G__11570__a, 0);
      }
      return centipair$admin$menu$site__delegate.call(this, args__11298__auto__);
    };
    centipair$admin$menu$site.cljs$lang$maxFixedArity = 0;
    centipair$admin$menu$site.cljs$lang$applyTo = function(arglist__11571) {
      var args__11298__auto__ = cljs.core.seq(arglist__11571);
      return centipair$admin$menu$site__delegate(args__11298__auto__);
    };
    centipair$admin$menu$site.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$menu$site__delegate;
    return centipair$admin$menu$site;
  }();
}(action__11299__auto___11569);
var action__11299__auto___11574 = function(params__11300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__11300__auto__)) {
    var map__11572 = params__11300__auto__;
    var map__11572__$1 = cljs.core.seq_QMARK_.call(null, map__11572) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11572) : map__11572;
    var site_id = cljs.core.get.call(null, map__11572__$1, new cljs.core.Keyword(null, "site-id", "site-id", -1581972488));
    centipair.admin.menu.activate_side_menu_item.call(null, "site", site_id);
    return centipair.site.forms.render_new_site_form.call(null);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__11300__auto__)) {
      var map__11573 = params__11300__auto__;
      var map__11573__$1 = cljs.core.seq_QMARK_.call(null, map__11573) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11573) : map__11573;
      var site_id = cljs.core.get.call(null, map__11573__$1, new cljs.core.Keyword(null, "site-id", "site-id", -1581972488));
      centipair.admin.menu.activate_side_menu_item.call(null, "site", site_id);
      return centipair.site.forms.render_new_site_form.call(null);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/site/:site-id/site/create", action__11299__auto___11574);
centipair.admin.menu.site_create = function(action__11299__auto___11574) {
  return function() {
    var centipair$admin$menu$site_create__delegate = function(args__11298__auto__) {
      return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "/site/:site-id/site/create", args__11298__auto__);
    };
    var centipair$admin$menu$site_create = function(var_args) {
      var args__11298__auto__ = null;
      if (arguments.length > 0) {
        var G__11575__i = 0, G__11575__a = new Array(arguments.length - 0);
        while (G__11575__i < G__11575__a.length) {
          G__11575__a[G__11575__i] = arguments[G__11575__i + 0];
          ++G__11575__i;
        }
        args__11298__auto__ = new cljs.core.IndexedSeq(G__11575__a, 0);
      }
      return centipair$admin$menu$site_create__delegate.call(this, args__11298__auto__);
    };
    centipair$admin$menu$site_create.cljs$lang$maxFixedArity = 0;
    centipair$admin$menu$site_create.cljs$lang$applyTo = function(arglist__11576) {
      var args__11298__auto__ = cljs.core.seq(arglist__11576);
      return centipair$admin$menu$site_create__delegate(args__11298__auto__);
    };
    centipair$admin$menu$site_create.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$menu$site_create__delegate;
    return centipair$admin$menu$site_create;
  }();
}(action__11299__auto___11574);
var action__11299__auto___11579 = function(params__11300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__11300__auto__)) {
    var map__11577 = params__11300__auto__;
    var map__11577__$1 = cljs.core.seq_QMARK_.call(null, map__11577) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11577) : map__11577;
    var page_number = cljs.core.get.call(null, map__11577__$1, new cljs.core.Keyword(null, "page-number", "page-number", 556880104));
    var site_id = cljs.core.get.call(null, map__11577__$1, new cljs.core.Keyword(null, "site-id", "site-id", -1581972488));
    centipair.admin.menu.activate_side_menu_item.call(null, "pages", site_id);
    return centipair.site.page.activate_page_list.call(null, page_number);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__11300__auto__)) {
      var map__11578 = params__11300__auto__;
      var map__11578__$1 = cljs.core.seq_QMARK_.call(null, map__11578) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11578) : map__11578;
      var page_number = cljs.core.get.call(null, map__11578__$1, new cljs.core.Keyword(null, "page-number", "page-number", 556880104));
      var site_id = cljs.core.get.call(null, map__11578__$1, new cljs.core.Keyword(null, "site-id", "site-id", -1581972488));
      centipair.admin.menu.activate_side_menu_item.call(null, "pages", site_id);
      return centipair.site.page.activate_page_list.call(null, page_number);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/site/:site-id/pages/:page-number", action__11299__auto___11579);
centipair.admin.menu.pages = function(action__11299__auto___11579) {
  return function() {
    var centipair$admin$menu$pages__delegate = function(args__11298__auto__) {
      return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "/site/:site-id/pages/:page-number", args__11298__auto__);
    };
    var centipair$admin$menu$pages = function(var_args) {
      var args__11298__auto__ = null;
      if (arguments.length > 0) {
        var G__11580__i = 0, G__11580__a = new Array(arguments.length - 0);
        while (G__11580__i < G__11580__a.length) {
          G__11580__a[G__11580__i] = arguments[G__11580__i + 0];
          ++G__11580__i;
        }
        args__11298__auto__ = new cljs.core.IndexedSeq(G__11580__a, 0);
      }
      return centipair$admin$menu$pages__delegate.call(this, args__11298__auto__);
    };
    centipair$admin$menu$pages.cljs$lang$maxFixedArity = 0;
    centipair$admin$menu$pages.cljs$lang$applyTo = function(arglist__11581) {
      var args__11298__auto__ = cljs.core.seq(arglist__11581);
      return centipair$admin$menu$pages__delegate(args__11298__auto__);
    };
    centipair$admin$menu$pages.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$menu$pages__delegate;
    return centipair$admin$menu$pages;
  }();
}(action__11299__auto___11579);
var action__11299__auto___11584 = function(params__11300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__11300__auto__)) {
    var map__11582 = params__11300__auto__;
    var map__11582__$1 = cljs.core.seq_QMARK_.call(null, map__11582) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11582) : map__11582;
    centipair.admin.menu.activate_side_menu_item.call(null, "page");
    return centipair.site.page.new_page.call(null);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__11300__auto__)) {
      var vec__11583 = params__11300__auto__;
      centipair.admin.menu.activate_side_menu_item.call(null, "page");
      return centipair.site.page.new_page.call(null);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/site/:site-id/page/create", action__11299__auto___11584);
centipair.admin.menu.page_create = function(action__11299__auto___11584) {
  return function() {
    var centipair$admin$menu$page_create__delegate = function(args__11298__auto__) {
      return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "/site/:site-id/page/create", args__11298__auto__);
    };
    var centipair$admin$menu$page_create = function(var_args) {
      var args__11298__auto__ = null;
      if (arguments.length > 0) {
        var G__11585__i = 0, G__11585__a = new Array(arguments.length - 0);
        while (G__11585__i < G__11585__a.length) {
          G__11585__a[G__11585__i] = arguments[G__11585__i + 0];
          ++G__11585__i;
        }
        args__11298__auto__ = new cljs.core.IndexedSeq(G__11585__a, 0);
      }
      return centipair$admin$menu$page_create__delegate.call(this, args__11298__auto__);
    };
    centipair$admin$menu$page_create.cljs$lang$maxFixedArity = 0;
    centipair$admin$menu$page_create.cljs$lang$applyTo = function(arglist__11586) {
      var args__11298__auto__ = cljs.core.seq(arglist__11586);
      return centipair$admin$menu$page_create__delegate(args__11298__auto__);
    };
    centipair$admin$menu$page_create.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$menu$page_create__delegate;
    return centipair$admin$menu$page_create;
  }();
}(action__11299__auto___11584);
var action__11299__auto___11589 = function(params__11300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__11300__auto__)) {
    var map__11587 = params__11300__auto__;
    var map__11587__$1 = cljs.core.seq_QMARK_.call(null, map__11587) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11587) : map__11587;
    var id = cljs.core.get.call(null, map__11587__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
    var site_id = cljs.core.get.call(null, map__11587__$1, new cljs.core.Keyword(null, "site-id", "site-id", -1581972488));
    centipair.admin.menu.activate_side_menu_item.call(null, "page");
    return centipair.site.page.edit_page.call(null, id);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__11300__auto__)) {
      var map__11588 = params__11300__auto__;
      var map__11588__$1 = cljs.core.seq_QMARK_.call(null, map__11588) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11588) : map__11588;
      var id = cljs.core.get.call(null, map__11588__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
      var site_id = cljs.core.get.call(null, map__11588__$1, new cljs.core.Keyword(null, "site-id", "site-id", -1581972488));
      centipair.admin.menu.activate_side_menu_item.call(null, "page");
      return centipair.site.page.edit_page.call(null, id);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/site/:site-id/page/edit/:id", action__11299__auto___11589);
centipair.admin.menu.page_edit = function(action__11299__auto___11589) {
  return function() {
    var centipair$admin$menu$page_edit__delegate = function(args__11298__auto__) {
      return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "/site/:site-id/page/edit/:id", args__11298__auto__);
    };
    var centipair$admin$menu$page_edit = function(var_args) {
      var args__11298__auto__ = null;
      if (arguments.length > 0) {
        var G__11590__i = 0, G__11590__a = new Array(arguments.length - 0);
        while (G__11590__i < G__11590__a.length) {
          G__11590__a[G__11590__i] = arguments[G__11590__i + 0];
          ++G__11590__i;
        }
        args__11298__auto__ = new cljs.core.IndexedSeq(G__11590__a, 0);
      }
      return centipair$admin$menu$page_edit__delegate.call(this, args__11298__auto__);
    };
    centipair$admin$menu$page_edit.cljs$lang$maxFixedArity = 0;
    centipair$admin$menu$page_edit.cljs$lang$applyTo = function(arglist__11591) {
      var args__11298__auto__ = cljs.core.seq(arglist__11591);
      return centipair$admin$menu$page_edit__delegate(args__11298__auto__);
    };
    centipair$admin$menu$page_edit.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$menu$page_edit__delegate;
    return centipair$admin$menu$page_edit;
  }();
}(action__11299__auto___11589);
var action__11299__auto___11594 = function(params__11300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__11300__auto__)) {
    var map__11592 = params__11300__auto__;
    var map__11592__$1 = cljs.core.seq_QMARK_.call(null, map__11592) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11592) : map__11592;
    var site_id = cljs.core.get.call(null, map__11592__$1, new cljs.core.Keyword(null, "site-id", "site-id", -1581972488));
    return centipair.admin.menu.activate_side_menu_item.call(null, "products");
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__11300__auto__)) {
      var map__11593 = params__11300__auto__;
      var map__11593__$1 = cljs.core.seq_QMARK_.call(null, map__11593) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11593) : map__11593;
      var site_id = cljs.core.get.call(null, map__11593__$1, new cljs.core.Keyword(null, "site-id", "site-id", -1581972488));
      return centipair.admin.menu.activate_side_menu_item.call(null, "products");
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/site/:site-id/products", action__11299__auto___11594);
centipair.admin.menu.products = function(action__11299__auto___11594) {
  return function() {
    var centipair$admin$menu$products__delegate = function(args__11298__auto__) {
      return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "/site/:site-id/products", args__11298__auto__);
    };
    var centipair$admin$menu$products = function(var_args) {
      var args__11298__auto__ = null;
      if (arguments.length > 0) {
        var G__11595__i = 0, G__11595__a = new Array(arguments.length - 0);
        while (G__11595__i < G__11595__a.length) {
          G__11595__a[G__11595__i] = arguments[G__11595__i + 0];
          ++G__11595__i;
        }
        args__11298__auto__ = new cljs.core.IndexedSeq(G__11595__a, 0);
      }
      return centipair$admin$menu$products__delegate.call(this, args__11298__auto__);
    };
    centipair$admin$menu$products.cljs$lang$maxFixedArity = 0;
    centipair$admin$menu$products.cljs$lang$applyTo = function(arglist__11596) {
      var args__11298__auto__ = cljs.core.seq(arglist__11596);
      return centipair$admin$menu$products__delegate(args__11298__auto__);
    };
    centipair$admin$menu$products.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$menu$products__delegate;
    return centipair$admin$menu$products;
  }();
}(action__11299__auto___11594);
var action__11299__auto___11599 = function(params__11300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__11300__auto__)) {
    var map__11597 = params__11300__auto__;
    var map__11597__$1 = cljs.core.seq_QMARK_.call(null, map__11597) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11597) : map__11597;
    var site_id = cljs.core.get.call(null, map__11597__$1, new cljs.core.Keyword(null, "site-id", "site-id", -1581972488));
    return centipair.admin.menu.activate_side_menu_item.call(null, "sales");
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__11300__auto__)) {
      var map__11598 = params__11300__auto__;
      var map__11598__$1 = cljs.core.seq_QMARK_.call(null, map__11598) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11598) : map__11598;
      var site_id = cljs.core.get.call(null, map__11598__$1, new cljs.core.Keyword(null, "site-id", "site-id", -1581972488));
      return centipair.admin.menu.activate_side_menu_item.call(null, "sales");
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/site/:site-id/sales", action__11299__auto___11599);
centipair.admin.menu.sales = function(action__11299__auto___11599) {
  return function() {
    var centipair$admin$menu$sales__delegate = function(args__11298__auto__) {
      return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "/site/:site-id/sales", args__11298__auto__);
    };
    var centipair$admin$menu$sales = function(var_args) {
      var args__11298__auto__ = null;
      if (arguments.length > 0) {
        var G__11600__i = 0, G__11600__a = new Array(arguments.length - 0);
        while (G__11600__i < G__11600__a.length) {
          G__11600__a[G__11600__i] = arguments[G__11600__i + 0];
          ++G__11600__i;
        }
        args__11298__auto__ = new cljs.core.IndexedSeq(G__11600__a, 0);
      }
      return centipair$admin$menu$sales__delegate.call(this, args__11298__auto__);
    };
    centipair$admin$menu$sales.cljs$lang$maxFixedArity = 0;
    centipair$admin$menu$sales.cljs$lang$applyTo = function(arglist__11601) {
      var args__11298__auto__ = cljs.core.seq(arglist__11601);
      return centipair$admin$menu$sales__delegate(args__11298__auto__);
    };
    centipair$admin$menu$sales.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$menu$sales__delegate;
    return centipair$admin$menu$sales;
  }();
}(action__11299__auto___11599);
var action__11299__auto___11604 = function(params__11300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__11300__auto__)) {
    var map__11602 = params__11300__auto__;
    var map__11602__$1 = cljs.core.seq_QMARK_.call(null, map__11602) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11602) : map__11602;
    return centipair.admin.menu.activate_side_menu_item.call(null, "reviews");
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__11300__auto__)) {
      var vec__11603 = params__11300__auto__;
      return centipair.admin.menu.activate_side_menu_item.call(null, "reviews");
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/reviews", action__11299__auto___11604);
centipair.admin.menu.reviews = function(action__11299__auto___11604) {
  return function() {
    var centipair$admin$menu$reviews__delegate = function(args__11298__auto__) {
      return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "/reviews", args__11298__auto__);
    };
    var centipair$admin$menu$reviews = function(var_args) {
      var args__11298__auto__ = null;
      if (arguments.length > 0) {
        var G__11605__i = 0, G__11605__a = new Array(arguments.length - 0);
        while (G__11605__i < G__11605__a.length) {
          G__11605__a[G__11605__i] = arguments[G__11605__i + 0];
          ++G__11605__i;
        }
        args__11298__auto__ = new cljs.core.IndexedSeq(G__11605__a, 0);
      }
      return centipair$admin$menu$reviews__delegate.call(this, args__11298__auto__);
    };
    centipair$admin$menu$reviews.cljs$lang$maxFixedArity = 0;
    centipair$admin$menu$reviews.cljs$lang$applyTo = function(arglist__11606) {
      var args__11298__auto__ = cljs.core.seq(arglist__11606);
      return centipair$admin$menu$reviews__delegate(args__11298__auto__);
    };
    centipair$admin$menu$reviews.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$menu$reviews__delegate;
    return centipair$admin$menu$reviews;
  }();
}(action__11299__auto___11604);
var action__11299__auto___11609 = function(params__11300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__11300__auto__)) {
    var map__11607 = params__11300__auto__;
    var map__11607__$1 = cljs.core.seq_QMARK_.call(null, map__11607) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11607) : map__11607;
    var query_params = cljs.core.get.call(null, map__11607__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
    var url = cljs.core.get.call(null, map__11607__$1, new cljs.core.Keyword(null, "url", "url", 276297046));
    console.log([cljs.core.str("User: "), cljs.core.str(url)].join(""));
    return console.log(cljs.core.pr_str.call(null, query_params));
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__11300__auto__)) {
      var vec__11608 = params__11300__auto__;
      var url = cljs.core.nth.call(null, vec__11608, 0, null);
      var query_params = cljs.core.nth.call(null, vec__11608, 1, null);
      console.log([cljs.core.str("User: "), cljs.core.str(url)].join(""));
      return console.log(cljs.core.pr_str.call(null, query_params));
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/search/:url", action__11299__auto___11609);
centipair.admin.menu.search = function(action__11299__auto___11609) {
  return function() {
    var centipair$admin$menu$search__delegate = function(args__11298__auto__) {
      return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "/search/:url", args__11298__auto__);
    };
    var centipair$admin$menu$search = function(var_args) {
      var args__11298__auto__ = null;
      if (arguments.length > 0) {
        var G__11610__i = 0, G__11610__a = new Array(arguments.length - 0);
        while (G__11610__i < G__11610__a.length) {
          G__11610__a[G__11610__i] = arguments[G__11610__i + 0];
          ++G__11610__i;
        }
        args__11298__auto__ = new cljs.core.IndexedSeq(G__11610__a, 0);
      }
      return centipair$admin$menu$search__delegate.call(this, args__11298__auto__);
    };
    centipair$admin$menu$search.cljs$lang$maxFixedArity = 0;
    centipair$admin$menu$search.cljs$lang$applyTo = function(arglist__11611) {
      var args__11298__auto__ = cljs.core.seq(arglist__11611);
      return centipair$admin$menu$search__delegate(args__11298__auto__);
    };
    centipair$admin$menu$search.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$menu$search__delegate;
    return centipair$admin$menu$search;
  }();
}(action__11299__auto___11609);
var action__11299__auto___11614 = function(params__11300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__11300__auto__)) {
    var map__11612 = params__11300__auto__;
    var map__11612__$1 = cljs.core.seq_QMARK_.call(null, map__11612) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11612) : map__11612;
    centipair.admin.menu.activate_side_menu_item.call(null, "product-type");
    return centipair.store.product.render_product_type.call(null);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__11300__auto__)) {
      var vec__11613 = params__11300__auto__;
      centipair.admin.menu.activate_side_menu_item.call(null, "product-type");
      return centipair.store.product.render_product_type.call(null);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/site/:site-id/product-type", action__11299__auto___11614);
centipair.admin.menu.product_type = function(action__11299__auto___11614) {
  return function() {
    var centipair$admin$menu$product_type__delegate = function(args__11298__auto__) {
      return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "/site/:site-id/product-type", args__11298__auto__);
    };
    var centipair$admin$menu$product_type = function(var_args) {
      var args__11298__auto__ = null;
      if (arguments.length > 0) {
        var G__11615__i = 0, G__11615__a = new Array(arguments.length - 0);
        while (G__11615__i < G__11615__a.length) {
          G__11615__a[G__11615__i] = arguments[G__11615__i + 0];
          ++G__11615__i;
        }
        args__11298__auto__ = new cljs.core.IndexedSeq(G__11615__a, 0);
      }
      return centipair$admin$menu$product_type__delegate.call(this, args__11298__auto__);
    };
    centipair$admin$menu$product_type.cljs$lang$maxFixedArity = 0;
    centipair$admin$menu$product_type.cljs$lang$applyTo = function(arglist__11616) {
      var args__11298__auto__ = cljs.core.seq(arglist__11616);
      return centipair$admin$menu$product_type__delegate(args__11298__auto__);
    };
    centipair$admin$menu$product_type.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$menu$product_type__delegate;
    return centipair$admin$menu$product_type;
  }();
}(action__11299__auto___11614);
var action__11299__auto___11619 = function(params__11300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__11300__auto__)) {
    var map__11617 = params__11300__auto__;
    var map__11617__$1 = cljs.core.seq_QMARK_.call(null, map__11617) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11617) : map__11617;
    centipair.admin.menu.activate_side_menu_item.call(null, "product-type");
    return centipair.store.product.render_new_product_type_form.call(null);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__11300__auto__)) {
      var vec__11618 = params__11300__auto__;
      centipair.admin.menu.activate_side_menu_item.call(null, "product-type");
      return centipair.store.product.render_new_product_type_form.call(null);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/site/:site-id/product-type/create", action__11299__auto___11619);
centipair.admin.menu.product_type_create = function(action__11299__auto___11619) {
  return function() {
    var centipair$admin$menu$product_type_create__delegate = function(args__11298__auto__) {
      return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "/site/:site-id/product-type/create", args__11298__auto__);
    };
    var centipair$admin$menu$product_type_create = function(var_args) {
      var args__11298__auto__ = null;
      if (arguments.length > 0) {
        var G__11620__i = 0, G__11620__a = new Array(arguments.length - 0);
        while (G__11620__i < G__11620__a.length) {
          G__11620__a[G__11620__i] = arguments[G__11620__i + 0];
          ++G__11620__i;
        }
        args__11298__auto__ = new cljs.core.IndexedSeq(G__11620__a, 0);
      }
      return centipair$admin$menu$product_type_create__delegate.call(this, args__11298__auto__);
    };
    centipair$admin$menu$product_type_create.cljs$lang$maxFixedArity = 0;
    centipair$admin$menu$product_type_create.cljs$lang$applyTo = function(arglist__11621) {
      var args__11298__auto__ = cljs.core.seq(arglist__11621);
      return centipair$admin$menu$product_type_create__delegate(args__11298__auto__);
    };
    centipair$admin$menu$product_type_create.cljs$core$IFn$_invoke$arity$variadic = centipair$admin$menu$product_type_create__delegate;
    return centipair$admin$menu$product_type_create;
  }();
}(action__11299__auto___11619);
var h_11624 = new goog.History;
goog.events.listen(h_11624, goog.history.EventType.NAVIGATE, function(h_11624) {
  return function(p1__11622_SHARP_) {
    return secretary.core.dispatch_BANG_.call(null, p1__11622_SHARP_.token);
  };
}(h_11624));
var G__11623_11625 = h_11624;
G__11623_11625.setEnabled(true);
centipair.admin.menu.init_admin_menu_channel = function centipair$admin$menu$init_admin_menu_channel() {
  var c__6990__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6990__auto__) {
    return function() {
      var f__6991__auto__ = function() {
        var switch__6934__auto__ = function(c__6990__auto__) {
          return function(state_11666) {
            var state_val_11667 = state_11666[1];
            if (state_val_11667 === 7) {
              var inst_11657 = state_11666[2];
              var inst_11658 = centipair.admin.menu.update_site_admin_menu.call(null, inst_11657);
              var state_11666__$1 = function() {
                var statearr_11668 = state_11666;
                statearr_11668[7] = inst_11658;
                return statearr_11668;
              }();
              var statearr_11669_11682 = state_11666__$1;
              statearr_11669_11682[2] = null;
              statearr_11669_11682[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11667 === 6) {
                var inst_11662 = state_11666[2];
                var state_11666__$1 = state_11666;
                var statearr_11670_11683 = state_11666__$1;
                statearr_11670_11683[2] = inst_11662;
                statearr_11670_11683[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11667 === 5) {
                  var state_11666__$1 = state_11666;
                  var statearr_11671_11684 = state_11666__$1;
                  statearr_11671_11684[2] = null;
                  statearr_11671_11684[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11667 === 4) {
                    var state_11666__$1 = state_11666;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11666__$1, 7, centipair.admin.channels.admin_menu_channel);
                  } else {
                    if (state_val_11667 === 3) {
                      var inst_11664 = state_11666[2];
                      var state_11666__$1 = state_11666;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11666__$1, inst_11664);
                    } else {
                      if (state_val_11667 === 2) {
                        var state_11666__$1 = state_11666;
                        var statearr_11672_11685 = state_11666__$1;
                        statearr_11672_11685[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11667 === 1) {
                          var state_11666__$1 = state_11666;
                          var statearr_11674_11686 = state_11666__$1;
                          statearr_11674_11686[2] = null;
                          statearr_11674_11686[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6990__auto__);
        return function(switch__6934__auto__, c__6990__auto__) {
          return function() {
            var centipair$admin$menu$init_admin_menu_channel_$_state_machine__6935__auto__ = null;
            var centipair$admin$menu$init_admin_menu_channel_$_state_machine__6935__auto____0 = function() {
              var statearr_11678 = [null, null, null, null, null, null, null, null];
              statearr_11678[0] = centipair$admin$menu$init_admin_menu_channel_$_state_machine__6935__auto__;
              statearr_11678[1] = 1;
              return statearr_11678;
            };
            var centipair$admin$menu$init_admin_menu_channel_$_state_machine__6935__auto____1 = function(state_11666) {
              while (true) {
                var ret_value__6936__auto__ = function() {
                  try {
                    while (true) {
                      var result__6937__auto__ = switch__6934__auto__.call(null, state_11666);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6937__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6937__auto__;
                      }
                      break;
                    }
                  } catch (e11679) {
                    if (e11679 instanceof Object) {
                      var ex__6938__auto__ = e11679;
                      var statearr_11680_11687 = state_11666;
                      statearr_11680_11687[5] = ex__6938__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11666);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11679;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6936__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11688 = state_11666;
                  state_11666 = G__11688;
                  continue;
                } else {
                  return ret_value__6936__auto__;
                }
                break;
              }
            };
            centipair$admin$menu$init_admin_menu_channel_$_state_machine__6935__auto__ = function(state_11666) {
              switch(arguments.length) {
                case 0:
                  return centipair$admin$menu$init_admin_menu_channel_$_state_machine__6935__auto____0.call(this);
                case 1:
                  return centipair$admin$menu$init_admin_menu_channel_$_state_machine__6935__auto____1.call(this, state_11666);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            centipair$admin$menu$init_admin_menu_channel_$_state_machine__6935__auto__.cljs$core$IFn$_invoke$arity$0 = centipair$admin$menu$init_admin_menu_channel_$_state_machine__6935__auto____0;
            centipair$admin$menu$init_admin_menu_channel_$_state_machine__6935__auto__.cljs$core$IFn$_invoke$arity$1 = centipair$admin$menu$init_admin_menu_channel_$_state_machine__6935__auto____1;
            return centipair$admin$menu$init_admin_menu_channel_$_state_machine__6935__auto__;
          }();
        }(switch__6934__auto__, c__6990__auto__);
      }();
      var state__6992__auto__ = function() {
        var statearr_11681 = f__6991__auto__.call(null);
        statearr_11681[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6990__auto__;
        return statearr_11681;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6992__auto__);
    };
  }(c__6990__auto__));
  return c__6990__auto__;
};
goog.provide("centipair.admin.init");
goog.require("cljs.core");
goog.require("centipair.site.page");
goog.require("centipair.store.forms");
goog.require("centipair.core.components.editor");
goog.require("centipair.site.forms");
goog.require("centipair.admin.menu");
goog.require("centipair.store.dashboard");
goog.require("centipair.admin.channels");
goog.require("centipair.core.components.notifier");
centipair.admin.init.init_channels = function centipair$admin$init$init_channels() {
  centipair.site.forms.init_site_settings_channel.call(null);
  centipair.store.forms.init_store_settings_channel.call(null);
  centipair.core.components.editor.init_markdown_channel.call(null);
  centipair.site.page.init_page_list_channel.call(null);
  centipair.admin.menu.init_admin_menu_channel.call(null);
  return centipair.store.dashboard.init_dashboard_channel.call(null);
};
centipair.admin.init.init_admin = function centipair$admin$init$init_admin() {
  centipair.core.components.notifier.render_notifier_component.call(null);
  centipair.admin.init.init_channels.call(null);
  return centipair.admin.channels.render_site_selector.call(null);
};
goog.exportSymbol("centipair.admin.init.init_admin", centipair.admin.init.init_admin);
